# coding: utf-8
# Test for model
require 'minitest/autorun'
require_relative 'model'

class TestModel < Minitest::Unit::TestCase
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Model.new end
  def test_control_a5; assert_equal("Economy and Population", worksheet.control_a5); end
  def test_control_b5; assert_equal("Growth Path", worksheet.control_b5); end
  def test_control_d5; assert_equal("Population growth", worksheet.control_d5); end
  def test_control_f5; assert_in_delta(1.0, worksheet.control_f5, 0.002); end
  def test_control_d6; assert_equal("Economic growth", worksheet.control_d6); end
  def test_control_f6; assert_in_delta(1.0, worksheet.control_f6, 0.002); end
  def test_control_a7; assert_equal("Supply", worksheet.control_a7); end
  def test_control_a8; assert_equal("Electricity Generation", worksheet.control_a8); end
  def test_control_b8; assert_equal("South African Electricity generation", worksheet.control_b8); end
  def test_control_d8; assert_equal("Nuclear power stations", worksheet.control_d8); end
  def test_control_f8; assert_in_epsilon(4.0, worksheet.control_f8, 0.002); end
  def test_control_h8; assert_equal("Koeberg retires in 2043", worksheet.control_h8); end
  def test_control_i8; assert_equal("Build a total of 9600MW by 2030. Additional 1600MW by 2050 for a total of 14600MW. Koeberg is not retired. ", worksheet.control_i8); end
  def test_control_j8; assert_equal("Build an additional 21000MW by 2030. Add another 6400MW by 2050 for a total of 31000MW. Koeberg is not retired. ", worksheet.control_j8); end
  def test_control_k8; assert_equal("Build a total of 40000MW by 2030. Additional 20000MW by 2050 for a total of 61800MW by 2050. Koeberg is not retired. ", worksheet.control_k8); end
  def test_control_d9; assert_equal("Coal with Carbon Capture and Storage", worksheet.control_d9); end
  def test_control_f9; assert_in_epsilon(4.0, worksheet.control_f9, 0.002); end
  def test_control_h9; assert_equal("No coal power with CCS technology. Only the 124MW equivalent pilot operates by 2020.", worksheet.control_h9); end
  def test_control_i9; assert_equal("In addition to pilot project, 500MW of coal power with CCS is built by 2025 and another 500MW by 2030. Capacity increases to 5000MW of coal with CCS by 2050. ", worksheet.control_i9); end
  def test_control_j9; assert_equal("A total of 2000MW of coal power with CCS is built by 2030. Capacity increases to 10000MW by 2050", worksheet.control_j9); end
  def test_control_k9; assert_equal("A total of 5000MW of coal CCS is built by 2030. And the capacity increases to 20000MW by 2050. ", worksheet.control_k9); end
  def test_control_d10; assert_equal("Natural Gas Turbines", worksheet.control_d10); end
  def test_control_f10; assert_in_epsilon(4.0, worksheet.control_f10, 0.002); end
  def test_control_h10; assert_equal("No new CCGT capacity", worksheet.control_h10); end
  def test_control_i10; assert_equal("A total of 2370MW is built by 2030. This doubles to 4740MW by 2050.", worksheet.control_i10); end
  def test_control_j10; assert_equal("A total of 4266MW of CCGT is built by 2030. This then doubles to 8532MW by 2050.", worksheet.control_j10); end
  def test_control_k10; assert_equal("This doubles level 3. A total of 8532MW by 2030 and 17064MW by 2050. ", worksheet.control_k10); end
  def test_control_d11; assert_equal("Onshore wind", worksheet.control_d11); end
  def test_control_f11; assert_in_epsilon(4.0, worksheet.control_f11, 0.002); end
  def test_control_h11; assert_equal("Only pre-existing and  REIPPP wind farms operate, which is about 1983MW. Capacity is replaced at the end of their lifespan.", worksheet.control_h11); end
  def test_control_i11; assert_equal("A total of 8400MW is built by 2030 (REIPP is included). This capacity is then doubled to 16800MW by 2050. ", worksheet.control_i11); end
  def test_control_j11; assert_equal("A total of 16500MW is built by 2030 and this doubles to 33000MW by 2050", worksheet.control_j11); end
  def test_control_k11; assert_equal("Wind capacity reaches 28000MW by 2030 and this doubles to 56000MW by 2050, considered the most optimistic wind potential. ", worksheet.control_k11); end
  def test_control_d12; assert_equal("Residential and Commercial Solar PV", worksheet.control_d12); end
  def test_control_f12; assert_in_epsilon(4.0, worksheet.control_f12, 0.002); end
  def test_control_h12; assert_equal("Assumes a very low rate of development.", worksheet.control_h12); end
  def test_control_i12; assert_equal("50% of residential homes have a solar PV system by 2050 and solar PV adoption is 5% for the commercial sector (about 9GW by 2050)", worksheet.control_i12); end
  def test_control_j12; assert_equal("75% of residential homes have a solar PV system by 2050 and the commercial sector solar PV adoption rate is 7% (about 15GW by 2050)", worksheet.control_j12); end
  def test_control_k12; assert_equal("All residential homes have a solar PV system by 2050. The commercial sector solar PV adoption rate is 10% (about 20GW by 2050)", worksheet.control_k12); end
  def test_control_d13; assert_equal("Concentrated Solar Power", worksheet.control_d13); end
  def test_control_f13; assert_in_epsilon(4.0, worksheet.control_f13, 0.002); end
  def test_control_h13; assert_equal("Only 400MW from the REIPPP program is built and operates. Capacity is assumed to be replaced at end of life. ", worksheet.control_h13); end
  def test_control_i13; assert_equal("A total of 1200MW of capacity is built by 2030. The installed capacity is doubled to 2400MW by 2050", worksheet.control_i13); end
  def test_control_j13; assert_equal("A total of 8950MW is built by 2030. This is doubed to 17900MW by 2050. ", worksheet.control_j13); end
  def test_control_k13; assert_equal("Extreme build rate - a total of 136,900MW is built by 2030, this doubles to 273,800 MW by 2050 (half of the technical limit). ", worksheet.control_k13); end
  def test_control_d14; assert_equal("Centralised PV", worksheet.control_d14); end
  def test_control_f14; assert_in_epsilon(4.0, worksheet.control_f14, 0.002); end
  def test_control_h14; assert_equal("Only REIPPP solar PV capcity is built. A total of 1448MW is built and operates by 2015. Capacity assumed to be replaced at end of life. ", worksheet.control_h14); end
  def test_control_i14; assert_equal("Total of 8400MW by 2030. Capacity doubles to 16800MW by 2050. ", worksheet.control_i14); end
  def test_control_j14; assert_equal("A total of 8820MW is built by 2030 as per IRP Adj. Emissions. This doubles to 17640MW  by 2050. ", worksheet.control_j14); end
  def test_control_k14; assert_equal("Extreme build rate - a total of 13690MW is built by 2030, this doubles to 27800MW by 2050 (half of the technical limit). ", worksheet.control_k14); end
  def test_control_d15; assert_equal("Hydroelectric Power Stations", worksheet.control_d15); end
  def test_control_f15; assert_in_epsilon(4.0, worksheet.control_f15, 0.002); end
  def test_control_h15; assert_equal("Only 670MW of local and 1500MW of imported Hydro capacity is utilised. ", worksheet.control_h15); end
  def test_control_i15; assert_equal("Import new hydro power from the region -  a total of 2609MW by 2025. This doubles to 5218MW by 2050. ", worksheet.control_i15); end
  def test_control_j15; assert_equal("A total capacity of 3474MW is imported by 2030. This is assumed to double to 6948MW by 2050.", worksheet.control_j15); end
  def test_control_k15; assert_equal("This level assumes we are able to import much more. Double level 3to 13896MW by 2050. ", worksheet.control_k15); end
  def test_control_d16; assert_equal("Livestock Management", worksheet.control_d16); end
  def test_control_f16; assert_in_epsilon(4.0, worksheet.control_f16, 0.002); end
  def test_control_h16; assert_equal("Demand for dairy products stays the same and commercial cattle grow from 0.8 million in 2006 to 1.4 million in 2050", worksheet.control_h16); end
  def test_control_i16; assert_equal("Dairy products become less popular, as a result, commercial cattle grow from 0.8 million in 2006 to 1.3 million in 2050", worksheet.control_i16); end
  def test_control_j16; assert_equal("Consumption continues to shift away from dairy products and the number of commercial cattle is 1.2 million in 2050", worksheet.control_j16); end
  def test_control_k16; assert_equal("Continued reduction in demand results in commercial cattle reaching 1.1 million in 2050", worksheet.control_k16); end
  def test_control_d17; assert_equal("Land Use ", worksheet.control_d17); end
  def test_control_f17; assert_in_epsilon(4.0, worksheet.control_f17, 0.002); end
  def test_control_h17; assert_equal("1.4% of cropland is used to produce biofuels", worksheet.control_h17); end
  def test_control_i17; assert_equal("5% of cropland is used to produce biofuels", worksheet.control_i17); end
  def test_control_j17; assert_equal("10% of cropland is used to produce biofuels", worksheet.control_j17); end
  def test_control_k17; assert_equal("14% of cropland is used to produce biofuels", worksheet.control_k17); end
  def test_control_d18; assert_equal("Waste ", worksheet.control_d18); end
  def test_control_f18; assert_in_epsilon(4.0, worksheet.control_f18, 0.002); end
  def test_control_h18; assert_equal("10% of waste is recycled, 90% goes to land fill. Only 10% of methane gas from landfill  is captured, 75% of which is used to produce energy (the remaining is flared)", worksheet.control_h18); end
  def test_control_i18; assert_equal("12% of waste is recycled, 88% goes to land fill. Gas capturing efforts increase and 30% of methane gas from landfill  is captured, 80% of which is used to produce energy (the remaining is flared)", worksheet.control_i18); end
  def test_control_j18; assert_equal("15% of waste is recycled, 85% goes to land fill. Gas capturing efforts increase and 50% of methane gas from landfill  is captured, 85% of which is used to produce energy (the remaining is flared)", worksheet.control_j18); end
  def test_control_k18; assert_equal("24% of waste is recycled, 76% goes to land fill. Gas capturing efforts increase and 70% of methane gas from landfill  is captured, 90% of which is used to produce energy (the remaining is flared)", worksheet.control_k18); end
  def test_control_d19; assert_equal("Waste conversion & biofuels ", worksheet.control_d19); end
  def test_control_f19; assert_in_epsilon(4.0, worksheet.control_f19, 0.002); end
  def test_control_h19; assert_equal("First and second generation energy crops are converted to biofuels", worksheet.control_h19); end
  def test_control_i19; assert_equal("First generation energy crops are converted to biofuels", worksheet.control_i19); end
  def test_control_j19; assert_equal("Dry waste, wet waste, and first and second generation energy crops are converted to biofuels", worksheet.control_j19); end
  def test_control_k19; assert_equal("First generation energy crops are converted to biofuels", worksheet.control_k19); end
  def test_control_a20; assert_equal("Gas supply", worksheet.control_a20); end
  def test_control_b20; assert_equal("Natural gas ", worksheet.control_b20); end
  def test_control_d20; assert_equal("Supply of natural gas", worksheet.control_d20); end
  def test_control_f20; assert_in_epsilon(2.0, worksheet.control_f20, 0.002); end
  def test_control_h20; assert_equal("Continue to import from Mozambique. Some production from Mossel Bay.", worksheet.control_h20); end
  def test_control_i20; assert_equal("South Africa produces natural gas from unconventional and conventional sources", worksheet.control_i20); end
  def test_control_a21; assert_equal("Liquid Fuel Supply", worksheet.control_a21); end
  def test_control_b21; assert_equal("Biofuels", worksheet.control_b21); end
  def test_control_d21; assert_equal("Liquid biofuel share", worksheet.control_d21); end
  def test_control_f21; assert_in_epsilon(4.0, worksheet.control_f21, 0.002); end
  def test_control_h21; assert_equal("No share specified. Production  occurs ad hoc.", worksheet.control_h21); end
  def test_control_i21; assert_equal("2% share of liquid fuel demand.", worksheet.control_i21); end
  def test_control_j21; assert_equal("5% share of liquid fuel demand.", worksheet.control_j21); end
  def test_control_k21; assert_equal("10% share of liquid fuel demand.", worksheet.control_k21); end
  def test_control_b22; assert_equal("Petroleum CTL", worksheet.control_b22); end
  def test_control_d22; assert_equal("Coal-To-Liquids capacity", worksheet.control_d22); end
  def test_control_f22; assert_in_epsilon(4.0, worksheet.control_f22, 0.002); end
  def test_control_h22; assert_equal("Doubling of capacity by 2030 with no further expansion", worksheet.control_h22); end
  def test_control_i22; assert_equal("An increase of roughly 60% in capacity by 2020", worksheet.control_i22); end
  def test_control_j22; assert_equal("Existing facilities with no further expansion.", worksheet.control_j22); end
  def test_control_k22; assert_equal("Decomissioning of facilities by 2040 to a 50% reduction by 2050.", worksheet.control_k22); end
  def test_control_d23; assert_equal("Gas material share", worksheet.control_d23); end
  def test_control_f23; assert_in_epsilon(2.0, worksheet.control_f23, 0.002); end
  def test_control_h23; assert_equal("Existing gas feedstock share of 3% in CTL process.", worksheet.control_h23); end
  def test_control_i23; assert_equal("Increase of gas feedstock share in CTL process  to 20%.", worksheet.control_i23); end
  def test_control_d24; assert_equal("Carbon Capture and Storage", worksheet.control_d24); end
  def test_control_f24; assert_in_epsilon(2.0, worksheet.control_f24, 0.002); end
  def test_control_h24; assert_equal("No CCS", worksheet.control_h24); end
  def test_control_i24; assert_equal("25% of CO2 emissions suitable for CCS is sequestered by 2025. This amount increases to 50% by 2040.", worksheet.control_i24); end
  def test_control_b25; assert_equal("Petroleum GTL", worksheet.control_b25); end
  def test_control_d25; assert_equal("Gas-To-Liquids capacity", worksheet.control_d25); end
  def test_control_f25; assert_in_epsilon(4.0, worksheet.control_f25, 0.002); end
  def test_control_h25; assert_equal("Tripling of existing capacity by 2035 which is quadrupled by 2040 with no further expansion.", worksheet.control_h25); end
  def test_control_i25; assert_equal("Doubling of capacity by 2025 with no further expansion.", worksheet.control_i25); end
  def test_control_j25; assert_equal("Existing facilities with no further expansion.", worksheet.control_j25); end
  def test_control_k25; assert_equal("Decomissioning of facilities to nil GTL capacity by 2035.", worksheet.control_k25); end
  def test_control_b26; assert_equal("Petroleum Crude Refineries", worksheet.control_b26); end
  def test_control_d26; assert_equal("Refinery Capacity", worksheet.control_d26); end
  def test_control_f26; assert_in_epsilon(4.0, worksheet.control_f26, 0.002); end
  def test_control_h26; assert_equal("Approximate doubling  of capacity by 2035 with no further expansion.", worksheet.control_h26); end
  def test_control_i26; assert_equal("Approximate increase  of 70%  in capacity by 2025 with no further expansion.", worksheet.control_i26); end
  def test_control_j26; assert_equal("Existing facilities with no further expansion.", worksheet.control_j26); end
  def test_control_k26; assert_equal("Decomissioning of facilities by 2035 to nil capacity by 2045.", worksheet.control_k26); end
  def test_control_a27; assert_equal("Demand", worksheet.control_a27); end
  def test_control_a28; assert_equal("Transport", worksheet.control_a28); end
  def test_control_b28; assert_equal("Passenger Travel", worksheet.control_b28); end
  def test_control_d28; assert_equal(" Mode Share ", worksheet.control_d28); end
  def test_control_f28; assert_in_epsilon(4.0, worksheet.control_f28, 0.002); end
  def test_control_h28; assert_equal("By 2050, private travel makes up 76%, while the share of passenger kilometres met by public \rtransport will be 24%", worksheet.control_h28); end
  def test_control_i28; assert_equal("Private travel makes up 42% whereas public transport accounts for 58%.", worksheet.control_i28); end
  def test_control_j28; assert_equal("53% of passenger-km are met by public transport. ", worksheet.control_j28); end
  def test_control_k28; assert_equal("55% of passenger travel demand met being met by public transport", worksheet.control_k28); end
  def test_control_d29; assert_equal("Reduced Travel Demand", worksheet.control_d29); end
  def test_control_f29; assert_in_epsilon(4.0, worksheet.control_f29, 0.002); end
  def test_control_h29; assert_equal("Nothing is done to change the landscape of our cities, as such there is no energy demand reduction.  ", worksheet.control_h29); end
  def test_control_i29; assert_equal("It is assumed that 5% aggregate energy demand reduction is achieved as cities continue to accommodate people closer to economic hubs", worksheet.control_i29); end
  def test_control_j29; assert_equal("It is assumed that 10% of aggregate energy demand reduction is achieved. ", worksheet.control_j29); end
  def test_control_k29; assert_equal("It is assumed that 30% of energy demand is reduced.", worksheet.control_k29); end
  def test_control_d30; assert_equal("Shift to lower emissions technologies", worksheet.control_d30); end
  def test_control_f30; assert_in_epsilon(4.0, worksheet.control_f30, 0.002); end
  def test_control_h30; assert_equal("There is no introduction of  hydrogen and compressed natural gas. 5% of private vehicles sold in 2050 are hybrids and a mere 1% is purely battery powered electric vehicles", worksheet.control_h30); end
  def test_control_i30; assert_equal("5% and 1% of vehicles sold in 2050 will be powered by electric and fuel cell respectively ", worksheet.control_i30); end
  def test_control_j30; assert_equal("10% of vehicles sold in 2050 will be electric vehicles while a mere 5% will be fuel cell powered. ", worksheet.control_j30); end
  def test_control_k30; assert_equal("15% and 10% of electric and fuel cell powered vehicles will be sold by 2050 respectively. 70% of private fleet sales will be hybrids", worksheet.control_k30); end
  def test_control_d31; assert_equal("Vehicle efficiency improvement", worksheet.control_d31); end
  def test_control_f31; assert_in_epsilon(4.0, worksheet.control_f31, 0.002); end
  def test_control_h31; assert_equal("It is assumed that 0.1% of efficiency will be gained annually, resulting in overall efficiency gain of 4%  by 2050.", worksheet.control_h31); end
  def test_control_i31; assert_equal("It is assumed that 0.2% of efficiency will be gained annually, resulting in overall efficiency gain of 22%  by 2050.", worksheet.control_i31); end
  def test_control_j31; assert_equal("It is assumed that 0.5 % of efficiency will be gained annually, resulting in overall efficiency gain of 44%  by 2050.", worksheet.control_j31); end
  def test_control_k31; assert_equal("It is assumed that 1% of efficiency will be gained annually, resulting in overall efficiency gain of 66%  by 2050.", worksheet.control_k31); end
  def test_control_d32; assert_equal("Vehicle Occupancy", worksheet.control_d32); end
  def test_control_f32; assert_in_epsilon(4.0, worksheet.control_f32, 0.002); end
  def test_control_h32; assert_equal("No changes to vehicle occupancy", worksheet.control_h32); end
  def test_control_i32; assert_equal("Minibus, buses and private vehicle occupancies are increased to 15, 20  and 1.6 people per vehicle.", worksheet.control_i32); end
  def test_control_j32; assert_equal("Minibus, buses and private vehicle occupancies are increased to 16, 23  and 1.9 people per vehicle.", worksheet.control_j32); end
  def test_control_k32; assert_equal("Minibus, buses and private vehicle occupancies are increased to 17.1, 32  and 2.5 people per vehicle.", worksheet.control_k32); end
  def test_control_b33; assert_equal("Freight Transportation", worksheet.control_b33); end
  def test_control_d33; assert_equal("Freight mode shift", worksheet.control_d33); end
  def test_control_f33; assert_in_epsilon(4.0, worksheet.control_f33, 0.002); end
  def test_control_h33; assert_equal("The proportion of ton-km serviced by road vs rail transportation stays at 70% and 30% respectively by 2050. ", worksheet.control_h33); end
  def test_control_i33; assert_equal("Level 2 assumes that rail corridor gains 10% of the current heavy duty vehicles' market share while rail other gains a mere 5% of medium duty vehicles’ market share by 2050. ", worksheet.control_i33); end
  def test_control_j33; assert_equal("Rail corridor gains another 20% of road share and rail other gains another 5% such that 50% of goods are moved by road and 50% by rail. ", worksheet.control_j33); end
  def test_control_k33; assert_equal("38% of ton-km will be moved by road and the remaining 62%  by rail", worksheet.control_k33); end
  def test_control_d34; assert_equal("Freight vehicle efficiency improvement", worksheet.control_d34); end
  def test_control_f34; assert_in_epsilon(4.0, worksheet.control_f34, 0.002); end
  def test_control_h34; assert_equal("No road freight vehicle fuel economy and operational efficiency improvements are assumed to occur over the period till 2050", worksheet.control_h34); end
  def test_control_i34; assert_equal("0.1% annual fuel economy improvement for road freight vehicles and 0.1% annual operational efficiency improvements. ", worksheet.control_i34); end
  def test_control_j34; assert_equal("0.5% annual fuel economy improvement for road freight vehicles and 0.1% annual operational efficiency improvements. ", worksheet.control_j34); end
  def test_control_k34; assert_equal("1% annual fuel economy improvement for road freight vehicles arising from higher power train efficiency, reduced drag and higher payloads and 0.5% annual operational efficiency improvements arising from green driving programmes and improved logistics. ", worksheet.control_k34); end
  def test_control_a35; assert_equal("Households", worksheet.control_a35); end
  def test_control_b35; assert_equal("Electrification", worksheet.control_b35); end
  def test_control_d35; assert_equal("Electrification of households across South Africa", worksheet.control_d35); end
  def test_control_f35; assert_in_epsilon(4.0, worksheet.control_f35, 0.002); end
  def test_control_h35; assert_equal("100% by 2050 for everyone", worksheet.control_h35); end
  def test_control_i35; assert_equal("100% by 2040", worksheet.control_i35); end
  def test_control_j35; assert_equal("100% by 2030", worksheet.control_j35); end
  def test_control_k35; assert_equal("100% by 2020. ", worksheet.control_k35); end
  def test_control_d36; assert_equal("Lighting, Water Heating, Appliances", worksheet.control_d36); end
  def test_control_f36; assert_in_epsilon(4.0, worksheet.control_f36, 0.002); end
  def test_control_h36; assert_equal("As is in 2006. Lights are mainly incandescent or flourescent. Wtaer heating is coal or wood for the poor and mainly electric for mid to high income.", worksheet.control_h36); end
  def test_control_i36; assert_equal("By 2050: all lights are LEDs. 50% of poor households use SWHs, the rest use electric geysers. 50% or more of mid and high income groups use heat pumps, while the remaining are split between electric geysers or SWHs.  General appliances are energy efficient only.", worksheet.control_i36); end
  def test_control_j36; assert_equal("By 2040: all lights are LEDs. Low income sees more poorer households with SWHs – 75%. Mid income households have predominately moved to heat pumps as have the high income groups.  General appliances are energy efficient only.", worksheet.control_j36); end
  def test_control_k36; assert_equal("By 2030: All houses use LEDs. All low income groups have SWHs for water heating, and mid and high income groups have moved mostly to heat pumps with the remaining using SWHs. General appliances are energy efficient only.", worksheet.control_k36); end
  def test_control_d37; assert_equal("Space heating, Refridgeration, Cooking", worksheet.control_d37); end
  def test_control_f37; assert_in_epsilon(4.0, worksheet.control_f37, 0.002); end
  def test_control_h37; assert_equal("As is in 2006. Most heaters are electric. Poorer households use coal or wood for heating. Cooking is mostly electric, except for low income households who use wood or coal stoves. ", worksheet.control_h37); end
  def test_control_i37; assert_equal("By 2050: People shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. ALl fridges are energy efficient ones. \rAll fridges are energy efficient fridges.\rSpace heating – people shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. \rAll fridges are energy efficient fridges.\r", worksheet.control_i37); end
  def test_control_j37; assert_equal("By 2030: People shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. ALl fridges are energy efficient ones. \rAll fridges are energy efficient fridges.\rSpace heating – people shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. \rAll fridges are energy efficient fridges.\r", worksheet.control_j37); end
  def test_control_k37; assert_equal("By 2030: People shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. ALl fridges are energy efficient ones. \rAll fridges are energy efficient fridges.\rSpace heating – people shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. \rAll fridges are energy efficient fridges.\r", worksheet.control_k37); end
  def test_control_d38; assert_equal("SWH scenario", worksheet.control_d38); end
  def test_control_f38; assert_in_epsilon(4.0, worksheet.control_f38, 0.002); end
  def test_control_h38; assert_equal("As is today", worksheet.control_h38); end
  def test_control_i38; assert_equal("All SWH by 2050", worksheet.control_i38); end
  def test_control_j38; assert_equal("All SWH by 2040", worksheet.control_j38); end
  def test_control_k38; assert_equal("All SWH by 2030", worksheet.control_k38); end
  def test_control_a39; assert_equal("Business", worksheet.control_a39); end
  def test_control_b39; assert_equal("Industry", worksheet.control_b39); end
  def test_control_d39; assert_equal("Energy Efficiency", worksheet.control_d39); end
  def test_control_f39; assert_in_epsilon(4.0, worksheet.control_f39, 0.002); end
  def test_control_h39; assert_equal("Reduction in electricity and fuel consumption by 1%.", worksheet.control_h39); end
  def test_control_i39; assert_equal("Reduction in electricity and fuel consumption by ca. 13%.", worksheet.control_i39); end
  def test_control_j39; assert_equal("Reduction in electricity and fuel consumption by ca. 33% and 22%.", worksheet.control_j39); end
  def test_control_k39; assert_equal("Reduction in electricity and fuel consumption by ca. 46% and 28%.", worksheet.control_k39); end
  def test_control_d40; assert_equal("Fuel migration to gas and waste for boilers and furnaces", worksheet.control_d40); end
  def test_control_f40; assert_in_epsilon(4.0, worksheet.control_f40, 0.002); end
  def test_control_h40; assert_equal("Existing fuel mix comprising an approximate gas share of 12% and no waste.", worksheet.control_h40); end
  def test_control_i40; assert_equal("Gas displaces 15% of coal use and waste 3%.", worksheet.control_i40); end
  def test_control_j40; assert_equal("Gas displaces ca. 33% of coal use and waste 5%.", worksheet.control_j40); end
  def test_control_k40; assert_equal("Gas displaces ca. 46% of coal use and waste 11%.", worksheet.control_k40); end
  def test_control_d41; assert_equal("CHP share of demand above base year", worksheet.control_d41); end
  def test_control_f41; assert_in_epsilon(4.0, worksheet.control_f41, 0.002); end
  def test_control_h41; assert_equal("Existing facilities with no further expansion", worksheet.control_h41); end
  def test_control_i41; assert_equal("13% share of new industrial demand by 2050.", worksheet.control_i41); end
  def test_control_j41; assert_equal("25% share of new industrial demand by 2050.", worksheet.control_j41); end
  def test_control_k41; assert_equal("50% share of new industrial demand by 2050.", worksheet.control_k41); end
  def test_control_b42; assert_equal("Commercial Sector", worksheet.control_b42); end
  def test_control_d42; assert_equal("Public Services", worksheet.control_d42); end
  def test_control_f42; assert_in_epsilon(4.0, worksheet.control_f42, 0.002); end
  def test_control_h42; assert_equal("No change in energy usage for water treatment.", worksheet.control_h42); end
  def test_control_i42; assert_equal("10% reduction in energy owing to reduced leaks for water systems. All public lights Leds by 2050", worksheet.control_i42); end
  def test_control_j42; assert_equal("15% reduction in energy consumed coming from reduced leaks. All public lights are LEDs by 2040", worksheet.control_j42); end
  def test_control_k42; assert_equal("25% energy reduction owing to reduced leaks in water system. All public lights are LEDs by 2030. ", worksheet.control_k42); end
  def test_control_d43; assert_equal("Building Retrofits for HVAC ", worksheet.control_d43); end
  def test_control_f43; assert_in_epsilon(4.0, worksheet.control_f43, 0.002); end
  def test_control_h43; assert_equal("3% energy reduction as per today's trend in heating and cooling requirements. No change to LEDs.", worksheet.control_h43); end
  def test_control_i43; assert_equal("10% reduction in HVAC needs. All buildings with LEDs by 2050", worksheet.control_i43); end
  def test_control_j43; assert_equal("20% HVAC energy reduction. All buildings have LEDs by 2040. ", worksheet.control_j43); end
  def test_control_k43; assert_equal("30% HVAC energy need reduction. All buildings with Leds by 2030.", worksheet.control_k43); end
  def test_control_d44; assert_equal("Building Tech Shares Mix", worksheet.control_d44); end
  def test_control_f44; assert_in_epsilon(4.0, worksheet.control_f44, 0.002); end
  def test_control_h44; assert_equal("Assumes no change in appliance/device  mix.", worksheet.control_h44); end
  def test_control_i44; assert_equal("Assumes all lights are LEDs by 2050. All devices are efficient devices including heat pumps for heating, and efficient electrical systems by 2050", worksheet.control_i44); end
  def test_control_j44; assert_equal("Assumes all lights are LEDs by 2040. All devices are efficient devices including heat pumps for heating, and efficient electrical systems by 2040", worksheet.control_j44); end
  def test_control_k44; assert_equal("Assumes all lights are LEDs by 2030. All devices are efficient devices including heat pumps for heating, and efficient electrical systems by 2030", worksheet.control_k44); end
  def test_control_d45; assert_equal("Building Codes - Energy Efficiency Increased", worksheet.control_d45); end
  def test_control_f45; assert_in_epsilon(4.0, worksheet.control_f45, 0.002); end
  def test_control_h45; assert_equal("Buildings built after 2015 are 15% more efficient than in 2006.", worksheet.control_h45); end
  def test_control_i45; assert_equal("A building code revision process leads to energy efficient buildings. Buildings built after 2030 are 25% more efficient", worksheet.control_i45); end
  def test_control_j45; assert_equal("A strict code revision process. Buildings built after 2030 are 35% more efficient", worksheet.control_j45); end
  def test_control_k45; assert_equal("Very strict code revision process. Buildings built after 2030 are 55% more efficient than today.", worksheet.control_k45); end
  def test_control_a46; assert_equal("Electricity Balancing & Other", worksheet.control_a46); end
  def test_control_a1; assert_equal("0.80.20140910", worksheet.control_a1); end
  def test_intermediate_output_b2; assert_equal("Energy source / use charts", worksheet.intermediate_output_b2); end
  def test_intermediate_output_g3; assert_equal("2050 Calculator calculations", worksheet.intermediate_output_g3); end
  def test_intermediate_output_d4; assert_equal("PJ / year", worksheet.intermediate_output_d4); end
  def test_intermediate_output_g4; assert_in_epsilon(2006.0, worksheet.intermediate_output_g4, 0.002); end
  def test_intermediate_output_h4; assert_in_epsilon(2010.0, worksheet.intermediate_output_h4, 0.002); end
  def test_intermediate_output_i4; assert_in_epsilon(2015.0, worksheet.intermediate_output_i4, 0.002); end
  def test_intermediate_output_j4; assert_in_epsilon(2020.0, worksheet.intermediate_output_j4, 0.002); end
  def test_intermediate_output_k4; assert_in_epsilon(2025.0, worksheet.intermediate_output_k4, 0.002); end
  def test_intermediate_output_l4; assert_in_epsilon(2030.0, worksheet.intermediate_output_l4, 0.002); end
  def test_intermediate_output_m4; assert_in_epsilon(2035.0, worksheet.intermediate_output_m4, 0.002); end
  def test_intermediate_output_n4; assert_in_epsilon(2040.0, worksheet.intermediate_output_n4, 0.002); end
  def test_intermediate_output_o4; assert_in_epsilon(2045.0, worksheet.intermediate_output_o4, 0.002); end
  def test_intermediate_output_p4; assert_in_epsilon(2050.0, worksheet.intermediate_output_p4, 0.002); end
  def test_intermediate_output_c6; assert_equal("Use", worksheet.intermediate_output_c6); end
  def test_intermediate_output_c7; assert_equal("T.01", worksheet.intermediate_output_c7); end
  def test_intermediate_output_d7; assert_equal("Road transport", worksheet.intermediate_output_d7); end
  def test_intermediate_output_g7; assert_in_epsilon(670.3086971588575, worksheet.intermediate_output_g7, 0.002); end
  def test_intermediate_output_h7; assert_in_epsilon(614.7599643848864, worksheet.intermediate_output_h7, 0.002); end
  def test_intermediate_output_i7; assert_in_epsilon(615.1126434469238, worksheet.intermediate_output_i7, 0.002); end
  def test_intermediate_output_j7; assert_in_epsilon(607.2057222389974, worksheet.intermediate_output_j7, 0.002); end
  def test_intermediate_output_k7; assert_in_epsilon(595.9197877739487, worksheet.intermediate_output_k7, 0.002); end
  def test_intermediate_output_l7; assert_in_epsilon(581.0097685225603, worksheet.intermediate_output_l7, 0.002); end
  def test_intermediate_output_m7; assert_in_epsilon(569.3713037801542, worksheet.intermediate_output_m7, 0.002); end
  def test_intermediate_output_n7; assert_in_epsilon(557.1340894718512, worksheet.intermediate_output_n7, 0.002); end
  def test_intermediate_output_o7; assert_in_epsilon(546.3241998495046, worksheet.intermediate_output_o7, 0.002); end
  def test_intermediate_output_p7; assert_in_epsilon(538.7950773418617, worksheet.intermediate_output_p7, 0.002); end
  def test_intermediate_output_c8; assert_equal("T.02", worksheet.intermediate_output_c8); end
  def test_intermediate_output_d8; assert_equal("Rail transport", worksheet.intermediate_output_d8); end
  def test_intermediate_output_g8; assert_in_epsilon(34.57618565742084, worksheet.intermediate_output_g8, 0.002); end
  def test_intermediate_output_h8; assert_in_epsilon(39.42134941055177, worksheet.intermediate_output_h8, 0.002); end
  def test_intermediate_output_i8; assert_in_epsilon(44.673033116096484, worksheet.intermediate_output_i8, 0.002); end
  def test_intermediate_output_j8; assert_in_epsilon(51.54749203723432, worksheet.intermediate_output_j8, 0.002); end
  def test_intermediate_output_k8; assert_in_epsilon(59.1539164237118, worksheet.intermediate_output_k8, 0.002); end
  def test_intermediate_output_l8; assert_in_epsilon(67.56926507672509, worksheet.intermediate_output_l8, 0.002); end
  def test_intermediate_output_m8; assert_in_epsilon(76.87963477418467, worksheet.intermediate_output_m8, 0.002); end
  def test_intermediate_output_n8; assert_in_epsilon(87.17533702534544, worksheet.intermediate_output_n8, 0.002); end
  def test_intermediate_output_o8; assert_in_epsilon(98.55687902340047, worksheet.intermediate_output_o8, 0.002); end
  def test_intermediate_output_p8; assert_in_epsilon(111.1341706845529, worksheet.intermediate_output_p8, 0.002); end
  def test_intermediate_output_c9; assert_equal("T.03", worksheet.intermediate_output_c9); end
  def test_intermediate_output_d9; assert_equal("Domestic aviation", worksheet.intermediate_output_d9); end
  def test_intermediate_output_g9; assert_in_epsilon(78.01, worksheet.intermediate_output_g9, 0.002); end
  def test_intermediate_output_h9; assert_in_epsilon(78.01, worksheet.intermediate_output_h9, 0.002); end
  def test_intermediate_output_i9; assert_in_epsilon(78.01, worksheet.intermediate_output_i9, 0.002); end
  def test_intermediate_output_j9; assert_in_epsilon(78.01, worksheet.intermediate_output_j9, 0.002); end
  def test_intermediate_output_k9; assert_in_epsilon(78.01, worksheet.intermediate_output_k9, 0.002); end
  def test_intermediate_output_l9; assert_in_epsilon(78.01, worksheet.intermediate_output_l9, 0.002); end
  def test_intermediate_output_m9; assert_in_epsilon(78.01, worksheet.intermediate_output_m9, 0.002); end
  def test_intermediate_output_n9; assert_in_epsilon(78.01, worksheet.intermediate_output_n9, 0.002); end
  def test_intermediate_output_o9; assert_in_epsilon(78.01, worksheet.intermediate_output_o9, 0.002); end
  def test_intermediate_output_p9; assert_in_epsilon(78.01, worksheet.intermediate_output_p9, 0.002); end
  def test_intermediate_output_c10; assert_equal("T.04", worksheet.intermediate_output_c10); end
  def test_intermediate_output_d10; assert_equal("National navigation", worksheet.intermediate_output_d10); end
  def test_intermediate_output_g10; assert_in_delta(0.0, (worksheet.intermediate_output_g10||0), 0.002); end
  def test_intermediate_output_h10; assert_in_delta(0.0, (worksheet.intermediate_output_h10||0), 0.002); end
  def test_intermediate_output_i10; assert_in_delta(0.0, (worksheet.intermediate_output_i10||0), 0.002); end
  def test_intermediate_output_j10; assert_in_delta(0.0, (worksheet.intermediate_output_j10||0), 0.002); end
  def test_intermediate_output_k10; assert_in_delta(0.0, (worksheet.intermediate_output_k10||0), 0.002); end
  def test_intermediate_output_l10; assert_in_delta(0.0, (worksheet.intermediate_output_l10||0), 0.002); end
  def test_intermediate_output_m10; assert_in_delta(0.0, (worksheet.intermediate_output_m10||0), 0.002); end
  def test_intermediate_output_n10; assert_in_delta(0.0, (worksheet.intermediate_output_n10||0), 0.002); end
  def test_intermediate_output_o10; assert_in_delta(0.0, (worksheet.intermediate_output_o10||0), 0.002); end
  def test_intermediate_output_p10; assert_in_delta(0.0, (worksheet.intermediate_output_p10||0), 0.002); end
  def test_intermediate_output_c11; assert_equal("T.05", worksheet.intermediate_output_c11); end
  def test_intermediate_output_d11; assert_equal("International aviation", worksheet.intermediate_output_d11); end
  def test_intermediate_output_g11; assert_in_delta(0.0, (worksheet.intermediate_output_g11||0), 0.002); end
  def test_intermediate_output_h11; assert_in_delta(0.0, (worksheet.intermediate_output_h11||0), 0.002); end
  def test_intermediate_output_i11; assert_in_delta(0.0, (worksheet.intermediate_output_i11||0), 0.002); end
  def test_intermediate_output_j11; assert_in_delta(0.0, (worksheet.intermediate_output_j11||0), 0.002); end
  def test_intermediate_output_k11; assert_in_delta(0.0, (worksheet.intermediate_output_k11||0), 0.002); end
  def test_intermediate_output_l11; assert_in_delta(0.0, (worksheet.intermediate_output_l11||0), 0.002); end
  def test_intermediate_output_m11; assert_in_delta(0.0, (worksheet.intermediate_output_m11||0), 0.002); end
  def test_intermediate_output_n11; assert_in_delta(0.0, (worksheet.intermediate_output_n11||0), 0.002); end
  def test_intermediate_output_o11; assert_in_delta(0.0, (worksheet.intermediate_output_o11||0), 0.002); end
  def test_intermediate_output_p11; assert_in_delta(0.0, (worksheet.intermediate_output_p11||0), 0.002); end
  def test_intermediate_output_c12; assert_equal("T.06", worksheet.intermediate_output_c12); end
  def test_intermediate_output_d12; assert_equal("International shipping", worksheet.intermediate_output_d12); end
  def test_intermediate_output_g12; assert_in_delta(0.0, (worksheet.intermediate_output_g12||0), 0.002); end
  def test_intermediate_output_h12; assert_in_delta(0.0, (worksheet.intermediate_output_h12||0), 0.002); end
  def test_intermediate_output_i12; assert_in_delta(0.0, (worksheet.intermediate_output_i12||0), 0.002); end
  def test_intermediate_output_j12; assert_in_delta(0.0, (worksheet.intermediate_output_j12||0), 0.002); end
  def test_intermediate_output_k12; assert_in_delta(0.0, (worksheet.intermediate_output_k12||0), 0.002); end
  def test_intermediate_output_l12; assert_in_delta(0.0, (worksheet.intermediate_output_l12||0), 0.002); end
  def test_intermediate_output_m12; assert_in_delta(0.0, (worksheet.intermediate_output_m12||0), 0.002); end
  def test_intermediate_output_n12; assert_in_delta(0.0, (worksheet.intermediate_output_n12||0), 0.002); end
  def test_intermediate_output_o12; assert_in_delta(0.0, (worksheet.intermediate_output_o12||0), 0.002); end
  def test_intermediate_output_p12; assert_in_delta(0.0, (worksheet.intermediate_output_p12||0), 0.002); end
  def test_intermediate_output_d13; assert_equal("Transport", worksheet.intermediate_output_d13); end
  def test_intermediate_output_g13; assert_in_epsilon(782.8948828162784, worksheet.intermediate_output_g13, 0.002); end
  def test_intermediate_output_h13; assert_in_epsilon(732.1913137954382, worksheet.intermediate_output_h13, 0.002); end
  def test_intermediate_output_i13; assert_in_epsilon(737.7956765630203, worksheet.intermediate_output_i13, 0.002); end
  def test_intermediate_output_j13; assert_in_epsilon(736.7632142762317, worksheet.intermediate_output_j13, 0.002); end
  def test_intermediate_output_k13; assert_in_epsilon(733.0837041976605, worksheet.intermediate_output_k13, 0.002); end
  def test_intermediate_output_l13; assert_in_epsilon(726.5890335992854, worksheet.intermediate_output_l13, 0.002); end
  def test_intermediate_output_m13; assert_in_epsilon(724.2609385543388, worksheet.intermediate_output_m13, 0.002); end
  def test_intermediate_output_n13; assert_in_epsilon(722.3194264971967, worksheet.intermediate_output_n13, 0.002); end
  def test_intermediate_output_o13; assert_in_epsilon(722.891078872905, worksheet.intermediate_output_o13, 0.002); end
  def test_intermediate_output_p13; assert_in_epsilon(727.9392480264146, worksheet.intermediate_output_p13, 0.002); end
  def test_intermediate_output_c14; assert_equal("I.01", worksheet.intermediate_output_c14); end
  def test_intermediate_output_d14; assert_equal("Industry", worksheet.intermediate_output_d14); end
  def test_intermediate_output_g14; assert_in_epsilon(1189.3485812448703, worksheet.intermediate_output_g14, 0.002); end
  def test_intermediate_output_h14; assert_in_epsilon(1193.443084521281, worksheet.intermediate_output_h14, 0.002); end
  def test_intermediate_output_i14; assert_in_epsilon(1317.1289225175947, worksheet.intermediate_output_i14, 0.002); end
  def test_intermediate_output_j14; assert_in_epsilon(1489.168665798859, worksheet.intermediate_output_j14, 0.002); end
  def test_intermediate_output_k14; assert_in_epsilon(1717.759634441524, worksheet.intermediate_output_k14, 0.002); end
  def test_intermediate_output_l14; assert_in_epsilon(1944.9387906611655, worksheet.intermediate_output_l14, 0.002); end
  def test_intermediate_output_m14; assert_in_epsilon(2242.313148221348, worksheet.intermediate_output_m14, 0.002); end
  def test_intermediate_output_n14; assert_in_epsilon(2535.5617853388358, worksheet.intermediate_output_n14, 0.002); end
  def test_intermediate_output_o14; assert_in_epsilon(2974.2856133763466, worksheet.intermediate_output_o14, 0.002); end
  def test_intermediate_output_p14; assert_in_epsilon(3408.709847559307, worksheet.intermediate_output_p14, 0.002); end
  def test_intermediate_output_c15; assert_equal("H.01", worksheet.intermediate_output_c15); end
  def test_intermediate_output_d15; assert_equal("Space Heating", worksheet.intermediate_output_d15); end
  def test_intermediate_output_g15; assert_in_epsilon(84.03180481725389, worksheet.intermediate_output_g15, 0.002); end
  def test_intermediate_output_h15; assert_in_epsilon(88.57316606036979, worksheet.intermediate_output_h15, 0.002); end
  def test_intermediate_output_i15; assert_in_epsilon(91.01982838776746, worksheet.intermediate_output_i15, 0.002); end
  def test_intermediate_output_j15; assert_in_epsilon(93.33142305061351, worksheet.intermediate_output_j15, 0.002); end
  def test_intermediate_output_k15; assert_in_epsilon(96.83623049435724, worksheet.intermediate_output_k15, 0.002); end
  def test_intermediate_output_l15; assert_in_epsilon(98.40077953843208, worksheet.intermediate_output_l15, 0.002); end
  def test_intermediate_output_m15; assert_in_epsilon(99.89530196667812, worksheet.intermediate_output_m15, 0.002); end
  def test_intermediate_output_n15; assert_in_epsilon(101.3799480010955, worksheet.intermediate_output_n15, 0.002); end
  def test_intermediate_output_o15; assert_in_epsilon(102.80996848323932, worksheet.intermediate_output_o15, 0.002); end
  def test_intermediate_output_p15; assert_in_epsilon(104.18568209245234, worksheet.intermediate_output_p15, 0.002); end
  def test_intermediate_output_c16; assert_equal("L.01", worksheet.intermediate_output_c16); end
  def test_intermediate_output_d16; assert_equal("Lighting", worksheet.intermediate_output_d16); end
  def test_intermediate_output_g16; assert_in_epsilon(258.14691493559513, worksheet.intermediate_output_g16, 0.002); end
  def test_intermediate_output_h16; assert_in_epsilon(284.0509019981544, worksheet.intermediate_output_h16, 0.002); end
  def test_intermediate_output_i16; assert_in_epsilon(310.6569671220442, worksheet.intermediate_output_i16, 0.002); end
  def test_intermediate_output_j16; assert_in_epsilon(337.63795476542026, worksheet.intermediate_output_j16, 0.002); end
  def test_intermediate_output_k16; assert_in_epsilon(359.7021759445917, worksheet.intermediate_output_k16, 0.002); end
  def test_intermediate_output_l16; assert_in_epsilon(373.5516346328899, worksheet.intermediate_output_l16, 0.002); end
  def test_intermediate_output_m16; assert_in_epsilon(386.4216069478005, worksheet.intermediate_output_m16, 0.002); end
  def test_intermediate_output_n16; assert_in_epsilon(398.48871592123675, worksheet.intermediate_output_n16, 0.002); end
  def test_intermediate_output_o16; assert_in_epsilon(409.61640292656955, worksheet.intermediate_output_o16, 0.002); end
  def test_intermediate_output_p16; assert_in_epsilon(419.81478864871286, worksheet.intermediate_output_p16, 0.002); end
  def test_intermediate_output_c17; assert_equal("H.02", worksheet.intermediate_output_c17); end
  def test_intermediate_output_d17; assert_equal("Water Heating", worksheet.intermediate_output_d17); end
  def test_intermediate_output_g17; assert_in_epsilon(74.63765353508683, worksheet.intermediate_output_g17, 0.002); end
  def test_intermediate_output_h17; assert_in_epsilon(82.10499715016934, worksheet.intermediate_output_h17, 0.002); end
  def test_intermediate_output_i17; assert_in_epsilon(93.1774687329071, worksheet.intermediate_output_i17, 0.002); end
  def test_intermediate_output_j17; assert_in_epsilon(106.66303726681019, worksheet.intermediate_output_j17, 0.002); end
  def test_intermediate_output_k17; assert_in_epsilon(117.90711802440262, worksheet.intermediate_output_k17, 0.002); end
  def test_intermediate_output_l17; assert_in_epsilon(128.9101843502554, worksheet.intermediate_output_l17, 0.002); end
  def test_intermediate_output_m17; assert_in_epsilon(139.85364204328192, worksheet.intermediate_output_m17, 0.002); end
  def test_intermediate_output_n17; assert_in_epsilon(150.9529999110318, worksheet.intermediate_output_n17, 0.002); end
  def test_intermediate_output_o17; assert_in_epsilon(162.268517345207, worksheet.intermediate_output_o17, 0.002); end
  def test_intermediate_output_p17; assert_in_epsilon(173.96226395424463, worksheet.intermediate_output_p17, 0.002); end
  def test_intermediate_output_c18; assert_equal("H.03", worksheet.intermediate_output_c18); end
  def test_intermediate_output_d18; assert_equal("Refridgeration", worksheet.intermediate_output_d18); end
  def test_intermediate_output_g18; assert_in_epsilon(18.377033208609394, worksheet.intermediate_output_g18, 0.002); end
  def test_intermediate_output_h18; assert_in_epsilon(20.16061856021316, worksheet.intermediate_output_h18, 0.002); end
  def test_intermediate_output_i18; assert_in_epsilon(23.122800285708074, worksheet.intermediate_output_i18, 0.002); end
  def test_intermediate_output_j18; assert_in_epsilon(26.832580256703945, worksheet.intermediate_output_j18, 0.002); end
  def test_intermediate_output_k18; assert_in_epsilon(30.03867120931326, worksheet.intermediate_output_k18, 0.002); end
  def test_intermediate_output_l18; assert_in_epsilon(33.14300258976885, worksheet.intermediate_output_l18, 0.002); end
  def test_intermediate_output_m18; assert_in_epsilon(36.18612046618706, worksheet.intermediate_output_m18, 0.002); end
  def test_intermediate_output_n18; assert_in_epsilon(39.22063088691324, worksheet.intermediate_output_n18, 0.002); end
  def test_intermediate_output_o18; assert_in_epsilon(42.25660541121192, worksheet.intermediate_output_o18, 0.002); end
  def test_intermediate_output_p18; assert_in_epsilon(45.332461038697744, worksheet.intermediate_output_p18, 0.002); end
  def test_intermediate_output_c19; assert_equal("H.04", worksheet.intermediate_output_c19); end
  def test_intermediate_output_d19; assert_equal("Cooling", worksheet.intermediate_output_d19); end
  def test_intermediate_output_g19; assert_in_epsilon(82.18476735850835, worksheet.intermediate_output_g19, 0.002); end
  def test_intermediate_output_h19; assert_in_epsilon(89.99281211818911, worksheet.intermediate_output_h19, 0.002); end
  def test_intermediate_output_i19; assert_in_epsilon(92.88783018128075, worksheet.intermediate_output_i19, 0.002); end
  def test_intermediate_output_j19; assert_in_epsilon(95.23900131202498, worksheet.intermediate_output_j19, 0.002); end
  def test_intermediate_output_k19; assert_in_epsilon(97.96970058489964, worksheet.intermediate_output_k19, 0.002); end
  def test_intermediate_output_l19; assert_in_epsilon(97.76924077032514, worksheet.intermediate_output_l19, 0.002); end
  def test_intermediate_output_m19; assert_in_epsilon(97.91169374127958, worksheet.intermediate_output_m19, 0.002); end
  def test_intermediate_output_n19; assert_in_epsilon(98.38256001782436, worksheet.intermediate_output_n19, 0.002); end
  def test_intermediate_output_o19; assert_in_epsilon(99.16113837685111, worksheet.intermediate_output_o19, 0.002); end
  def test_intermediate_output_p19; assert_in_epsilon(100.21921963186975, worksheet.intermediate_output_p19, 0.002); end
  def test_intermediate_output_c20; assert_equal("Z.02", worksheet.intermediate_output_c20); end
  def test_intermediate_output_d20; assert_equal("Other Use", worksheet.intermediate_output_d20); end
  def test_intermediate_output_g20; assert_in_epsilon(41.747506158517005, worksheet.intermediate_output_g20, 0.002); end
  def test_intermediate_output_h20; assert_in_epsilon(45.577114069974414, worksheet.intermediate_output_h20, 0.002); end
  def test_intermediate_output_i20; assert_in_epsilon(50.671426253007816, worksheet.intermediate_output_i20, 0.002); end
  def test_intermediate_output_j20; assert_in_epsilon(57.69771477935415, worksheet.intermediate_output_j20, 0.002); end
  def test_intermediate_output_k20; assert_in_epsilon(64.97924165100012, worksheet.intermediate_output_k20, 0.002); end
  def test_intermediate_output_l20; assert_in_epsilon(72.76367028352027, worksheet.intermediate_output_l20, 0.002); end
  def test_intermediate_output_m20; assert_in_epsilon(81.14913914524544, worksheet.intermediate_output_m20, 0.002); end
  def test_intermediate_output_n20; assert_in_epsilon(90.25376170002806, worksheet.intermediate_output_n20, 0.002); end
  def test_intermediate_output_o20; assert_in_epsilon(100.17434385344235, worksheet.intermediate_output_o20, 0.002); end
  def test_intermediate_output_p20; assert_in_epsilon(111.04068130790003, worksheet.intermediate_output_p20, 0.002); end
  def test_intermediate_output_c21; assert_equal("Z.03", worksheet.intermediate_output_c21); end
  def test_intermediate_output_d21; assert_equal("Non Energy Use", worksheet.intermediate_output_d21); end
  def test_intermediate_output_g21; assert_in_delta(0.0, (worksheet.intermediate_output_g21||0), 0.002); end
  def test_intermediate_output_h21; assert_in_delta(0.0, (worksheet.intermediate_output_h21||0), 0.002); end
  def test_intermediate_output_i21; assert_in_delta(0.0, (worksheet.intermediate_output_i21||0), 0.002); end
  def test_intermediate_output_j21; assert_in_delta(0.0, (worksheet.intermediate_output_j21||0), 0.002); end
  def test_intermediate_output_k21; assert_in_delta(0.0, (worksheet.intermediate_output_k21||0), 0.002); end
  def test_intermediate_output_l21; assert_in_delta(0.0, (worksheet.intermediate_output_l21||0), 0.002); end
  def test_intermediate_output_m21; assert_in_delta(0.0, (worksheet.intermediate_output_m21||0), 0.002); end
  def test_intermediate_output_n21; assert_in_delta(0.0, (worksheet.intermediate_output_n21||0), 0.002); end
  def test_intermediate_output_o21; assert_in_delta(0.0, (worksheet.intermediate_output_o21||0), 0.002); end
  def test_intermediate_output_p21; assert_in_delta(0.0, (worksheet.intermediate_output_p21||0), 0.002); end
  def test_intermediate_output_c22; assert_equal("K.01", worksheet.intermediate_output_c22); end
  def test_intermediate_output_d22; assert_equal("Cooking", worksheet.intermediate_output_d22); end
  def test_intermediate_output_g22; assert_in_epsilon(35.852541720318115, worksheet.intermediate_output_g22, 0.002); end
  def test_intermediate_output_h22; assert_in_epsilon(35.66375311940774, worksheet.intermediate_output_h22, 0.002); end
  def test_intermediate_output_i22; assert_in_epsilon(35.78835764900761, worksheet.intermediate_output_i22, 0.002); end
  def test_intermediate_output_j22; assert_in_epsilon(35.869921672525145, worksheet.intermediate_output_j22, 0.002); end
  def test_intermediate_output_k22; assert_in_epsilon(37.66137653455475, worksheet.intermediate_output_k22, 0.002); end
  def test_intermediate_output_l22; assert_in_epsilon(39.15628495331827, worksheet.intermediate_output_l22, 0.002); end
  def test_intermediate_output_m22; assert_in_epsilon(40.41920772173257, worksheet.intermediate_output_m22, 0.002); end
  def test_intermediate_output_n22; assert_in_epsilon(41.51411721378042, worksheet.intermediate_output_n22, 0.002); end
  def test_intermediate_output_o22; assert_in_epsilon(42.4170059092006, worksheet.intermediate_output_o22, 0.002); end
  def test_intermediate_output_p22; assert_in_epsilon(43.14629004495731, worksheet.intermediate_output_p22, 0.002); end
  def test_intermediate_output_d23; assert_equal("Residential and commercial", worksheet.intermediate_output_d23); end
  def test_intermediate_output_g23; assert_in_epsilon(594.9782217338886, worksheet.intermediate_output_g23, 0.002); end
  def test_intermediate_output_h23; assert_in_epsilon(646.1233630764779, worksheet.intermediate_output_h23, 0.002); end
  def test_intermediate_output_i23; assert_in_epsilon(697.324678611723, worksheet.intermediate_output_i23, 0.002); end
  def test_intermediate_output_j23; assert_in_epsilon(753.2716331034521, worksheet.intermediate_output_j23, 0.002); end
  def test_intermediate_output_k23; assert_in_epsilon(805.0945144431192, worksheet.intermediate_output_k23, 0.002); end
  def test_intermediate_output_l23; assert_in_epsilon(843.6947971185099, worksheet.intermediate_output_l23, 0.002); end
  def test_intermediate_output_m23; assert_in_epsilon(881.8367120322052, worksheet.intermediate_output_m23, 0.002); end
  def test_intermediate_output_n23; assert_in_epsilon(920.1927336519102, worksheet.intermediate_output_n23, 0.002); end
  def test_intermediate_output_o23; assert_in_epsilon(958.7039823057219, worksheet.intermediate_output_o23, 0.002); end
  def test_intermediate_output_p23; assert_in_epsilon(997.7013867188347, worksheet.intermediate_output_p23, 0.002); end
  def test_intermediate_output_d25; assert_equal("Total Use", worksheet.intermediate_output_d25); end
  def test_intermediate_output_g25; assert_in_epsilon(2567.2216857950375, worksheet.intermediate_output_g25, 0.002); end
  def test_intermediate_output_h25; assert_in_epsilon(2571.757761393197, worksheet.intermediate_output_h25, 0.002); end
  def test_intermediate_output_i25; assert_in_epsilon(2752.2492776923377, worksheet.intermediate_output_i25, 0.002); end
  def test_intermediate_output_j25; assert_in_epsilon(2979.203513178543, worksheet.intermediate_output_j25, 0.002); end
  def test_intermediate_output_k25; assert_in_epsilon(3255.9378530823037, worksheet.intermediate_output_k25, 0.002); end
  def test_intermediate_output_l25; assert_in_epsilon(3515.222621378961, worksheet.intermediate_output_l25, 0.002); end
  def test_intermediate_output_m25; assert_in_epsilon(3848.410798807892, worksheet.intermediate_output_m25, 0.002); end
  def test_intermediate_output_n25; assert_in_epsilon(4178.073945487942, worksheet.intermediate_output_n25, 0.002); end
  def test_intermediate_output_o25; assert_in_epsilon(4655.880674554974, worksheet.intermediate_output_o25, 0.002); end
  def test_intermediate_output_p25; assert_in_epsilon(5134.350482304557, worksheet.intermediate_output_p25, 0.002); end
  def test_intermediate_output_d27; assert_equal("Dummy for charting uses", worksheet.intermediate_output_d27); end
  def test_intermediate_output_g27; assert_in_epsilon(2247.700160578715, worksheet.intermediate_output_g27, 0.002); end
  def test_intermediate_output_h27; assert_in_epsilon(2383.3042114826394, worksheet.intermediate_output_h27, 0.002); end
  def test_intermediate_output_i27; assert_in_epsilon(2443.875513803742, worksheet.intermediate_output_i27, 0.002); end
  def test_intermediate_output_j27; assert_in_epsilon(614.9698892386887, worksheet.intermediate_output_j27, 0.002); end
  def test_intermediate_output_k27; assert_in_epsilon(1387.860055708205, worksheet.intermediate_output_k27, 0.002); end
  def test_intermediate_output_l27; assert_in_epsilon(2495.7172061301817, worksheet.intermediate_output_l27, 0.002); end
  def test_intermediate_output_m27; assert_in_epsilon(2714.4627841792, worksheet.intermediate_output_m27, 0.002); end
  def test_intermediate_output_n27; assert_in_epsilon(2810.642307506655, worksheet.intermediate_output_n27, 0.002); end
  def test_intermediate_output_o27; assert_in_epsilon(3090.539458950516, worksheet.intermediate_output_o27, 0.002); end
  def test_intermediate_output_p27; assert_in_epsilon(3226.3619743191266, worksheet.intermediate_output_p27, 0.002); end
  def test_intermediate_output_c29; assert_equal("Source", worksheet.intermediate_output_c29); end
  def test_intermediate_output_c30; assert_equal("N.01", worksheet.intermediate_output_c30); end
  def test_intermediate_output_d30; assert_equal("Nuclear fission", worksheet.intermediate_output_d30); end
  def test_intermediate_output_g30; assert_in_epsilon(113.72570100000002, worksheet.intermediate_output_g30, 0.002); end
  def test_intermediate_output_h30; assert_in_epsilon(148.57712550000005, worksheet.intermediate_output_h30, 0.002); end
  def test_intermediate_output_i30; assert_in_epsilon(148.57712550000005, worksheet.intermediate_output_i30, 0.002); end
  def test_intermediate_output_j30; assert_in_epsilon(148.57712550000005, worksheet.intermediate_output_j30, 0.002); end
  def test_intermediate_output_k30; assert_in_epsilon(1543.513210071429, worksheet.intermediate_output_k30, 0.002); end
  def test_intermediate_output_l30; assert_in_epsilon(2938.449294642858, worksheet.intermediate_output_l30, 0.002); end
  def test_intermediate_output_m30; assert_in_epsilon(3303.6158089285723, worksheet.intermediate_output_m30, 0.002); end
  def test_intermediate_output_n30; assert_in_epsilon(3668.7823232142864, worksheet.intermediate_output_n30, 0.002); end
  def test_intermediate_output_o30; assert_in_epsilon(4033.9488375000005, worksheet.intermediate_output_o30, 0.002); end
  def test_intermediate_output_p30; assert_in_epsilon(4399.115351785715, worksheet.intermediate_output_p30, 0.002); end
  def test_intermediate_output_c31; assert_equal("R.01", worksheet.intermediate_output_c31); end
  def test_intermediate_output_d31; assert_equal("Solar", worksheet.intermediate_output_d31); end
  def test_intermediate_output_g31; assert_in_delta(0.2195325071903352, worksheet.intermediate_output_g31, 0.002); end
  def test_intermediate_output_h31; assert_in_epsilon(1.1423312484968173, worksheet.intermediate_output_h31, 0.002); end
  def test_intermediate_output_i31; assert_in_epsilon(15.259332102416753, worksheet.intermediate_output_i31, 0.002); end
  def test_intermediate_output_j31; assert_in_epsilon(964.8778560445022, worksheet.intermediate_output_j31, 0.002); end
  def test_intermediate_output_k31; assert_in_epsilon(1920.4882720036878, worksheet.intermediate_output_k31, 0.002); end
  def test_intermediate_output_l31; assert_in_epsilon(2879.8356526553885, worksheet.intermediate_output_l31, 0.002); end
  def test_intermediate_output_m31; assert_in_epsilon(3606.075422925517, worksheet.intermediate_output_m31, 0.002); end
  def test_intermediate_output_n31; assert_in_epsilon(4329.603526909826, worksheet.intermediate_output_n31, 0.002); end
  def test_intermediate_output_o31; assert_in_epsilon(5049.854609999183, worksheet.intermediate_output_o31, 0.002); end
  def test_intermediate_output_p31; assert_in_epsilon(5767.295828407349, worksheet.intermediate_output_p31, 0.002); end
  def test_intermediate_output_c32; assert_equal("R.02", worksheet.intermediate_output_c32); end
  def test_intermediate_output_d32; assert_equal("Wind", worksheet.intermediate_output_d32); end
  def test_intermediate_output_g32; assert_in_delta(0.055844328960000016, worksheet.intermediate_output_g32, 0.002); end
  def test_intermediate_output_h32; assert_in_delta(0.07387003008000001, worksheet.intermediate_output_h32, 0.002); end
  def test_intermediate_output_i32; assert_in_epsilon(11.57035420224, worksheet.intermediate_output_i32, 0.002); end
  def test_intermediate_output_j32; assert_in_epsilon(107.85635346816002, worksheet.intermediate_output_j32, 0.002); end
  def test_intermediate_output_k32; assert_in_epsilon(180.12560535359998, worksheet.intermediate_output_k32, 0.002); end
  def test_intermediate_output_l32; assert_in_epsilon(265.08384, worksheet.intermediate_output_l32, 0.002); end
  def test_intermediate_output_m32; assert_in_epsilon(276.129, worksheet.intermediate_output_m32, 0.002); end
  def test_intermediate_output_n32; assert_in_epsilon(331.35480000000007, worksheet.intermediate_output_n32, 0.002); end
  def test_intermediate_output_o32; assert_in_epsilon(386.58060000000006, worksheet.intermediate_output_o32, 0.002); end
  def test_intermediate_output_p32; assert_in_epsilon(441.80640000000005, worksheet.intermediate_output_p32, 0.002); end
  def test_intermediate_output_c33; assert_equal("R.06", worksheet.intermediate_output_c33); end
  def test_intermediate_output_d33; assert_equal("Hydro", worksheet.intermediate_output_d33); end
  def test_intermediate_output_g33; assert_in_epsilon(5.285898, worksheet.intermediate_output_g33, 0.002); end
  def test_intermediate_output_h33; assert_in_epsilon(5.285898, worksheet.intermediate_output_h33, 0.002); end
  def test_intermediate_output_i33; assert_in_epsilon(5.285898, worksheet.intermediate_output_i33, 0.002); end
  def test_intermediate_output_j33; assert_in_epsilon(5.285898, worksheet.intermediate_output_j33, 0.002); end
  def test_intermediate_output_k33; assert_in_epsilon(5.285898, worksheet.intermediate_output_k33, 0.002); end
  def test_intermediate_output_l33; assert_in_epsilon(5.285898, worksheet.intermediate_output_l33, 0.002); end
  def test_intermediate_output_m33; assert_in_epsilon(5.285898, worksheet.intermediate_output_m33, 0.002); end
  def test_intermediate_output_n33; assert_in_epsilon(5.285898, worksheet.intermediate_output_n33, 0.002); end
  def test_intermediate_output_o33; assert_in_epsilon(5.285898, worksheet.intermediate_output_o33, 0.002); end
  def test_intermediate_output_p33; assert_in_epsilon(5.285898, worksheet.intermediate_output_p33, 0.002); end
  def test_intermediate_output_c34; assert_equal("Y.02", worksheet.intermediate_output_c34); end
  def test_intermediate_output_d34; assert_equal("Electricity oversupply (imports)", worksheet.intermediate_output_d34); end
  def test_intermediate_output_g34; assert_in_epsilon(-24.818579999999994, worksheet.intermediate_output_g34, 0.002); end
  def test_intermediate_output_h34; assert_in_epsilon(-26.598455999999988, worksheet.intermediate_output_h34, 0.002); end
  def test_intermediate_output_i34; assert_in_epsilon(-22.096150820698778, worksheet.intermediate_output_i34, 0.002); end
  def test_intermediate_output_j34; assert_in_epsilon(-20.67795447899648, worksheet.intermediate_output_j34, 0.002); end
  def test_intermediate_output_k34; assert_in_epsilon(-1351.1518812292056, worksheet.intermediate_output_k34, 0.002); end
  def test_intermediate_output_l34; assert_in_epsilon(-3020.2690087558085, worksheet.intermediate_output_l34, 0.002); end
  def test_intermediate_output_m34; assert_in_epsilon(-3862.5298164992205, worksheet.intermediate_output_m34, 0.002); end
  def test_intermediate_output_n34; assert_in_epsilon(-4765.065936465736, worksheet.intermediate_output_n34, 0.002); end
  def test_intermediate_output_o34; assert_in_epsilon(-5637.665696029847, worksheet.intermediate_output_o34, 0.002); end
  def test_intermediate_output_p34; assert_in_epsilon(-6523.82929710827, worksheet.intermediate_output_p34, 0.002); end
  def test_intermediate_output_d35; assert_equal("Renewables - hydro, wind, solar", worksheet.intermediate_output_d35); end
  def test_intermediate_output_g35; assert_in_epsilon(5.561274836150336, worksheet.intermediate_output_g35, 0.002); end
  def test_intermediate_output_h35; assert_in_epsilon(6.502099278576818, worksheet.intermediate_output_h35, 0.002); end
  def test_intermediate_output_i35; assert_in_epsilon(32.11558430465676, worksheet.intermediate_output_i35, 0.002); end
  def test_intermediate_output_j35; assert_in_epsilon(1078.0201075126624, worksheet.intermediate_output_j35, 0.002); end
  def test_intermediate_output_k35; assert_in_epsilon(2105.899775357288, worksheet.intermediate_output_k35, 0.002); end
  def test_intermediate_output_l35; assert_in_epsilon(3150.2053906553883, worksheet.intermediate_output_l35, 0.002); end
  def test_intermediate_output_m35; assert_in_epsilon(3887.490320925517, worksheet.intermediate_output_m35, 0.002); end
  def test_intermediate_output_n35; assert_in_epsilon(4666.244224909826, worksheet.intermediate_output_n35, 0.002); end
  def test_intermediate_output_o35; assert_in_epsilon(5441.721107999183, worksheet.intermediate_output_o35, 0.002); end
  def test_intermediate_output_p35; assert_in_epsilon(6214.38812640735, worksheet.intermediate_output_p35, 0.002); end
  def test_intermediate_output_d36; assert_equal("Primary electricity, solar, and net imports", worksheet.intermediate_output_d36); end
  def test_intermediate_output_g36; assert_in_epsilon(94.46839583615036, worksheet.intermediate_output_g36, 0.002); end
  def test_intermediate_output_h36; assert_in_epsilon(128.48076877857687, worksheet.intermediate_output_h36, 0.002); end
  def test_intermediate_output_i36; assert_in_epsilon(158.59655898395803, worksheet.intermediate_output_i36, 0.002); end
  def test_intermediate_output_j36; assert_in_epsilon(1205.9192785336659, worksheet.intermediate_output_j36, 0.002); end
  def test_intermediate_output_k36; assert_in_epsilon(2298.261104199511, worksheet.intermediate_output_k36, 0.002); end
  def test_intermediate_output_l36; assert_in_epsilon(3068.385676542439, worksheet.intermediate_output_l36, 0.002); end
  def test_intermediate_output_m36; assert_in_epsilon(3328.5763133548685, worksheet.intermediate_output_m36, 0.002); end
  def test_intermediate_output_n36; assert_in_epsilon(3569.9606116583773, worksheet.intermediate_output_n36, 0.002); end
  def test_intermediate_output_o36; assert_in_epsilon(3838.004249469336, worksheet.intermediate_output_o36, 0.002); end
  def test_intermediate_output_p36; assert_in_epsilon(4089.6741810847925, worksheet.intermediate_output_p36, 0.002); end
  def test_intermediate_output_c37; assert_equal("R.07", worksheet.intermediate_output_c37); end
  def test_intermediate_output_d37; assert_equal("Environmental heat", worksheet.intermediate_output_d37); end
  def test_intermediate_output_g37; assert_in_delta(0.0, (worksheet.intermediate_output_g37||0), 0.002); end
  def test_intermediate_output_h37; assert_in_delta(0.0, (worksheet.intermediate_output_h37||0), 0.002); end
  def test_intermediate_output_i37; assert_in_delta(0.0, (worksheet.intermediate_output_i37||0), 0.002); end
  def test_intermediate_output_j37; assert_in_delta(0.0, (worksheet.intermediate_output_j37||0), 0.002); end
  def test_intermediate_output_k37; assert_in_delta(0.0, (worksheet.intermediate_output_k37||0), 0.002); end
  def test_intermediate_output_l37; assert_in_delta(0.0, (worksheet.intermediate_output_l37||0), 0.002); end
  def test_intermediate_output_m37; assert_in_delta(0.0, (worksheet.intermediate_output_m37||0), 0.002); end
  def test_intermediate_output_n37; assert_in_delta(0.0, (worksheet.intermediate_output_n37||0), 0.002); end
  def test_intermediate_output_o37; assert_in_delta(0.0, (worksheet.intermediate_output_o37||0), 0.002); end
  def test_intermediate_output_p37; assert_in_delta(0.0, (worksheet.intermediate_output_p37||0), 0.002); end
  def test_intermediate_output_c38; assert_equal("W.01", worksheet.intermediate_output_c38); end
  def test_intermediate_output_d38; assert_equal("Waste", worksheet.intermediate_output_d38); end
  def test_intermediate_output_g38; assert_in_delta(0.4453667705544058, worksheet.intermediate_output_g38, 0.002); end
  def test_intermediate_output_h38; assert_in_epsilon(1.0678420918159683, worksheet.intermediate_output_h38, 0.002); end
  def test_intermediate_output_i38; assert_in_epsilon(4.106089164141651, worksheet.intermediate_output_i38, 0.002); end
  def test_intermediate_output_j38; assert_in_epsilon(6.049904118381598, worksheet.intermediate_output_j38, 0.002); end
  def test_intermediate_output_k38; assert_in_epsilon(9.463001167135774, worksheet.intermediate_output_k38, 0.002); end
  def test_intermediate_output_l38; assert_in_epsilon(19.185353649509345, worksheet.intermediate_output_l38, 0.002); end
  def test_intermediate_output_m38; assert_in_epsilon(22.328002851739566, worksheet.intermediate_output_m38, 0.002); end
  def test_intermediate_output_n38; assert_in_epsilon(23.956902440065072, worksheet.intermediate_output_n38, 0.002); end
  def test_intermediate_output_o38; assert_in_epsilon(67.48034331927163, worksheet.intermediate_output_o38, 0.002); end
  def test_intermediate_output_p38; assert_in_epsilon(88.36571637515706, worksheet.intermediate_output_p38, 0.002); end
  def test_intermediate_output_c39; assert_equal("A.01", worksheet.intermediate_output_c39); end
  def test_intermediate_output_d39; assert_equal("Agriculture", worksheet.intermediate_output_d39); end
  def test_intermediate_output_g39; assert_in_epsilon(-70.3755, worksheet.intermediate_output_g39, 0.002); end
  def test_intermediate_output_h39; assert_in_epsilon(-72.3756535326, worksheet.intermediate_output_h39, 0.002); end
  def test_intermediate_output_i39; assert_in_epsilon(-72.888255067926, worksheet.intermediate_output_i39, 0.002); end
  def test_intermediate_output_j39; assert_in_epsilon(-77.73859974408529, worksheet.intermediate_output_j39, 0.002); end
  def test_intermediate_output_k39; assert_in_epsilon(-80.62694689884836, worksheet.intermediate_output_k39, 0.002); end
  def test_intermediate_output_l39; assert_in_epsilon(-83.66262878668212, worksheet.intermediate_output_l39, 0.002); end
  def test_intermediate_output_m39; assert_in_epsilon(-86.85316095970192, worksheet.intermediate_output_m39, 0.002); end
  def test_intermediate_output_n39; assert_in_epsilon(-90.20644233871315, worksheet.intermediate_output_n39, 0.002); end
  def test_intermediate_output_o39; assert_in_epsilon(-93.7307747688671, worksheet.intermediate_output_o39, 0.002); end
  def test_intermediate_output_p39; assert_in_epsilon(-97.43488357285229, worksheet.intermediate_output_p39, 0.002); end
  def test_intermediate_output_c40; assert_equal("Y.01", worksheet.intermediate_output_c40); end
  def test_intermediate_output_d40; assert_equal("Biomass ", worksheet.intermediate_output_d40); end
  def test_intermediate_output_g40; assert_in_epsilon(-93.5080469537441, worksheet.intermediate_output_g40, 0.002); end
  def test_intermediate_output_h40; assert_in_epsilon(-135.85259704866925, worksheet.intermediate_output_h40, 0.002); end
  def test_intermediate_output_i40; assert_in_epsilon(-126.57730587007944, worksheet.intermediate_output_i40, 0.002); end
  def test_intermediate_output_j40; assert_in_epsilon(-118.2340525478663, worksheet.intermediate_output_j40, 0.002); end
  def test_intermediate_output_k40; assert_in_epsilon(-111.07146739131709, worksheet.intermediate_output_k40, 0.002); end
  def test_intermediate_output_l40; assert_in_epsilon(-104.96522583860565, worksheet.intermediate_output_l40, 0.002); end
  def test_intermediate_output_m40; assert_in_epsilon(-99.86322788004625, worksheet.intermediate_output_m40, 0.002); end
  def test_intermediate_output_n40; assert_in_epsilon(-95.7015023520563, worksheet.intermediate_output_n40, 0.002); end
  def test_intermediate_output_o40; assert_in_epsilon(-92.42575846676839, worksheet.intermediate_output_o40, 0.002); end
  def test_intermediate_output_p40; assert_in_epsilon(-89.99081339403119, worksheet.intermediate_output_p40, 0.002); end
  def test_intermediate_output_d41; assert_equal("Agriculture, waste, and biomatter ", worksheet.intermediate_output_d41); end
  def test_intermediate_output_g41; assert_in_epsilon(-163.4381801831897, worksheet.intermediate_output_g41, 0.002); end
  def test_intermediate_output_h41; assert_in_epsilon(-207.1604084894533, worksheet.intermediate_output_h41, 0.002); end
  def test_intermediate_output_i41; assert_in_epsilon(-195.3594717738638, worksheet.intermediate_output_i41, 0.002); end
  def test_intermediate_output_j41; assert_in_epsilon(-189.92274817357, worksheet.intermediate_output_j41, 0.002); end
  def test_intermediate_output_k41; assert_in_epsilon(-182.23541312302967, worksheet.intermediate_output_k41, 0.002); end
  def test_intermediate_output_l41; assert_in_epsilon(-169.44250097577842, worksheet.intermediate_output_l41, 0.002); end
  def test_intermediate_output_m41; assert_in_epsilon(-164.38838598800862, worksheet.intermediate_output_m41, 0.002); end
  def test_intermediate_output_n41; assert_in_epsilon(-161.95104225070435, worksheet.intermediate_output_n41, 0.002); end
  def test_intermediate_output_o41; assert_in_epsilon(-118.67618991636385, worksheet.intermediate_output_o41, 0.002); end
  def test_intermediate_output_p41; assert_in_epsilon(-99.05998059172641, worksheet.intermediate_output_p41, 0.002); end
  def test_intermediate_output_c42; assert_equal("Y.04", worksheet.intermediate_output_c42); end
  def test_intermediate_output_d42; assert_equal("Coal oversupply (imports)", worksheet.intermediate_output_d42); end
  def test_intermediate_output_g42; assert_in_delta(0.0, (worksheet.intermediate_output_g42||0), 0.002); end
  def test_intermediate_output_h42; assert_in_delta(0.0, (worksheet.intermediate_output_h42||0), 0.002); end
  def test_intermediate_output_i42; assert_in_delta(0.0, (worksheet.intermediate_output_i42||0), 0.002); end
  def test_intermediate_output_j42; assert_in_delta(0.0, (worksheet.intermediate_output_j42||0), 0.002); end
  def test_intermediate_output_k42; assert_in_delta(0.0, (worksheet.intermediate_output_k42||0), 0.002); end
  def test_intermediate_output_l42; assert_in_delta(0.0, (worksheet.intermediate_output_l42||0), 0.002); end
  def test_intermediate_output_m42; assert_in_delta(0.0, (worksheet.intermediate_output_m42||0), 0.002); end
  def test_intermediate_output_n42; assert_in_delta(0.0, (worksheet.intermediate_output_n42||0), 0.002); end
  def test_intermediate_output_o42; assert_in_delta(0.0, (worksheet.intermediate_output_o42||0), 0.002); end
  def test_intermediate_output_p42; assert_in_delta(0.0, (worksheet.intermediate_output_p42||0), 0.002); end
  def test_intermediate_output_c43; assert_equal("Q.01", worksheet.intermediate_output_c43); end
  def test_intermediate_output_d43; assert_equal("Coal reserves", worksheet.intermediate_output_d43); end
  def test_intermediate_output_g43; assert_in_epsilon(3975.951157266053, worksheet.intermediate_output_g43, 0.002); end
  def test_intermediate_output_h43; assert_in_epsilon(4116.050764522572, worksheet.intermediate_output_h43, 0.002); end
  def test_intermediate_output_i43; assert_in_epsilon(4250.57432202361, worksheet.intermediate_output_i43, 0.002); end
  def test_intermediate_output_j43; assert_in_epsilon(1529.0024297634166, worksheet.intermediate_output_j43, 0.002); end
  def test_intermediate_output_k43; assert_in_epsilon(1366.274673062711, worksheet.intermediate_output_k43, 0.002); end
  def test_intermediate_output_l43; assert_in_epsilon(1368.960470724325, worksheet.intermediate_output_l43, 0.002); end
  def test_intermediate_output_m43; assert_in_epsilon(1407.1992171981753, worksheet.intermediate_output_m43, 0.002); end
  def test_intermediate_output_n43; assert_in_epsilon(1263.1961909586992, worksheet.intermediate_output_n43, 0.002); end
  def test_intermediate_output_o43; assert_in_epsilon(1343.3300580796422, worksheet.intermediate_output_o43, 0.002); end
  def test_intermediate_output_p43; assert_in_epsilon(1294.0937780490003, worksheet.intermediate_output_p43, 0.002); end
  def test_intermediate_output_d44; assert_equal("Coal", worksheet.intermediate_output_d44); end
  def test_intermediate_output_g44; assert_in_epsilon(3975.951157266053, worksheet.intermediate_output_g44, 0.002); end
  def test_intermediate_output_h44; assert_in_epsilon(4116.050764522572, worksheet.intermediate_output_h44, 0.002); end
  def test_intermediate_output_i44; assert_in_epsilon(4250.57432202361, worksheet.intermediate_output_i44, 0.002); end
  def test_intermediate_output_j44; assert_in_epsilon(1529.0024297634166, worksheet.intermediate_output_j44, 0.002); end
  def test_intermediate_output_k44; assert_in_epsilon(1366.274673062711, worksheet.intermediate_output_k44, 0.002); end
  def test_intermediate_output_l44; assert_in_epsilon(1368.960470724325, worksheet.intermediate_output_l44, 0.002); end
  def test_intermediate_output_m44; assert_in_epsilon(1407.1992171981753, worksheet.intermediate_output_m44, 0.002); end
  def test_intermediate_output_n44; assert_in_epsilon(1263.1961909586992, worksheet.intermediate_output_n44, 0.002); end
  def test_intermediate_output_o44; assert_in_epsilon(1343.3300580796422, worksheet.intermediate_output_o44, 0.002); end
  def test_intermediate_output_p44; assert_in_epsilon(1294.0937780490003, worksheet.intermediate_output_p44, 0.002); end
  def test_intermediate_output_c45; assert_equal("Q.02", worksheet.intermediate_output_c45); end
  def test_intermediate_output_d45; assert_equal("Oil reserves", worksheet.intermediate_output_d45); end
  def test_intermediate_output_g45; assert_in_delta(0.0, (worksheet.intermediate_output_g45||0), 0.002); end
  def test_intermediate_output_h45; assert_in_delta(0.0, (worksheet.intermediate_output_h45||0), 0.002); end
  def test_intermediate_output_i45; assert_in_delta(0.0, (worksheet.intermediate_output_i45||0), 0.002); end
  def test_intermediate_output_j45; assert_in_delta(0.0, (worksheet.intermediate_output_j45||0), 0.002); end
  def test_intermediate_output_k45; assert_in_delta(0.0, (worksheet.intermediate_output_k45||0), 0.002); end
  def test_intermediate_output_l45; assert_in_delta(0.0, (worksheet.intermediate_output_l45||0), 0.002); end
  def test_intermediate_output_m45; assert_in_delta(0.0, (worksheet.intermediate_output_m45||0), 0.002); end
  def test_intermediate_output_n45; assert_in_delta(0.0, (worksheet.intermediate_output_n45||0), 0.002); end
  def test_intermediate_output_o45; assert_in_delta(0.0, (worksheet.intermediate_output_o45||0), 0.002); end
  def test_intermediate_output_p45; assert_in_delta(0.0, (worksheet.intermediate_output_p45||0), 0.002); end
  def test_intermediate_output_c46; assert_equal("Y.05", worksheet.intermediate_output_c46); end
  def test_intermediate_output_d46; assert_equal("Oil and petroleum products oversupply (imports)", worksheet.intermediate_output_d46); end
  def test_intermediate_output_g46; assert_in_epsilon(664.1460502059357, worksheet.intermediate_output_g46, 0.002); end
  def test_intermediate_output_h46; assert_in_epsilon(621.4825741036079, worksheet.intermediate_output_h46, 0.002); end
  def test_intermediate_output_i46; assert_in_epsilon(606.5379716927544, worksheet.intermediate_output_i46, 0.002); end
  def test_intermediate_output_j46; assert_in_epsilon(596.8008345635882, worksheet.intermediate_output_j46, 0.002); end
  def test_intermediate_output_k46; assert_in_epsilon(577.7844387508538, worksheet.intermediate_output_k46, 0.002); end
  def test_intermediate_output_l46; assert_in_epsilon(553.7810493981501, worksheet.intermediate_output_l46, 0.002); end
  def test_intermediate_output_m46; assert_in_epsilon(556.2390543425856, worksheet.intermediate_output_m46, 0.002); end
  def test_intermediate_output_n46; assert_in_epsilon(616.2825587148807, worksheet.intermediate_output_n46, 0.002); end
  def test_intermediate_output_o46; assert_in_epsilon(586.0149656210677, worksheet.intermediate_output_o46, 0.002); end
  def test_intermediate_output_p46; assert_in_epsilon(637.6446579944602, worksheet.intermediate_output_p46, 0.002); end
  def test_intermediate_output_c47; assert_equal("Y.03", worksheet.intermediate_output_c47); end
  def test_intermediate_output_d47; assert_equal("Petroleum products oversupply", worksheet.intermediate_output_d47); end
  def test_intermediate_output_g47; assert_in_delta(0.0, (worksheet.intermediate_output_g47||0), 0.002); end
  def test_intermediate_output_h47; assert_in_delta(0.0, (worksheet.intermediate_output_h47||0), 0.002); end
  def test_intermediate_output_i47; assert_in_delta(0.0, (worksheet.intermediate_output_i47||0), 0.002); end
  def test_intermediate_output_j47; assert_in_delta(0.0, (worksheet.intermediate_output_j47||0), 0.002); end
  def test_intermediate_output_k47; assert_in_delta(0.0, (worksheet.intermediate_output_k47||0), 0.002); end
  def test_intermediate_output_l47; assert_in_delta(0.0, (worksheet.intermediate_output_l47||0), 0.002); end
  def test_intermediate_output_m47; assert_in_delta(0.0, (worksheet.intermediate_output_m47||0), 0.002); end
  def test_intermediate_output_n47; assert_in_delta(0.0, (worksheet.intermediate_output_n47||0), 0.002); end
  def test_intermediate_output_o47; assert_in_delta(0.0, (worksheet.intermediate_output_o47||0), 0.002); end
  def test_intermediate_output_p47; assert_in_delta(0.0, (worksheet.intermediate_output_p47||0), 0.002); end
  def test_intermediate_output_d48; assert_equal("Oil and petroleum products", worksheet.intermediate_output_d48); end
  def test_intermediate_output_g48; assert_in_epsilon(664.1460502059357, worksheet.intermediate_output_g48, 0.002); end
  def test_intermediate_output_h48; assert_in_epsilon(621.4825741036079, worksheet.intermediate_output_h48, 0.002); end
  def test_intermediate_output_i48; assert_in_epsilon(606.5379716927544, worksheet.intermediate_output_i48, 0.002); end
  def test_intermediate_output_j48; assert_in_epsilon(596.8008345635882, worksheet.intermediate_output_j48, 0.002); end
  def test_intermediate_output_k48; assert_in_epsilon(577.7844387508538, worksheet.intermediate_output_k48, 0.002); end
  def test_intermediate_output_l48; assert_in_epsilon(553.7810493981501, worksheet.intermediate_output_l48, 0.002); end
  def test_intermediate_output_m48; assert_in_epsilon(556.2390543425856, worksheet.intermediate_output_m48, 0.002); end
  def test_intermediate_output_n48; assert_in_epsilon(616.2825587148807, worksheet.intermediate_output_n48, 0.002); end
  def test_intermediate_output_o48; assert_in_epsilon(586.0149656210677, worksheet.intermediate_output_o48, 0.002); end
  def test_intermediate_output_p48; assert_in_epsilon(637.6446579944602, worksheet.intermediate_output_p48, 0.002); end
  def test_intermediate_output_c49; assert_equal("Y.06", worksheet.intermediate_output_c49); end
  def test_intermediate_output_d49; assert_equal("Gas oversupply (imports)", worksheet.intermediate_output_d49); end
  def test_intermediate_output_g49; assert_in_epsilon(182.57942324880312, worksheet.intermediate_output_g49, 0.002); end
  def test_intermediate_output_h49; assert_in_epsilon(251.40827396053334, worksheet.intermediate_output_h49, 0.002); end
  def test_intermediate_output_i49; assert_in_epsilon(349.3214585696206, worksheet.intermediate_output_i49, 0.002); end
  def test_intermediate_output_j49; assert_in_epsilon(-227.92289933618525, worksheet.intermediate_output_j49, 0.002); end
  def test_intermediate_output_k49; assert_in_epsilon(-150.97096800321515, worksheet.intermediate_output_k49, 0.002); end
  def test_intermediate_output_l49; assert_in_epsilon(440.21487709110704, worksheet.intermediate_output_l49, 0.002); end
  def test_intermediate_output_m49; assert_in_epsilon(721.3169416338164, worksheet.intermediate_output_m49, 0.002); end
  def test_intermediate_output_n49; assert_in_epsilon(1054.6352206521078, worksheet.intermediate_output_n49, 0.002); end
  def test_intermediate_output_o49; assert_in_epsilon(1532.8298161566668, worksheet.intermediate_output_o49, 0.002); end
  def test_intermediate_output_p49; assert_in_epsilon(1956.5247704307017, worksheet.intermediate_output_p49, 0.002); end
  def test_intermediate_output_c50; assert_equal("Q.03", worksheet.intermediate_output_c50); end
  def test_intermediate_output_d50; assert_equal("Gas reserves", worksheet.intermediate_output_d50); end
  def test_intermediate_output_g50; assert_in_epsilon(61.214999999999996, worksheet.intermediate_output_g50, 0.002); end
  def test_intermediate_output_h50; assert_in_epsilon(44.8, worksheet.intermediate_output_h50, 0.002); end
  def test_intermediate_output_i50; assert_in_epsilon(26.453952000000008, worksheet.intermediate_output_i50, 0.002); end
  def test_intermediate_output_j50; assert_in_epsilon(680.2965070663163, worksheet.intermediate_output_j50, 0.002); end
  def test_intermediate_output_k50; assert_in_epsilon(734.6840739036775, worksheet.intermediate_output_k50, 0.002); end
  def test_intermediate_output_l50; assert_in_epsilon(749.0402547289002, worksheet.intermediate_output_l50, 0.002); end
  def test_intermediate_output_m50; assert_in_epsilon(713.9304424456545, worksheet.intermediate_output_m50, 0.002); end
  def test_intermediate_output_n50; assert_in_epsilon(646.5927132612361, worksheet.intermediate_output_n50, 0.002); end
  def test_intermediate_output_o50; assert_in_epsilon(564.9172340951404, worksheet.intermediate_output_o50, 0.002); end
  def test_intermediate_output_p50; assert_in_epsilon(481.8350496564552, worksheet.intermediate_output_p50, 0.002); end
  def test_intermediate_output_d51; assert_equal("Natural gas", worksheet.intermediate_output_d51); end
  def test_intermediate_output_g51; assert_in_epsilon(243.79442324880313, worksheet.intermediate_output_g51, 0.002); end
  def test_intermediate_output_h51; assert_in_epsilon(296.20827396053335, worksheet.intermediate_output_h51, 0.002); end
  def test_intermediate_output_i51; assert_in_epsilon(375.7754105696206, worksheet.intermediate_output_i51, 0.002); end
  def test_intermediate_output_j51; assert_in_epsilon(452.373607730131, worksheet.intermediate_output_j51, 0.002); end
  def test_intermediate_output_k51; assert_in_epsilon(583.7131059004623, worksheet.intermediate_output_k51, 0.002); end
  def test_intermediate_output_l51; assert_in_epsilon(1189.2551318200071, worksheet.intermediate_output_l51, 0.002); end
  def test_intermediate_output_m51; assert_in_epsilon(1435.247384079471, worksheet.intermediate_output_m51, 0.002); end
  def test_intermediate_output_n51; assert_in_epsilon(1701.2279339133438, worksheet.intermediate_output_n51, 0.002); end
  def test_intermediate_output_o51; assert_in_epsilon(2097.747050251807, worksheet.intermediate_output_o51, 0.002); end
  def test_intermediate_output_p51; assert_in_epsilon(2438.359820087157, worksheet.intermediate_output_p51, 0.002); end
  def test_intermediate_output_d52; assert_equal("Total Primary Supply", worksheet.intermediate_output_d52); end
  def test_intermediate_output_g52; assert_in_epsilon(4814.9218463737525, worksheet.intermediate_output_g52, 0.002); end
  def test_intermediate_output_h52; assert_in_epsilon(4955.061972875837, worksheet.intermediate_output_h52, 0.002); end
  def test_intermediate_output_i52; assert_in_epsilon(5196.1247914960795, worksheet.intermediate_output_i52, 0.002); end
  def test_intermediate_output_j52; assert_in_epsilon(3594.1734024172315, worksheet.intermediate_output_j52, 0.002); end
  def test_intermediate_output_k52; assert_in_epsilon(4643.797908790509, worksheet.intermediate_output_k52, 0.002); end
  def test_intermediate_output_l52; assert_in_epsilon(6010.939827509143, worksheet.intermediate_output_l52, 0.002); end
  def test_intermediate_output_m52; assert_in_epsilon(6562.873582987092, worksheet.intermediate_output_m52, 0.002); end
  def test_intermediate_output_n52; assert_in_epsilon(6988.716252994597, worksheet.intermediate_output_n52, 0.002); end
  def test_intermediate_output_o52; assert_in_epsilon(7746.4201335054895, worksheet.intermediate_output_o52, 0.002); end
  def test_intermediate_output_p52; assert_in_epsilon(8360.712456623683, worksheet.intermediate_output_p52, 0.002); end
  def test_intermediate_output_g53; assert_in_delta(0.8257561148703689, worksheet.intermediate_output_g53, 0.002); end
  def test_intermediate_output_h53; assert_in_delta(0.8306759404935724, worksheet.intermediate_output_h53, 0.002); end
  def test_intermediate_output_i53; assert_in_delta(0.8180277596450442, worksheet.intermediate_output_i53, 0.002); end
  def test_intermediate_output_j53; assert_in_delta(0.42541142526264836, worksheet.intermediate_output_j53, 0.002); end
  def test_intermediate_output_k53; assert_in_delta(0.29421492922342984, worksheet.intermediate_output_k53, 0.002); end
  def test_intermediate_output_l53; assert_in_delta(0.22774483026086204, worksheet.intermediate_output_l53, 0.002); end
  def test_intermediate_output_m53; assert_in_delta(0.2144181507390378, worksheet.intermediate_output_m53, 0.002); end
  def test_intermediate_output_n53; assert_in_delta(0.1807479578838863, worksheet.intermediate_output_n53, 0.002); end
  def test_intermediate_output_o53; assert_in_delta(0.17341301335688653, worksheet.intermediate_output_o53, 0.002); end
  def test_intermediate_output_p53; assert_in_delta(0.15478271555957754, worksheet.intermediate_output_p53, 0.002); end
  def test_intermediate_output_d54; assert_equal("Dummy for charting supply", worksheet.intermediate_output_d54); end
  def test_intermediate_output_g54; assert_in_delta(0.0, (worksheet.intermediate_output_g54||0), 0.002); end
  def test_intermediate_output_h54; assert_in_delta(0.0, (worksheet.intermediate_output_h54||0), 0.002); end
  def test_intermediate_output_i54; assert_in_delta(0.0, (worksheet.intermediate_output_i54||0), 0.002); end
  def test_intermediate_output_j54; assert_in_delta(0.0, (worksheet.intermediate_output_j54||0), 0.002); end
  def test_intermediate_output_k54; assert_in_delta(0.0, (worksheet.intermediate_output_k54||0), 0.002); end
  def test_intermediate_output_l54; assert_in_delta(0.0, (worksheet.intermediate_output_l54||0), 0.002); end
  def test_intermediate_output_m54; assert_in_delta(0.0, (worksheet.intermediate_output_m54||0), 0.002); end
  def test_intermediate_output_n54; assert_in_delta(0.0, (worksheet.intermediate_output_n54||0), 0.002); end
  def test_intermediate_output_o54; assert_in_delta(0.0, (worksheet.intermediate_output_o54||0), 0.002); end
  def test_intermediate_output_p54; assert_in_delta(0.0, (worksheet.intermediate_output_p54||0), 0.002); end
  def test_intermediate_output_c56; assert_equal("Conversion losses, distribution, and own use", worksheet.intermediate_output_c56); end
  def test_intermediate_output_c57; assert_equal("X.01", worksheet.intermediate_output_c57); end
  def test_intermediate_output_d57; assert_equal("Conversion losses", worksheet.intermediate_output_d57); end
  def test_intermediate_output_g57; assert_in_epsilon(2203.0516288921795, worksheet.intermediate_output_g57, 0.002); end
  def test_intermediate_output_h57; assert_in_epsilon(2270.4003833969564, worksheet.intermediate_output_h57, 0.002); end
  def test_intermediate_output_i57; assert_in_epsilon(2322.7618250909904, worksheet.intermediate_output_i57, 0.002); end
  def test_intermediate_output_j57; assert_in_epsilon(460.7616061469581, worksheet.intermediate_output_j57, 0.002); end
  def test_intermediate_output_k57; assert_in_epsilon(1203.4743538525179, worksheet.intermediate_output_k57, 0.002); end
  def test_intermediate_output_l57; assert_in_epsilon(2301.037417974422, worksheet.intermediate_output_l57, 0.002); end
  def test_intermediate_output_m57; assert_in_epsilon(2559.1142264434893, worksheet.intermediate_output_m57, 0.002); end
  def test_intermediate_output_n57; assert_in_epsilon(2700.17868256273, worksheet.intermediate_output_n57, 0.002); end
  def test_intermediate_output_o57; assert_in_epsilon(2970.1922383185183, worksheet.intermediate_output_o57, 0.002); end
  def test_intermediate_output_p57; assert_in_epsilon(3142.836222645574, worksheet.intermediate_output_p57, 0.002); end
  def test_intermediate_output_c58; assert_equal("X.02", worksheet.intermediate_output_c58); end
  def test_intermediate_output_d58; assert_equal("Distribution losses and own use", worksheet.intermediate_output_d58); end
  def test_intermediate_output_g58; assert_in_epsilon(99.25314406244345, worksheet.intermediate_output_g58, 0.002); end
  def test_intermediate_output_h58; assert_in_epsilon(152.95138745676246, worksheet.intermediate_output_h58, 0.002); end
  def test_intermediate_output_i58; assert_in_epsilon(165.06472617924373, worksheet.intermediate_output_i58, 0.002); end
  def test_intermediate_output_j58; assert_in_epsilon(195.90547074101235, worksheet.intermediate_output_j58, 0.002); end
  def test_intermediate_output_k58; assert_in_epsilon(216.17023451037772, worksheet.intermediate_output_k58, 0.002); end
  def test_intermediate_output_l58; assert_in_epsilon(230.146121239261, worksheet.intermediate_output_l58, 0.002); end
  def test_intermediate_output_m58; assert_in_epsilon(240.4532424017216, worksheet.intermediate_output_m58, 0.002); end
  def test_intermediate_output_n58; assert_in_epsilon(248.0157882553636, worksheet.intermediate_output_n58, 0.002); end
  def test_intermediate_output_o58; assert_in_epsilon(257.02461633098045, worksheet.intermediate_output_o58, 0.002); end
  def test_intermediate_output_p58; assert_in_epsilon(264.9548970410722, worksheet.intermediate_output_p58, 0.002); end
  def test_intermediate_output_d59; assert_equal("Supply net of losses", worksheet.intermediate_output_d59); end
  def test_intermediate_output_g59; assert_in_epsilon(2512.6170734191296, worksheet.intermediate_output_g59, 0.002); end
  def test_intermediate_output_h59; assert_in_epsilon(2531.7102020221178, worksheet.intermediate_output_h59, 0.002); end
  def test_intermediate_output_i59; assert_in_epsilon(2708.2982402258453, worksheet.intermediate_output_i59, 0.002); end
  def test_intermediate_output_j59; assert_in_epsilon(2937.506325529261, worksheet.intermediate_output_j59, 0.002); end
  def test_intermediate_output_k59; assert_in_epsilon(3224.153320427613, worksheet.intermediate_output_k59, 0.002); end
  def test_intermediate_output_l59; assert_in_epsilon(3479.7562882954594, worksheet.intermediate_output_l59, 0.002); end
  def test_intermediate_output_m59; assert_in_epsilon(3763.306114141881, worksheet.intermediate_output_m59, 0.002); end
  def test_intermediate_output_n59; assert_in_epsilon(4040.5217821765036, worksheet.intermediate_output_n59, 0.002); end
  def test_intermediate_output_o59; assert_in_epsilon(4519.203278855991, worksheet.intermediate_output_o59, 0.002); end
  def test_intermediate_output_p59; assert_in_epsilon(4952.921336937037, worksheet.intermediate_output_p59, 0.002); end
  def test_intermediate_output_c61; assert_equal("Supply / demand not accounted for", worksheet.intermediate_output_c61); end
  def test_intermediate_output_c63; assert_equal("C.01", worksheet.intermediate_output_c63); end
  def test_intermediate_output_d63; assert_equal("Coal and fossil waste", worksheet.intermediate_output_d63); end
  def test_intermediate_output_g63; assert_in_delta(0.0, (worksheet.intermediate_output_g63||0), 0.002); end
  def test_intermediate_output_h63; assert_in_delta(0.0, (worksheet.intermediate_output_h63||0), 0.002); end
  def test_intermediate_output_i63; assert_in_delta(0.0, (worksheet.intermediate_output_i63||0), 0.002); end
  def test_intermediate_output_j63; assert_in_delta(0.0, (worksheet.intermediate_output_j63||0), 0.002); end
  def test_intermediate_output_k63; assert_in_delta(0.0, (worksheet.intermediate_output_k63||0), 0.002); end
  def test_intermediate_output_l63; assert_in_delta(0.0, (worksheet.intermediate_output_l63||0), 0.002); end
  def test_intermediate_output_m63; assert_in_delta(0.0, (worksheet.intermediate_output_m63||0), 0.002); end
  def test_intermediate_output_n63; assert_in_delta(0.0, (worksheet.intermediate_output_n63||0), 0.002); end
  def test_intermediate_output_o63; assert_in_delta(0.0, (worksheet.intermediate_output_o63||0), 0.002); end
  def test_intermediate_output_p63; assert_in_delta(0.0, (worksheet.intermediate_output_p63||0), 0.002); end
  def test_intermediate_output_c64; assert_equal("C.02", worksheet.intermediate_output_c64); end
  def test_intermediate_output_d64; assert_equal("Oil and petroleum products", worksheet.intermediate_output_d64); end
  def test_intermediate_output_g64; assert_in_delta(0.0, (worksheet.intermediate_output_g64||0), 0.002); end
  def test_intermediate_output_h64; assert_in_delta(0.0, (worksheet.intermediate_output_h64||0), 0.002); end
  def test_intermediate_output_i64; assert_in_delta(0.0, (worksheet.intermediate_output_i64||0), 0.002); end
  def test_intermediate_output_j64; assert_in_delta(0.0, (worksheet.intermediate_output_j64||0), 0.002); end
  def test_intermediate_output_k64; assert_in_delta(0.0, (worksheet.intermediate_output_k64||0), 0.002); end
  def test_intermediate_output_l64; assert_in_delta(0.0, (worksheet.intermediate_output_l64||0), 0.002); end
  def test_intermediate_output_m64; assert_in_delta(0.0, (worksheet.intermediate_output_m64||0), 0.002); end
  def test_intermediate_output_n64; assert_in_delta(0.0, (worksheet.intermediate_output_n64||0), 0.002); end
  def test_intermediate_output_o64; assert_in_delta(0.0, (worksheet.intermediate_output_o64||0), 0.002); end
  def test_intermediate_output_p64; assert_in_delta(0.0, (worksheet.intermediate_output_p64||0), 0.002); end
  def test_intermediate_output_c65; assert_equal("C.03", worksheet.intermediate_output_c65); end
  def test_intermediate_output_d65; assert_equal("Natural gas", worksheet.intermediate_output_d65); end
  def test_intermediate_output_g65; assert_in_delta(0.0, (worksheet.intermediate_output_g65||0), 0.002); end
  def test_intermediate_output_h65; assert_in_delta(0.0, (worksheet.intermediate_output_h65||0), 0.002); end
  def test_intermediate_output_i65; assert_in_delta(0.0, (worksheet.intermediate_output_i65||0), 0.002); end
  def test_intermediate_output_j65; assert_in_delta(0.0, (worksheet.intermediate_output_j65||0), 0.002); end
  def test_intermediate_output_k65; assert_in_delta(0.0, (worksheet.intermediate_output_k65||0), 0.002); end
  def test_intermediate_output_l65; assert_in_delta(0.0, (worksheet.intermediate_output_l65||0), 0.002); end
  def test_intermediate_output_m65; assert_in_delta(0.0, (worksheet.intermediate_output_m65||0), 0.002); end
  def test_intermediate_output_n65; assert_in_delta(0.0, (worksheet.intermediate_output_n65||0), 0.002); end
  def test_intermediate_output_o65; assert_in_delta(0.0, (worksheet.intermediate_output_o65||0), 0.002); end
  def test_intermediate_output_p65; assert_in_delta(0.0, (worksheet.intermediate_output_p65||0), 0.002); end
  def test_intermediate_output_c66; assert_equal("V.03", worksheet.intermediate_output_c66); end
  def test_intermediate_output_d66; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_d66); end
  def test_intermediate_output_g66; assert_in_delta(0.0, (worksheet.intermediate_output_g66||0), 0.002); end
  def test_intermediate_output_h66; assert_in_delta(0.0, (worksheet.intermediate_output_h66||0), 0.002); end
  def test_intermediate_output_i66; assert_in_delta(0.0, (worksheet.intermediate_output_i66||0), 0.002); end
  def test_intermediate_output_j66; assert_in_delta(0.0, (worksheet.intermediate_output_j66||0), 0.002); end
  def test_intermediate_output_k66; assert_in_delta(0.0, (worksheet.intermediate_output_k66||0), 0.002); end
  def test_intermediate_output_l66; assert_in_delta(0.0, (worksheet.intermediate_output_l66||0), 0.002); end
  def test_intermediate_output_m66; assert_in_delta(0.0, (worksheet.intermediate_output_m66||0), 0.002); end
  def test_intermediate_output_n66; assert_in_delta(0.0, (worksheet.intermediate_output_n66||0), 0.002); end
  def test_intermediate_output_o66; assert_in_delta(0.0, (worksheet.intermediate_output_o66||0), 0.002); end
  def test_intermediate_output_p66; assert_in_delta(0.0, (worksheet.intermediate_output_p66||0), 0.002); end
  def test_intermediate_output_c67; assert_equal("V.04", worksheet.intermediate_output_c67); end
  def test_intermediate_output_d67; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_d67); end
  def test_intermediate_output_g67; assert_in_delta(0.0, (worksheet.intermediate_output_g67||0), 0.002); end
  def test_intermediate_output_h67; assert_in_delta(0.0, (worksheet.intermediate_output_h67||0), 0.002); end
  def test_intermediate_output_i67; assert_in_delta(0.0, (worksheet.intermediate_output_i67||0), 0.002); end
  def test_intermediate_output_j67; assert_in_delta(0.0, (worksheet.intermediate_output_j67||0), 0.002); end
  def test_intermediate_output_k67; assert_in_delta(0.0, (worksheet.intermediate_output_k67||0), 0.002); end
  def test_intermediate_output_l67; assert_in_delta(0.0, (worksheet.intermediate_output_l67||0), 0.002); end
  def test_intermediate_output_m67; assert_in_delta(0.0, (worksheet.intermediate_output_m67||0), 0.002); end
  def test_intermediate_output_n67; assert_in_delta(0.0, (worksheet.intermediate_output_n67||0), 0.002); end
  def test_intermediate_output_o67; assert_in_delta(0.0, (worksheet.intermediate_output_o67||0), 0.002); end
  def test_intermediate_output_p67; assert_in_delta(0.0, (worksheet.intermediate_output_p67||0), 0.002); end
  def test_intermediate_output_c68; assert_equal("V.05", worksheet.intermediate_output_c68); end
  def test_intermediate_output_d68; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_d68); end
  def test_intermediate_output_g68; assert_in_delta(0.0, (worksheet.intermediate_output_g68||0), 0.002); end
  def test_intermediate_output_h68; assert_in_delta(0.0, (worksheet.intermediate_output_h68||0), 0.002); end
  def test_intermediate_output_i68; assert_in_delta(0.0, (worksheet.intermediate_output_i68||0), 0.002); end
  def test_intermediate_output_j68; assert_in_delta(0.0, (worksheet.intermediate_output_j68||0), 0.002); end
  def test_intermediate_output_k68; assert_in_delta(0.0, (worksheet.intermediate_output_k68||0), 0.002); end
  def test_intermediate_output_l68; assert_in_delta(0.0, (worksheet.intermediate_output_l68||0), 0.002); end
  def test_intermediate_output_m68; assert_in_delta(0.0, (worksheet.intermediate_output_m68||0), 0.002); end
  def test_intermediate_output_n68; assert_in_delta(0.0, (worksheet.intermediate_output_n68||0), 0.002); end
  def test_intermediate_output_o68; assert_in_delta(0.0, (worksheet.intermediate_output_o68||0), 0.002); end
  def test_intermediate_output_p68; assert_in_delta(0.0, (worksheet.intermediate_output_p68||0), 0.002); end
  def test_intermediate_output_c69; assert_equal("V.06", worksheet.intermediate_output_c69); end
  def test_intermediate_output_d69; assert_equal("Blast furnace gas", worksheet.intermediate_output_d69); end
  def test_intermediate_output_g69; assert_in_delta(0.0, (worksheet.intermediate_output_g69||0), 0.002); end
  def test_intermediate_output_h69; assert_in_delta(0.0, (worksheet.intermediate_output_h69||0), 0.002); end
  def test_intermediate_output_i69; assert_in_delta(0.0, (worksheet.intermediate_output_i69||0), 0.002); end
  def test_intermediate_output_j69; assert_in_delta(0.0, (worksheet.intermediate_output_j69||0), 0.002); end
  def test_intermediate_output_k69; assert_in_delta(0.0, (worksheet.intermediate_output_k69||0), 0.002); end
  def test_intermediate_output_l69; assert_in_delta(0.0, (worksheet.intermediate_output_l69||0), 0.002); end
  def test_intermediate_output_m69; assert_in_delta(0.0, (worksheet.intermediate_output_m69||0), 0.002); end
  def test_intermediate_output_n69; assert_in_delta(0.0, (worksheet.intermediate_output_n69||0), 0.002); end
  def test_intermediate_output_o69; assert_in_delta(0.0, (worksheet.intermediate_output_o69||0), 0.002); end
  def test_intermediate_output_p69; assert_in_delta(0.0, (worksheet.intermediate_output_p69||0), 0.002); end
  def test_intermediate_output_c70; assert_equal("V.08", worksheet.intermediate_output_c70); end
  def test_intermediate_output_d70; assert_equal("Edible biomass", worksheet.intermediate_output_d70); end
  def test_intermediate_output_g70; assert_in_delta(0.0, (worksheet.intermediate_output_g70||0), 0.002); end
  def test_intermediate_output_h70; assert_in_delta(0.0, (worksheet.intermediate_output_h70||0), 0.002); end
  def test_intermediate_output_i70; assert_in_delta(0.0, (worksheet.intermediate_output_i70||0), 0.002); end
  def test_intermediate_output_j70; assert_in_delta(0.0, (worksheet.intermediate_output_j70||0), 0.002); end
  def test_intermediate_output_k70; assert_in_delta(0.0, (worksheet.intermediate_output_k70||0), 0.002); end
  def test_intermediate_output_l70; assert_in_delta(0.0, (worksheet.intermediate_output_l70||0), 0.002); end
  def test_intermediate_output_m70; assert_in_delta(0.0, (worksheet.intermediate_output_m70||0), 0.002); end
  def test_intermediate_output_n70; assert_in_delta(0.0, (worksheet.intermediate_output_n70||0), 0.002); end
  def test_intermediate_output_o70; assert_in_delta(0.0, (worksheet.intermediate_output_o70||0), 0.002); end
  def test_intermediate_output_p70; assert_in_delta(0.0, (worksheet.intermediate_output_p70||0), 0.002); end
  def test_intermediate_output_c71; assert_equal("V.07", worksheet.intermediate_output_c71); end
  def test_intermediate_output_d71; assert_equal("Heat transport", worksheet.intermediate_output_d71); end
  def test_intermediate_output_g71; assert_in_delta(0.0, (worksheet.intermediate_output_g71||0), 0.002); end
  def test_intermediate_output_h71; assert_in_delta(0.0, (worksheet.intermediate_output_h71||0), 0.002); end
  def test_intermediate_output_i71; assert_in_delta(0.0, (worksheet.intermediate_output_i71||0), 0.002); end
  def test_intermediate_output_j71; assert_in_delta(0.0, (worksheet.intermediate_output_j71||0), 0.002); end
  def test_intermediate_output_k71; assert_in_delta(0.0, (worksheet.intermediate_output_k71||0), 0.002); end
  def test_intermediate_output_l71; assert_in_delta(0.0, (worksheet.intermediate_output_l71||0), 0.002); end
  def test_intermediate_output_m71; assert_in_delta(0.0, (worksheet.intermediate_output_m71||0), 0.002); end
  def test_intermediate_output_n71; assert_in_delta(0.0, (worksheet.intermediate_output_n71||0), 0.002); end
  def test_intermediate_output_o71; assert_in_delta(0.0, (worksheet.intermediate_output_o71||0), 0.002); end
  def test_intermediate_output_p71; assert_in_delta(0.0, (worksheet.intermediate_output_p71||0), 0.002); end
  def test_intermediate_output_c72; assert_equal("V.09", worksheet.intermediate_output_c72); end
  def test_intermediate_output_d72; assert_equal("Dry biomass and waste", worksheet.intermediate_output_d72); end
  def test_intermediate_output_g72; assert_in_epsilon(-54.86152923204037, worksheet.intermediate_output_g72, 0.002); end
  def test_intermediate_output_h72; assert_in_epsilon(-26.919973840240715, worksheet.intermediate_output_h72, 0.002); end
  def test_intermediate_output_i72; assert_in_epsilon(-30.95416197854715, worksheet.intermediate_output_i72, 0.002); end
  def test_intermediate_output_j72; assert_in_epsilon(-28.187438121335816, worksheet.intermediate_output_j72, 0.002); end
  def test_intermediate_output_k72; assert_in_epsilon(-21.13408421461557, worksheet.intermediate_output_k72, 0.002); end
  def test_intermediate_output_l72; assert_in_epsilon(-31.735109282795804, worksheet.intermediate_output_l72, 0.002); end
  def test_intermediate_output_m72; assert_in_epsilon(-64.34230104487563, worksheet.intermediate_output_m72, 0.002); end
  def test_intermediate_output_n72; assert_in_epsilon(-96.1267066443481, worksheet.intermediate_output_n72, 0.002); end
  def test_intermediate_output_o72; assert_in_epsilon(-150.94159635941514, worksheet.intermediate_output_o72, 0.002); end
  def test_intermediate_output_p72; assert_in_epsilon(-205.0609806630575, worksheet.intermediate_output_p72, 0.002); end
  def test_intermediate_output_c73; assert_equal("V.10", worksheet.intermediate_output_c73); end
  def test_intermediate_output_d73; assert_equal("Wet biomass and waste", worksheet.intermediate_output_d73); end
  def test_intermediate_output_g73; assert_in_delta(0.0, (worksheet.intermediate_output_g73||0), 0.002); end
  def test_intermediate_output_h73; assert_in_epsilon(-7.87677696, worksheet.intermediate_output_h73, 0.002); end
  def test_intermediate_output_i73; assert_in_epsilon(-7.062060305406235, worksheet.intermediate_output_i73, 0.002); end
  def test_intermediate_output_j73; assert_in_epsilon(-6.501225754345252, worksheet.intermediate_output_j73, 0.002); end
  def test_intermediate_output_k73; assert_in_epsilon(2.037664342450005, worksheet.intermediate_output_k73, 0.002); end
  def test_intermediate_output_l73; assert_in_epsilon(2.772236022582138, worksheet.intermediate_output_l73, 0.002); end
  def test_intermediate_output_m73; assert_in_epsilon(3.612625892983348, worksheet.intermediate_output_m73, 0.002); end
  def test_intermediate_output_n73; assert_in_epsilon(4.5711573372922, worksheet.intermediate_output_n73, 0.002); end
  def test_intermediate_output_o73; assert_in_epsilon(5.661455883442741, worksheet.intermediate_output_o73, 0.002); end
  def test_intermediate_output_p73; assert_in_epsilon(6.898579299693175, worksheet.intermediate_output_p73, 0.002); end
  def test_intermediate_output_c74; assert_equal("V.11", worksheet.intermediate_output_c74); end
  def test_intermediate_output_d74; assert_equal("Domestic solar thermal", worksheet.intermediate_output_d74); end
  def test_intermediate_output_g74; assert_in_delta(0.0, (worksheet.intermediate_output_g74||0), 0.002); end
  def test_intermediate_output_h74; assert_in_delta(0.0, (worksheet.intermediate_output_h74||0), 0.002); end
  def test_intermediate_output_i74; assert_in_delta(0.0, (worksheet.intermediate_output_i74||0), 0.002); end
  def test_intermediate_output_j74; assert_in_delta(0.0, (worksheet.intermediate_output_j74||0), 0.002); end
  def test_intermediate_output_k74; assert_in_delta(0.0, (worksheet.intermediate_output_k74||0), 0.002); end
  def test_intermediate_output_l74; assert_in_delta(0.0, (worksheet.intermediate_output_l74||0), 0.002); end
  def test_intermediate_output_m74; assert_in_delta(0.0, (worksheet.intermediate_output_m74||0), 0.002); end
  def test_intermediate_output_n74; assert_in_delta(0.0, (worksheet.intermediate_output_n74||0), 0.002); end
  def test_intermediate_output_o74; assert_in_delta(0.0, (worksheet.intermediate_output_o74||0), 0.002); end
  def test_intermediate_output_p74; assert_in_delta(0.0, (worksheet.intermediate_output_p74||0), 0.002); end
  def test_intermediate_output_c75; assert_equal("V.12", worksheet.intermediate_output_c75); end
  def test_intermediate_output_d75; assert_equal("Hydrogen", worksheet.intermediate_output_d75); end
  def test_intermediate_output_g75; assert_in_delta(0.0, (worksheet.intermediate_output_g75||0), 0.002); end
  def test_intermediate_output_h75; assert_in_delta(0.0, (worksheet.intermediate_output_h75||0), 0.002); end
  def test_intermediate_output_i75; assert_in_epsilon(3.9421985894588736, worksheet.intermediate_output_i75, 0.002); end
  def test_intermediate_output_j75; assert_in_epsilon(8.642731173057571, worksheet.intermediate_output_j75, 0.002); end
  def test_intermediate_output_k75; assert_in_epsilon(13.485888052257042, worksheet.intermediate_output_k75, 0.002); end
  def test_intermediate_output_l75; assert_in_epsilon(18.63868983922176, worksheet.intermediate_output_l75, 0.002); end
  def test_intermediate_output_m75; assert_in_epsilon(23.14902314826305, worksheet.intermediate_output_m75, 0.002); end
  def test_intermediate_output_n75; assert_in_epsilon(27.541923210925248, worksheet.intermediate_output_n75, 0.002); end
  def test_intermediate_output_o75; assert_in_epsilon(31.434411012840627, worksheet.intermediate_output_o75, 0.002); end
  def test_intermediate_output_p75; assert_in_epsilon(35.27565159018306, worksheet.intermediate_output_p75, 0.002); end
  def test_intermediate_output_c76; assert_equal("V.13", worksheet.intermediate_output_c76); end
  def test_intermediate_output_d76; assert_equal("Energy crops (second generation)", worksheet.intermediate_output_d76); end
  def test_intermediate_output_g76; assert_in_delta(0.0, (worksheet.intermediate_output_g76||0), 0.002); end
  def test_intermediate_output_h76; assert_in_delta(0.0, (worksheet.intermediate_output_h76||0), 0.002); end
  def test_intermediate_output_i76; assert_in_delta(0.0, (worksheet.intermediate_output_i76||0), 0.002); end
  def test_intermediate_output_j76; assert_in_delta(0.0, (worksheet.intermediate_output_j76||0), 0.002); end
  def test_intermediate_output_k76; assert_in_delta(0.0, (worksheet.intermediate_output_k76||0), 0.002); end
  def test_intermediate_output_l76; assert_in_delta(0.0, (worksheet.intermediate_output_l76||0), 0.002); end
  def test_intermediate_output_m76; assert_in_delta(0.0, (worksheet.intermediate_output_m76||0), 0.002); end
  def test_intermediate_output_n76; assert_in_delta(0.0, (worksheet.intermediate_output_n76||0), 0.002); end
  def test_intermediate_output_o76; assert_in_delta(0.0, (worksheet.intermediate_output_o76||0), 0.002); end
  def test_intermediate_output_p76; assert_in_delta(0.0, (worksheet.intermediate_output_p76||0), 0.002); end
  def test_intermediate_output_d77; assert_equal("Total unnaccounted supply / demand", worksheet.intermediate_output_d77); end
  def test_intermediate_output_g77; assert_in_epsilon(-54.86152923204037, worksheet.intermediate_output_g77, 0.002); end
  def test_intermediate_output_h77; assert_in_epsilon(-34.796750800240716, worksheet.intermediate_output_h77, 0.002); end
  def test_intermediate_output_i77; assert_in_epsilon(-34.07402369449451, worksheet.intermediate_output_i77, 0.002); end
  def test_intermediate_output_j77; assert_in_epsilon(-26.045932702623496, worksheet.intermediate_output_j77, 0.002); end
  def test_intermediate_output_k77; assert_in_epsilon(-5.610531819908523, worksheet.intermediate_output_k77, 0.002); end
  def test_intermediate_output_l77; assert_in_epsilon(-10.324183420991904, worksheet.intermediate_output_l77, 0.002); end
  def test_intermediate_output_m77; assert_in_epsilon(-37.580652003629226, worksheet.intermediate_output_m77, 0.002); end
  def test_intermediate_output_n77; assert_in_epsilon(-64.01362609613065, worksheet.intermediate_output_n77, 0.002); end
  def test_intermediate_output_o77; assert_in_epsilon(-113.84572946313179, worksheet.intermediate_output_o77, 0.002); end
  def test_intermediate_output_p77; assert_in_epsilon(-162.88674977318126, worksheet.intermediate_output_p77, 0.002); end
  def test_intermediate_output_d79; assert_equal("Supply, Demand, and Unaccounted supply", worksheet.intermediate_output_d79); end
  def test_intermediate_output_g79; assert_in_delta(-0.2569168561324773, worksheet.intermediate_output_g79, 0.002); end
  def test_intermediate_output_h79; assert_in_epsilon(5.250808570838672, worksheet.intermediate_output_h79, 0.002); end
  def test_intermediate_output_i79; assert_in_epsilon(9.877013771997873, worksheet.intermediate_output_i79, 0.002); end
  def test_intermediate_output_j79; assert_in_epsilon(15.651254946658163, worksheet.intermediate_output_j79, 0.002); end
  def test_intermediate_output_k79; assert_in_epsilon(26.17400083478227, worksheet.intermediate_output_k79, 0.002); end
  def test_intermediate_output_l79; assert_in_epsilon(25.142149662509564, worksheet.intermediate_output_l79, 0.002); end
  def test_intermediate_output_m79; assert_in_epsilon(47.52403266238183, worksheet.intermediate_output_m79, 0.002); end
  def test_intermediate_output_n79; assert_in_epsilon(73.53853721530791, worksheet.intermediate_output_n79, 0.002); end
  def test_intermediate_output_o79; assert_in_epsilon(22.831666235850975, worksheet.intermediate_output_o79, 0.002); end
  def test_intermediate_output_p79; assert_in_epsilon(18.54239559433833, worksheet.intermediate_output_p79, 0.002); end
  def test_intermediate_output_b83; assert_equal("Electricity grid (net of distribution losses)", worksheet.intermediate_output_b83); end
  def test_intermediate_output_c85; assert_equal("V.01", worksheet.intermediate_output_c85); end
  def test_intermediate_output_d85; assert_equal("Electricity (delivered to end user)", worksheet.intermediate_output_d85); end
  def test_intermediate_output_g85; assert_in_epsilon(-918.4820267360425, worksheet.intermediate_output_g85, 0.002); end
  def test_intermediate_output_h85; assert_in_epsilon(-995.7262335460157, worksheet.intermediate_output_h85, 0.002); end
  def test_intermediate_output_i85; assert_in_epsilon(-1084.6049152934402, worksheet.intermediate_output_i85, 0.002); end
  def test_intermediate_output_j85; assert_in_epsilon(-1217.008664899736, worksheet.intermediate_output_j85, 0.002); end
  def test_intermediate_output_k85; assert_in_epsilon(-1333.4046513158835, worksheet.intermediate_output_k85, 0.002); end
  def test_intermediate_output_l85; assert_in_epsilon(-1413.1330708096941, worksheet.intermediate_output_l85, 0.002); end
  def test_intermediate_output_m85; assert_in_epsilon(-1480.665217647233, worksheet.intermediate_output_m85, 0.002); end
  def test_intermediate_output_n85; assert_in_epsilon(-1532.0228012898, worksheet.intermediate_output_n85, 0.002); end
  def test_intermediate_output_o85; assert_in_epsilon(-1613.547201280785, worksheet.intermediate_output_o85, 0.002); end
  def test_intermediate_output_p85; assert_in_epsilon(-1679.081974945837, worksheet.intermediate_output_p85, 0.002); end
  def test_intermediate_output_q85; assert_equal("REFERENCED", worksheet.intermediate_output_q85); end
  def test_intermediate_output_c86; assert_equal("V.02", worksheet.intermediate_output_c86); end
  def test_intermediate_output_d86; assert_equal("Electricity (supplied to grid)", worksheet.intermediate_output_d86); end
  def test_intermediate_output_g86; assert_in_epsilon(918.4820267360425, worksheet.intermediate_output_g86, 0.002); end
  def test_intermediate_output_h86; assert_in_epsilon(995.7262335460157, worksheet.intermediate_output_h86, 0.002); end
  def test_intermediate_output_i86; assert_in_epsilon(1084.6049152934402, worksheet.intermediate_output_i86, 0.002); end
  def test_intermediate_output_j86; assert_in_epsilon(1217.008664899736, worksheet.intermediate_output_j86, 0.002); end
  def test_intermediate_output_k86; assert_in_epsilon(1333.4046513158835, worksheet.intermediate_output_k86, 0.002); end
  def test_intermediate_output_l86; assert_in_epsilon(1413.133070809694, worksheet.intermediate_output_l86, 0.002); end
  def test_intermediate_output_m86; assert_in_epsilon(1480.665217647233, worksheet.intermediate_output_m86, 0.002); end
  def test_intermediate_output_n86; assert_in_epsilon(1532.0228012897996, worksheet.intermediate_output_n86, 0.002); end
  def test_intermediate_output_o86; assert_in_epsilon(1613.547201280785, worksheet.intermediate_output_o86, 0.002); end
  def test_intermediate_output_p86; assert_in_epsilon(1679.081974945837, worksheet.intermediate_output_p86, 0.002); end
  def test_intermediate_output_d87; assert_equal("Total electricity grid", worksheet.intermediate_output_d87); end
  def test_intermediate_output_g87; assert_in_delta(0.0, (worksheet.intermediate_output_g87||0), 0.002); end
  def test_intermediate_output_h87; assert_in_delta(0.0, (worksheet.intermediate_output_h87||0), 0.002); end
  def test_intermediate_output_i87; assert_in_delta(0.0, (worksheet.intermediate_output_i87||0), 0.002); end
  def test_intermediate_output_j87; assert_in_delta(0.0, (worksheet.intermediate_output_j87||0), 0.002); end
  def test_intermediate_output_k87; assert_in_delta(0.0, (worksheet.intermediate_output_k87||0), 0.002); end
  def test_intermediate_output_l87; assert_in_delta(0.0, (worksheet.intermediate_output_l87||0), 0.002); end
  def test_intermediate_output_m87; assert_in_delta(0.0, (worksheet.intermediate_output_m87||0), 0.002); end
  def test_intermediate_output_n87; assert_in_delta(0.0, (worksheet.intermediate_output_n87||0), 0.002); end
  def test_intermediate_output_o87; assert_in_delta(0.0, (worksheet.intermediate_output_o87||0), 0.002); end
  def test_intermediate_output_p87; assert_in_delta(0.0, (worksheet.intermediate_output_p87||0), 0.002); end
  def test_intermediate_output_c89; assert_equal("V.01", worksheet.intermediate_output_c89); end
  def test_intermediate_output_d89; assert_equal("Losses", worksheet.intermediate_output_d89); end
  def test_intermediate_output_g89; assert_in_epsilon(-94.95780538928473, worksheet.intermediate_output_g89, 0.002); end
  def test_intermediate_output_h89; assert_in_epsilon(-148.9517861339029, worksheet.intermediate_output_h89, 0.002); end
  def test_intermediate_output_i89; assert_in_epsilon(-161.26048850591346, worksheet.intermediate_output_i89, 0.002); end
  def test_intermediate_output_j89; assert_in_epsilon(-182.24541053379792, worksheet.intermediate_output_j89, 0.002); end
  def test_intermediate_output_k89; assert_in_epsilon(-201.63252975971102, worksheet.intermediate_output_k89, 0.002); end
  def test_intermediate_output_l89; assert_in_epsilon(-215.59442147113367, worksheet.intermediate_output_l89, 0.002); end
  def test_intermediate_output_m89; assert_in_epsilon(-227.4195818807938, worksheet.intermediate_output_m89, 0.002); end
  def test_intermediate_output_n89; assert_in_epsilon(-235.99219367220206, worksheet.intermediate_output_n89, 0.002); end
  def test_intermediate_output_o89; assert_in_epsilon(-248.55085781955336, worksheet.intermediate_output_o89, 0.002); end
  def test_intermediate_output_p89; assert_in_epsilon(-257.72737129622533, worksheet.intermediate_output_p89, 0.002); end
  def test_intermediate_output_d90; assert_equal("Demand (for charting)", worksheet.intermediate_output_d90); end
  def test_intermediate_output_g90; assert_in_epsilon(918.4820267360425, worksheet.intermediate_output_g90, 0.002); end
  def test_intermediate_output_h90; assert_in_epsilon(995.7262335460157, worksheet.intermediate_output_h90, 0.002); end
  def test_intermediate_output_i90; assert_in_epsilon(1084.6049152934402, worksheet.intermediate_output_i90, 0.002); end
  def test_intermediate_output_j90; assert_in_epsilon(1217.008664899736, worksheet.intermediate_output_j90, 0.002); end
  def test_intermediate_output_k90; assert_in_epsilon(1333.4046513158835, worksheet.intermediate_output_k90, 0.002); end
  def test_intermediate_output_l90; assert_in_epsilon(1413.1330708096941, worksheet.intermediate_output_l90, 0.002); end
  def test_intermediate_output_m90; assert_in_epsilon(1480.665217647233, worksheet.intermediate_output_m90, 0.002); end
  def test_intermediate_output_n90; assert_in_epsilon(1532.0228012898, worksheet.intermediate_output_n90, 0.002); end
  def test_intermediate_output_o90; assert_in_epsilon(1613.547201280785, worksheet.intermediate_output_o90, 0.002); end
  def test_intermediate_output_p90; assert_in_epsilon(1679.081974945837, worksheet.intermediate_output_p90, 0.002); end
  def test_intermediate_output_d91; assert_equal("Dummy for charting", worksheet.intermediate_output_d91); end
  def test_intermediate_output_g91; assert_in_epsilon(918.4820267360425, worksheet.intermediate_output_g91, 0.002); end
  def test_intermediate_output_h91; assert_in_epsilon(995.7262335460157, worksheet.intermediate_output_h91, 0.002); end
  def test_intermediate_output_i91; assert_in_epsilon(1084.6049152934402, worksheet.intermediate_output_i91, 0.002); end
  def test_intermediate_output_j91; assert_in_epsilon(1217.008664899736, worksheet.intermediate_output_j91, 0.002); end
  def test_intermediate_output_k91; assert_in_epsilon(1333.4046513158835, worksheet.intermediate_output_k91, 0.002); end
  def test_intermediate_output_l91; assert_in_epsilon(1413.1330708096941, worksheet.intermediate_output_l91, 0.002); end
  def test_intermediate_output_m91; assert_in_epsilon(1480.665217647233, worksheet.intermediate_output_m91, 0.002); end
  def test_intermediate_output_n91; assert_in_epsilon(1532.0228012898, worksheet.intermediate_output_n91, 0.002); end
  def test_intermediate_output_o91; assert_in_epsilon(1613.547201280785, worksheet.intermediate_output_o91, 0.002); end
  def test_intermediate_output_p91; assert_in_epsilon(1679.081974945837, worksheet.intermediate_output_p91, 0.002); end
  def test_intermediate_output_r91; assert_equal("Includes exports", worksheet.intermediate_output_r91); end
  def test_intermediate_output_c94; assert_equal("Z.01", worksheet.intermediate_output_c94); end
  def test_intermediate_output_d94; assert_equal("Unallocated", worksheet.intermediate_output_d94); end
  def test_intermediate_output_g94; assert_in_delta(-0.22341487380936087, worksheet.intermediate_output_g94, 0.002); end
  def test_intermediate_output_h94; assert_in_delta(-0.34898015491489787, worksheet.intermediate_output_h94, 0.002); end
  def test_intermediate_output_i94; assert_in_epsilon(-2.123099073675803, worksheet.intermediate_output_i94, 0.002); end
  def test_intermediate_output_j94; assert_in_epsilon(-4.503057548848005, worksheet.intermediate_output_j94, 0.002); end
  def test_intermediate_output_k94; assert_in_epsilon(-6.624940746924722, worksheet.intermediate_output_k94, 0.002); end
  def test_intermediate_output_l94; assert_in_epsilon(-8.686685174902777, worksheet.intermediate_output_l94, 0.002); end
  def test_intermediate_output_m94; assert_in_epsilon(-10.2135260042769, worksheet.intermediate_output_m94, 0.002); end
  def test_intermediate_output_n94; assert_in_epsilon(-11.503628235531778, worksheet.intermediate_output_n94, 0.002); end
  def test_intermediate_output_o94; assert_in_epsilon(-12.114966036303485, worksheet.intermediate_output_o94, 0.002); end
  def test_intermediate_output_p94; assert_in_epsilon(-12.043218295340012, worksheet.intermediate_output_p94, 0.002); end
  def test_intermediate_output_d96; assert_equal("Net balance ", worksheet.intermediate_output_d96); end
  def test_intermediate_output_g96; assert_in_delta(-0.48033172994183815, worksheet.intermediate_output_g96, 0.002); end
  def test_intermediate_output_h96; assert_in_epsilon(4.901828415923774, worksheet.intermediate_output_h96, 0.002); end
  def test_intermediate_output_i96; assert_in_epsilon(7.75391469832207, worksheet.intermediate_output_i96, 0.002); end
  def test_intermediate_output_j96; assert_in_epsilon(11.148197397810158, worksheet.intermediate_output_j96, 0.002); end
  def test_intermediate_output_k96; assert_in_epsilon(19.549060087857548, worksheet.intermediate_output_k96, 0.002); end
  def test_intermediate_output_l96; assert_in_epsilon(16.455464487606786, worksheet.intermediate_output_l96, 0.002); end
  def test_intermediate_output_m96; assert_in_epsilon(37.31050665810493, worksheet.intermediate_output_m96, 0.002); end
  def test_intermediate_output_n96; assert_in_epsilon(62.034908979776134, worksheet.intermediate_output_n96, 0.002); end
  def test_intermediate_output_o96; assert_in_epsilon(10.716700199547489, worksheet.intermediate_output_o96, 0.002); end
  def test_intermediate_output_p96; assert_in_epsilon(6.499177298998319, worksheet.intermediate_output_p96, 0.002); end
  def test_intermediate_output_b98; assert_equal("Electricity Generation", worksheet.intermediate_output_b98); end
  def test_intermediate_output_c100; assert_equal("V.02", worksheet.intermediate_output_c100); end
  def test_intermediate_output_d100; assert_equal("PJ", worksheet.intermediate_output_d100); end
  def test_intermediate_output_g100; assert_in_epsilon(2006.0, worksheet.intermediate_output_g100, 0.002); end
  def test_intermediate_output_h100; assert_in_epsilon(2010.0, worksheet.intermediate_output_h100, 0.002); end
  def test_intermediate_output_i100; assert_in_epsilon(2015.0, worksheet.intermediate_output_i100, 0.002); end
  def test_intermediate_output_j100; assert_in_epsilon(2020.0, worksheet.intermediate_output_j100, 0.002); end
  def test_intermediate_output_k100; assert_in_epsilon(2025.0, worksheet.intermediate_output_k100, 0.002); end
  def test_intermediate_output_l100; assert_in_epsilon(2030.0, worksheet.intermediate_output_l100, 0.002); end
  def test_intermediate_output_m100; assert_in_epsilon(2035.0, worksheet.intermediate_output_m100, 0.002); end
  def test_intermediate_output_n100; assert_in_epsilon(2040.0, worksheet.intermediate_output_n100, 0.002); end
  def test_intermediate_output_o100; assert_in_epsilon(2045.0, worksheet.intermediate_output_o100, 0.002); end
  def test_intermediate_output_p100; assert_in_epsilon(2050.0, worksheet.intermediate_output_p100, 0.002); end
  def test_intermediate_output_c101; assert_equal("Therm.a", worksheet.intermediate_output_c101); end
  def test_intermediate_output_d101; assert_equal("Biomass/Coal power stations", worksheet.intermediate_output_d101); end
  def test_intermediate_output_g101; assert_in_epsilon(850.5040970733838, worksheet.intermediate_output_g101, 0.002); end
  def test_intermediate_output_h101; assert_in_epsilon(916.6065074805028, worksheet.intermediate_output_h101, 0.002); end
  def test_intermediate_output_i101; assert_in_epsilon(972.0709186341646, worksheet.intermediate_output_i101, 0.002); end
  def test_intermediate_output_j101; assert_in_epsilon(60.32258214764738, worksheet.intermediate_output_j101, 0.002); end
  def test_intermediate_output_k101; assert_in_delta(0.0, (worksheet.intermediate_output_k101||0), 0.002); end
  def test_intermediate_output_l101; assert_in_delta(0.0, (worksheet.intermediate_output_l101||0), 0.002); end
  def test_intermediate_output_m101; assert_in_delta(0.0, (worksheet.intermediate_output_m101||0), 0.002); end
  def test_intermediate_output_n101; assert_in_delta(0.0, (worksheet.intermediate_output_n101||0), 0.002); end
  def test_intermediate_output_o101; assert_in_delta(0.0, (worksheet.intermediate_output_o101||0), 0.002); end
  def test_intermediate_output_p101; assert_in_delta(0.0, (worksheet.intermediate_output_p101||0), 0.002); end
  def test_intermediate_output_c102; assert_equal("Therm.b", worksheet.intermediate_output_c102); end
  def test_intermediate_output_d102; assert_equal("CCGT", worksheet.intermediate_output_d102); end
  def test_intermediate_output_g102; assert_in_delta(0.20894301369863016, worksheet.intermediate_output_g102, 0.002); end
  def test_intermediate_output_h102; assert_in_delta(0.1802578754328802, worksheet.intermediate_output_h102, 0.002); end
  def test_intermediate_output_i102; assert_in_epsilon(2.7600412337343188, worksheet.intermediate_output_i102, 0.002); end
  def test_intermediate_output_j102; assert_in_epsilon(2.8190280588251593, worksheet.intermediate_output_j102, 0.002); end
  def test_intermediate_output_k102; assert_in_epsilon(3.0590055589054064, worksheet.intermediate_output_k102, 0.002); end
  def test_intermediate_output_l102; assert_in_epsilon(232.19398369265858, worksheet.intermediate_output_l102, 0.002); end
  def test_intermediate_output_m102; assert_in_epsilon(289.40949037265864, worksheet.intermediate_output_m102, 0.002); end
  def test_intermediate_output_n102; assert_in_epsilon(346.4711183785086, worksheet.intermediate_output_n102, 0.002); end
  def test_intermediate_output_o102; assert_in_epsilon(403.68662505850864, worksheet.intermediate_output_o102, 0.002); end
  def test_intermediate_output_p102; assert_in_epsilon(458.3970894505086, worksheet.intermediate_output_p102, 0.002); end
  def test_intermediate_output_c103; assert_equal("Coal power", worksheet.intermediate_output_c103); end
  def test_intermediate_output_d103; assert_equal("CMJ Coal power", worksheet.intermediate_output_d103); end
  def test_intermediate_output_g103; assert_in_epsilon(850.5040970733838, worksheet.intermediate_output_g103, 0.002); end
  def test_intermediate_output_h103; assert_in_epsilon(916.6065074805028, worksheet.intermediate_output_h103, 0.002); end
  def test_intermediate_output_i103; assert_in_epsilon(972.0709186341646, worksheet.intermediate_output_i103, 0.002); end
  def test_intermediate_output_j103; assert_in_epsilon(60.32258214764738, worksheet.intermediate_output_j103, 0.002); end
  def test_intermediate_output_k103; assert_in_delta(0.0, (worksheet.intermediate_output_k103||0), 0.002); end
  def test_intermediate_output_l103; assert_in_delta(0.0, (worksheet.intermediate_output_l103||0), 0.002); end
  def test_intermediate_output_m103; assert_in_delta(0.0, (worksheet.intermediate_output_m103||0), 0.002); end
  def test_intermediate_output_n103; assert_in_delta(0.0, (worksheet.intermediate_output_n103||0), 0.002); end
  def test_intermediate_output_o103; assert_in_delta(0.0, (worksheet.intermediate_output_o103||0), 0.002); end
  def test_intermediate_output_p103; assert_in_delta(0.0, (worksheet.intermediate_output_p103||0), 0.002); end
  def test_intermediate_output_c104; assert_equal("Gas power", worksheet.intermediate_output_c104); end
  def test_intermediate_output_d104; assert_equal("CMJ Gas power", worksheet.intermediate_output_d104); end
  def test_intermediate_output_g104; assert_in_delta(0.20894301369863016, worksheet.intermediate_output_g104, 0.002); end
  def test_intermediate_output_h104; assert_in_delta(0.1802578754328802, worksheet.intermediate_output_h104, 0.002); end
  def test_intermediate_output_i104; assert_in_epsilon(2.7600412337343188, worksheet.intermediate_output_i104, 0.002); end
  def test_intermediate_output_j104; assert_in_epsilon(2.8190280588251593, worksheet.intermediate_output_j104, 0.002); end
  def test_intermediate_output_k104; assert_in_epsilon(3.0590055589054064, worksheet.intermediate_output_k104, 0.002); end
  def test_intermediate_output_l104; assert_in_epsilon(232.19398369265858, worksheet.intermediate_output_l104, 0.002); end
  def test_intermediate_output_m104; assert_in_epsilon(289.40949037265864, worksheet.intermediate_output_m104, 0.002); end
  def test_intermediate_output_n104; assert_in_epsilon(346.4711183785086, worksheet.intermediate_output_n104, 0.002); end
  def test_intermediate_output_o104; assert_in_epsilon(403.68662505850864, worksheet.intermediate_output_o104, 0.002); end
  def test_intermediate_output_p104; assert_in_epsilon(458.3970894505086, worksheet.intermediate_output_p104, 0.002); end
  def test_intermediate_output_c105; assert_equal("Nuke", worksheet.intermediate_output_c105); end
  def test_intermediate_output_d105; assert_equal("Nuclear power", worksheet.intermediate_output_d105); end
  def test_intermediate_output_g105; assert_in_epsilon(36.392224320000004, worksheet.intermediate_output_g105, 0.002); end
  def test_intermediate_output_h105; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_h105, 0.002); end
  def test_intermediate_output_i105; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_i105, 0.002); end
  def test_intermediate_output_j105; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_j105, 0.002); end
  def test_intermediate_output_k105; assert_in_epsilon(535.7723097600001, worksheet.intermediate_output_k105, 0.002); end
  def test_intermediate_output_l105; assert_in_epsilon(1023.9999393600002, worksheet.intermediate_output_l105, 0.002); end
  def test_intermediate_output_m105; assert_in_epsilon(1151.8082193600003, worksheet.intermediate_output_m105, 0.002); end
  def test_intermediate_output_n105; assert_in_epsilon(1279.6164993600003, worksheet.intermediate_output_n105, 0.002); end
  def test_intermediate_output_o105; assert_in_epsilon(1407.4247793600002, worksheet.intermediate_output_o105, 0.002); end
  def test_intermediate_output_p105; assert_in_epsilon(1535.2330593600002, worksheet.intermediate_output_p105, 0.002); end
  def test_intermediate_output_c106; assert_equal("Nuclear", worksheet.intermediate_output_c106); end
  def test_intermediate_output_d106; assert_equal("CMJ Nuclear", worksheet.intermediate_output_d106); end
  def test_intermediate_output_g106; assert_in_epsilon(36.392224320000004, worksheet.intermediate_output_g106, 0.002); end
  def test_intermediate_output_h106; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_h106, 0.002); end
  def test_intermediate_output_i106; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_i106, 0.002); end
  def test_intermediate_output_j106; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_j106, 0.002); end
  def test_intermediate_output_k106; assert_in_epsilon(535.7723097600001, worksheet.intermediate_output_k106, 0.002); end
  def test_intermediate_output_l106; assert_in_epsilon(1023.9999393600002, worksheet.intermediate_output_l106, 0.002); end
  def test_intermediate_output_m106; assert_in_epsilon(1151.8082193600003, worksheet.intermediate_output_m106, 0.002); end
  def test_intermediate_output_n106; assert_in_epsilon(1279.6164993600003, worksheet.intermediate_output_n106, 0.002); end
  def test_intermediate_output_o106; assert_in_epsilon(1407.4247793600002, worksheet.intermediate_output_o106, 0.002); end
  def test_intermediate_output_p106; assert_in_epsilon(1535.2330593600002, worksheet.intermediate_output_p106, 0.002); end
  def test_intermediate_output_c107; assert_equal("RE.a", worksheet.intermediate_output_c107); end
  def test_intermediate_output_d107; assert_equal("Onshore wind", worksheet.intermediate_output_d107); end
  def test_intermediate_output_g107; assert_in_delta(0.055844328960000016, worksheet.intermediate_output_g107, 0.002); end
  def test_intermediate_output_h107; assert_in_delta(0.07387003008000001, worksheet.intermediate_output_h107, 0.002); end
  def test_intermediate_output_i107; assert_in_epsilon(11.57035420224, worksheet.intermediate_output_i107, 0.002); end
  def test_intermediate_output_j107; assert_in_epsilon(107.85635346816002, worksheet.intermediate_output_j107, 0.002); end
  def test_intermediate_output_k107; assert_in_epsilon(180.12560535359998, worksheet.intermediate_output_k107, 0.002); end
  def test_intermediate_output_l107; assert_in_epsilon(265.08384, worksheet.intermediate_output_l107, 0.002); end
  def test_intermediate_output_m107; assert_in_epsilon(276.129, worksheet.intermediate_output_m107, 0.002); end
  def test_intermediate_output_n107; assert_in_epsilon(331.35480000000007, worksheet.intermediate_output_n107, 0.002); end
  def test_intermediate_output_o107; assert_in_epsilon(386.58060000000006, worksheet.intermediate_output_o107, 0.002); end
  def test_intermediate_output_p107; assert_in_epsilon(441.80640000000005, worksheet.intermediate_output_p107, 0.002); end
  def test_intermediate_output_c108; assert_equal("Wind", worksheet.intermediate_output_c108); end
  def test_intermediate_output_d108; assert_equal("CMJ Wind", worksheet.intermediate_output_d108); end
  def test_intermediate_output_g108; assert_in_delta(0.055844328960000016, worksheet.intermediate_output_g108, 0.002); end
  def test_intermediate_output_h108; assert_in_delta(0.07387003008000001, worksheet.intermediate_output_h108, 0.002); end
  def test_intermediate_output_i108; assert_in_epsilon(11.57035420224, worksheet.intermediate_output_i108, 0.002); end
  def test_intermediate_output_j108; assert_in_epsilon(107.85635346816002, worksheet.intermediate_output_j108, 0.002); end
  def test_intermediate_output_k108; assert_in_epsilon(180.12560535359998, worksheet.intermediate_output_k108, 0.002); end
  def test_intermediate_output_l108; assert_in_epsilon(265.08384, worksheet.intermediate_output_l108, 0.002); end
  def test_intermediate_output_m108; assert_in_epsilon(276.129, worksheet.intermediate_output_m108, 0.002); end
  def test_intermediate_output_n108; assert_in_epsilon(331.35480000000007, worksheet.intermediate_output_n108, 0.002); end
  def test_intermediate_output_o108; assert_in_epsilon(386.58060000000006, worksheet.intermediate_output_o108, 0.002); end
  def test_intermediate_output_p108; assert_in_epsilon(441.80640000000005, worksheet.intermediate_output_p108, 0.002); end
  def test_intermediate_output_c109; assert_equal("RE.b", worksheet.intermediate_output_c109); end
  def test_intermediate_output_d109; assert_equal("Hydroelectric power stations", worksheet.intermediate_output_d109); end
  def test_intermediate_output_g109; assert_in_epsilon(31.320918000000006, worksheet.intermediate_output_g109, 0.002); end
  def test_intermediate_output_h109; assert_in_epsilon(31.320918000000006, worksheet.intermediate_output_h109, 0.002); end
  def test_intermediate_output_i109; assert_in_epsilon(37.00128600000001, worksheet.intermediate_output_i109, 0.002); end
  def test_intermediate_output_j109; assert_in_epsilon(37.00128600000001, worksheet.intermediate_output_j109, 0.002); end
  def test_intermediate_output_k109; assert_in_epsilon(92.16491752800002, worksheet.intermediate_output_k109, 0.002); end
  def test_intermediate_output_l109; assert_in_epsilon(139.8944621088, worksheet.intermediate_output_l109, 0.002); end
  def test_intermediate_output_m109; assert_in_epsilon(187.62400668960004, worksheet.intermediate_output_m109, 0.002); end
  def test_intermediate_output_n109; assert_in_epsilon(235.35355127040003, worksheet.intermediate_output_n109, 0.002); end
  def test_intermediate_output_o109; assert_in_epsilon(283.0830958512, worksheet.intermediate_output_o109, 0.002); end
  def test_intermediate_output_p109; assert_in_epsilon(330.812640432, worksheet.intermediate_output_p109, 0.002); end
  def test_intermediate_output_c110; assert_equal("Hydro", worksheet.intermediate_output_c110); end
  def test_intermediate_output_d110; assert_equal("CMJ Hydro", worksheet.intermediate_output_d110); end
  def test_intermediate_output_g110; assert_in_epsilon(31.320918000000006, worksheet.intermediate_output_g110, 0.002); end
  def test_intermediate_output_h110; assert_in_epsilon(31.320918000000006, worksheet.intermediate_output_h110, 0.002); end
  def test_intermediate_output_i110; assert_in_epsilon(37.00128600000001, worksheet.intermediate_output_i110, 0.002); end
  def test_intermediate_output_j110; assert_in_epsilon(37.00128600000001, worksheet.intermediate_output_j110, 0.002); end
  def test_intermediate_output_k110; assert_in_epsilon(92.16491752800002, worksheet.intermediate_output_k110, 0.002); end
  def test_intermediate_output_l110; assert_in_epsilon(139.8944621088, worksheet.intermediate_output_l110, 0.002); end
  def test_intermediate_output_m110; assert_in_epsilon(187.62400668960004, worksheet.intermediate_output_m110, 0.002); end
  def test_intermediate_output_n110; assert_in_epsilon(235.35355127040003, worksheet.intermediate_output_n110, 0.002); end
  def test_intermediate_output_o110; assert_in_epsilon(283.0830958512, worksheet.intermediate_output_o110, 0.002); end
  def test_intermediate_output_p110; assert_in_epsilon(330.812640432, worksheet.intermediate_output_p110, 0.002); end
  def test_intermediate_output_c111; assert_equal("RE.c", worksheet.intermediate_output_c111); end
  def test_intermediate_output_d111; assert_equal("CSP", worksheet.intermediate_output_d111); end
  def test_intermediate_output_g111; assert_in_delta(0.0, (worksheet.intermediate_output_g111||0), 0.002); end
  def test_intermediate_output_h111; assert_in_delta(0.0, (worksheet.intermediate_output_h111||0), 0.002); end
  def test_intermediate_output_i111; assert_in_epsilon(1.9881288000000001, worksheet.intermediate_output_i111, 0.002); end
  def test_intermediate_output_j111; assert_in_epsilon(606.1583808, worksheet.intermediate_output_j111, 0.002); end
  def test_intermediate_output_k111; assert_in_epsilon(1210.3286328000002, worksheet.intermediate_output_k111, 0.002); end
  def test_intermediate_output_l111; assert_in_epsilon(1814.4988848000003, worksheet.intermediate_output_l111, 0.002); end
  def test_intermediate_output_m111; assert_in_epsilon(2268.123606, worksheet.intermediate_output_m111, 0.002); end
  def test_intermediate_output_n111; assert_in_epsilon(2721.7483272000004, worksheet.intermediate_output_n111, 0.002); end
  def test_intermediate_output_o111; assert_in_epsilon(3175.3730484000002, worksheet.intermediate_output_o111, 0.002); end
  def test_intermediate_output_p111; assert_in_epsilon(3628.9977696000005, worksheet.intermediate_output_p111, 0.002); end
  def test_intermediate_output_c112; assert_equal("RE.e", worksheet.intermediate_output_c112); end
  def test_intermediate_output_d112; assert_equal("Centralised PV", worksheet.intermediate_output_d112); end
  def test_intermediate_output_g112; assert_in_delta(0.0, (worksheet.intermediate_output_g112||0), 0.002); end
  def test_intermediate_output_h112; assert_in_delta(0.0, (worksheet.intermediate_output_h112||0), 0.002); end
  def test_intermediate_output_i112; assert_in_epsilon(11.005397424, worksheet.intermediate_output_i112, 0.002); end
  def test_intermediate_output_j112; assert_in_epsilon(351.31740141600005, worksheet.intermediate_output_j112, 0.002); end
  def test_intermediate_output_k112; assert_in_epsilon(691.6294054080001, worksheet.intermediate_output_k112, 0.002); end
  def test_intermediate_output_l112; assert_in_epsilon(1031.9414094, worksheet.intermediate_output_l112, 0.002); end
  def test_intermediate_output_m112; assert_in_epsilon(1289.9267617500002, worksheet.intermediate_output_m112, 0.002); end
  def test_intermediate_output_n112; assert_in_epsilon(1547.9121141000003, worksheet.intermediate_output_n112, 0.002); end
  def test_intermediate_output_o112; assert_in_epsilon(1805.8974664500001, worksheet.intermediate_output_o112, 0.002); end
  def test_intermediate_output_p112; assert_in_epsilon(2063.8828188, worksheet.intermediate_output_p112, 0.002); end
  def test_intermediate_output_c113; assert_equal("RE.d", worksheet.intermediate_output_c113); end
  def test_intermediate_output_d113; assert_equal("Decentralised PV", worksheet.intermediate_output_d113); end
  def test_intermediate_output_g113; assert_in_delta(0.0, (worksheet.intermediate_output_g113||0), 0.002); end
  def test_intermediate_output_h113; assert_in_delta(0.08645917808219179, worksheet.intermediate_output_h113, 0.002); end
  def test_intermediate_output_i113; assert_in_epsilon(1.2036972173562765, worksheet.intermediate_output_i113, 0.002); end
  def test_intermediate_output_j113; assert_in_epsilon(6.397813967546769, worksheet.intermediate_output_j113, 0.002); end
  def test_intermediate_output_k113; assert_in_epsilon(17.62293769445492, worksheet.intermediate_output_k113, 0.002); end
  def test_intermediate_output_l113; assert_in_epsilon(32.58217859374228, worksheet.intermediate_output_l113, 0.002); end
  def test_intermediate_output_m113; assert_in_epsilon(47.300338990014545, worksheet.intermediate_output_m113, 0.002); end
  def test_intermediate_output_n113; assert_in_epsilon(59.299624517661975, worksheet.intermediate_output_n113, 0.002); end
  def test_intermediate_output_o113; assert_in_epsilon(68.01517001090049, worksheet.intermediate_output_o113, 0.002); end
  def test_intermediate_output_p113; assert_in_epsilon(73.91405360381108, worksheet.intermediate_output_p113, 0.002); end
  def test_intermediate_output_c114; assert_equal("Solar", worksheet.intermediate_output_c114); end
  def test_intermediate_output_d114; assert_equal("CMJ Solar", worksheet.intermediate_output_d114); end
  def test_intermediate_output_g114; assert_in_delta(0.0, (worksheet.intermediate_output_g114||0), 0.002); end
  def test_intermediate_output_h114; assert_in_delta(0.08645917808219179, worksheet.intermediate_output_h114, 0.002); end
  def test_intermediate_output_i114; assert_in_epsilon(14.197223441356277, worksheet.intermediate_output_i114, 0.002); end
  def test_intermediate_output_j114; assert_in_epsilon(963.8735961835469, worksheet.intermediate_output_j114, 0.002); end
  def test_intermediate_output_k114; assert_in_epsilon(1919.5809759024553, worksheet.intermediate_output_k114, 0.002); end
  def test_intermediate_output_l114; assert_in_epsilon(2879.022472793743, worksheet.intermediate_output_l114, 0.002); end
  def test_intermediate_output_m114; assert_in_epsilon(3605.3507067400146, worksheet.intermediate_output_m114, 0.002); end
  def test_intermediate_output_n114; assert_in_epsilon(4328.960065817662, worksheet.intermediate_output_n114, 0.002); end
  def test_intermediate_output_o114; assert_in_epsilon(5049.285684860902, worksheet.intermediate_output_o114, 0.002); end
  def test_intermediate_output_p114; assert_in_epsilon(5766.794642003812, worksheet.intermediate_output_p114, 0.002); end
  def test_intermediate_output_c115; assert_equal("ElcDSB.i", worksheet.intermediate_output_c115); end
  def test_intermediate_output_d115; assert_equal("Electricity imports and exports", worksheet.intermediate_output_d115); end
  def test_intermediate_output_g115; assert_in_delta(0.0, (worksheet.intermediate_output_g115||0), 0.002); end
  def test_intermediate_output_h115; assert_in_delta(0.0, (worksheet.intermediate_output_h115||0), 0.002); end
  def test_intermediate_output_i115; assert_in_delta(0.0, (worksheet.intermediate_output_i115||0), 0.002); end
  def test_intermediate_output_j115; assert_in_delta(0.0, (worksheet.intermediate_output_j115||0), 0.002); end
  def test_intermediate_output_k115; assert_in_delta(0.0, (worksheet.intermediate_output_k115||0), 0.002); end
  def test_intermediate_output_l115; assert_in_delta(0.0, (worksheet.intermediate_output_l115||0), 0.002); end
  def test_intermediate_output_m115; assert_in_delta(0.0, (worksheet.intermediate_output_m115||0), 0.002); end
  def test_intermediate_output_n115; assert_in_delta(0.0, (worksheet.intermediate_output_n115||0), 0.002); end
  def test_intermediate_output_o115; assert_in_delta(0.0, (worksheet.intermediate_output_o115||0), 0.002); end
  def test_intermediate_output_p115; assert_in_delta(0.0, (worksheet.intermediate_output_p115||0), 0.002); end
  def test_intermediate_output_d118; assert_equal("Total generation supplied to grid", worksheet.intermediate_output_d118); end
  def test_intermediate_output_g118; assert_in_epsilon(918.2730837223438, worksheet.intermediate_output_g118, 0.002); end
  def test_intermediate_output_h118; assert_in_epsilon(995.6324348486651, worksheet.intermediate_output_h118, 0.002); end
  def test_intermediate_output_i118; assert_in_epsilon(1082.384462437761, worksheet.intermediate_output_i118, 0.002); end
  def test_intermediate_output_j118; assert_in_epsilon(1216.598497959354, worksheet.intermediate_output_j118, 0.002); end
  def test_intermediate_output_k118; assert_in_epsilon(2727.643808544055, worksheet.intermediate_output_k118, 0.002); end
  def test_intermediate_output_l118; assert_in_epsilon(4308.000714262543, worksheet.intermediate_output_l118, 0.002); end
  def test_intermediate_output_m118; assert_in_epsilon(5220.911932789615, worksheet.intermediate_output_m118, 0.002); end
  def test_intermediate_output_n118; assert_in_epsilon(6175.284916448063, worksheet.intermediate_output_n118, 0.002); end
  def test_intermediate_output_o118; assert_in_epsilon(7126.374160072101, worksheet.intermediate_output_o118, 0.002); end
  def test_intermediate_output_p118; assert_in_epsilon(8074.646741795813, worksheet.intermediate_output_p118, 0.002); end
  def test_intermediate_output_d120; assert_equal("Electricity exports", worksheet.intermediate_output_d120); end
  def test_intermediate_output_g120; assert_in_epsilon(-24.818579999999994, worksheet.intermediate_output_g120, 0.002); end
  def test_intermediate_output_h120; assert_in_epsilon(-26.598455999999988, worksheet.intermediate_output_h120, 0.002); end
  def test_intermediate_output_i120; assert_in_epsilon(-22.096150820698778, worksheet.intermediate_output_i120, 0.002); end
  def test_intermediate_output_j120; assert_in_epsilon(-20.67795447899648, worksheet.intermediate_output_j120, 0.002); end
  def test_intermediate_output_k120; assert_in_epsilon(-1351.1518812292056, worksheet.intermediate_output_k120, 0.002); end
  def test_intermediate_output_l120; assert_in_epsilon(-3020.2690087558085, worksheet.intermediate_output_l120, 0.002); end
  def test_intermediate_output_m120; assert_in_epsilon(-3862.5298164992205, worksheet.intermediate_output_m120, 0.002); end
  def test_intermediate_output_n120; assert_in_epsilon(-4765.065936465736, worksheet.intermediate_output_n120, 0.002); end
  def test_intermediate_output_o120; assert_in_epsilon(-5637.665696029847, worksheet.intermediate_output_o120, 0.002); end
  def test_intermediate_output_p120; assert_in_epsilon(-6523.82929710827, worksheet.intermediate_output_p120, 0.002); end
  def test_intermediate_output_q120; assert_equal("REFERENCED", worksheet.intermediate_output_q120); end
  def test_intermediate_output_d121; assert_equal("Electricity total", worksheet.intermediate_output_d121); end
  def test_intermediate_output_g121; assert_in_epsilon(893.4545037223438, worksheet.intermediate_output_g121, 0.002); end
  def test_intermediate_output_h121; assert_in_epsilon(969.0339788486651, worksheet.intermediate_output_h121, 0.002); end
  def test_intermediate_output_i121; assert_in_epsilon(1060.2883116170622, worksheet.intermediate_output_i121, 0.002); end
  def test_intermediate_output_j121; assert_in_epsilon(1195.9205434803575, worksheet.intermediate_output_j121, 0.002); end
  def test_intermediate_output_k121; assert_in_epsilon(1376.4919273148494, worksheet.intermediate_output_k121, 0.002); end
  def test_intermediate_output_l121; assert_in_epsilon(1287.7317055067342, worksheet.intermediate_output_l121, 0.002); end
  def test_intermediate_output_m121; assert_in_epsilon(1358.3821162903946, worksheet.intermediate_output_m121, 0.002); end
  def test_intermediate_output_n121; assert_in_epsilon(1410.2189799823273, worksheet.intermediate_output_n121, 0.002); end
  def test_intermediate_output_o121; assert_in_epsilon(1488.7084640422545, worksheet.intermediate_output_o121, 0.002); end
  def test_intermediate_output_p121; assert_in_epsilon(1550.8174446875428, worksheet.intermediate_output_p121, 0.002); end
  def test_intermediate_output_d122; assert_equal("GWh", worksheet.intermediate_output_d122); end
  def test_intermediate_output_g122; assert_in_epsilon(248181.80658953995, worksheet.intermediate_output_g122, 0.002); end
  def test_intermediate_output_h122; assert_in_epsilon(269176.1052357403, worksheet.intermediate_output_h122, 0.002); end
  def test_intermediate_output_i122; assert_in_epsilon(294524.5310047395, worksheet.intermediate_output_i122, 0.002); end
  def test_intermediate_output_j122; assert_in_epsilon(332200.150966766, worksheet.intermediate_output_j122, 0.002); end
  def test_intermediate_output_k122; assert_in_epsilon(382358.8686985693, worksheet.intermediate_output_k122, 0.002); end
  def test_intermediate_output_l122; assert_in_epsilon(357703.2515296484, worksheet.intermediate_output_l122, 0.002); end
  def test_intermediate_output_m122; assert_in_epsilon(377328.3656362207, worksheet.intermediate_output_m122, 0.002); end
  def test_intermediate_output_n122; assert_in_epsilon(391727.49443953537, worksheet.intermediate_output_n122, 0.002); end
  def test_intermediate_output_o122; assert_in_epsilon(413530.12890062627, worksheet.intermediate_output_o122, 0.002); end
  def test_intermediate_output_p122; assert_in_epsilon(430782.62352431746, worksheet.intermediate_output_p122, 0.002); end
  def test_intermediate_output_d123; assert_equal("Load Factor (fixed assumption)", worksheet.intermediate_output_d123); end
  def test_intermediate_output_g123; assert_in_delta(0.76, worksheet.intermediate_output_g123, 0.002); end
  def test_intermediate_output_h123; assert_in_delta(0.76, worksheet.intermediate_output_h123, 0.002); end
  def test_intermediate_output_i123; assert_in_delta(0.76, worksheet.intermediate_output_i123, 0.002); end
  def test_intermediate_output_j123; assert_in_delta(0.76, worksheet.intermediate_output_j123, 0.002); end
  def test_intermediate_output_k123; assert_in_delta(0.76, worksheet.intermediate_output_k123, 0.002); end
  def test_intermediate_output_l123; assert_in_delta(0.76, worksheet.intermediate_output_l123, 0.002); end
  def test_intermediate_output_m123; assert_in_delta(0.76, worksheet.intermediate_output_m123, 0.002); end
  def test_intermediate_output_n123; assert_in_delta(0.76, worksheet.intermediate_output_n123, 0.002); end
  def test_intermediate_output_o123; assert_in_delta(0.76, worksheet.intermediate_output_o123, 0.002); end
  def test_intermediate_output_p123; assert_in_delta(0.76, worksheet.intermediate_output_p123, 0.002); end
  def test_intermediate_output_d124; assert_equal("Peak demand Upstream MW", worksheet.intermediate_output_d124); end
  def test_intermediate_output_g124; assert_in_epsilon(37277.96902630677, worksheet.intermediate_output_g124, 0.002); end
  def test_intermediate_output_h124; assert_in_epsilon(40431.402492751185, worksheet.intermediate_output_h124, 0.002); end
  def test_intermediate_output_i124; assert_in_epsilon(44238.84447920264, worksheet.intermediate_output_i124, 0.002); end
  def test_intermediate_output_j124; assert_in_epsilon(49897.88376693793, worksheet.intermediate_output_j124, 0.002); end
  def test_intermediate_output_k124; assert_in_epsilon(57431.93774011195, worksheet.intermediate_output_k124, 0.002); end
  def test_intermediate_output_l124; assert_in_epsilon(53728.55856910123, worksheet.intermediate_output_l124, 0.002); end
  def test_intermediate_output_m124; assert_in_epsilon(56676.33466057148, worksheet.intermediate_output_m124, 0.002); end
  def test_intermediate_output_n124; assert_in_epsilon(58839.1454036793, worksheet.intermediate_output_n124, 0.002); end
  def test_intermediate_output_o124; assert_in_epsilon(62113.99436743365, worksheet.intermediate_output_o124, 0.002); end
  def test_intermediate_output_p124; assert_in_epsilon(64705.39286294121, worksheet.intermediate_output_p124, 0.002); end
  def test_intermediate_output_d126; assert_equal("MW installed capacity", worksheet.intermediate_output_d126); end
  def test_intermediate_output_g126; assert_in_epsilon(2006.0, worksheet.intermediate_output_g126, 0.002); end
  def test_intermediate_output_h126; assert_in_epsilon(2010.0, worksheet.intermediate_output_h126, 0.002); end
  def test_intermediate_output_i126; assert_in_epsilon(2015.0, worksheet.intermediate_output_i126, 0.002); end
  def test_intermediate_output_j126; assert_in_epsilon(2020.0, worksheet.intermediate_output_j126, 0.002); end
  def test_intermediate_output_k126; assert_in_epsilon(2025.0, worksheet.intermediate_output_k126, 0.002); end
  def test_intermediate_output_l126; assert_in_epsilon(2030.0, worksheet.intermediate_output_l126, 0.002); end
  def test_intermediate_output_m126; assert_in_epsilon(2035.0, worksheet.intermediate_output_m126, 0.002); end
  def test_intermediate_output_n126; assert_in_epsilon(2040.0, worksheet.intermediate_output_n126, 0.002); end
  def test_intermediate_output_o126; assert_in_epsilon(2045.0, worksheet.intermediate_output_o126, 0.002); end
  def test_intermediate_output_p126; assert_in_epsilon(2050.0, worksheet.intermediate_output_p126, 0.002); end
  def test_intermediate_output_c128; assert_equal("Therm.b", worksheet.intermediate_output_c128); end
  def test_intermediate_output_d128; assert_equal("CCGT", worksheet.intermediate_output_d128); end
  def test_intermediate_output_g128; assert_in_epsilon(342.0, worksheet.intermediate_output_g128, 0.002); end
  def test_intermediate_output_h128; assert_in_epsilon(2460.0, worksheet.intermediate_output_h128, 0.002); end
  def test_intermediate_output_i128; assert_in_epsilon(3620.0, worksheet.intermediate_output_i128, 0.002); end
  def test_intermediate_output_j128; assert_in_epsilon(4425.0, worksheet.intermediate_output_j128, 0.002); end
  def test_intermediate_output_k128; assert_in_epsilon(7700.000599999999, worksheet.intermediate_output_k128, 0.002); end
  def test_intermediate_output_l128; assert_in_epsilon(19957.0, worksheet.intermediate_output_l128, 0.002); end
  def test_intermediate_output_m128; assert_in_epsilon(22090.0, worksheet.intermediate_output_m128, 0.002); end
  def test_intermediate_output_n128; assert_in_epsilon(22123.0, worksheet.intermediate_output_n128, 0.002); end
  def test_intermediate_output_o128; assert_in_epsilon(24256.0, worksheet.intermediate_output_o128, 0.002); end
  def test_intermediate_output_p128; assert_in_epsilon(26249.0, worksheet.intermediate_output_p128, 0.002); end
  def test_intermediate_output_c129; assert_equal("Therm.a.Solid", worksheet.intermediate_output_c129); end
  def test_intermediate_output_d129; assert_equal("Coal and or biomass", worksheet.intermediate_output_d129); end
  def test_intermediate_output_g129; assert_in_epsilon(33800.0, worksheet.intermediate_output_g129, 0.002); end
  def test_intermediate_output_h129; assert_in_epsilon(35687.0, worksheet.intermediate_output_h129, 0.002); end
  def test_intermediate_output_i129; assert_in_epsilon(39603.66675, worksheet.intermediate_output_i129, 0.002); end
  def test_intermediate_output_j129; assert_in_epsilon(44897.0, worksheet.intermediate_output_j129, 0.002); end
  def test_intermediate_output_k129; assert_in_epsilon(40907.0, worksheet.intermediate_output_k129, 0.002); end
  def test_intermediate_output_l129; assert_in_epsilon(31517.0, worksheet.intermediate_output_l129, 0.002); end
  def test_intermediate_output_m129; assert_in_epsilon(26137.0, worksheet.intermediate_output_m129, 0.002); end
  def test_intermediate_output_n129; assert_in_epsilon(17217.0, worksheet.intermediate_output_n129, 0.002); end
  def test_intermediate_output_o129; assert_in_epsilon(12847.0, worksheet.intermediate_output_o129, 0.002); end
  def test_intermediate_output_p129; assert_in_epsilon(9452.333895, worksheet.intermediate_output_p129, 0.002); end
  def test_intermediate_output_c130; assert_equal("Nuke", worksheet.intermediate_output_c130); end
  def test_intermediate_output_d130; assert_equal("Nuclear power", worksheet.intermediate_output_d130); end
  def test_intermediate_output_g130; assert_in_epsilon(1860.0, worksheet.intermediate_output_g130, 0.002); end
  def test_intermediate_output_h130; assert_in_epsilon(1860.0, worksheet.intermediate_output_h130, 0.002); end
  def test_intermediate_output_i130; assert_in_epsilon(1860.0, worksheet.intermediate_output_i130, 0.002); end
  def test_intermediate_output_j130; assert_in_epsilon(1860.0, worksheet.intermediate_output_j130, 0.002); end
  def test_intermediate_output_k130; assert_in_epsilon(20960.0, worksheet.intermediate_output_k130, 0.002); end
  def test_intermediate_output_l130; assert_in_epsilon(40060.0, worksheet.intermediate_output_l130, 0.002); end
  def test_intermediate_output_m130; assert_in_epsilon(45060.0, worksheet.intermediate_output_m130, 0.002); end
  def test_intermediate_output_n130; assert_in_epsilon(50060.0, worksheet.intermediate_output_n130, 0.002); end
  def test_intermediate_output_o130; assert_in_epsilon(55060.0, worksheet.intermediate_output_o130, 0.002); end
  def test_intermediate_output_p130; assert_in_epsilon(60060.0, worksheet.intermediate_output_p130, 0.002); end
  def test_intermediate_output_c131; assert_equal("RE.a", worksheet.intermediate_output_c131); end
  def test_intermediate_output_d131; assert_equal("Onshore wind", worksheet.intermediate_output_d131); end
  def test_intermediate_output_g131; assert_in_delta(0.0, (worksheet.intermediate_output_g131||0), 0.002); end
  def test_intermediate_output_h131; assert_in_delta(0.0, (worksheet.intermediate_output_h131||0), 0.002); end
  def test_intermediate_output_i131; assert_in_delta(0.0, (worksheet.intermediate_output_i131||0), 0.002); end
  def test_intermediate_output_j131; assert_in_delta(0.0, (worksheet.intermediate_output_j131||0), 0.002); end
  def test_intermediate_output_k131; assert_in_delta(0.0, (worksheet.intermediate_output_k131||0), 0.002); end
  def test_intermediate_output_l131; assert_in_delta(0.0, (worksheet.intermediate_output_l131||0), 0.002); end
  def test_intermediate_output_m131; assert_in_delta(0.0, (worksheet.intermediate_output_m131||0), 0.002); end
  def test_intermediate_output_n131; assert_in_delta(0.0, (worksheet.intermediate_output_n131||0), 0.002); end
  def test_intermediate_output_o131; assert_in_delta(0.0, (worksheet.intermediate_output_o131||0), 0.002); end
  def test_intermediate_output_p131; assert_in_delta(0.0, (worksheet.intermediate_output_p131||0), 0.002); end
  def test_intermediate_output_c132; assert_equal("RE.b", worksheet.intermediate_output_c132); end
  def test_intermediate_output_d132; assert_equal("Hydroelectric power stations", worksheet.intermediate_output_d132); end
  def test_intermediate_output_g132; assert_in_delta(0.0, (worksheet.intermediate_output_g132||0), 0.002); end
  def test_intermediate_output_h132; assert_in_delta(0.0, (worksheet.intermediate_output_h132||0), 0.002); end
  def test_intermediate_output_i132; assert_in_delta(0.0, (worksheet.intermediate_output_i132||0), 0.002); end
  def test_intermediate_output_j132; assert_in_delta(0.0, (worksheet.intermediate_output_j132||0), 0.002); end
  def test_intermediate_output_k132; assert_in_delta(0.0, (worksheet.intermediate_output_k132||0), 0.002); end
  def test_intermediate_output_l132; assert_in_delta(0.0, (worksheet.intermediate_output_l132||0), 0.002); end
  def test_intermediate_output_m132; assert_in_delta(0.0, (worksheet.intermediate_output_m132||0), 0.002); end
  def test_intermediate_output_n132; assert_in_delta(0.0, (worksheet.intermediate_output_n132||0), 0.002); end
  def test_intermediate_output_o132; assert_in_delta(0.0, (worksheet.intermediate_output_o132||0), 0.002); end
  def test_intermediate_output_p132; assert_in_delta(0.0, (worksheet.intermediate_output_p132||0), 0.002); end
  def test_intermediate_output_c133; assert_equal("RE.c", worksheet.intermediate_output_c133); end
  def test_intermediate_output_d133; assert_equal("CSP", worksheet.intermediate_output_d133); end
  def test_intermediate_output_g133; assert_in_delta(0.0, (worksheet.intermediate_output_g133||0), 0.002); end
  def test_intermediate_output_h133; assert_in_delta(0.0, (worksheet.intermediate_output_h133||0), 0.002); end
  def test_intermediate_output_i133; assert_in_epsilon(63.0, worksheet.intermediate_output_i133, 0.002); end
  def test_intermediate_output_j133; assert_in_epsilon(19208.0, worksheet.intermediate_output_j133, 0.002); end
  def test_intermediate_output_k133; assert_in_epsilon(38353.0, worksheet.intermediate_output_k133, 0.002); end
  def test_intermediate_output_l133; assert_in_epsilon(57498.0, worksheet.intermediate_output_l133, 0.002); end
  def test_intermediate_output_m133; assert_in_epsilon(71872.5, worksheet.intermediate_output_m133, 0.002); end
  def test_intermediate_output_n133; assert_in_epsilon(86247.0, worksheet.intermediate_output_n133, 0.002); end
  def test_intermediate_output_o133; assert_in_epsilon(100621.5, worksheet.intermediate_output_o133, 0.002); end
  def test_intermediate_output_p133; assert_in_epsilon(114996.0, worksheet.intermediate_output_p133, 0.002); end
  def test_intermediate_output_c134; assert_equal("Re.d", worksheet.intermediate_output_c134); end
  def test_intermediate_output_d134; assert_equal("Decentralised PV", worksheet.intermediate_output_d134); end
  def test_intermediate_output_g134; assert_in_delta(0.0, (worksheet.intermediate_output_g134||0), 0.002); end
  def test_intermediate_output_h134; assert_in_epsilon(16.0, worksheet.intermediate_output_h134, 0.002); end
  def test_intermediate_output_i134; assert_in_epsilon(222.75432065051385, worksheet.intermediate_output_i134, 0.002); end
  def test_intermediate_output_j134; assert_in_epsilon(1183.969426397227, worksheet.intermediate_output_j134, 0.002); end
  def test_intermediate_output_k134; assert_in_epsilon(3261.273231665802, worksheet.intermediate_output_k134, 0.002); end
  def test_intermediate_output_l134; assert_in_epsilon(6029.606908873137, worksheet.intermediate_output_l134, 0.002); end
  def test_intermediate_output_m134; assert_in_epsilon(8753.326606005681, worksheet.intermediate_output_m134, 0.002); end
  def test_intermediate_output_n134; assert_in_epsilon(10973.895580878961, worksheet.intermediate_output_n134, 0.002); end
  def test_intermediate_output_o134; assert_in_epsilon(12586.780771150492, worksheet.intermediate_output_o134, 0.002); end
  def test_intermediate_output_p134; assert_in_epsilon(13678.418924324307, worksheet.intermediate_output_p134, 0.002); end
  def test_intermediate_output_c135; assert_equal("RE.e", worksheet.intermediate_output_c135); end
  def test_intermediate_output_d135; assert_equal("Centralised PV", worksheet.intermediate_output_d135); end
  def test_intermediate_output_g135; assert_in_delta(0.0, (worksheet.intermediate_output_g135||0), 0.002); end
  def test_intermediate_output_h135; assert_in_delta(0.0, (worksheet.intermediate_output_h135||0), 0.002); end
  def test_intermediate_output_i135; assert_in_epsilon(1484.0, worksheet.intermediate_output_i135, 0.002); end
  def test_intermediate_output_j135; assert_in_epsilon(47372.666666666664, worksheet.intermediate_output_j135, 0.002); end
  def test_intermediate_output_k135; assert_in_epsilon(93261.33333333333, worksheet.intermediate_output_k135, 0.002); end
  def test_intermediate_output_l135; assert_in_epsilon(139150.0, worksheet.intermediate_output_l135, 0.002); end
  def test_intermediate_output_m135; assert_in_epsilon(173937.5, worksheet.intermediate_output_m135, 0.002); end
  def test_intermediate_output_n135; assert_in_epsilon(208725.0, worksheet.intermediate_output_n135, 0.002); end
  def test_intermediate_output_o135; assert_in_epsilon(243512.5, worksheet.intermediate_output_o135, 0.002); end
  def test_intermediate_output_p135; assert_in_epsilon(278300.0, worksheet.intermediate_output_p135, 0.002); end
  def test_intermediate_output_c138; assert_equal("ElcDSB.i", worksheet.intermediate_output_c138); end
  def test_intermediate_output_d138; assert_equal("Electricity imports and exports", worksheet.intermediate_output_d138); end
  def test_intermediate_output_g138; assert_in_epsilon(1500.0, worksheet.intermediate_output_g138, 0.002); end
  def test_intermediate_output_h138; assert_in_epsilon(1500.0, worksheet.intermediate_output_h138, 0.002); end
  def test_intermediate_output_i138; assert_in_epsilon(1500.0, worksheet.intermediate_output_i138, 0.002); end
  def test_intermediate_output_j138; assert_in_epsilon(1500.0, worksheet.intermediate_output_j138, 0.002); end
  def test_intermediate_output_k138; assert_in_epsilon(4109.0, worksheet.intermediate_output_k138, 0.002); end
  def test_intermediate_output_l138; assert_in_epsilon(6366.4, worksheet.intermediate_output_l138, 0.002); end
  def test_intermediate_output_m138; assert_in_epsilon(8623.8, worksheet.intermediate_output_m138, 0.002); end
  def test_intermediate_output_n138; assert_in_epsilon(10881.199999999999, worksheet.intermediate_output_n138, 0.002); end
  def test_intermediate_output_o138; assert_in_epsilon(13138.599999999999, worksheet.intermediate_output_o138, 0.002); end
  def test_intermediate_output_p138; assert_in_epsilon(15396.0, worksheet.intermediate_output_p138, 0.002); end
  def test_intermediate_output_c139; assert_equal("ElcDSB.s", worksheet.intermediate_output_c139); end
  def test_intermediate_output_d139; assert_equal("Electricity storage scheme", worksheet.intermediate_output_d139); end
  def test_intermediate_output_g139; assert_in_epsilon(1580.0, worksheet.intermediate_output_g139, 0.002); end
  def test_intermediate_output_h139; assert_in_epsilon(1580.0, worksheet.intermediate_output_h139, 0.002); end
  def test_intermediate_output_i139; assert_in_epsilon(2912.0, worksheet.intermediate_output_i139, 0.002); end
  def test_intermediate_output_j139; assert_in_epsilon(2912.0, worksheet.intermediate_output_j139, 0.002); end
  def test_intermediate_output_k139; assert_in_epsilon(2912.0, worksheet.intermediate_output_k139, 0.002); end
  def test_intermediate_output_l139; assert_in_epsilon(2912.0, worksheet.intermediate_output_l139, 0.002); end
  def test_intermediate_output_m139; assert_in_epsilon(2912.0, worksheet.intermediate_output_m139, 0.002); end
  def test_intermediate_output_n139; assert_in_epsilon(2912.0, worksheet.intermediate_output_n139, 0.002); end
  def test_intermediate_output_o139; assert_in_epsilon(2912.0, worksheet.intermediate_output_o139, 0.002); end
  def test_intermediate_output_p139; assert_in_epsilon(2912.0, worksheet.intermediate_output_p139, 0.002); end
  def test_intermediate_output_g140; assert_in_delta(0.0, (worksheet.intermediate_output_g140||0), 0.002); end
  def test_intermediate_output_h140; assert_in_delta(0.0, (worksheet.intermediate_output_h140||0), 0.002); end
  def test_intermediate_output_i140; assert_in_delta(0.0, (worksheet.intermediate_output_i140||0), 0.002); end
  def test_intermediate_output_j140; assert_in_delta(0.0, (worksheet.intermediate_output_j140||0), 0.002); end
  def test_intermediate_output_k140; assert_in_delta(0.0, (worksheet.intermediate_output_k140||0), 0.002); end
  def test_intermediate_output_l140; assert_in_delta(0.0, (worksheet.intermediate_output_l140||0), 0.002); end
  def test_intermediate_output_m140; assert_in_delta(0.0, (worksheet.intermediate_output_m140||0), 0.002); end
  def test_intermediate_output_n140; assert_in_delta(0.0, (worksheet.intermediate_output_n140||0), 0.002); end
  def test_intermediate_output_o140; assert_in_delta(0.0, (worksheet.intermediate_output_o140||0), 0.002); end
  def test_intermediate_output_p140; assert_in_delta(0.0, (worksheet.intermediate_output_p140||0), 0.002); end
  def test_intermediate_output_d141; assert_equal("Total generation", worksheet.intermediate_output_d141); end
  def test_intermediate_output_g141; assert_in_epsilon(39082.0, worksheet.intermediate_output_g141, 0.002); end
  def test_intermediate_output_h141; assert_in_epsilon(43103.0, worksheet.intermediate_output_h141, 0.002); end
  def test_intermediate_output_i141; assert_in_epsilon(51265.42107065051, worksheet.intermediate_output_i141, 0.002); end
  def test_intermediate_output_j141; assert_in_epsilon(123358.63609306389, worksheet.intermediate_output_j141, 0.002); end
  def test_intermediate_output_k141; assert_in_epsilon(211463.60716499912, worksheet.intermediate_output_k141, 0.002); end
  def test_intermediate_output_l141; assert_in_epsilon(303490.00690887315, worksheet.intermediate_output_l141, 0.002); end
  def test_intermediate_output_m141; assert_in_epsilon(359386.12660600565, worksheet.intermediate_output_m141, 0.002); end
  def test_intermediate_output_n141; assert_in_epsilon(409139.09558087896, worksheet.intermediate_output_n141, 0.002); end
  def test_intermediate_output_o141; assert_in_epsilon(464934.38077115046, worksheet.intermediate_output_o141, 0.002); end
  def test_intermediate_output_p141; assert_in_epsilon(521043.75281932426, worksheet.intermediate_output_p141, 0.002); end
  def test_intermediate_output_d142; assert_equal("reserve margin", worksheet.intermediate_output_d142); end
  def test_intermediate_output_g142; assert_in_delta(0.04839402523297709, worksheet.intermediate_output_g142, 0.002); end
  def test_intermediate_output_h142; assert_in_delta(0.06568155798515596, worksheet.intermediate_output_h142, 0.002); end
  def test_intermediate_output_i142; assert_in_delta(0.12025228808357058, worksheet.intermediate_output_i142, 0.002); end
  def test_intermediate_output_j142; assert_in_delta(0.4991016522741474, worksheet.intermediate_output_j142, 0.002); end
  def test_intermediate_output_k142; assert_in_epsilon(1.0013428960054438, worksheet.intermediate_output_k142, 0.002); end
  def test_intermediate_output_l142; assert_in_epsilon(1.9464851508419732, worksheet.intermediate_output_l142, 0.002); end
  def test_intermediate_output_m142; assert_in_epsilon(2.1176204505497624, worksheet.intermediate_output_m142, 0.002); end
  def test_intermediate_output_n142; assert_in_epsilon(2.2196286791778257, worksheet.intermediate_output_n142, 0.002); end
  def test_intermediate_output_o142; assert_in_epsilon(2.362126395617735, worksheet.intermediate_output_o142, 0.002); end
  def test_intermediate_output_p142; assert_in_epsilon(2.5401273952575405, worksheet.intermediate_output_p142, 0.002); end
  def test_intermediate_output_b146; assert_equal("Emissions", worksheet.intermediate_output_b146); end
  def test_intermediate_output_g148; assert_in_delta(0.0, (worksheet.intermediate_output_g148||0), 0.002); end
  def test_intermediate_output_c150; assert_equal("Emissions by sector", worksheet.intermediate_output_c150); end
  def test_intermediate_output_g150; assert_in_epsilon(2006.0, worksheet.intermediate_output_g150, 0.002); end
  def test_intermediate_output_h150; assert_in_epsilon(2010.0, worksheet.intermediate_output_h150, 0.002); end
  def test_intermediate_output_i150; assert_in_epsilon(2015.0, worksheet.intermediate_output_i150, 0.002); end
  def test_intermediate_output_j150; assert_in_epsilon(2020.0, worksheet.intermediate_output_j150, 0.002); end
  def test_intermediate_output_k150; assert_in_epsilon(2025.0, worksheet.intermediate_output_k150, 0.002); end
  def test_intermediate_output_l150; assert_in_epsilon(2030.0, worksheet.intermediate_output_l150, 0.002); end
  def test_intermediate_output_m150; assert_in_epsilon(2035.0, worksheet.intermediate_output_m150, 0.002); end
  def test_intermediate_output_n150; assert_in_epsilon(2040.0, worksheet.intermediate_output_n150, 0.002); end
  def test_intermediate_output_o150; assert_in_epsilon(2045.0, worksheet.intermediate_output_o150, 0.002); end
  def test_intermediate_output_p150; assert_in_epsilon(2050.0, worksheet.intermediate_output_p150, 0.002); end
  def test_intermediate_output_c151; assert_equal("Therm", worksheet.intermediate_output_c151); end
  def test_intermediate_output_d151; assert_equal("Coal and gas power", worksheet.intermediate_output_d151); end
  def test_intermediate_output_g151; assert_in_epsilon(247.2925466016981, worksheet.intermediate_output_g151, 0.002); end
  def test_intermediate_output_h151; assert_in_epsilon(264.4606560767711, worksheet.intermediate_output_h151, 0.002); end
  def test_intermediate_output_i151; assert_in_epsilon(278.7550310470365, worksheet.intermediate_output_i151, 0.002); end
  def test_intermediate_output_j151; assert_in_epsilon(16.81784907616962, worksheet.intermediate_output_j151, 0.002); end
  def test_intermediate_output_k151; assert_in_delta(0.5717790173249838, worksheet.intermediate_output_k151, 0.002); end
  def test_intermediate_output_l151; assert_in_epsilon(36.18785229146156, worksheet.intermediate_output_l151, 0.002); end
  def test_intermediate_output_m151; assert_in_epsilon(45.04620735350089, worksheet.intermediate_output_m151, 0.002); end
  def test_intermediate_output_n151; assert_in_epsilon(53.83625050364407, worksheet.intermediate_output_n151, 0.002); end
  def test_intermediate_output_o151; assert_in_epsilon(62.694605565683396, worksheet.intermediate_output_o151, 0.002); end
  def test_intermediate_output_p151; assert_in_epsilon(71.16562378715557, worksheet.intermediate_output_p151, 0.002); end
  def test_intermediate_output_q151; assert_in_delta(0.5659902850540901, worksheet.intermediate_output_q151, 0.002); end
  def test_intermediate_output_c152; assert_equal("Nuke", worksheet.intermediate_output_c152); end
  def test_intermediate_output_g152; assert_in_delta(0.0, (worksheet.intermediate_output_g152||0), 0.002); end
  def test_intermediate_output_h152; assert_in_delta(0.0, (worksheet.intermediate_output_h152||0), 0.002); end
  def test_intermediate_output_i152; assert_in_delta(0.0, (worksheet.intermediate_output_i152||0), 0.002); end
  def test_intermediate_output_j152; assert_in_delta(0.0, (worksheet.intermediate_output_j152||0), 0.002); end
  def test_intermediate_output_k152; assert_in_delta(0.0, (worksheet.intermediate_output_k152||0), 0.002); end
  def test_intermediate_output_l152; assert_in_delta(0.0, (worksheet.intermediate_output_l152||0), 0.002); end
  def test_intermediate_output_m152; assert_in_delta(0.0, (worksheet.intermediate_output_m152||0), 0.002); end
  def test_intermediate_output_n152; assert_in_delta(0.0, (worksheet.intermediate_output_n152||0), 0.002); end
  def test_intermediate_output_o152; assert_in_delta(0.0, (worksheet.intermediate_output_o152||0), 0.002); end
  def test_intermediate_output_p152; assert_in_delta(0.0, (worksheet.intermediate_output_p152||0), 0.002); end
  def test_intermediate_output_q152; assert_in_delta(0.0, (worksheet.intermediate_output_q152||0), 0.002); end
  def test_intermediate_output_c153; assert_equal("RE", worksheet.intermediate_output_c153); end
  def test_intermediate_output_g153; assert_in_delta(0.0, (worksheet.intermediate_output_g153||0), 0.002); end
  def test_intermediate_output_h153; assert_in_delta(0.0, (worksheet.intermediate_output_h153||0), 0.002); end
  def test_intermediate_output_i153; assert_in_delta(0.0, (worksheet.intermediate_output_i153||0), 0.002); end
  def test_intermediate_output_j153; assert_in_delta(0.0, (worksheet.intermediate_output_j153||0), 0.002); end
  def test_intermediate_output_k153; assert_in_delta(0.0, (worksheet.intermediate_output_k153||0), 0.002); end
  def test_intermediate_output_l153; assert_in_delta(0.0, (worksheet.intermediate_output_l153||0), 0.002); end
  def test_intermediate_output_m153; assert_in_delta(0.0, (worksheet.intermediate_output_m153||0), 0.002); end
  def test_intermediate_output_n153; assert_in_delta(0.0, (worksheet.intermediate_output_n153||0), 0.002); end
  def test_intermediate_output_o153; assert_in_delta(0.0, (worksheet.intermediate_output_o153||0), 0.002); end
  def test_intermediate_output_p153; assert_in_delta(0.0, (worksheet.intermediate_output_p153||0), 0.002); end
  def test_intermediate_output_q153; assert_in_delta(0.0, (worksheet.intermediate_output_q153||0), 0.002); end
  def test_intermediate_output_c156; assert_equal("AGL", worksheet.intermediate_output_c156); end
  def test_intermediate_output_d156; assert_equal("Land, agricultre and forestry", worksheet.intermediate_output_d156); end
  def test_intermediate_output_g156; assert_in_epsilon(2.754249521322907, worksheet.intermediate_output_g156, 0.002); end
  def test_intermediate_output_h156; assert_in_epsilon(7.462271713415902, worksheet.intermediate_output_h156, 0.002); end
  def test_intermediate_output_i156; assert_in_epsilon(11.93167529927701, worksheet.intermediate_output_i156, 0.002); end
  def test_intermediate_output_j156; assert_in_epsilon(15.151113330374216, worksheet.intermediate_output_j156, 0.002); end
  def test_intermediate_output_k156; assert_in_epsilon(17.298748210355477, worksheet.intermediate_output_k156, 0.002); end
  def test_intermediate_output_l156; assert_in_epsilon(18.526990249584376, worksheet.intermediate_output_l156, 0.002); end
  def test_intermediate_output_m156; assert_in_epsilon(18.94389320622358, worksheet.intermediate_output_m156, 0.002); end
  def test_intermediate_output_n156; assert_in_epsilon(18.621142723907266, worksheet.intermediate_output_n156, 0.002); end
  def test_intermediate_output_o156; assert_in_epsilon(17.638369354933, worksheet.intermediate_output_o156, 0.002); end
  def test_intermediate_output_p156; assert_in_epsilon(15.948143735737066, worksheet.intermediate_output_p156, 0.002); end
  def test_intermediate_output_q156; assert_in_delta(0.006303782678070163, worksheet.intermediate_output_q156, 0.002); end
  def test_intermediate_output_c157; assert_equal("WST", worksheet.intermediate_output_c157); end
  def test_intermediate_output_d157; assert_equal("Waste emissions", worksheet.intermediate_output_d157); end
  def test_intermediate_output_g157; assert_in_epsilon(2.754249521322907, worksheet.intermediate_output_g157, 0.002); end
  def test_intermediate_output_h157; assert_in_epsilon(7.462271713415902, worksheet.intermediate_output_h157, 0.002); end
  def test_intermediate_output_i157; assert_in_epsilon(11.93167529927701, worksheet.intermediate_output_i157, 0.002); end
  def test_intermediate_output_j157; assert_in_epsilon(15.151113330374216, worksheet.intermediate_output_j157, 0.002); end
  def test_intermediate_output_k157; assert_in_epsilon(17.298748210355477, worksheet.intermediate_output_k157, 0.002); end
  def test_intermediate_output_l157; assert_in_epsilon(18.526990249584376, worksheet.intermediate_output_l157, 0.002); end
  def test_intermediate_output_m157; assert_in_epsilon(18.94389320622358, worksheet.intermediate_output_m157, 0.002); end
  def test_intermediate_output_n157; assert_in_epsilon(18.621142723907266, worksheet.intermediate_output_n157, 0.002); end
  def test_intermediate_output_o157; assert_in_epsilon(17.638369354933, worksheet.intermediate_output_o157, 0.002); end
  def test_intermediate_output_p157; assert_in_epsilon(15.948143735737066, worksheet.intermediate_output_p157, 0.002); end
  def test_intermediate_output_q157; assert_in_delta(0.006303782678070163, worksheet.intermediate_output_q157, 0.002); end
  def test_intermediate_output_c159; assert_equal("H2prod", worksheet.intermediate_output_c159); end
  def test_intermediate_output_g159; assert_in_delta(0.0, (worksheet.intermediate_output_g159||0), 0.002); end
  def test_intermediate_output_h159; assert_in_delta(0.0, (worksheet.intermediate_output_h159||0), 0.002); end
  def test_intermediate_output_i159; assert_in_delta(0.278677818259096, worksheet.intermediate_output_i159, 0.002); end
  def test_intermediate_output_j159; assert_in_delta(0.4837206714150531, worksheet.intermediate_output_j159, 0.002); end
  def test_intermediate_output_k159; assert_in_delta(0.6783770131363333, worksheet.intermediate_output_k159, 0.002); end
  def test_intermediate_output_l159; assert_in_delta(0.8101750645932567, worksheet.intermediate_output_l159, 0.002); end
  def test_intermediate_output_m159; assert_in_delta(0.8171089205332018, worksheet.intermediate_output_m159, 0.002); end
  def test_intermediate_output_n159; assert_in_delta(0.7114056731843422, worksheet.intermediate_output_n159, 0.002); end
  def test_intermediate_output_o159; assert_in_delta(0.4481405592040074, worksheet.intermediate_output_o159, 0.002); end
  def test_intermediate_output_p159; assert_in_delta(0.0, (worksheet.intermediate_output_p159||0), 0.002); end
  def test_intermediate_output_q159; assert_in_delta(0.0, (worksheet.intermediate_output_q159||0), 0.002); end
  def test_intermediate_output_c160; assert_equal("RES", worksheet.intermediate_output_c160); end
  def test_intermediate_output_d160; assert_equal("Household emissions", worksheet.intermediate_output_d160); end
  def test_intermediate_output_g160; assert_in_epsilon(3.400831913585996, worksheet.intermediate_output_g160, 0.002); end
  def test_intermediate_output_h160; assert_in_epsilon(3.230043714769004, worksheet.intermediate_output_h160, 0.002); end
  def test_intermediate_output_i160; assert_in_epsilon(3.3502111996399275, worksheet.intermediate_output_i160, 0.002); end
  def test_intermediate_output_j160; assert_in_epsilon(3.4090553227733853, worksheet.intermediate_output_j160, 0.002); end
  def test_intermediate_output_k160; assert_in_epsilon(3.8708200003439854, worksheet.intermediate_output_k160, 0.002); end
  def test_intermediate_output_l160; assert_in_epsilon(4.3595249474431625, worksheet.intermediate_output_l160, 0.002); end
  def test_intermediate_output_m160; assert_in_epsilon(4.441362328281713, worksheet.intermediate_output_m160, 0.002); end
  def test_intermediate_output_n160; assert_in_epsilon(4.512367290322004, worksheet.intermediate_output_n160, 0.002); end
  def test_intermediate_output_o160; assert_in_epsilon(4.5693784275298, worksheet.intermediate_output_o160, 0.002); end
  def test_intermediate_output_p160; assert_in_epsilon(4.613823190728588, worksheet.intermediate_output_p160, 0.002); end
  def test_intermediate_output_q160; assert_in_delta(0.007783646740036309, worksheet.intermediate_output_q160, 0.002); end
  def test_intermediate_output_c161; assert_equal("COM", worksheet.intermediate_output_c161); end
  def test_intermediate_output_d161; assert_equal("Commercial sector emissions", worksheet.intermediate_output_d161); end
  def test_intermediate_output_g161; assert_in_epsilon(11.310961124883137, worksheet.intermediate_output_g161, 0.002); end
  def test_intermediate_output_h161; assert_in_epsilon(12.385570125756018, worksheet.intermediate_output_h161, 0.002); end
  def test_intermediate_output_i161; assert_in_epsilon(9.909266668761553, worksheet.intermediate_output_i161, 0.002); end
  def test_intermediate_output_j161; assert_in_epsilon(7.172456951274879, worksheet.intermediate_output_j161, 0.002); end
  def test_intermediate_output_k161; assert_in_epsilon(4.009065993123356, worksheet.intermediate_output_k161, 0.002); end
  def test_intermediate_output_l161; assert_in_delta(0.3294745471531804, worksheet.intermediate_output_l161, 0.002); end
  def test_intermediate_output_m161; assert_in_delta(0.3701244003910855, worksheet.intermediate_output_m161, 0.002); end
  def test_intermediate_output_n161; assert_in_delta(0.4157843957900133, worksheet.intermediate_output_n161, 0.002); end
  def test_intermediate_output_o161; assert_in_delta(0.4670714527213382, worksheet.intermediate_output_o161, 0.002); end
  def test_intermediate_output_p161; assert_in_delta(0.5246783874060483, worksheet.intermediate_output_p161, 0.002); end
  def test_intermediate_output_q161; assert_in_delta(0.02588793798795543, worksheet.intermediate_output_q161, 0.002); end
  def test_intermediate_output_c162; assert_equal("IND", worksheet.intermediate_output_c162); end
  def test_intermediate_output_d162; assert_equal("Industry", worksheet.intermediate_output_d162); end
  def test_intermediate_output_g162; assert_in_epsilon(62.22108831436271, worksheet.intermediate_output_g162, 0.002); end
  def test_intermediate_output_h162; assert_in_epsilon(61.330633583966055, worksheet.intermediate_output_h162, 0.002); end
  def test_intermediate_output_i162; assert_in_epsilon(68.76950809674807, worksheet.intermediate_output_i162, 0.002); end
  def test_intermediate_output_j162; assert_in_epsilon(77.22322514952117, worksheet.intermediate_output_j162, 0.002); end
  def test_intermediate_output_k162; assert_in_epsilon(90.7500084110059, worksheet.intermediate_output_k162, 0.002); end
  def test_intermediate_output_l162; assert_in_epsilon(104.6778508087, worksheet.intermediate_output_l162, 0.002); end
  def test_intermediate_output_m162; assert_in_epsilon(122.78241986091798, worksheet.intermediate_output_m162, 0.002); end
  def test_intermediate_output_n162; assert_in_epsilon(141.43496703162253, worksheet.intermediate_output_n162, 0.002); end
  def test_intermediate_output_o162; assert_in_epsilon(167.89647376248328, worksheet.intermediate_output_o162, 0.002); end
  def test_intermediate_output_p162; assert_in_epsilon(195.12929931588945, worksheet.intermediate_output_p162, 0.002); end
  def test_intermediate_output_q162; assert_in_delta(0.1424083822798889, worksheet.intermediate_output_q162, 0.002); end
  def test_intermediate_output_c163; assert_equal("TRA", worksheet.intermediate_output_c163); end
  def test_intermediate_output_d163; assert_equal("Transport", worksheet.intermediate_output_d163); end
  def test_intermediate_output_g163; assert_in_epsilon(53.728710887484596, worksheet.intermediate_output_g163, 0.002); end
  def test_intermediate_output_h163; assert_in_epsilon(49.91750089764948, worksheet.intermediate_output_h163, 0.002); end
  def test_intermediate_output_i163; assert_in_epsilon(49.053973223670155, worksheet.intermediate_output_i163, 0.002); end
  def test_intermediate_output_j163; assert_in_epsilon(47.62485667037701, worksheet.intermediate_output_j163, 0.002); end
  def test_intermediate_output_k163; assert_in_epsilon(45.84095625838298, worksheet.intermediate_output_k163, 0.002); end
  def test_intermediate_output_l163; assert_in_epsilon(43.730657107550506, worksheet.intermediate_output_l163, 0.002); end
  def test_intermediate_output_m163; assert_in_epsilon(41.98385526460224, worksheet.intermediate_output_m163, 0.002); end
  def test_intermediate_output_n163; assert_in_epsilon(40.21196534655404, worksheet.intermediate_output_n163, 0.002); end
  def test_intermediate_output_o163; assert_in_epsilon(38.62378770393225, worksheet.intermediate_output_o163, 0.002); end
  def test_intermediate_output_p163; assert_in_epsilon(37.287331354092395, worksheet.intermediate_output_p163, 0.002); end
  def test_intermediate_output_q163; assert_in_delta(0.12297147167874806, worksheet.intermediate_output_q163, 0.002); end
  def test_intermediate_output_c166; assert_equal("XV", worksheet.intermediate_output_c166); end
  def test_intermediate_output_g166; assert_in_delta(0.0, (worksheet.intermediate_output_g166||0), 0.002); end
  def test_intermediate_output_h166; assert_in_delta(0.0, (worksheet.intermediate_output_h166||0), 0.002); end
  def test_intermediate_output_i166; assert_in_delta(0.0, (worksheet.intermediate_output_i166||0), 0.002); end
  def test_intermediate_output_j166; assert_in_delta(0.0, (worksheet.intermediate_output_j166||0), 0.002); end
  def test_intermediate_output_k166; assert_in_delta(0.0, (worksheet.intermediate_output_k166||0), 0.002); end
  def test_intermediate_output_l166; assert_in_delta(0.0, (worksheet.intermediate_output_l166||0), 0.002); end
  def test_intermediate_output_m166; assert_in_delta(0.0, (worksheet.intermediate_output_m166||0), 0.002); end
  def test_intermediate_output_n166; assert_in_delta(0.0, (worksheet.intermediate_output_n166||0), 0.002); end
  def test_intermediate_output_o166; assert_in_delta(0.0, (worksheet.intermediate_output_o166||0), 0.002); end
  def test_intermediate_output_p166; assert_in_delta(0.0, (worksheet.intermediate_output_p166||0), 0.002); end
  def test_intermediate_output_q166; assert_in_delta(0.0, (worksheet.intermediate_output_q166||0), 0.002); end
  def test_intermediate_output_c167; assert_equal("XVI", worksheet.intermediate_output_c167); end
  def test_intermediate_output_g167; assert_in_delta(0.0, (worksheet.intermediate_output_g167||0), 0.002); end
  def test_intermediate_output_h167; assert_in_delta(0.0, (worksheet.intermediate_output_h167||0), 0.002); end
  def test_intermediate_output_i167; assert_in_delta(0.0, (worksheet.intermediate_output_i167||0), 0.002); end
  def test_intermediate_output_j167; assert_in_delta(0.0, (worksheet.intermediate_output_j167||0), 0.002); end
  def test_intermediate_output_k167; assert_in_delta(0.0, (worksheet.intermediate_output_k167||0), 0.002); end
  def test_intermediate_output_l167; assert_in_delta(0.0, (worksheet.intermediate_output_l167||0), 0.002); end
  def test_intermediate_output_m167; assert_in_delta(0.0, (worksheet.intermediate_output_m167||0), 0.002); end
  def test_intermediate_output_n167; assert_in_delta(0.0, (worksheet.intermediate_output_n167||0), 0.002); end
  def test_intermediate_output_o167; assert_in_delta(0.0, (worksheet.intermediate_output_o167||0), 0.002); end
  def test_intermediate_output_p167; assert_in_delta(0.0, (worksheet.intermediate_output_p167||0), 0.002); end
  def test_intermediate_output_q167; assert_in_delta(0.0, (worksheet.intermediate_output_q167||0), 0.002); end
  def test_intermediate_output_c168; assert_equal("XVII", worksheet.intermediate_output_c168); end
  def test_intermediate_output_g168; assert_in_delta(0.0, (worksheet.intermediate_output_g168||0), 0.002); end
  def test_intermediate_output_h168; assert_in_delta(0.0, (worksheet.intermediate_output_h168||0), 0.002); end
  def test_intermediate_output_i168; assert_in_delta(0.0, (worksheet.intermediate_output_i168||0), 0.002); end
  def test_intermediate_output_j168; assert_in_delta(0.0, (worksheet.intermediate_output_j168||0), 0.002); end
  def test_intermediate_output_k168; assert_in_delta(0.0, (worksheet.intermediate_output_k168||0), 0.002); end
  def test_intermediate_output_l168; assert_in_delta(0.0, (worksheet.intermediate_output_l168||0), 0.002); end
  def test_intermediate_output_m168; assert_in_delta(0.0, (worksheet.intermediate_output_m168||0), 0.002); end
  def test_intermediate_output_n168; assert_in_delta(0.0, (worksheet.intermediate_output_n168||0), 0.002); end
  def test_intermediate_output_o168; assert_in_delta(0.0, (worksheet.intermediate_output_o168||0), 0.002); end
  def test_intermediate_output_p168; assert_in_delta(0.0, (worksheet.intermediate_output_p168||0), 0.002); end
  def test_intermediate_output_q168; assert_in_delta(0.0, (worksheet.intermediate_output_q168||0), 0.002); end
  def test_intermediate_output_c169; assert_equal("FOS", worksheet.intermediate_output_c169); end
  def test_intermediate_output_d169; assert_equal("Fossil fuel production", worksheet.intermediate_output_d169); end
  def test_intermediate_output_g169; assert_in_epsilon(53.457488011255045, worksheet.intermediate_output_g169, 0.002); end
  def test_intermediate_output_h169; assert_in_epsilon(51.95699642142718, worksheet.intermediate_output_h169, 0.002); end
  def test_intermediate_output_i169; assert_in_epsilon(51.269659724921745, worksheet.intermediate_output_i169, 0.002); end
  def test_intermediate_output_j169; assert_in_epsilon(56.73502564051752, worksheet.intermediate_output_j169, 0.002); end
  def test_intermediate_output_k169; assert_in_epsilon(51.75069051373197, worksheet.intermediate_output_k169, 0.002); end
  def test_intermediate_output_l169; assert_in_epsilon(49.296391802832105, worksheet.intermediate_output_l169, 0.002); end
  def test_intermediate_output_m169; assert_in_epsilon(45.17962889547592, worksheet.intermediate_output_m169, 0.002); end
  def test_intermediate_output_n169; assert_in_epsilon(30.477957236844638, worksheet.intermediate_output_n169, 0.002); end
  def test_intermediate_output_o169; assert_in_epsilon(28.007511857022603, worksheet.intermediate_output_o169, 0.002); end
  def test_intermediate_output_p169; assert_in_epsilon(18.953039369672435, worksheet.intermediate_output_p169, 0.002); end
  def test_intermediate_output_q169; assert_in_delta(0.12235071090314083, worksheet.intermediate_output_q169, 0.002); end
  def test_intermediate_output_c171; assert_equal("Total", worksheet.intermediate_output_c171); end
  def test_intermediate_output_d171; assert_equal("Total", worksheet.intermediate_output_d171); end
  def test_intermediate_output_g171; assert_in_epsilon(436.9201258959154, worksheet.intermediate_output_g171, 0.002); end
  def test_intermediate_output_h171; assert_in_epsilon(458.2059442471707, worksheet.intermediate_output_h171, 0.002); end
  def test_intermediate_output_i171; assert_in_epsilon(485.249678377591, worksheet.intermediate_output_i171, 0.002); end
  def test_intermediate_output_j171; assert_in_epsilon(239.76841614279704, worksheet.intermediate_output_j171, 0.002); end
  def test_intermediate_output_k171; assert_in_epsilon(232.06919362776046, worksheet.intermediate_output_k171, 0.002); end
  def test_intermediate_output_l171; assert_in_epsilon(276.44590706890256, worksheet.intermediate_output_l171, 0.002); end
  def test_intermediate_output_m171; assert_in_epsilon(298.50849343615016, worksheet.intermediate_output_m171, 0.002); end
  def test_intermediate_output_n171; assert_in_epsilon(308.8429829257762, worksheet.intermediate_output_n171, 0.002); end
  def test_intermediate_output_o171; assert_in_epsilon(337.98370803844267, worksheet.intermediate_output_o171, 0.002); end
  def test_intermediate_output_p171; assert_in_epsilon(359.57008287641855, worksheet.intermediate_output_p171, 0.002); end
  def test_intermediate_output_c173; assert_equal("Modelled emissions", worksheet.intermediate_output_c173); end
  def test_intermediate_output_d175; assert_equal("IPCC Sector", worksheet.intermediate_output_d175); end
  def test_intermediate_output_p175; assert_equal("Mt CO2e", worksheet.intermediate_output_p175); end
  def test_intermediate_output_c176; assert_equal("1A", worksheet.intermediate_output_c176); end
  def test_intermediate_output_d176; assert_equal("Fuel Combustion", worksheet.intermediate_output_d176); end
  def test_intermediate_output_g176; assert_in_epsilon(391.4142057492612, worksheet.intermediate_output_g176, 0.002); end
  def test_intermediate_output_h176; assert_in_epsilon(403.87819200838015, worksheet.intermediate_output_h176, 0.002); end
  def test_intermediate_output_i176; assert_in_epsilon(421.64761139332063, worksheet.intermediate_output_i176, 0.002); end
  def test_intermediate_output_j176; assert_in_epsilon(161.4119674529871, worksheet.intermediate_output_j176, 0.002); end
  def test_intermediate_output_k176; assert_in_epsilon(153.29025523104931, worksheet.intermediate_output_k176, 0.002); end
  def test_intermediate_output_l176; assert_in_epsilon(195.236907778356, worksheet.intermediate_output_l176, 0.002); end
  def test_intermediate_output_m176; assert_in_epsilon(216.37384116343893, worksheet.intermediate_output_m176, 0.002); end
  def test_intermediate_output_n176; assert_in_epsilon(234.561018321047, worksheet.intermediate_output_n176, 0.002); end
  def test_intermediate_output_o176; assert_in_epsilon(263.65545570087687, worksheet.intermediate_output_o176, 0.002); end
  def test_intermediate_output_p176; assert_in_epsilon(290.3918191059741, worksheet.intermediate_output_p176, 0.002); end
  def test_intermediate_output_c177; assert_equal("1B", worksheet.intermediate_output_c177); end
  def test_intermediate_output_d177; assert_equal("Fugitive Emissions from Fuels", worksheet.intermediate_output_d177); end
  def test_intermediate_output_g177; assert_in_delta(0.0, (worksheet.intermediate_output_g177||0), 0.002); end
  def test_intermediate_output_h177; assert_in_delta(0.0, (worksheet.intermediate_output_h177||0), 0.002); end
  def test_intermediate_output_i177; assert_in_delta(0.0, (worksheet.intermediate_output_i177||0), 0.002); end
  def test_intermediate_output_j177; assert_in_epsilon(6.646757129498362, worksheet.intermediate_output_j177, 0.002); end
  def test_intermediate_output_k177; assert_in_epsilon(7.346840739036775, worksheet.intermediate_output_k177, 0.002); end
  def test_intermediate_output_l177; assert_in_epsilon(7.490402547289002, worksheet.intermediate_output_l177, 0.002); end
  def test_intermediate_output_m177; assert_in_epsilon(7.139304424456546, worksheet.intermediate_output_m177, 0.002); end
  def test_intermediate_output_n177; assert_in_epsilon(6.465927132612361, worksheet.intermediate_output_n177, 0.002); end
  def test_intermediate_output_o177; assert_in_epsilon(5.649172340951404, worksheet.intermediate_output_o177, 0.002); end
  def test_intermediate_output_p177; assert_in_epsilon(4.818350496564553, worksheet.intermediate_output_p177, 0.002); end
  def test_intermediate_output_c178; assert_in_delta(1.0, worksheet.intermediate_output_c178, 0.002); end
  def test_intermediate_output_d178; assert_equal("Fuel Combustion", worksheet.intermediate_output_d178); end
  def test_intermediate_output_g178; assert_in_epsilon(391.4142057492612, worksheet.intermediate_output_g178, 0.002); end
  def test_intermediate_output_h178; assert_in_epsilon(403.87819200838015, worksheet.intermediate_output_h178, 0.002); end
  def test_intermediate_output_i178; assert_in_epsilon(421.64761139332063, worksheet.intermediate_output_i178, 0.002); end
  def test_intermediate_output_j178; assert_in_epsilon(168.05872458248547, worksheet.intermediate_output_j178, 0.002); end
  def test_intermediate_output_k178; assert_in_epsilon(160.63709597008608, worksheet.intermediate_output_k178, 0.002); end
  def test_intermediate_output_l178; assert_in_epsilon(202.727310325645, worksheet.intermediate_output_l178, 0.002); end
  def test_intermediate_output_m178; assert_in_epsilon(223.51314558789548, worksheet.intermediate_output_m178, 0.002); end
  def test_intermediate_output_n178; assert_in_epsilon(241.02694545365935, worksheet.intermediate_output_n178, 0.002); end
  def test_intermediate_output_o178; assert_in_epsilon(269.30462804182827, worksheet.intermediate_output_o178, 0.002); end
  def test_intermediate_output_p178; assert_in_epsilon(295.21016960253866, worksheet.intermediate_output_p178, 0.002); end
  def test_intermediate_output_c179; assert_in_epsilon(2.0, worksheet.intermediate_output_c179, 0.002); end
  def test_intermediate_output_d179; assert_equal("Industrial Processes", worksheet.intermediate_output_d179); end
  def test_intermediate_output_g179; assert_in_epsilon(39.99742110400836, worksheet.intermediate_output_g179, 0.002); end
  def test_intermediate_output_h179; assert_in_epsilon(39.40320881195872, worksheet.intermediate_output_h179, 0.002); end
  def test_intermediate_output_i179; assert_in_epsilon(39.73871638571643, worksheet.intermediate_output_i179, 0.002); end
  def test_intermediate_output_j179; assert_in_epsilon(40.384942388097805, worksheet.intermediate_output_j179, 0.002); end
  def test_intermediate_output_k179; assert_in_epsilon(36.8346012369634, worksheet.intermediate_output_k179, 0.002); end
  def test_intermediate_output_l179; assert_in_epsilon(36.66461624408875, worksheet.intermediate_output_l179, 0.002); end
  def test_intermediate_output_m179; assert_in_epsilon(37.10756143580755, worksheet.intermediate_output_m179, 0.002); end
  def test_intermediate_output_n179; assert_in_epsilon(30.57375202430233, worksheet.intermediate_output_n179, 0.002); end
  def test_intermediate_output_o179; assert_in_epsilon(33.402341286748346, worksheet.intermediate_output_o179, 0.002); end
  def test_intermediate_output_p179; assert_in_epsilon(32.46362580240576, worksheet.intermediate_output_p179, 0.002); end
  def test_intermediate_output_c180; assert_in_epsilon(3.0, worksheet.intermediate_output_c180, 0.002); end
  def test_intermediate_output_d180; assert_equal("Solvent and Other Product Use", worksheet.intermediate_output_d180); end
  def test_intermediate_output_g180; assert_in_delta(0.0, (worksheet.intermediate_output_g180||0), 0.002); end
  def test_intermediate_output_h180; assert_in_delta(0.0, (worksheet.intermediate_output_h180||0), 0.002); end
  def test_intermediate_output_i180; assert_in_delta(0.0, (worksheet.intermediate_output_i180||0), 0.002); end
  def test_intermediate_output_j180; assert_in_delta(0.0, (worksheet.intermediate_output_j180||0), 0.002); end
  def test_intermediate_output_k180; assert_in_delta(0.0, (worksheet.intermediate_output_k180||0), 0.002); end
  def test_intermediate_output_l180; assert_in_delta(0.0, (worksheet.intermediate_output_l180||0), 0.002); end
  def test_intermediate_output_m180; assert_in_delta(0.0, (worksheet.intermediate_output_m180||0), 0.002); end
  def test_intermediate_output_n180; assert_in_delta(0.0, (worksheet.intermediate_output_n180||0), 0.002); end
  def test_intermediate_output_o180; assert_in_delta(0.0, (worksheet.intermediate_output_o180||0), 0.002); end
  def test_intermediate_output_p180; assert_in_delta(0.0, (worksheet.intermediate_output_p180||0), 0.002); end
  def test_intermediate_output_c181; assert_in_epsilon(4.0, worksheet.intermediate_output_c181, 0.002); end
  def test_intermediate_output_d181; assert_equal("Agriculture", worksheet.intermediate_output_d181); end
  def test_intermediate_output_g181; assert_in_delta(0.0, (worksheet.intermediate_output_g181||0), 0.002); end
  def test_intermediate_output_h181; assert_in_delta(0.0, (worksheet.intermediate_output_h181||0), 0.002); end
  def test_intermediate_output_i181; assert_in_delta(0.0, (worksheet.intermediate_output_i181||0), 0.002); end
  def test_intermediate_output_j181; assert_in_delta(0.0, (worksheet.intermediate_output_j181||0), 0.002); end
  def test_intermediate_output_k181; assert_in_delta(0.0, (worksheet.intermediate_output_k181||0), 0.002); end
  def test_intermediate_output_l181; assert_in_delta(0.0, (worksheet.intermediate_output_l181||0), 0.002); end
  def test_intermediate_output_m181; assert_in_delta(0.0, (worksheet.intermediate_output_m181||0), 0.002); end
  def test_intermediate_output_n181; assert_in_delta(0.0, (worksheet.intermediate_output_n181||0), 0.002); end
  def test_intermediate_output_o181; assert_in_delta(0.0, (worksheet.intermediate_output_o181||0), 0.002); end
  def test_intermediate_output_p181; assert_in_delta(0.0, (worksheet.intermediate_output_p181||0), 0.002); end
  def test_intermediate_output_c182; assert_in_epsilon(5.0, worksheet.intermediate_output_c182, 0.002); end
  def test_intermediate_output_d182; assert_equal("Land Use, Land-Use Change and Forestry", worksheet.intermediate_output_d182); end
  def test_intermediate_output_g182; assert_in_delta(0.0, (worksheet.intermediate_output_g182||0), 0.002); end
  def test_intermediate_output_h182; assert_in_delta(0.0, (worksheet.intermediate_output_h182||0), 0.002); end
  def test_intermediate_output_i182; assert_in_delta(0.0, (worksheet.intermediate_output_i182||0), 0.002); end
  def test_intermediate_output_j182; assert_in_delta(0.0, (worksheet.intermediate_output_j182||0), 0.002); end
  def test_intermediate_output_k182; assert_in_delta(0.0, (worksheet.intermediate_output_k182||0), 0.002); end
  def test_intermediate_output_l182; assert_in_delta(0.0, (worksheet.intermediate_output_l182||0), 0.002); end
  def test_intermediate_output_m182; assert_in_delta(0.0, (worksheet.intermediate_output_m182||0), 0.002); end
  def test_intermediate_output_n182; assert_in_delta(0.0, (worksheet.intermediate_output_n182||0), 0.002); end
  def test_intermediate_output_o182; assert_in_delta(0.0, (worksheet.intermediate_output_o182||0), 0.002); end
  def test_intermediate_output_p182; assert_in_delta(0.0, (worksheet.intermediate_output_p182||0), 0.002); end
  def test_intermediate_output_c183; assert_in_epsilon(6.0, worksheet.intermediate_output_c183, 0.002); end
  def test_intermediate_output_d183; assert_equal("Waste", worksheet.intermediate_output_d183); end
  def test_intermediate_output_g183; assert_in_epsilon(2.754249521322907, worksheet.intermediate_output_g183, 0.002); end
  def test_intermediate_output_h183; assert_in_epsilon(7.462271713415902, worksheet.intermediate_output_h183, 0.002); end
  def test_intermediate_output_i183; assert_in_epsilon(11.93167529927701, worksheet.intermediate_output_i183, 0.002); end
  def test_intermediate_output_j183; assert_in_epsilon(15.151113330374216, worksheet.intermediate_output_j183, 0.002); end
  def test_intermediate_output_k183; assert_in_epsilon(17.298748210355477, worksheet.intermediate_output_k183, 0.002); end
  def test_intermediate_output_l183; assert_in_epsilon(18.526990249584376, worksheet.intermediate_output_l183, 0.002); end
  def test_intermediate_output_m183; assert_in_epsilon(18.94389320622358, worksheet.intermediate_output_m183, 0.002); end
  def test_intermediate_output_n183; assert_in_epsilon(18.621142723907266, worksheet.intermediate_output_n183, 0.002); end
  def test_intermediate_output_o183; assert_in_epsilon(17.638369354933, worksheet.intermediate_output_o183, 0.002); end
  def test_intermediate_output_p183; assert_in_epsilon(15.948143735737066, worksheet.intermediate_output_p183, 0.002); end
  def test_intermediate_output_c184; assert_in_epsilon(7.0, worksheet.intermediate_output_c184, 0.002); end
  def test_intermediate_output_d184; assert_equal("Other", worksheet.intermediate_output_d184); end
  def test_intermediate_output_g184; assert_in_delta(0.0, (worksheet.intermediate_output_g184||0), 0.002); end
  def test_intermediate_output_h184; assert_in_delta(0.0, (worksheet.intermediate_output_h184||0), 0.002); end
  def test_intermediate_output_i184; assert_in_delta(0.0, (worksheet.intermediate_output_i184||0), 0.002); end
  def test_intermediate_output_j184; assert_in_delta(0.0, (worksheet.intermediate_output_j184||0), 0.002); end
  def test_intermediate_output_k184; assert_in_delta(0.0, (worksheet.intermediate_output_k184||0), 0.002); end
  def test_intermediate_output_l184; assert_in_delta(0.0, (worksheet.intermediate_output_l184||0), 0.002); end
  def test_intermediate_output_m184; assert_in_delta(0.0, (worksheet.intermediate_output_m184||0), 0.002); end
  def test_intermediate_output_n184; assert_in_delta(0.0, (worksheet.intermediate_output_n184||0), 0.002); end
  def test_intermediate_output_o184; assert_in_delta(0.0, (worksheet.intermediate_output_o184||0), 0.002); end
  def test_intermediate_output_p184; assert_in_delta(0.0, (worksheet.intermediate_output_p184||0), 0.002); end
  def test_intermediate_output_c185; assert_equal("X1", worksheet.intermediate_output_c185); end
  def test_intermediate_output_d185; assert_equal("International Aviation and Shipping", worksheet.intermediate_output_d185); end
  def test_intermediate_output_g185; assert_in_delta(0.0, (worksheet.intermediate_output_g185||0), 0.002); end
  def test_intermediate_output_h185; assert_in_delta(0.0, (worksheet.intermediate_output_h185||0), 0.002); end
  def test_intermediate_output_i185; assert_in_delta(0.0, (worksheet.intermediate_output_i185||0), 0.002); end
  def test_intermediate_output_j185; assert_in_delta(0.0, (worksheet.intermediate_output_j185||0), 0.002); end
  def test_intermediate_output_k185; assert_in_delta(0.0, (worksheet.intermediate_output_k185||0), 0.002); end
  def test_intermediate_output_l185; assert_in_delta(0.0, (worksheet.intermediate_output_l185||0), 0.002); end
  def test_intermediate_output_m185; assert_in_delta(0.0, (worksheet.intermediate_output_m185||0), 0.002); end
  def test_intermediate_output_n185; assert_in_delta(0.0, (worksheet.intermediate_output_n185||0), 0.002); end
  def test_intermediate_output_o185; assert_in_delta(0.0, (worksheet.intermediate_output_o185||0), 0.002); end
  def test_intermediate_output_p185; assert_in_delta(0.0, (worksheet.intermediate_output_p185||0), 0.002); end
  def test_intermediate_output_c186; assert_equal("X2", worksheet.intermediate_output_c186); end
  def test_intermediate_output_d186; assert_equal("Bioenergy credit", worksheet.intermediate_output_d186); end
  def test_intermediate_output_g186; assert_in_epsilon(-3.673000734477737, worksheet.intermediate_output_g186, 0.002); end
  def test_intermediate_output_h186; assert_in_epsilon(-5.357292381901257, worksheet.intermediate_output_h186, 0.002); end
  def test_intermediate_output_i186; assert_in_epsilon(-5.098420593608817, worksheet.intermediate_output_i186, 0.002); end
  def test_intermediate_output_j186; assert_in_epsilon(-4.825396064440915, worksheet.intermediate_output_j186, 0.002); end
  def test_intermediate_output_k186; assert_in_epsilon(-5.290974859448332, worksheet.intermediate_output_k186, 0.002); end
  def test_intermediate_output_l186; assert_in_epsilon(-5.4889238611875015, worksheet.intermediate_output_l186, 0.002); end
  def test_intermediate_output_m186; assert_in_epsilon(-5.352473045974681, worksheet.intermediate_output_m186, 0.002); end
  def test_intermediate_output_n186; assert_in_epsilon(-5.161761078341919, worksheet.intermediate_output_n186, 0.002); end
  def test_intermediate_output_o186; assert_in_epsilon(-7.348241545513308, worksheet.intermediate_output_o186, 0.002); end
  def test_intermediate_output_p186; assert_in_epsilon(-8.288155290788222, worksheet.intermediate_output_p186, 0.002); end
  def test_intermediate_output_c187; assert_equal("X3", worksheet.intermediate_output_c187); end
  def test_intermediate_output_d187; assert_equal("Carbon capture", worksheet.intermediate_output_d187); end
  def test_intermediate_output_g187; assert_in_delta(0.0, (worksheet.intermediate_output_g187||0), 0.002); end
  def test_intermediate_output_h187; assert_in_delta(0.0, (worksheet.intermediate_output_h187||0), 0.002); end
  def test_intermediate_output_i187; assert_in_delta(0.0, (worksheet.intermediate_output_i187||0), 0.002); end
  def test_intermediate_output_j187; assert_in_epsilon(1.0225225114653407, worksheet.intermediate_output_j187, 0.002); end
  def test_intermediate_output_k187; assert_in_delta(0.0, (worksheet.intermediate_output_k187||0), 0.002); end
  def test_intermediate_output_l187; assert_in_delta(0.0, (worksheet.intermediate_output_l187||0), 0.002); end
  def test_intermediate_output_m187; assert_in_delta(0.0, (worksheet.intermediate_output_m187||0), 0.002); end
  def test_intermediate_output_n187; assert_in_delta(0.0, (worksheet.intermediate_output_n187||0), 0.002); end
  def test_intermediate_output_o187; assert_in_delta(0.0, (worksheet.intermediate_output_o187||0), 0.002); end
  def test_intermediate_output_p187; assert_in_delta(0.0, (worksheet.intermediate_output_p187||0), 0.002); end
  def test_intermediate_output_d188; assert_equal("Total", worksheet.intermediate_output_d188); end
  def test_intermediate_output_f188; assert_in_delta(0.0, (worksheet.intermediate_output_f188||0), 0.002); end
  def test_intermediate_output_g188; assert_in_epsilon(430.49287564011473, worksheet.intermediate_output_g188, 0.002); end
  def test_intermediate_output_h188; assert_in_epsilon(445.38638015185353, worksheet.intermediate_output_h188, 0.002); end
  def test_intermediate_output_i188; assert_in_epsilon(468.21958248470526, worksheet.intermediate_output_i188, 0.002); end
  def test_intermediate_output_j188; assert_in_epsilon(219.79190674798193, worksheet.intermediate_output_j188, 0.002); end
  def test_intermediate_output_k188; assert_in_epsilon(209.47947055795663, worksheet.intermediate_output_k188, 0.002); end
  def test_intermediate_output_l188; assert_in_epsilon(252.42999295813064, worksheet.intermediate_output_l188, 0.002); end
  def test_intermediate_output_m188; assert_in_epsilon(274.2121271839519, worksheet.intermediate_output_m188, 0.002); end
  def test_intermediate_output_n188; assert_in_epsilon(285.06007912352703, worksheet.intermediate_output_n188, 0.002); end
  def test_intermediate_output_o188; assert_in_epsilon(312.9970971379963, worksheet.intermediate_output_o188, 0.002); end
  def test_intermediate_output_p188; assert_in_epsilon(335.3337838498933, worksheet.intermediate_output_p188, 0.002); end
  def test_intermediate_output_c190; assert_equal("Excluding international bunkers", worksheet.intermediate_output_c190); end
  def test_intermediate_output_f190; assert_in_delta(0.0, (worksheet.intermediate_output_f190||0), 0.002); end
  def test_intermediate_output_g190; assert_in_epsilon(430.49287564011473, worksheet.intermediate_output_g190, 0.002); end
  def test_intermediate_output_h190; assert_in_epsilon(445.38638015185353, worksheet.intermediate_output_h190, 0.002); end
  def test_intermediate_output_i190; assert_in_epsilon(468.21958248470526, worksheet.intermediate_output_i190, 0.002); end
  def test_intermediate_output_j190; assert_in_epsilon(219.79190674798193, worksheet.intermediate_output_j190, 0.002); end
  def test_intermediate_output_k190; assert_in_epsilon(209.47947055795663, worksheet.intermediate_output_k190, 0.002); end
  def test_intermediate_output_l190; assert_in_epsilon(252.42999295813064, worksheet.intermediate_output_l190, 0.002); end
  def test_intermediate_output_m190; assert_in_epsilon(274.2121271839519, worksheet.intermediate_output_m190, 0.002); end
  def test_intermediate_output_n190; assert_in_epsilon(285.06007912352703, worksheet.intermediate_output_n190, 0.002); end
  def test_intermediate_output_o190; assert_in_epsilon(312.9970971379963, worksheet.intermediate_output_o190, 0.002); end
  def test_intermediate_output_p190; assert_in_epsilon(335.3337838498933, worksheet.intermediate_output_p190, 0.002); end
  def test_intermediate_output_b194; assert_equal("Electricity Generation Emissions", worksheet.intermediate_output_b194); end
  def test_intermediate_output_c197; assert_equal("Emissions from Electricity Generation, exlcuding CHP", worksheet.intermediate_output_c197); end
  def test_intermediate_output_g197; assert_in_epsilon(2006.0, worksheet.intermediate_output_g197, 0.002); end
  def test_intermediate_output_h197; assert_equal("2010", worksheet.intermediate_output_h197); end
  def test_intermediate_output_i197; assert_equal("2015", worksheet.intermediate_output_i197); end
  def test_intermediate_output_j197; assert_equal("2020", worksheet.intermediate_output_j197); end
  def test_intermediate_output_k197; assert_equal("2025", worksheet.intermediate_output_k197); end
  def test_intermediate_output_l197; assert_equal("2030", worksheet.intermediate_output_l197); end
  def test_intermediate_output_m197; assert_equal("2035", worksheet.intermediate_output_m197); end
  def test_intermediate_output_n197; assert_equal("2040", worksheet.intermediate_output_n197); end
  def test_intermediate_output_o197; assert_equal("2045", worksheet.intermediate_output_o197); end
  def test_intermediate_output_p197; assert_equal("2050", worksheet.intermediate_output_p197); end
  def test_intermediate_output_c198; assert_equal("Power Generation", worksheet.intermediate_output_c198); end
  def test_intermediate_output_g198; assert_in_epsilon(247.2925466016981, worksheet.intermediate_output_g198, 0.002); end
  def test_intermediate_output_h198; assert_in_epsilon(264.4606560767711, worksheet.intermediate_output_h198, 0.002); end
  def test_intermediate_output_i198; assert_in_epsilon(278.7550310470365, worksheet.intermediate_output_i198, 0.002); end
  def test_intermediate_output_j198; assert_in_epsilon(16.81784907616962, worksheet.intermediate_output_j198, 0.002); end
  def test_intermediate_output_k198; assert_in_delta(0.5717790173249838, worksheet.intermediate_output_k198, 0.002); end
  def test_intermediate_output_l198; assert_in_epsilon(36.18785229146156, worksheet.intermediate_output_l198, 0.002); end
  def test_intermediate_output_m198; assert_in_epsilon(45.04620735350089, worksheet.intermediate_output_m198, 0.002); end
  def test_intermediate_output_n198; assert_in_epsilon(53.83625050364407, worksheet.intermediate_output_n198, 0.002); end
  def test_intermediate_output_o198; assert_in_epsilon(62.694605565683396, worksheet.intermediate_output_o198, 0.002); end
  def test_intermediate_output_p198; assert_in_epsilon(71.16562378715557, worksheet.intermediate_output_p198, 0.002); end
  def test_intermediate_output_d199; assert_equal("CCS in Power", worksheet.intermediate_output_d199); end
  def test_intermediate_output_d200; assert_equal("Bioenergy in Gas Power", worksheet.intermediate_output_d200); end
  def test_intermediate_output_d201; assert_equal("Bioenergy in Solid BM Power", worksheet.intermediate_output_d201); end
  def test_intermediate_output_d202; assert_equal("Bioenergy in Solid HC CCS Power", worksheet.intermediate_output_d202); end
  def test_intermediate_output_d203; assert_equal("Bioenergy in Gas CCS Power", worksheet.intermediate_output_d203); end
  def test_intermediate_output_c204; assert_equal("Total Emissions from Power", worksheet.intermediate_output_c204); end
  def test_intermediate_output_g204; assert_in_epsilon(247.2925466016981, worksheet.intermediate_output_g204, 0.002); end
  def test_intermediate_output_h204; assert_in_epsilon(264.4606560767711, worksheet.intermediate_output_h204, 0.002); end
  def test_intermediate_output_i204; assert_in_epsilon(278.7550310470365, worksheet.intermediate_output_i204, 0.002); end
  def test_intermediate_output_j204; assert_in_epsilon(16.81784907616962, worksheet.intermediate_output_j204, 0.002); end
  def test_intermediate_output_k204; assert_in_delta(0.5717790173249838, worksheet.intermediate_output_k204, 0.002); end
  def test_intermediate_output_l204; assert_in_epsilon(36.18785229146156, worksheet.intermediate_output_l204, 0.002); end
  def test_intermediate_output_m204; assert_in_epsilon(45.04620735350089, worksheet.intermediate_output_m204, 0.002); end
  def test_intermediate_output_n204; assert_in_epsilon(53.83625050364407, worksheet.intermediate_output_n204, 0.002); end
  def test_intermediate_output_o204; assert_in_epsilon(62.694605565683396, worksheet.intermediate_output_o204, 0.002); end
  def test_intermediate_output_p204; assert_in_epsilon(71.16562378715557, worksheet.intermediate_output_p204, 0.002); end
  def test_intermediate_output_c206; assert_equal("Emissions reclassified", worksheet.intermediate_output_c206); end
  def test_intermediate_output_g206; assert_in_epsilon(2006.0, worksheet.intermediate_output_g206, 0.002); end
  def test_intermediate_output_h206; assert_equal("2010", worksheet.intermediate_output_h206); end
  def test_intermediate_output_i206; assert_equal("2015", worksheet.intermediate_output_i206); end
  def test_intermediate_output_j206; assert_equal("2020", worksheet.intermediate_output_j206); end
  def test_intermediate_output_k206; assert_equal("2025", worksheet.intermediate_output_k206); end
  def test_intermediate_output_l206; assert_equal("2030", worksheet.intermediate_output_l206); end
  def test_intermediate_output_m206; assert_equal("2035", worksheet.intermediate_output_m206); end
  def test_intermediate_output_n206; assert_equal("2040", worksheet.intermediate_output_n206); end
  def test_intermediate_output_o206; assert_equal("2045", worksheet.intermediate_output_o206); end
  def test_intermediate_output_p206; assert_equal("2050", worksheet.intermediate_output_p206); end
  def test_intermediate_output_c207; assert_in_delta(1.0, worksheet.intermediate_output_c207, 0.002); end
  def test_intermediate_output_d207; assert_equal("Fuel Combustion", worksheet.intermediate_output_d207); end
  def test_intermediate_output_g207; assert_in_epsilon(247.2925466016981, worksheet.intermediate_output_g207, 0.002); end
  def test_intermediate_output_h207; assert_in_epsilon(264.4606560767711, worksheet.intermediate_output_h207, 0.002); end
  def test_intermediate_output_i207; assert_in_epsilon(278.7550310470365, worksheet.intermediate_output_i207, 0.002); end
  def test_intermediate_output_j207; assert_in_epsilon(16.81784907616962, worksheet.intermediate_output_j207, 0.002); end
  def test_intermediate_output_k207; assert_in_delta(0.5717790173249838, worksheet.intermediate_output_k207, 0.002); end
  def test_intermediate_output_l207; assert_in_epsilon(36.18785229146156, worksheet.intermediate_output_l207, 0.002); end
  def test_intermediate_output_m207; assert_in_epsilon(45.04620735350089, worksheet.intermediate_output_m207, 0.002); end
  def test_intermediate_output_n207; assert_in_epsilon(53.83625050364407, worksheet.intermediate_output_n207, 0.002); end
  def test_intermediate_output_o207; assert_in_epsilon(62.694605565683396, worksheet.intermediate_output_o207, 0.002); end
  def test_intermediate_output_p207; assert_in_epsilon(71.16562378715557, worksheet.intermediate_output_p207, 0.002); end
  def test_intermediate_output_c208; assert_equal("X2", worksheet.intermediate_output_c208); end
  def test_intermediate_output_d208; assert_equal("Bioenergy credit", worksheet.intermediate_output_d208); end
  def test_intermediate_output_g208; assert_in_delta(0.0, (worksheet.intermediate_output_g208||0), 0.002); end
  def test_intermediate_output_h208; assert_in_delta(0.0, (worksheet.intermediate_output_h208||0), 0.002); end
  def test_intermediate_output_i208; assert_in_delta(0.0, (worksheet.intermediate_output_i208||0), 0.002); end
  def test_intermediate_output_j208; assert_in_delta(0.0, (worksheet.intermediate_output_j208||0), 0.002); end
  def test_intermediate_output_k208; assert_in_delta(0.0, (worksheet.intermediate_output_k208||0), 0.002); end
  def test_intermediate_output_l208; assert_in_delta(0.0, (worksheet.intermediate_output_l208||0), 0.002); end
  def test_intermediate_output_m208; assert_in_delta(0.0, (worksheet.intermediate_output_m208||0), 0.002); end
  def test_intermediate_output_n208; assert_in_delta(0.0, (worksheet.intermediate_output_n208||0), 0.002); end
  def test_intermediate_output_o208; assert_in_delta(0.0, (worksheet.intermediate_output_o208||0), 0.002); end
  def test_intermediate_output_p208; assert_in_delta(0.0, (worksheet.intermediate_output_p208||0), 0.002); end
  def test_intermediate_output_c209; assert_equal("X3", worksheet.intermediate_output_c209); end
  def test_intermediate_output_d209; assert_equal("Carbon capture", worksheet.intermediate_output_d209); end
  def test_intermediate_output_g209; assert_in_delta(0.0, (worksheet.intermediate_output_g209||0), 0.002); end
  def test_intermediate_output_h209; assert_in_delta(0.0, (worksheet.intermediate_output_h209||0), 0.002); end
  def test_intermediate_output_i209; assert_in_delta(0.0, (worksheet.intermediate_output_i209||0), 0.002); end
  def test_intermediate_output_j209; assert_in_delta(0.0, (worksheet.intermediate_output_j209||0), 0.002); end
  def test_intermediate_output_k209; assert_in_delta(0.0, (worksheet.intermediate_output_k209||0), 0.002); end
  def test_intermediate_output_l209; assert_in_delta(0.0, (worksheet.intermediate_output_l209||0), 0.002); end
  def test_intermediate_output_m209; assert_in_delta(0.0, (worksheet.intermediate_output_m209||0), 0.002); end
  def test_intermediate_output_n209; assert_in_delta(0.0, (worksheet.intermediate_output_n209||0), 0.002); end
  def test_intermediate_output_o209; assert_in_delta(0.0, (worksheet.intermediate_output_o209||0), 0.002); end
  def test_intermediate_output_p209; assert_in_delta(0.0, (worksheet.intermediate_output_p209||0), 0.002); end
  def test_intermediate_output_d210; assert_equal("Total", worksheet.intermediate_output_d210); end
  def test_intermediate_output_g210; assert_in_epsilon(247.2925466016981, worksheet.intermediate_output_g210, 0.002); end
  def test_intermediate_output_h210; assert_in_epsilon(264.4606560767711, worksheet.intermediate_output_h210, 0.002); end
  def test_intermediate_output_i210; assert_in_epsilon(278.7550310470365, worksheet.intermediate_output_i210, 0.002); end
  def test_intermediate_output_j210; assert_in_epsilon(16.81784907616962, worksheet.intermediate_output_j210, 0.002); end
  def test_intermediate_output_k210; assert_in_delta(0.5717790173249838, worksheet.intermediate_output_k210, 0.002); end
  def test_intermediate_output_l210; assert_in_epsilon(36.18785229146156, worksheet.intermediate_output_l210, 0.002); end
  def test_intermediate_output_m210; assert_in_epsilon(45.04620735350089, worksheet.intermediate_output_m210, 0.002); end
  def test_intermediate_output_n210; assert_in_epsilon(53.83625050364407, worksheet.intermediate_output_n210, 0.002); end
  def test_intermediate_output_o210; assert_in_epsilon(62.694605565683396, worksheet.intermediate_output_o210, 0.002); end
  def test_intermediate_output_p210; assert_in_epsilon(71.16562378715557, worksheet.intermediate_output_p210, 0.002); end
  def test_intermediate_output_c212; assert_equal("Emissions intensity", worksheet.intermediate_output_c212); end
  def test_intermediate_output_e212; assert_equal("MtCO2e/TWh", worksheet.intermediate_output_e212); end
  def test_intermediate_output_g212; assert_in_delta(0.2693017480151595, worksheet.intermediate_output_g212, 0.002); end
  def test_intermediate_output_h212; assert_in_delta(0.2656207721044853, worksheet.intermediate_output_h212, 0.002); end
  def test_intermediate_output_i212; assert_in_delta(0.2575379088676316, worksheet.intermediate_output_i212, 0.002); end
  def test_intermediate_output_j212; assert_in_delta(0.013823664178756445, worksheet.intermediate_output_j212, 0.002); end
  def test_intermediate_output_k212; assert_in_delta(0.00020962378428369082, worksheet.intermediate_output_k212, 0.002); end
  def test_intermediate_output_l212; assert_in_delta(0.008400150021250939, worksheet.intermediate_output_l212, 0.002); end
  def test_intermediate_output_m212; assert_in_delta(0.008628034323006096, worksheet.intermediate_output_m212, 0.002); end
  def test_intermediate_output_n212; assert_in_delta(0.008718018882051828, worksheet.intermediate_output_n212, 0.002); end
  def test_intermediate_output_o212; assert_in_delta(0.008797546151442752, worksheet.intermediate_output_o212, 0.002); end
  def test_intermediate_output_p212; assert_in_delta(0.008813465909138736, worksheet.intermediate_output_p212, 0.002); end
  def test_intermediate_output_e213; assert_equal("gCO2e/KWh", worksheet.intermediate_output_e213); end
  def test_intermediate_output_g213; assert_in_epsilon(269.3017480151595, worksheet.intermediate_output_g213, 0.002); end
  def test_intermediate_output_h213; assert_in_epsilon(265.6207721044853, worksheet.intermediate_output_h213, 0.002); end
  def test_intermediate_output_i213; assert_in_epsilon(257.53790886763164, worksheet.intermediate_output_i213, 0.002); end
  def test_intermediate_output_j213; assert_in_epsilon(13.823664178756445, worksheet.intermediate_output_j213, 0.002); end
  def test_intermediate_output_k213; assert_in_delta(0.20962378428369083, worksheet.intermediate_output_k213, 0.002); end
  def test_intermediate_output_l213; assert_in_epsilon(8.400150021250939, worksheet.intermediate_output_l213, 0.002); end
  def test_intermediate_output_m213; assert_in_epsilon(8.628034323006096, worksheet.intermediate_output_m213, 0.002); end
  def test_intermediate_output_n213; assert_in_epsilon(8.718018882051828, worksheet.intermediate_output_n213, 0.002); end
  def test_intermediate_output_o213; assert_in_epsilon(8.797546151442752, worksheet.intermediate_output_o213, 0.002); end
  def test_intermediate_output_p213; assert_in_epsilon(8.813465909138737, worksheet.intermediate_output_p213, 0.002); end
  def test_intermediate_output_c215; assert_equal("Note: Emissions from CHP are excluded, while emissions from district heating are included.", worksheet.intermediate_output_c215); end
  def test_intermediate_output_b218; assert_equal("Primary supply, format for web-based interface", worksheet.intermediate_output_b218); end
  def test_intermediate_output_c220; assert_equal("N.01", worksheet.intermediate_output_c220); end
  def test_intermediate_output_d220; assert_equal("Nuclear fission", worksheet.intermediate_output_d220); end
  def test_intermediate_output_e220; assert_in_delta(0.0, (worksheet.intermediate_output_e220||0), 0.002); end
  def test_intermediate_output_f220; assert_in_delta(0.0, (worksheet.intermediate_output_f220||0), 0.002); end
  def test_intermediate_output_g220; assert_in_epsilon(113.72570100000002, worksheet.intermediate_output_g220, 0.002); end
  def test_intermediate_output_h220; assert_in_epsilon(148.57712550000005, worksheet.intermediate_output_h220, 0.002); end
  def test_intermediate_output_i220; assert_in_epsilon(148.57712550000005, worksheet.intermediate_output_i220, 0.002); end
  def test_intermediate_output_j220; assert_in_epsilon(148.57712550000005, worksheet.intermediate_output_j220, 0.002); end
  def test_intermediate_output_k220; assert_in_epsilon(1543.513210071429, worksheet.intermediate_output_k220, 0.002); end
  def test_intermediate_output_l220; assert_in_epsilon(2938.449294642858, worksheet.intermediate_output_l220, 0.002); end
  def test_intermediate_output_m220; assert_in_epsilon(3303.6158089285723, worksheet.intermediate_output_m220, 0.002); end
  def test_intermediate_output_n220; assert_in_epsilon(3668.7823232142864, worksheet.intermediate_output_n220, 0.002); end
  def test_intermediate_output_o220; assert_in_epsilon(4033.9488375000005, worksheet.intermediate_output_o220, 0.002); end
  def test_intermediate_output_p220; assert_in_epsilon(4399.115351785715, worksheet.intermediate_output_p220, 0.002); end
  def test_intermediate_output_c221; assert_equal("R.01", worksheet.intermediate_output_c221); end
  def test_intermediate_output_d221; assert_equal("Solar", worksheet.intermediate_output_d221); end
  def test_intermediate_output_e221; assert_in_delta(0.0, (worksheet.intermediate_output_e221||0), 0.002); end
  def test_intermediate_output_f221; assert_in_delta(0.0, (worksheet.intermediate_output_f221||0), 0.002); end
  def test_intermediate_output_g221; assert_in_delta(0.2195325071903352, worksheet.intermediate_output_g221, 0.002); end
  def test_intermediate_output_h221; assert_in_epsilon(1.1423312484968173, worksheet.intermediate_output_h221, 0.002); end
  def test_intermediate_output_i221; assert_in_epsilon(15.259332102416753, worksheet.intermediate_output_i221, 0.002); end
  def test_intermediate_output_j221; assert_in_epsilon(964.8778560445022, worksheet.intermediate_output_j221, 0.002); end
  def test_intermediate_output_k221; assert_in_epsilon(1920.4882720036878, worksheet.intermediate_output_k221, 0.002); end
  def test_intermediate_output_l221; assert_in_epsilon(2879.8356526553885, worksheet.intermediate_output_l221, 0.002); end
  def test_intermediate_output_m221; assert_in_epsilon(3606.075422925517, worksheet.intermediate_output_m221, 0.002); end
  def test_intermediate_output_n221; assert_in_epsilon(4329.603526909826, worksheet.intermediate_output_n221, 0.002); end
  def test_intermediate_output_o221; assert_in_epsilon(5049.854609999183, worksheet.intermediate_output_o221, 0.002); end
  def test_intermediate_output_p221; assert_in_epsilon(5767.295828407349, worksheet.intermediate_output_p221, 0.002); end
  def test_intermediate_output_c222; assert_equal("R.02", worksheet.intermediate_output_c222); end
  def test_intermediate_output_d222; assert_equal("Wind", worksheet.intermediate_output_d222); end
  def test_intermediate_output_e222; assert_in_delta(0.0, (worksheet.intermediate_output_e222||0), 0.002); end
  def test_intermediate_output_f222; assert_in_delta(0.0, (worksheet.intermediate_output_f222||0), 0.002); end
  def test_intermediate_output_g222; assert_in_delta(0.055844328960000016, worksheet.intermediate_output_g222, 0.002); end
  def test_intermediate_output_h222; assert_in_delta(0.07387003008000001, worksheet.intermediate_output_h222, 0.002); end
  def test_intermediate_output_i222; assert_in_epsilon(11.57035420224, worksheet.intermediate_output_i222, 0.002); end
  def test_intermediate_output_j222; assert_in_epsilon(107.85635346816002, worksheet.intermediate_output_j222, 0.002); end
  def test_intermediate_output_k222; assert_in_epsilon(180.12560535359998, worksheet.intermediate_output_k222, 0.002); end
  def test_intermediate_output_l222; assert_in_epsilon(265.08384, worksheet.intermediate_output_l222, 0.002); end
  def test_intermediate_output_m222; assert_in_epsilon(276.129, worksheet.intermediate_output_m222, 0.002); end
  def test_intermediate_output_n222; assert_in_epsilon(331.35480000000007, worksheet.intermediate_output_n222, 0.002); end
  def test_intermediate_output_o222; assert_in_epsilon(386.58060000000006, worksheet.intermediate_output_o222, 0.002); end
  def test_intermediate_output_p222; assert_in_epsilon(441.80640000000005, worksheet.intermediate_output_p222, 0.002); end
  def test_intermediate_output_c223; assert_equal("R.06", worksheet.intermediate_output_c223); end
  def test_intermediate_output_d223; assert_equal("Hydro", worksheet.intermediate_output_d223); end
  def test_intermediate_output_e223; assert_in_delta(0.0, (worksheet.intermediate_output_e223||0), 0.002); end
  def test_intermediate_output_f223; assert_in_delta(0.0, (worksheet.intermediate_output_f223||0), 0.002); end
  def test_intermediate_output_g223; assert_in_epsilon(5.285898, worksheet.intermediate_output_g223, 0.002); end
  def test_intermediate_output_h223; assert_in_epsilon(5.285898, worksheet.intermediate_output_h223, 0.002); end
  def test_intermediate_output_i223; assert_in_epsilon(5.285898, worksheet.intermediate_output_i223, 0.002); end
  def test_intermediate_output_j223; assert_in_epsilon(5.285898, worksheet.intermediate_output_j223, 0.002); end
  def test_intermediate_output_k223; assert_in_epsilon(5.285898, worksheet.intermediate_output_k223, 0.002); end
  def test_intermediate_output_l223; assert_in_epsilon(5.285898, worksheet.intermediate_output_l223, 0.002); end
  def test_intermediate_output_m223; assert_in_epsilon(5.285898, worksheet.intermediate_output_m223, 0.002); end
  def test_intermediate_output_n223; assert_in_epsilon(5.285898, worksheet.intermediate_output_n223, 0.002); end
  def test_intermediate_output_o223; assert_in_epsilon(5.285898, worksheet.intermediate_output_o223, 0.002); end
  def test_intermediate_output_p223; assert_in_epsilon(5.285898, worksheet.intermediate_output_p223, 0.002); end
  def test_intermediate_output_c224; assert_equal("Y.02", worksheet.intermediate_output_c224); end
  def test_intermediate_output_d224; assert_equal("Electricity oversupply (imports)", worksheet.intermediate_output_d224); end
  def test_intermediate_output_e224; assert_in_delta(0.0, (worksheet.intermediate_output_e224||0), 0.002); end
  def test_intermediate_output_f224; assert_in_delta(0.0, (worksheet.intermediate_output_f224||0), 0.002); end
  def test_intermediate_output_g224; assert_in_delta(0.0, (worksheet.intermediate_output_g224||0), 0.002); end
  def test_intermediate_output_h224; assert_in_delta(0.0, (worksheet.intermediate_output_h224||0), 0.002); end
  def test_intermediate_output_i224; assert_in_delta(0.0, (worksheet.intermediate_output_i224||0), 0.002); end
  def test_intermediate_output_j224; assert_in_delta(0.0, (worksheet.intermediate_output_j224||0), 0.002); end
  def test_intermediate_output_k224; assert_in_delta(0.0, (worksheet.intermediate_output_k224||0), 0.002); end
  def test_intermediate_output_l224; assert_in_delta(0.0, (worksheet.intermediate_output_l224||0), 0.002); end
  def test_intermediate_output_m224; assert_in_delta(0.0, (worksheet.intermediate_output_m224||0), 0.002); end
  def test_intermediate_output_n224; assert_in_delta(0.0, (worksheet.intermediate_output_n224||0), 0.002); end
  def test_intermediate_output_o224; assert_in_delta(0.0, (worksheet.intermediate_output_o224||0), 0.002); end
  def test_intermediate_output_p224; assert_in_delta(0.0, (worksheet.intermediate_output_p224||0), 0.002); end
  def test_intermediate_output_c225; assert_equal("R.07", worksheet.intermediate_output_c225); end
  def test_intermediate_output_d225; assert_equal("Environmental heat", worksheet.intermediate_output_d225); end
  def test_intermediate_output_e225; assert_in_delta(0.0, (worksheet.intermediate_output_e225||0), 0.002); end
  def test_intermediate_output_f225; assert_in_delta(0.0, (worksheet.intermediate_output_f225||0), 0.002); end
  def test_intermediate_output_g225; assert_in_delta(0.0, (worksheet.intermediate_output_g225||0), 0.002); end
  def test_intermediate_output_h225; assert_in_delta(0.0, (worksheet.intermediate_output_h225||0), 0.002); end
  def test_intermediate_output_i225; assert_in_delta(0.0, (worksheet.intermediate_output_i225||0), 0.002); end
  def test_intermediate_output_j225; assert_in_delta(0.0, (worksheet.intermediate_output_j225||0), 0.002); end
  def test_intermediate_output_k225; assert_in_delta(0.0, (worksheet.intermediate_output_k225||0), 0.002); end
  def test_intermediate_output_l225; assert_in_delta(0.0, (worksheet.intermediate_output_l225||0), 0.002); end
  def test_intermediate_output_m225; assert_in_delta(0.0, (worksheet.intermediate_output_m225||0), 0.002); end
  def test_intermediate_output_n225; assert_in_delta(0.0, (worksheet.intermediate_output_n225||0), 0.002); end
  def test_intermediate_output_o225; assert_in_delta(0.0, (worksheet.intermediate_output_o225||0), 0.002); end
  def test_intermediate_output_p225; assert_in_delta(0.0, (worksheet.intermediate_output_p225||0), 0.002); end
  def test_intermediate_output_d226; assert_equal("Bioenergy", worksheet.intermediate_output_d226); end
  def test_intermediate_output_e226; assert_in_delta(0.0, (worksheet.intermediate_output_e226||0), 0.002); end
  def test_intermediate_output_f226; assert_in_delta(0.0, (worksheet.intermediate_output_f226||0), 0.002); end
  def test_intermediate_output_g226; assert_in_epsilon(-163.4381801831897, worksheet.intermediate_output_g226, 0.002); end
  def test_intermediate_output_h226; assert_in_epsilon(-207.1604084894533, worksheet.intermediate_output_h226, 0.002); end
  def test_intermediate_output_i226; assert_in_epsilon(-195.3594717738638, worksheet.intermediate_output_i226, 0.002); end
  def test_intermediate_output_j226; assert_in_epsilon(-189.92274817357, worksheet.intermediate_output_j226, 0.002); end
  def test_intermediate_output_k226; assert_in_epsilon(-182.23541312302967, worksheet.intermediate_output_k226, 0.002); end
  def test_intermediate_output_l226; assert_in_epsilon(-169.44250097577842, worksheet.intermediate_output_l226, 0.002); end
  def test_intermediate_output_m226; assert_in_epsilon(-164.38838598800862, worksheet.intermediate_output_m226, 0.002); end
  def test_intermediate_output_n226; assert_in_epsilon(-161.95104225070435, worksheet.intermediate_output_n226, 0.002); end
  def test_intermediate_output_o226; assert_in_epsilon(-118.67618991636385, worksheet.intermediate_output_o226, 0.002); end
  def test_intermediate_output_p226; assert_in_epsilon(-99.05998059172641, worksheet.intermediate_output_p226, 0.002); end
  def test_intermediate_output_d227; assert_equal("Coal", worksheet.intermediate_output_d227); end
  def test_intermediate_output_e227; assert_in_delta(0.0, (worksheet.intermediate_output_e227||0), 0.002); end
  def test_intermediate_output_f227; assert_in_delta(0.0, (worksheet.intermediate_output_f227||0), 0.002); end
  def test_intermediate_output_g227; assert_in_epsilon(3975.951157266053, worksheet.intermediate_output_g227, 0.002); end
  def test_intermediate_output_h227; assert_in_epsilon(4116.050764522572, worksheet.intermediate_output_h227, 0.002); end
  def test_intermediate_output_i227; assert_in_epsilon(4250.57432202361, worksheet.intermediate_output_i227, 0.002); end
  def test_intermediate_output_j227; assert_in_epsilon(1529.0024297634166, worksheet.intermediate_output_j227, 0.002); end
  def test_intermediate_output_k227; assert_in_epsilon(1366.274673062711, worksheet.intermediate_output_k227, 0.002); end
  def test_intermediate_output_l227; assert_in_epsilon(1368.960470724325, worksheet.intermediate_output_l227, 0.002); end
  def test_intermediate_output_m227; assert_in_epsilon(1407.1992171981753, worksheet.intermediate_output_m227, 0.002); end
  def test_intermediate_output_n227; assert_in_epsilon(1263.1961909586992, worksheet.intermediate_output_n227, 0.002); end
  def test_intermediate_output_o227; assert_in_epsilon(1343.3300580796422, worksheet.intermediate_output_o227, 0.002); end
  def test_intermediate_output_p227; assert_in_epsilon(1294.0937780490003, worksheet.intermediate_output_p227, 0.002); end
  def test_intermediate_output_d228; assert_equal("Oil", worksheet.intermediate_output_d228); end
  def test_intermediate_output_e228; assert_in_delta(0.0, (worksheet.intermediate_output_e228||0), 0.002); end
  def test_intermediate_output_f228; assert_in_delta(0.0, (worksheet.intermediate_output_f228||0), 0.002); end
  def test_intermediate_output_g228; assert_in_epsilon(664.1460502059357, worksheet.intermediate_output_g228, 0.002); end
  def test_intermediate_output_h228; assert_in_epsilon(621.4825741036079, worksheet.intermediate_output_h228, 0.002); end
  def test_intermediate_output_i228; assert_in_epsilon(606.5379716927544, worksheet.intermediate_output_i228, 0.002); end
  def test_intermediate_output_j228; assert_in_epsilon(596.8008345635882, worksheet.intermediate_output_j228, 0.002); end
  def test_intermediate_output_k228; assert_in_epsilon(577.7844387508538, worksheet.intermediate_output_k228, 0.002); end
  def test_intermediate_output_l228; assert_in_epsilon(553.7810493981501, worksheet.intermediate_output_l228, 0.002); end
  def test_intermediate_output_m228; assert_in_epsilon(556.2390543425856, worksheet.intermediate_output_m228, 0.002); end
  def test_intermediate_output_n228; assert_in_epsilon(616.2825587148807, worksheet.intermediate_output_n228, 0.002); end
  def test_intermediate_output_o228; assert_in_epsilon(586.0149656210677, worksheet.intermediate_output_o228, 0.002); end
  def test_intermediate_output_p228; assert_in_epsilon(637.6446579944602, worksheet.intermediate_output_p228, 0.002); end
  def test_intermediate_output_d229; assert_equal("Natural gas", worksheet.intermediate_output_d229); end
  def test_intermediate_output_e229; assert_in_delta(0.0, (worksheet.intermediate_output_e229||0), 0.002); end
  def test_intermediate_output_f229; assert_in_delta(0.0, (worksheet.intermediate_output_f229||0), 0.002); end
  def test_intermediate_output_g229; assert_in_epsilon(243.79442324880313, worksheet.intermediate_output_g229, 0.002); end
  def test_intermediate_output_h229; assert_in_epsilon(296.20827396053335, worksheet.intermediate_output_h229, 0.002); end
  def test_intermediate_output_i229; assert_in_epsilon(375.7754105696206, worksheet.intermediate_output_i229, 0.002); end
  def test_intermediate_output_j229; assert_in_epsilon(452.373607730131, worksheet.intermediate_output_j229, 0.002); end
  def test_intermediate_output_k229; assert_in_epsilon(583.7131059004623, worksheet.intermediate_output_k229, 0.002); end
  def test_intermediate_output_l229; assert_in_epsilon(1189.2551318200071, worksheet.intermediate_output_l229, 0.002); end
  def test_intermediate_output_m229; assert_in_epsilon(1435.247384079471, worksheet.intermediate_output_m229, 0.002); end
  def test_intermediate_output_n229; assert_in_epsilon(1701.2279339133438, worksheet.intermediate_output_n229, 0.002); end
  def test_intermediate_output_o229; assert_in_epsilon(2097.747050251807, worksheet.intermediate_output_o229, 0.002); end
  def test_intermediate_output_p229; assert_in_epsilon(2438.359820087157, worksheet.intermediate_output_p229, 0.002); end
  def test_intermediate_output_d230; assert_equal("Total Primary Supply", worksheet.intermediate_output_d230); end
  def test_intermediate_output_e230; assert_in_delta(0.0, (worksheet.intermediate_output_e230||0), 0.002); end
  def test_intermediate_output_f230; assert_in_delta(0.0, (worksheet.intermediate_output_f230||0), 0.002); end
  def test_intermediate_output_g230; assert_in_epsilon(4814.9218463737525, worksheet.intermediate_output_g230, 0.002); end
  def test_intermediate_output_h230; assert_in_epsilon(4955.061972875837, worksheet.intermediate_output_h230, 0.002); end
  def test_intermediate_output_i230; assert_in_epsilon(5196.1247914960795, worksheet.intermediate_output_i230, 0.002); end
  def test_intermediate_output_j230; assert_in_epsilon(3594.1734024172315, worksheet.intermediate_output_j230, 0.002); end
  def test_intermediate_output_k230; assert_in_epsilon(4643.797908790509, worksheet.intermediate_output_k230, 0.002); end
  def test_intermediate_output_l230; assert_in_epsilon(6010.939827509143, worksheet.intermediate_output_l230, 0.002); end
  def test_intermediate_output_m230; assert_in_epsilon(6562.873582987092, worksheet.intermediate_output_m230, 0.002); end
  def test_intermediate_output_n230; assert_in_epsilon(6988.716252994597, worksheet.intermediate_output_n230, 0.002); end
  def test_intermediate_output_o230; assert_in_epsilon(7746.4201335054895, worksheet.intermediate_output_o230, 0.002); end
  def test_intermediate_output_p230; assert_in_epsilon(8360.712456623683, worksheet.intermediate_output_p230, 0.002); end
  def test_intermediate_output_d231; assert_equal("Imported energy", worksheet.intermediate_output_d231); end
  def test_intermediate_output_f231; assert_in_delta(0.0, (worksheet.intermediate_output_f231||0), 0.002); end
  def test_intermediate_output_g231; assert_in_epsilon(960.4511744547387, worksheet.intermediate_output_g231, 0.002); end
  def test_intermediate_output_h231; assert_in_epsilon(1021.4679735641413, worksheet.intermediate_output_h231, 0.002); end
  def test_intermediate_output_i231; assert_in_epsilon(1104.4365557623748, worksheet.intermediate_output_i231, 0.002); end
  def test_intermediate_output_j231; assert_in_epsilon(745.3779600635883, worksheet.intermediate_output_j231, 0.002); end
  def test_intermediate_output_k231; assert_in_epsilon(2121.297648822283, worksheet.intermediate_output_k231, 0.002); end
  def test_intermediate_output_l231; assert_in_epsilon(3932.4452211321154, worksheet.intermediate_output_l231, 0.002); end
  def test_intermediate_output_m231; assert_in_epsilon(4581.171804904974, worksheet.intermediate_output_m231, 0.002); end
  def test_intermediate_output_n231; assert_in_epsilon(5339.700102581275, worksheet.intermediate_output_n231, 0.002); end
  def test_intermediate_output_o231; assert_in_epsilon(6152.793619277735, worksheet.intermediate_output_o231, 0.002); end
  def test_intermediate_output_p231; assert_in_epsilon(6993.284780210876, worksheet.intermediate_output_p231, 0.002); end
  def test_intermediate_output_d233; assert_equal("Primary demand", worksheet.intermediate_output_d233); end
  def test_intermediate_output_f233; assert_in_delta(0.0, (worksheet.intermediate_output_f233||0), 0.002); end
  def test_intermediate_output_g233; assert_in_epsilon(4869.52645874966, worksheet.intermediate_output_g233, 0.002); end
  def test_intermediate_output_h233; assert_in_epsilon(4995.109532246916, worksheet.intermediate_output_h233, 0.002); end
  def test_intermediate_output_i233; assert_in_epsilon(5240.075828962572, worksheet.intermediate_output_i233, 0.002); end
  def test_intermediate_output_j233; assert_in_epsilon(3635.870590066513, worksheet.intermediate_output_j233, 0.002); end
  def test_intermediate_output_k233; assert_in_epsilon(4675.582441445199, worksheet.intermediate_output_k233, 0.002); end
  def test_intermediate_output_l233; assert_in_epsilon(6046.406160592644, worksheet.intermediate_output_l233, 0.002); end
  def test_intermediate_output_m233; assert_in_epsilon(6647.978267653103, worksheet.intermediate_output_m233, 0.002); end
  def test_intermediate_output_n233; assert_in_epsilon(7126.268416306036, worksheet.intermediate_output_n233, 0.002); end
  def test_intermediate_output_o233; assert_in_epsilon(7883.097529204472, worksheet.intermediate_output_o233, 0.002); end
  def test_intermediate_output_p233; assert_in_epsilon(8542.141601991203, worksheet.intermediate_output_p233, 0.002); end
  def test_intermediate_output_b236; assert_equal("Electricity, format for web-based interface", worksheet.intermediate_output_b236); end
  def test_intermediate_output_c238; assert_equal("Electricity use by sector", worksheet.intermediate_output_c238); end
  def test_intermediate_output_g238; assert_in_epsilon(2006.0, worksheet.intermediate_output_g238, 0.002); end
  def test_intermediate_output_h238; assert_in_epsilon(2010.0, worksheet.intermediate_output_h238, 0.002); end
  def test_intermediate_output_i238; assert_in_epsilon(2015.0, worksheet.intermediate_output_i238, 0.002); end
  def test_intermediate_output_j238; assert_in_epsilon(2020.0, worksheet.intermediate_output_j238, 0.002); end
  def test_intermediate_output_k238; assert_in_epsilon(2025.0, worksheet.intermediate_output_k238, 0.002); end
  def test_intermediate_output_l238; assert_in_epsilon(2030.0, worksheet.intermediate_output_l238, 0.002); end
  def test_intermediate_output_m238; assert_in_epsilon(2035.0, worksheet.intermediate_output_m238, 0.002); end
  def test_intermediate_output_n238; assert_in_epsilon(2040.0, worksheet.intermediate_output_n238, 0.002); end
  def test_intermediate_output_o238; assert_in_epsilon(2045.0, worksheet.intermediate_output_o238, 0.002); end
  def test_intermediate_output_p238; assert_in_epsilon(2050.0, worksheet.intermediate_output_p238, 0.002); end
  def test_intermediate_output_q238; assert_equal("PJ", worksheet.intermediate_output_q238); end
  def test_intermediate_output_c239; assert_equal("V.01", worksheet.intermediate_output_c239); end
  def test_intermediate_output_c240; assert_equal("Res", worksheet.intermediate_output_c240); end
  def test_intermediate_output_d240; assert_equal("Residential", worksheet.intermediate_output_d240); end
  def test_intermediate_output_g240; assert_in_epsilon(150.74119629232618, worksheet.intermediate_output_g240, 0.002); end
  def test_intermediate_output_h240; assert_in_epsilon(164.80316090755434, worksheet.intermediate_output_h240, 0.002); end
  def test_intermediate_output_i240; assert_in_epsilon(187.1085256895494, worksheet.intermediate_output_i240, 0.002); end
  def test_intermediate_output_j240; assert_in_epsilon(211.33802797723027, worksheet.intermediate_output_j240, 0.002); end
  def test_intermediate_output_k240; assert_in_epsilon(224.61152781254407, worksheet.intermediate_output_k240, 0.002); end
  def test_intermediate_output_l240; assert_in_epsilon(233.99811017523925, worksheet.intermediate_output_l240, 0.002); end
  def test_intermediate_output_m240; assert_in_epsilon(247.91732167699863, worksheet.intermediate_output_m240, 0.002); end
  def test_intermediate_output_n240; assert_in_epsilon(259.9172094717963, worksheet.intermediate_output_n240, 0.002); end
  def test_intermediate_output_o240; assert_in_epsilon(269.8498374509912, worksheet.intermediate_output_o240, 0.002); end
  def test_intermediate_output_p240; assert_in_epsilon(277.8460434214628, worksheet.intermediate_output_p240, 0.002); end
  def test_intermediate_output_c241; assert_equal("Com", worksheet.intermediate_output_c241); end
  def test_intermediate_output_d241; assert_equal("Commercial", worksheet.intermediate_output_d241); end
  def test_intermediate_output_g241; assert_in_epsilon(105.05730459165791, worksheet.intermediate_output_g241, 0.002); end
  def test_intermediate_output_h241; assert_in_epsilon(114.9181249546317, worksheet.intermediate_output_h241, 0.002); end
  def test_intermediate_output_i241; assert_in_epsilon(127.08818616208006, worksheet.intermediate_output_i241, 0.002); end
  def test_intermediate_output_j241; assert_in_epsilon(141.91317269010125, worksheet.intermediate_output_j241, 0.002); end
  def test_intermediate_output_k241; assert_in_epsilon(159.99610378293667, worksheet.intermediate_output_k241, 0.002); end
  def test_intermediate_output_l241; assert_in_epsilon(179.54054237953775, worksheet.intermediate_output_l241, 0.002); end
  def test_intermediate_output_m241; assert_in_epsilon(193.08331082040465, worksheet.intermediate_output_m241, 0.002); end
  def test_intermediate_output_n241; assert_in_epsilon(208.42719300060645, worksheet.intermediate_output_n241, 0.002); end
  def test_intermediate_output_o241; assert_in_epsilon(225.7564713049543, worksheet.intermediate_output_o241, 0.002); end
  def test_intermediate_output_p241; assert_in_epsilon(245.27447814821141, worksheet.intermediate_output_p241, 0.002); end
  def test_intermediate_output_c242; assert_equal("Ind", worksheet.intermediate_output_c242); end
  def test_intermediate_output_d242; assert_equal("Industry", worksheet.intermediate_output_d242); end
  def test_intermediate_output_g242; assert_in_epsilon(421.6693628370874, worksheet.intermediate_output_g242, 0.002); end
  def test_intermediate_output_h242; assert_in_epsilon(415.6261256000089, worksheet.intermediate_output_h242, 0.002); end
  def test_intermediate_output_i242; assert_in_epsilon(432.2135776109476, worksheet.intermediate_output_i242, 0.002); end
  def test_intermediate_output_j242; assert_in_epsilon(483.90583489409113, worksheet.intermediate_output_j242, 0.002); end
  def test_intermediate_output_k242; assert_in_epsilon(515.3787779902318, worksheet.intermediate_output_k242, 0.002); end
  def test_intermediate_output_l242; assert_in_epsilon(540.2241449313483, worksheet.intermediate_output_l242, 0.002); end
  def test_intermediate_output_m242; assert_in_epsilon(557.8283923588417, worksheet.intermediate_output_m242, 0.002); end
  def test_intermediate_output_n242; assert_in_epsilon(564.1833841240881, worksheet.intermediate_output_n242, 0.002); end
  def test_intermediate_output_o242; assert_in_epsilon(579.1182624105768, worksheet.intermediate_output_o242, 0.002); end
  def test_intermediate_output_p242; assert_in_epsilon(579.7202133066852, worksheet.intermediate_output_p242, 0.002); end
  def test_intermediate_output_c243; assert_equal("Tra", worksheet.intermediate_output_c243); end
  def test_intermediate_output_d243; assert_equal("Transport", worksheet.intermediate_output_d243); end
  def test_intermediate_output_g243; assert_in_epsilon(32.07148565742084, worksheet.intermediate_output_g243, 0.002); end
  def test_intermediate_output_h243; assert_in_epsilon(36.558277011180124, worksheet.intermediate_output_h243, 0.002); end
  def test_intermediate_output_i243; assert_in_epsilon(47.533708619458274, worksheet.intermediate_output_i243, 0.002); end
  def test_intermediate_output_j243; assert_in_epsilon(60.57639374469047, worksheet.intermediate_output_j243, 0.002); end
  def test_intermediate_output_k243; assert_in_epsilon(74.77989169249499, worksheet.intermediate_output_k243, 0.002); end
  def test_intermediate_output_l243; assert_in_epsilon(90.21631437720703, worksheet.intermediate_output_l243, 0.002); end
  def test_intermediate_output_m243; assert_in_epsilon(105.5446227552502, worksheet.intermediate_output_m243, 0.002); end
  def test_intermediate_output_n243; assert_in_epsilon(121.65123095725164, worksheet.intermediate_output_n243, 0.002); end
  def test_intermediate_output_o243; assert_in_epsilon(138.17374161524867, worksheet.intermediate_output_o243, 0.002); end
  def test_intermediate_output_p243; assert_in_epsilon(155.6219177152487, worksheet.intermediate_output_p243, 0.002); end
  def test_intermediate_output_c244; assert_equal("Agl", worksheet.intermediate_output_c244); end
  def test_intermediate_output_d244; assert_equal("Agriculture and Land use", worksheet.intermediate_output_d244); end
  def test_intermediate_output_g244; assert_in_epsilon(20.760772499999998, worksheet.intermediate_output_g244, 0.002); end
  def test_intermediate_output_h244; assert_in_epsilon(21.350817792117, worksheet.intermediate_output_h244, 0.002); end
  def test_intermediate_output_i244; assert_in_epsilon(21.50203524503817, worksheet.intermediate_output_i244, 0.002); end
  def test_intermediate_output_j244; assert_in_epsilon(22.93288692450516, worksheet.intermediate_output_j244, 0.002); end
  def test_intermediate_output_k244; assert_in_epsilon(23.784949335160263, worksheet.intermediate_output_k244, 0.002); end
  def test_intermediate_output_l244; assert_in_epsilon(24.680475492071224, worksheet.intermediate_output_l244, 0.002); end
  def test_intermediate_output_m244; assert_in_epsilon(25.621682483112068, worksheet.intermediate_output_m244, 0.002); end
  def test_intermediate_output_n244; assert_in_epsilon(26.610900489920375, worksheet.intermediate_output_n244, 0.002); end
  def test_intermediate_output_o244; assert_in_epsilon(27.65057855681579, worksheet.intermediate_output_o244, 0.002); end
  def test_intermediate_output_p244; assert_in_epsilon(28.743290653991423, worksheet.intermediate_output_p244, 0.002); end
  def test_intermediate_output_c245; assert_equal("Fos", worksheet.intermediate_output_c245); end
  def test_intermediate_output_d245; assert_equal("Fossil fuel production", worksheet.intermediate_output_d245); end
  def test_intermediate_output_g245; assert_in_epsilon(27.343894317580418, worksheet.intermediate_output_g245, 0.002); end
  def test_intermediate_output_h245; assert_in_epsilon(25.944319174017874, worksheet.intermediate_output_h245, 0.002); end
  def test_intermediate_output_i245; assert_in_epsilon(25.60362141591957, worksheet.intermediate_output_i245, 0.002); end
  def test_intermediate_output_j245; assert_in_epsilon(28.43994715327203, worksheet.intermediate_output_j245, 0.002); end
  def test_intermediate_output_k245; assert_in_epsilon(50.0068487444462, worksheet.intermediate_output_k245, 0.002); end
  def test_intermediate_output_l245; assert_in_epsilon(49.100287983246105, worksheet.intermediate_output_l245, 0.002); end
  def test_intermediate_output_m245; assert_in_epsilon(44.54443313708717, worksheet.intermediate_output_m245, 0.002); end
  def test_intermediate_output_n245; assert_in_epsilon(31.562073695504328, worksheet.intermediate_output_n245, 0.002); end
  def test_intermediate_output_o245; assert_in_epsilon(29.22852300611375, worksheet.intermediate_output_o245, 0.002); end
  def test_intermediate_output_p245; assert_in_epsilon(19.43480417552856, worksheet.intermediate_output_p245, 0.002); end
  def test_intermediate_output_d246; assert_equal("Total PJ", worksheet.intermediate_output_d246); end
  def test_intermediate_output_g246; assert_in_epsilon(757.6440161960728, worksheet.intermediate_output_g246, 0.002); end
  def test_intermediate_output_h246; assert_in_epsilon(779.20082543951, worksheet.intermediate_output_h246, 0.002); end
  def test_intermediate_output_i246; assert_in_epsilon(841.0496547429931, worksheet.intermediate_output_i246, 0.002); end
  def test_intermediate_output_j246; assert_in_epsilon(949.1062633838902, worksheet.intermediate_output_j246, 0.002); end
  def test_intermediate_output_k246; assert_in_epsilon(1048.558099357814, worksheet.intermediate_output_k246, 0.002); end
  def test_intermediate_output_l246; assert_in_epsilon(1117.7598753386496, worksheet.intermediate_output_l246, 0.002); end
  def test_intermediate_output_m246; assert_in_epsilon(1174.5397632316945, worksheet.intermediate_output_m246, 0.002); end
  def test_intermediate_output_n246; assert_in_epsilon(1212.3519917391673, worksheet.intermediate_output_n246, 0.002); end
  def test_intermediate_output_o246; assert_in_epsilon(1269.7774143447007, worksheet.intermediate_output_o246, 0.002); end
  def test_intermediate_output_p246; assert_in_epsilon(1306.640747421128, worksheet.intermediate_output_p246, 0.002); end
  def test_intermediate_output_d247; assert_equal("GWh", worksheet.intermediate_output_d247); end
  def test_intermediate_output_g247; assert_in_epsilon(210456.6711655758, worksheet.intermediate_output_g247, 0.002); end
  def test_intermediate_output_h247; assert_in_epsilon(216444.67373319724, worksheet.intermediate_output_h247, 0.002); end
  def test_intermediate_output_i247; assert_in_epsilon(233624.90409527585, worksheet.intermediate_output_i247, 0.002); end
  def test_intermediate_output_j247; assert_in_epsilon(263640.6287177473, worksheet.intermediate_output_j247, 0.002); end
  def test_intermediate_output_k247; assert_in_epsilon(291266.1387105039, worksheet.intermediate_output_k247, 0.002); end
  def test_intermediate_output_l247; assert_in_epsilon(310488.854260736, worksheet.intermediate_output_l247, 0.002); end
  def test_intermediate_output_m247; assert_in_epsilon(326261.04534213734, worksheet.intermediate_output_m247, 0.002); end
  def test_intermediate_output_n247; assert_in_epsilon(336764.4421497687, worksheet.intermediate_output_n247, 0.002); end
  def test_intermediate_output_o247; assert_in_epsilon(352715.9484290835, worksheet.intermediate_output_o247, 0.002); end
  def test_intermediate_output_p247; assert_in_epsilon(362955.7631725356, worksheet.intermediate_output_p247, 0.002); end
  def test_intermediate_output_c297; assert_equal("Summary output tables for graphs, web interface", worksheet.intermediate_output_c297); end
  def test_intermediate_output_f299; assert_equal("list of tables for graphs:", worksheet.intermediate_output_f299); end
  def test_intermediate_output_c300; assert_equal("[add output tables for electricity supply, story]", worksheet.intermediate_output_c300); end
  def test_intermediate_output_f301; assert_equal("Page 1 of www - energy", worksheet.intermediate_output_f301); end
  def test_intermediate_output_f302; assert_equal("Final energy demand", worksheet.intermediate_output_f302); end
  def test_intermediate_output_f303; assert_equal("primary energy supply", worksheet.intermediate_output_f303); end
  def test_intermediate_output_f304; assert_equal("national greenhouse gas emissions", worksheet.intermediate_output_f304); end
  def test_intermediate_output_f306; assert_equal("page 2 - electricity", worksheet.intermediate_output_f306); end
  def test_intermediate_output_f307; assert_equal("electricity demand by sector", worksheet.intermediate_output_f307); end
  def test_intermediate_output_f308; assert_equal("electricity supply by technology", worksheet.intermediate_output_f308); end
  def test_intermediate_output_f309; assert_equal("installed capacity by technology", worksheet.intermediate_output_f309); end
  def test_intermediate_output_f310; assert_equal("emissions from electricity sector", worksheet.intermediate_output_f310); end
  def test_intermediate_output_f312; assert_equal("Page 3 - energy security", worksheet.intermediate_output_f312); end
  def test_intermediate_output_f313; assert_equal("dependence on imported energy", worksheet.intermediate_output_f313); end
  def test_intermediate_output_f314; assert_equal("diversity of energy sources", worksheet.intermediate_output_f314); end
  def test_intermediate_output_f316; assert_equal("Page 5 - scenario description", worksheet.intermediate_output_f316); end
  def test_intermediate_output_f318; assert_equal("[need cohherent table with headings etc]", worksheet.intermediate_output_f318); end
  def test_intermediate_output_c321; assert_equal("Electricity supply by technology (GWh)", worksheet.intermediate_output_c321); end
  def test_intermediate_output_c323; assert_equal("notes", worksheet.intermediate_output_c323); end
  def test_intermediate_output_g323; assert_in_epsilon(2006.0, worksheet.intermediate_output_g323, 0.002); end
  def test_intermediate_output_h323; assert_equal("2010", worksheet.intermediate_output_h323); end
  def test_intermediate_output_i323; assert_equal("2015", worksheet.intermediate_output_i323); end
  def test_intermediate_output_j323; assert_equal("2020", worksheet.intermediate_output_j323); end
  def test_intermediate_output_k323; assert_equal("2025", worksheet.intermediate_output_k323); end
  def test_intermediate_output_l323; assert_equal("2030", worksheet.intermediate_output_l323); end
  def test_intermediate_output_m323; assert_equal("2035", worksheet.intermediate_output_m323); end
  def test_intermediate_output_n323; assert_equal("2040", worksheet.intermediate_output_n323); end
  def test_intermediate_output_o323; assert_equal("2045", worksheet.intermediate_output_o323); end
  def test_intermediate_output_p323; assert_equal("2050", worksheet.intermediate_output_p323); end
  def test_intermediate_output_f324; assert_equal("Coal power", worksheet.intermediate_output_f324); end
  def test_intermediate_output_g324; assert_in_epsilon(850.5040970733838, worksheet.intermediate_output_g324, 0.002); end
  def test_intermediate_output_h324; assert_in_epsilon(916.6065074805028, worksheet.intermediate_output_h324, 0.002); end
  def test_intermediate_output_i324; assert_in_epsilon(972.0709186341646, worksheet.intermediate_output_i324, 0.002); end
  def test_intermediate_output_j324; assert_in_epsilon(60.32258214764738, worksheet.intermediate_output_j324, 0.002); end
  def test_intermediate_output_k324; assert_in_delta(0.0, (worksheet.intermediate_output_k324||0), 0.002); end
  def test_intermediate_output_l324; assert_in_delta(0.0, (worksheet.intermediate_output_l324||0), 0.002); end
  def test_intermediate_output_m324; assert_in_delta(0.0, (worksheet.intermediate_output_m324||0), 0.002); end
  def test_intermediate_output_n324; assert_in_delta(0.0, (worksheet.intermediate_output_n324||0), 0.002); end
  def test_intermediate_output_o324; assert_in_delta(0.0, (worksheet.intermediate_output_o324||0), 0.002); end
  def test_intermediate_output_p324; assert_in_delta(0.0, (worksheet.intermediate_output_p324||0), 0.002); end
  def test_intermediate_output_f325; assert_equal("Gas power", worksheet.intermediate_output_f325); end
  def test_intermediate_output_g325; assert_in_delta(0.20894301369863016, worksheet.intermediate_output_g325, 0.002); end
  def test_intermediate_output_h325; assert_in_delta(0.1802578754328802, worksheet.intermediate_output_h325, 0.002); end
  def test_intermediate_output_i325; assert_in_epsilon(2.7600412337343188, worksheet.intermediate_output_i325, 0.002); end
  def test_intermediate_output_j325; assert_in_epsilon(2.8190280588251593, worksheet.intermediate_output_j325, 0.002); end
  def test_intermediate_output_k325; assert_in_epsilon(3.0590055589054064, worksheet.intermediate_output_k325, 0.002); end
  def test_intermediate_output_l325; assert_in_epsilon(232.19398369265858, worksheet.intermediate_output_l325, 0.002); end
  def test_intermediate_output_m325; assert_in_epsilon(289.40949037265864, worksheet.intermediate_output_m325, 0.002); end
  def test_intermediate_output_n325; assert_in_epsilon(346.4711183785086, worksheet.intermediate_output_n325, 0.002); end
  def test_intermediate_output_o325; assert_in_epsilon(403.68662505850864, worksheet.intermediate_output_o325, 0.002); end
  def test_intermediate_output_p325; assert_in_epsilon(458.3970894505086, worksheet.intermediate_output_p325, 0.002); end
  def test_intermediate_output_f326; assert_equal("Nuclear", worksheet.intermediate_output_f326); end
  def test_intermediate_output_g326; assert_in_epsilon(36.392224320000004, worksheet.intermediate_output_g326, 0.002); end
  def test_intermediate_output_h326; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_h326, 0.002); end
  def test_intermediate_output_i326; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_i326, 0.002); end
  def test_intermediate_output_j326; assert_in_epsilon(47.54468016000001, worksheet.intermediate_output_j326, 0.002); end
  def test_intermediate_output_k326; assert_in_epsilon(535.7723097600001, worksheet.intermediate_output_k326, 0.002); end
  def test_intermediate_output_l326; assert_in_epsilon(1023.9999393600002, worksheet.intermediate_output_l326, 0.002); end
  def test_intermediate_output_m326; assert_in_epsilon(1151.8082193600003, worksheet.intermediate_output_m326, 0.002); end
  def test_intermediate_output_n326; assert_in_epsilon(1279.6164993600003, worksheet.intermediate_output_n326, 0.002); end
  def test_intermediate_output_o326; assert_in_epsilon(1407.4247793600002, worksheet.intermediate_output_o326, 0.002); end
  def test_intermediate_output_p326; assert_in_epsilon(1535.2330593600002, worksheet.intermediate_output_p326, 0.002); end
  def test_intermediate_output_f327; assert_equal("Wind", worksheet.intermediate_output_f327); end
  def test_intermediate_output_g327; assert_in_delta(0.055844328960000016, worksheet.intermediate_output_g327, 0.002); end
  def test_intermediate_output_h327; assert_in_delta(0.07387003008000001, worksheet.intermediate_output_h327, 0.002); end
  def test_intermediate_output_i327; assert_in_epsilon(11.57035420224, worksheet.intermediate_output_i327, 0.002); end
  def test_intermediate_output_j327; assert_in_epsilon(107.85635346816002, worksheet.intermediate_output_j327, 0.002); end
  def test_intermediate_output_k327; assert_in_epsilon(180.12560535359998, worksheet.intermediate_output_k327, 0.002); end
  def test_intermediate_output_l327; assert_in_epsilon(265.08384, worksheet.intermediate_output_l327, 0.002); end
  def test_intermediate_output_m327; assert_in_epsilon(276.129, worksheet.intermediate_output_m327, 0.002); end
  def test_intermediate_output_n327; assert_in_epsilon(331.35480000000007, worksheet.intermediate_output_n327, 0.002); end
  def test_intermediate_output_o327; assert_in_epsilon(386.58060000000006, worksheet.intermediate_output_o327, 0.002); end
  def test_intermediate_output_p327; assert_in_epsilon(441.80640000000005, worksheet.intermediate_output_p327, 0.002); end
  def test_intermediate_output_f328; assert_equal("Hydro", worksheet.intermediate_output_f328); end
  def test_intermediate_output_g328; assert_in_epsilon(31.320918000000006, worksheet.intermediate_output_g328, 0.002); end
  def test_intermediate_output_h328; assert_in_epsilon(31.320918000000006, worksheet.intermediate_output_h328, 0.002); end
  def test_intermediate_output_i328; assert_in_epsilon(37.00128600000001, worksheet.intermediate_output_i328, 0.002); end
  def test_intermediate_output_j328; assert_in_epsilon(37.00128600000001, worksheet.intermediate_output_j328, 0.002); end
  def test_intermediate_output_k328; assert_in_epsilon(92.16491752800002, worksheet.intermediate_output_k328, 0.002); end
  def test_intermediate_output_l328; assert_in_epsilon(139.8944621088, worksheet.intermediate_output_l328, 0.002); end
  def test_intermediate_output_m328; assert_in_epsilon(187.62400668960004, worksheet.intermediate_output_m328, 0.002); end
  def test_intermediate_output_n328; assert_in_epsilon(235.35355127040003, worksheet.intermediate_output_n328, 0.002); end
  def test_intermediate_output_o328; assert_in_epsilon(283.0830958512, worksheet.intermediate_output_o328, 0.002); end
  def test_intermediate_output_p328; assert_in_epsilon(330.812640432, worksheet.intermediate_output_p328, 0.002); end
  def test_intermediate_output_f329; assert_equal("Solar", worksheet.intermediate_output_f329); end
  def test_intermediate_output_g329; assert_in_delta(0.0, (worksheet.intermediate_output_g329||0), 0.002); end
  def test_intermediate_output_h329; assert_in_delta(0.08645917808219179, worksheet.intermediate_output_h329, 0.002); end
  def test_intermediate_output_i329; assert_in_epsilon(14.197223441356277, worksheet.intermediate_output_i329, 0.002); end
  def test_intermediate_output_j329; assert_in_epsilon(963.8735961835469, worksheet.intermediate_output_j329, 0.002); end
  def test_intermediate_output_k329; assert_in_epsilon(1919.5809759024553, worksheet.intermediate_output_k329, 0.002); end
  def test_intermediate_output_l329; assert_in_epsilon(2879.022472793743, worksheet.intermediate_output_l329, 0.002); end
  def test_intermediate_output_m329; assert_in_epsilon(3605.3507067400146, worksheet.intermediate_output_m329, 0.002); end
  def test_intermediate_output_n329; assert_in_epsilon(4328.960065817662, worksheet.intermediate_output_n329, 0.002); end
  def test_intermediate_output_o329; assert_in_epsilon(5049.285684860902, worksheet.intermediate_output_o329, 0.002); end
  def test_intermediate_output_p329; assert_in_epsilon(5766.794642003812, worksheet.intermediate_output_p329, 0.002); end
  def test_intermediate_output_c330; assert_equal("NOTE - this is a separate line, superimposed on the other stacked area graph", worksheet.intermediate_output_c330); end
  def test_intermediate_output_f330; assert_equal("Demand", worksheet.intermediate_output_f330); end
  def test_intermediate_output_g330; assert_in_epsilon(918.4820267360425, worksheet.intermediate_output_g330, 0.002); end
  def test_intermediate_output_h330; assert_in_epsilon(995.7262335460157, worksheet.intermediate_output_h330, 0.002); end
  def test_intermediate_output_i330; assert_in_epsilon(1084.6049152934402, worksheet.intermediate_output_i330, 0.002); end
  def test_intermediate_output_j330; assert_in_epsilon(1217.008664899736, worksheet.intermediate_output_j330, 0.002); end
  def test_intermediate_output_k330; assert_in_epsilon(1333.4046513158835, worksheet.intermediate_output_k330, 0.002); end
  def test_intermediate_output_l330; assert_in_epsilon(1413.1330708096941, worksheet.intermediate_output_l330, 0.002); end
  def test_intermediate_output_m330; assert_in_epsilon(1480.665217647233, worksheet.intermediate_output_m330, 0.002); end
  def test_intermediate_output_n330; assert_in_epsilon(1532.0228012898, worksheet.intermediate_output_n330, 0.002); end
  def test_intermediate_output_o330; assert_in_epsilon(1613.547201280785, worksheet.intermediate_output_o330, 0.002); end
  def test_intermediate_output_p330; assert_in_epsilon(1679.081974945837, worksheet.intermediate_output_p330, 0.002); end
  def test_intermediate_output_d342; assert_equal("nar", worksheet.intermediate_output_d342); end
  def test_intermediate_output_c343; assert_equal("Story", worksheet.intermediate_output_c343); end
  def test_intermediate_output_d343; assert_equal("Build a total of 40000MW by 2030. Additional 20000MW by 2050 for a total of 61800MW by 2050. Koeberg is not retired. ", worksheet.intermediate_output_d343); end
  def test_intermediate_output_d344; assert_equal("A total of 5000MW of coal CCS is built by 2030. And the capacity increases to 20000MW by 2050. ", worksheet.intermediate_output_d344); end
  def test_intermediate_output_d345; assert_equal("This doubles level 3. A total of 8532MW by 2030 and 17064MW by 2050. ", worksheet.intermediate_output_d345); end
  def test_intermediate_output_d346; assert_equal("Wind capacity reaches 28000MW by 2030 and this doubles to 56000MW by 2050, considered the most optimistic wind potential. ", worksheet.intermediate_output_d346); end
  def test_intermediate_output_d347; assert_equal("All residential homes have a solar PV system by 2050. The commercial sector solar PV adoption rate is 10% (about 20GW by 2050)", worksheet.intermediate_output_d347); end
  def test_intermediate_output_d348; assert_equal("Extreme build rate - a total of 136,900MW is built by 2030, this doubles to 273,800 MW by 2050 (half of the technical limit). ", worksheet.intermediate_output_d348); end
  def test_intermediate_output_d349; assert_equal("Extreme build rate - a total of 13690MW is built by 2030, this doubles to 27800MW by 2050 (half of the technical limit). ", worksheet.intermediate_output_d349); end
  def test_intermediate_output_d350; assert_equal("This level assumes we are able to import much more. Double level 3to 13896MW by 2050. ", worksheet.intermediate_output_d350); end
  def test_intermediate_output_d351; assert_equal(:ref, worksheet.intermediate_output_d351); end
  def test_intermediate_output_d352; assert_equal("Continued reduction in demand results in commercial cattle reaching 1.1 million in 2050", worksheet.intermediate_output_d352); end
  def test_intermediate_output_d353; assert_equal("14% of cropland is used to produce biofuels", worksheet.intermediate_output_d353); end
  def test_intermediate_output_d354; assert_equal("24% of waste is recycled, 76% goes to land fill. Gas capturing efforts increase and 70% of methane gas from landfill  is captured, 90% of which is used to produce energy (the remaining is flared)", worksheet.intermediate_output_d354); end
  def test_intermediate_output_d355; assert_equal("First generation energy crops are converted to biofuels", worksheet.intermediate_output_d355); end
  def test_intermediate_output_d356; assert_equal("South Africa produces natural gas from unconventional and conventional sources", worksheet.intermediate_output_d356); end
  def test_intermediate_output_d357; assert_equal("10% share of liquid fuel demand.", worksheet.intermediate_output_d357); end
  def test_intermediate_output_d358; assert_equal("Decomissioning of facilities by 2040 to a 50% reduction by 2050.", worksheet.intermediate_output_d358); end
  def test_intermediate_output_d359; assert_equal("Increase of gas feedstock share in CTL process  to 20%.", worksheet.intermediate_output_d359); end
  def test_intermediate_output_d360; assert_equal("25% of CO2 emissions suitable for CCS is sequestered by 2025. This amount increases to 50% by 2040.", worksheet.intermediate_output_d360); end
  def test_intermediate_output_d361; assert_equal("Decomissioning of facilities to nil GTL capacity by 2035.", worksheet.intermediate_output_d361); end
  def test_intermediate_output_d362; assert_equal("Decomissioning of facilities by 2035 to nil capacity by 2045.", worksheet.intermediate_output_d362); end
  def test_intermediate_output_d363; assert_equal("demand", worksheet.intermediate_output_d363); end
  def test_intermediate_output_d364; assert_equal("55% of passenger travel demand met being met by public transport", worksheet.intermediate_output_d364); end
  def test_intermediate_output_d365; assert_equal("It is assumed that 30% of energy demand is reduced.", worksheet.intermediate_output_d365); end
  def test_intermediate_output_d366; assert_equal("15% and 10% of electric and fuel cell powered vehicles will be sold by 2050 respectively. 70% of private fleet sales will be hybrids", worksheet.intermediate_output_d366); end
  def test_intermediate_output_d367; assert_equal("It is assumed that 1% of efficiency will be gained annually, resulting in overall efficiency gain of 66%  by 2050.", worksheet.intermediate_output_d367); end
  def test_intermediate_output_d368; assert_equal("Minibus, buses and private vehicle occupancies are increased to 17.1, 32  and 2.5 people per vehicle.", worksheet.intermediate_output_d368); end
  def test_intermediate_output_d369; assert_equal("38% of ton-km will be moved by road and the remaining 62%  by rail", worksheet.intermediate_output_d369); end
  def test_intermediate_output_d370; assert_equal("1% annual fuel economy improvement for road freight vehicles arising from higher power train efficiency, reduced drag and higher payloads and 0.5% annual operational efficiency improvements arising from green driving programmes and improved logistics. ", worksheet.intermediate_output_d370); end
  def test_intermediate_output_d371; assert_equal("100% by 2020. ", worksheet.intermediate_output_d371); end
  def test_intermediate_output_d372; assert_equal("As is in 2006. Lights are mainly incandescent or flourescent. Wtaer heating is coal or wood for the poor and mainly electric for mid to high income.", worksheet.intermediate_output_d372); end
  def test_intermediate_output_d373; assert_equal("By 2030: People shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. ALl fridges are energy efficient ones. \r\nAll fridges are energy efficient fridges.\r\nSpace heating – people shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. \r\nAll fridges are energy efficient fridges.\r\n", worksheet.intermediate_output_d373); end
  def test_intermediate_output_d374; assert_equal("As is today", worksheet.intermediate_output_d374); end
  def test_intermediate_output_d375; assert_equal("Reduction in electricity and fuel consumption by ca. 46% and 28%.", worksheet.intermediate_output_d375); end
  def test_intermediate_output_d376; assert_equal("Gas displaces ca. 46% of coal use and waste 11%.", worksheet.intermediate_output_d376); end
  def test_intermediate_output_d377; assert_equal("50% share of new industrial demand by 2050.", worksheet.intermediate_output_d377); end
  def test_intermediate_output_d378; assert_equal("25% energy reduction owing to reduced leaks in water system. All public lights are LEDs by 2030. ", worksheet.intermediate_output_d378); end
  def test_intermediate_output_d379; assert_equal("30% HVAC energy need reduction. All buildings with Leds by 2030.", worksheet.intermediate_output_d379); end
  def test_intermediate_output_d380; assert_equal("Assumes all lights are LEDs by 2030. All devices are efficient devices including heat pumps for heating, and efficient electrical systems by 2030", worksheet.intermediate_output_d380); end
  def test_intermediate_output_d381; assert_equal("Very strict code revision process. Buildings built after 2030 are 55% more efficient than today.", worksheet.intermediate_output_d381); end
  def test_intermediate_output_d387; assert_equal("Households in 2050", worksheet.intermediate_output_d387); end
  def test_intermediate_output_b451; assert_equal("h1", worksheet.intermediate_output_b451); end
  def test_intermediate_output_c451; assert_equal("Energy Supply", worksheet.intermediate_output_c451); end
  def test_intermediate_output_b452; assert_equal("h2", worksheet.intermediate_output_b452); end
  def test_intermediate_output_c452; assert_equal("Electricity generation", worksheet.intermediate_output_c452); end
  def test_intermediate_output_b453; assert_equal("h3", worksheet.intermediate_output_b453); end
  def test_intermediate_output_c453; assert_equal("Nuclear power stations", worksheet.intermediate_output_c453); end
  def test_intermediate_output_d453; assert_equal("Build a total of 40000MW by 2030. Additional 20000MW by 2050 for a total of 61800MW by 2050. Koeberg is not retired. ", worksheet.intermediate_output_d453); end
  def test_intermediate_output_b454; assert_equal("h3", worksheet.intermediate_output_b454); end
  def test_intermediate_output_c454; assert_equal("Coal with Carbon Capture and Storage", worksheet.intermediate_output_c454); end
  def test_intermediate_output_d454; assert_equal("A total of 5000MW of coal CCS is built by 2030. And the capacity increases to 20000MW by 2050. ", worksheet.intermediate_output_d454); end
  def test_intermediate_output_b455; assert_equal("h3", worksheet.intermediate_output_b455); end
  def test_intermediate_output_c455; assert_equal("Natural Gas Turbines", worksheet.intermediate_output_c455); end
  def test_intermediate_output_d455; assert_equal("This doubles level 3. A total of 8532MW by 2030 and 17064MW by 2050. ", worksheet.intermediate_output_d455); end
  def test_intermediate_output_b456; assert_equal("h3", worksheet.intermediate_output_b456); end
  def test_intermediate_output_c456; assert_equal("Onshore wind", worksheet.intermediate_output_c456); end
  def test_intermediate_output_d456; assert_equal("Wind capacity reaches 28000MW by 2030 and this doubles to 56000MW by 2050, considered the most optimistic wind potential. ", worksheet.intermediate_output_d456); end
  def test_intermediate_output_b457; assert_equal("h3", worksheet.intermediate_output_b457); end
  def test_intermediate_output_c457; assert_equal("Residential and Commercial Solar PV", worksheet.intermediate_output_c457); end
  def test_intermediate_output_d457; assert_equal("All residential homes have a solar PV system by 2050. The commercial sector solar PV adoption rate is 10% (about 20GW by 2050)", worksheet.intermediate_output_d457); end
  def test_intermediate_output_b458; assert_equal("h3", worksheet.intermediate_output_b458); end
  def test_intermediate_output_c458; assert_equal("Concentrated Solar Power", worksheet.intermediate_output_c458); end
  def test_intermediate_output_d458; assert_equal("Extreme build rate - a total of 136,900MW is built by 2030, this doubles to 273,800 MW by 2050 (half of the technical limit). ", worksheet.intermediate_output_d458); end
  def test_intermediate_output_b459; assert_equal("h3", worksheet.intermediate_output_b459); end
  def test_intermediate_output_c459; assert_equal("Centralised PV", worksheet.intermediate_output_c459); end
  def test_intermediate_output_d459; assert_equal("Extreme build rate - a total of 13690MW is built by 2030, this doubles to 27800MW by 2050 (half of the technical limit). ", worksheet.intermediate_output_d459); end
  def test_intermediate_output_b460; assert_equal("h3", worksheet.intermediate_output_b460); end
  def test_intermediate_output_c460; assert_equal("Hydroelectric Power Stations", worksheet.intermediate_output_c460); end
  def test_intermediate_output_d460; assert_equal("This level assumes we are able to import much more. Double level 3to 13896MW by 2050. ", worksheet.intermediate_output_d460); end
  def test_intermediate_output_b461; assert_equal("h3", worksheet.intermediate_output_b461); end
  def test_intermediate_output_c461; assert_equal("Carbon Capture and Storage", worksheet.intermediate_output_c461); end
  def test_intermediate_output_d461; assert_equal("25% of CO2 emissions suitable for CCS is sequestered by 2025. This amount increases to 50% by 2040.", worksheet.intermediate_output_d461); end
  def test_intermediate_output_b462; assert_equal("h2", worksheet.intermediate_output_b462); end
  def test_intermediate_output_c462; assert_equal("Liquid Fuels supply", worksheet.intermediate_output_c462); end
  def test_intermediate_output_b463; assert_equal("h3", worksheet.intermediate_output_b463); end
  def test_intermediate_output_c463; assert_equal(:ref, worksheet.intermediate_output_c463); end
  def test_intermediate_output_d463; assert_equal(:ref, worksheet.intermediate_output_d463); end
  def test_intermediate_output_b464; assert_equal("h3", worksheet.intermediate_output_b464); end
  def test_intermediate_output_c464; assert_equal("Waste conversion & biofuels ", worksheet.intermediate_output_c464); end
  def test_intermediate_output_d464; assert_equal("First generation energy crops are converted to biofuels", worksheet.intermediate_output_d464); end
  def test_intermediate_output_b465; assert_equal("h3", worksheet.intermediate_output_b465); end
  def test_intermediate_output_c465; assert_equal("Liquid biofuel share", worksheet.intermediate_output_c465); end
  def test_intermediate_output_d465; assert_equal("10% share of liquid fuel demand.", worksheet.intermediate_output_d465); end
  def test_intermediate_output_b466; assert_equal("h3", worksheet.intermediate_output_b466); end
  def test_intermediate_output_c466; assert_equal("Coal-To-Liquids capacity", worksheet.intermediate_output_c466); end
  def test_intermediate_output_d466; assert_equal("Decomissioning of facilities by 2040 to a 50% reduction by 2050.", worksheet.intermediate_output_d466); end
  def test_intermediate_output_b467; assert_equal("h3", worksheet.intermediate_output_b467); end
  def test_intermediate_output_c467; assert_equal("Gas material share", worksheet.intermediate_output_c467); end
  def test_intermediate_output_d467; assert_equal("Increase of gas feedstock share in CTL process  to 20%.", worksheet.intermediate_output_d467); end
  def test_intermediate_output_b468; assert_equal("h3", worksheet.intermediate_output_b468); end
  def test_intermediate_output_c468; assert_equal("Gas-To-Liquids capacity", worksheet.intermediate_output_c468); end
  def test_intermediate_output_d468; assert_equal("Decomissioning of facilities to nil GTL capacity by 2035.", worksheet.intermediate_output_d468); end
  def test_intermediate_output_b469; assert_equal("h3", worksheet.intermediate_output_b469); end
  def test_intermediate_output_c469; assert_equal("Refinery Capacity", worksheet.intermediate_output_c469); end
  def test_intermediate_output_d469; assert_equal("Decomissioning of facilities by 2035 to nil capacity by 2045.", worksheet.intermediate_output_d469); end
  def test_intermediate_output_b470; assert_equal("h2", worksheet.intermediate_output_b470); end
  def test_intermediate_output_c470; assert_equal("Natural Gas supply", worksheet.intermediate_output_c470); end
  def test_intermediate_output_b471; assert_equal("h3", worksheet.intermediate_output_b471); end
  def test_intermediate_output_c471; assert_equal("Supply of natural gas", worksheet.intermediate_output_c471); end
  def test_intermediate_output_d471; assert_equal("South Africa produces natural gas from unconventional and conventional sources", worksheet.intermediate_output_d471); end
  def test_intermediate_output_b472; assert_equal("h1", worksheet.intermediate_output_b472); end
  def test_intermediate_output_c472; assert_equal("Energy Demand", worksheet.intermediate_output_c472); end
  def test_intermediate_output_b473; assert_equal("h2", worksheet.intermediate_output_b473); end
  def test_intermediate_output_c473; assert_equal("Households", worksheet.intermediate_output_c473); end
  def test_intermediate_output_b474; assert_equal("h3", worksheet.intermediate_output_b474); end
  def test_intermediate_output_c474; assert_equal("Electrification of households across South Africa", worksheet.intermediate_output_c474); end
  def test_intermediate_output_d474; assert_equal("100% by 2020. ", worksheet.intermediate_output_d474); end
  def test_intermediate_output_b475; assert_equal("h3", worksheet.intermediate_output_b475); end
  def test_intermediate_output_c475; assert_equal("Lighting, Water Heating, Appliances", worksheet.intermediate_output_c475); end
  def test_intermediate_output_d475; assert_equal("As is in 2006. Lights are mainly incandescent or flourescent. Wtaer heating is coal or wood for the poor and mainly electric for mid to high income.", worksheet.intermediate_output_d475); end
  def test_intermediate_output_b476; assert_equal("h3", worksheet.intermediate_output_b476); end
  def test_intermediate_output_c476; assert_equal("Space heating, Refridgeration, Cooking", worksheet.intermediate_output_c476); end
  def test_intermediate_output_d476; assert_equal("By 2030: People shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. ALl fridges are energy efficient ones. \r\nAll fridges are energy efficient fridges.\r\nSpace heating – people shift to using electric heaters and heat pumps (more efficient) and LPG heaters. In cooking people shift to using electric or LPG for cooking purposes. \r\nAll fridges are energy efficient fridges.\r\n", worksheet.intermediate_output_d476); end
  def test_intermediate_output_b477; assert_equal("h3", worksheet.intermediate_output_b477); end
  def test_intermediate_output_c477; assert_equal("SWH scenario", worksheet.intermediate_output_c477); end
  def test_intermediate_output_d477; assert_equal("As is today", worksheet.intermediate_output_d477); end
  def test_intermediate_output_b478; assert_equal("h2", worksheet.intermediate_output_b478); end
  def test_intermediate_output_c478; assert_equal("Industry", worksheet.intermediate_output_c478); end
  def test_intermediate_output_b479; assert_equal("h3", worksheet.intermediate_output_b479); end
  def test_intermediate_output_c479; assert_equal("Energy Efficiency", worksheet.intermediate_output_c479); end
  def test_intermediate_output_d479; assert_equal("Reduction in electricity and fuel consumption by ca. 46% and 28%.", worksheet.intermediate_output_d479); end
  def test_intermediate_output_b480; assert_equal("h3", worksheet.intermediate_output_b480); end
  def test_intermediate_output_c480; assert_equal("Fuel migration to gas and waste for boilers and furnaces", worksheet.intermediate_output_c480); end
  def test_intermediate_output_d480; assert_equal("Gas displaces ca. 46% of coal use and waste 11%.", worksheet.intermediate_output_d480); end
  def test_intermediate_output_b481; assert_equal("h3", worksheet.intermediate_output_b481); end
  def test_intermediate_output_c481; assert_equal("CHP share of demand above base year", worksheet.intermediate_output_c481); end
  def test_intermediate_output_d481; assert_equal("50% share of new industrial demand by 2050.", worksheet.intermediate_output_d481); end
  def test_intermediate_output_b482; assert_equal("h2", worksheet.intermediate_output_b482); end
  def test_intermediate_output_c482; assert_equal("Commercial", worksheet.intermediate_output_c482); end
  def test_intermediate_output_b483; assert_equal("h3", worksheet.intermediate_output_b483); end
  def test_intermediate_output_c483; assert_equal("Public Services", worksheet.intermediate_output_c483); end
  def test_intermediate_output_d483; assert_equal("25% energy reduction owing to reduced leaks in water system. All public lights are LEDs by 2030. ", worksheet.intermediate_output_d483); end
  def test_intermediate_output_b484; assert_equal("h3", worksheet.intermediate_output_b484); end
  def test_intermediate_output_c484; assert_equal("Building Retrofits for HVAC ", worksheet.intermediate_output_c484); end
  def test_intermediate_output_d484; assert_equal("30% HVAC energy need reduction. All buildings with Leds by 2030.", worksheet.intermediate_output_d484); end
  def test_intermediate_output_b485; assert_equal("h3", worksheet.intermediate_output_b485); end
  def test_intermediate_output_c485; assert_equal("Building Tech Shares Mix", worksheet.intermediate_output_c485); end
  def test_intermediate_output_d485; assert_equal("Assumes all lights are LEDs by 2030. All devices are efficient devices including heat pumps for heating, and efficient electrical systems by 2030", worksheet.intermediate_output_d485); end
  def test_intermediate_output_b486; assert_equal("h3", worksheet.intermediate_output_b486); end
  def test_intermediate_output_c486; assert_equal("Building Codes - Energy Efficiency Increased", worksheet.intermediate_output_c486); end
  def test_intermediate_output_d486; assert_equal("Very strict code revision process. Buildings built after 2030 are 55% more efficient than today.", worksheet.intermediate_output_d486); end
  def test_intermediate_output_b487; assert_equal("h2", worksheet.intermediate_output_b487); end
  def test_intermediate_output_c487; assert_equal("Transport", worksheet.intermediate_output_c487); end
  def test_intermediate_output_b488; assert_equal("h3", worksheet.intermediate_output_b488); end
  def test_intermediate_output_c488; assert_equal(" Mode Share ", worksheet.intermediate_output_c488); end
  def test_intermediate_output_d488; assert_equal("55% of passenger travel demand met being met by public transport", worksheet.intermediate_output_d488); end
  def test_intermediate_output_b489; assert_equal("h3", worksheet.intermediate_output_b489); end
  def test_intermediate_output_c489; assert_equal("Reduced Travel Demand", worksheet.intermediate_output_c489); end
  def test_intermediate_output_d489; assert_equal("It is assumed that 30% of energy demand is reduced.", worksheet.intermediate_output_d489); end
  def test_intermediate_output_b490; assert_equal("h3", worksheet.intermediate_output_b490); end
  def test_intermediate_output_c490; assert_equal("Shift to lower emissions technologies", worksheet.intermediate_output_c490); end
  def test_intermediate_output_d490; assert_equal("15% and 10% of electric and fuel cell powered vehicles will be sold by 2050 respectively. 70% of private fleet sales will be hybrids", worksheet.intermediate_output_d490); end
  def test_intermediate_output_b491; assert_equal("h3", worksheet.intermediate_output_b491); end
  def test_intermediate_output_c491; assert_equal("Vehicle efficiency improvement", worksheet.intermediate_output_c491); end
  def test_intermediate_output_d491; assert_equal("It is assumed that 1% of efficiency will be gained annually, resulting in overall efficiency gain of 66%  by 2050.", worksheet.intermediate_output_d491); end
  def test_intermediate_output_b492; assert_equal("h3", worksheet.intermediate_output_b492); end
  def test_intermediate_output_c492; assert_equal("Vehicle Occupancy", worksheet.intermediate_output_c492); end
  def test_intermediate_output_d492; assert_equal("Minibus, buses and private vehicle occupancies are increased to 17.1, 32  and 2.5 people per vehicle.", worksheet.intermediate_output_d492); end
  def test_intermediate_output_b493; assert_equal("h3", worksheet.intermediate_output_b493); end
  def test_intermediate_output_c493; assert_equal("Freight mode shift", worksheet.intermediate_output_c493); end
  def test_intermediate_output_d493; assert_equal("38% of ton-km will be moved by road and the remaining 62%  by rail", worksheet.intermediate_output_d493); end
  def test_intermediate_output_b494; assert_equal("h3", worksheet.intermediate_output_b494); end
  def test_intermediate_output_c494; assert_equal("Freight vehicle efficiency improvement", worksheet.intermediate_output_c494); end
  def test_intermediate_output_d494; assert_equal("1% annual fuel economy improvement for road freight vehicles arising from higher power train efficiency, reduced drag and higher payloads and 0.5% annual operational efficiency improvements arising from green driving programmes and improved logistics. ", worksheet.intermediate_output_d494); end
  def test_intermediate_output_b495; assert_equal("h1", worksheet.intermediate_output_b495); end
  def test_intermediate_output_c495; assert_equal("Land use and Waste", worksheet.intermediate_output_c495); end
  def test_intermediate_output_b496; assert_equal("h3", worksheet.intermediate_output_b496); end
  def test_intermediate_output_c496; assert_equal("Livestock Management", worksheet.intermediate_output_c496); end
  def test_intermediate_output_d496; assert_equal("Continued reduction in demand results in commercial cattle reaching 1.1 million in 2050", worksheet.intermediate_output_d496); end
  def test_intermediate_output_b497; assert_equal("h3", worksheet.intermediate_output_b497); end
  def test_intermediate_output_c497; assert_equal("Land Use ", worksheet.intermediate_output_c497); end
  def test_intermediate_output_d497; assert_equal("14% of cropland is used to produce biofuels", worksheet.intermediate_output_d497); end
  def test_intermediate_output_b498; assert_equal("h3", worksheet.intermediate_output_b498); end
  def test_intermediate_output_c498; assert_equal("Waste ", worksheet.intermediate_output_c498); end
  def test_intermediate_output_d498; assert_equal("24% of waste is recycled, 76% goes to land fill. Gas capturing efforts increase and 70% of methane gas from landfill  is captured, 90% of which is used to produce energy (the remaining is flared)", worksheet.intermediate_output_d498); end
  def test_intermediate_output_d511; assert_equal("Households in 2050", worksheet.intermediate_output_d511); end
  def test_flows_c2; assert_equal("Flows table", worksheet.flows_c2); end
  def test_flows_c4; assert_equal("Need to type in the sheet name as many times as there are items in that sheets' flow table. The rest is automatic. ", worksheet.flows_c4); end
  def test_flows_c5; assert_equal("^", worksheet.flows_c5); end
  def test_flows_a6; assert_equal("From", worksheet.flows_a6); end
  def test_flows_b6; assert_equal("To", worksheet.flows_b6); end
  def test_flows_c6; assert_equal("Sheet", worksheet.flows_c6); end
  def test_flows_d6; assert_equal("From", worksheet.flows_d6); end
  def test_flows_e6; assert_equal("To", worksheet.flows_e6); end
  def test_flows_f6; assert_equal("Row Number", worksheet.flows_f6); end
  def test_flows_g6; assert_in_epsilon(2006.0, worksheet.flows_g6, 0.002); end
  def test_flows_h6; assert_in_epsilon(2010.0, worksheet.flows_h6, 0.002); end
  def test_flows_i6; assert_in_epsilon(2015.0, worksheet.flows_i6, 0.002); end
  def test_flows_j6; assert_in_epsilon(2020.0, worksheet.flows_j6, 0.002); end
  def test_flows_k6; assert_in_epsilon(2025.0, worksheet.flows_k6, 0.002); end
  def test_flows_l6; assert_in_epsilon(2030.0, worksheet.flows_l6, 0.002); end
  def test_flows_m6; assert_in_epsilon(2035.0, worksheet.flows_m6, 0.002); end
  def test_flows_n6; assert_in_epsilon(2040.0, worksheet.flows_n6, 0.002); end
  def test_flows_o6; assert_in_epsilon(2045.0, worksheet.flows_o6, 0.002); end
  def test_flows_p6; assert_in_epsilon(2050.0, worksheet.flows_p6, 0.002); end
  def test_flows_c8; assert_equal("Therm.a", worksheet.flows_c8); end
  def test_flows_d8; assert_equal("Coal ", worksheet.flows_d8); end
  def test_flows_e8; assert_equal("Thermal generation", worksheet.flows_e8); end
  def test_flows_f8; assert_in_delta(1.0, worksheet.flows_f8, 0.002); end
  def test_flows_g8; assert_in_epsilon(2556.687436492152, worksheet.flows_g8, 0.002); end
  def test_flows_h8; assert_in_epsilon(2734.3016887864023, worksheet.flows_h8, 0.002); end
  def test_flows_i8; assert_in_epsilon(2877.9390197822363, worksheet.flows_i8, 0.002); end
  def test_flows_j8; assert_in_epsilon(169.29441280244652, worksheet.flows_j8, 0.002); end
  def test_flows_k8; assert_in_delta(0.0, (worksheet.flows_k8||0), 0.002); end
  def test_flows_l8; assert_in_delta(0.0, (worksheet.flows_l8||0), 0.002); end
  def test_flows_m8; assert_in_delta(0.0, (worksheet.flows_m8||0), 0.002); end
  def test_flows_n8; assert_in_delta(0.0, (worksheet.flows_n8||0), 0.002); end
  def test_flows_o8; assert_in_delta(0.0, (worksheet.flows_o8||0), 0.002); end
  def test_flows_p8; assert_in_delta(0.0, (worksheet.flows_p8||0), 0.002); end
  def test_flows_c9; assert_equal("Therm.a", worksheet.flows_c9); end
  def test_flows_d9; assert_equal("Biomass", worksheet.flows_d9); end
  def test_flows_e9; assert_equal("Thermal generation", worksheet.flows_e9); end
  def test_flows_f9; assert_in_epsilon(2.0, worksheet.flows_f9, 0.002); end
  def test_flows_g9; assert_in_delta(0.0, (worksheet.flows_g9||0), 0.002); end
  def test_flows_h9; assert_in_epsilon(26.544738355200003, worksheet.flows_h9, 0.002); end
  def test_flows_i9; assert_in_epsilon(26.544738355200003, worksheet.flows_i9, 0.002); end
  def test_flows_j9; assert_in_epsilon(26.544738355200003, worksheet.flows_j9, 0.002); end
  def test_flows_k9; assert_in_delta(0.0, (worksheet.flows_k9||0), 0.002); end
  def test_flows_l9; assert_in_delta(0.0, (worksheet.flows_l9||0), 0.002); end
  def test_flows_m9; assert_in_delta(0.0, (worksheet.flows_m9||0), 0.002); end
  def test_flows_n9; assert_in_delta(0.0, (worksheet.flows_n9||0), 0.002); end
  def test_flows_o9; assert_in_delta(0.0, (worksheet.flows_o9||0), 0.002); end
  def test_flows_p9; assert_in_delta(0.0, (worksheet.flows_p9||0), 0.002); end
  def test_flows_c10; assert_equal("Therm.a", worksheet.flows_c10); end
  def test_flows_d10; assert_equal("Thermal generation", worksheet.flows_d10); end
  def test_flows_e10; assert_equal("Losses", worksheet.flows_e10); end
  def test_flows_f10; assert_in_epsilon(3.0, worksheet.flows_f10, 0.002); end
  def test_flows_g10; assert_in_epsilon(1706.1833394187681, worksheet.flows_g10, 0.002); end
  def test_flows_h10; assert_in_epsilon(1844.2399196610995, worksheet.flows_h10, 0.002); end
  def test_flows_i10; assert_in_epsilon(1932.4128395032717, worksheet.flows_i10, 0.002); end
  def test_flows_j10; assert_in_epsilon(135.51656900999913, worksheet.flows_j10, 0.002); end
  def test_flows_k10; assert_in_delta(0.0, (worksheet.flows_k10||0), 0.002); end
  def test_flows_l10; assert_in_delta(0.0, (worksheet.flows_l10||0), 0.002); end
  def test_flows_m10; assert_in_delta(0.0, (worksheet.flows_m10||0), 0.002); end
  def test_flows_n10; assert_in_delta(0.0, (worksheet.flows_n10||0), 0.002); end
  def test_flows_o10; assert_in_delta(0.0, (worksheet.flows_o10||0), 0.002); end
  def test_flows_p10; assert_in_delta(0.0, (worksheet.flows_p10||0), 0.002); end
  def test_flows_c11; assert_equal("Therm.a", worksheet.flows_c11); end
  def test_flows_d11; assert_equal("Thermal generation", worksheet.flows_d11); end
  def test_flows_e11; assert_equal("Electricity grid", worksheet.flows_e11); end
  def test_flows_f11; assert_in_epsilon(4.0, worksheet.flows_f11, 0.002); end
  def test_flows_g11; assert_in_epsilon(850.5040970733838, worksheet.flows_g11, 0.002); end
  def test_flows_h11; assert_in_epsilon(916.6065074805028, worksheet.flows_h11, 0.002); end
  def test_flows_i11; assert_in_epsilon(972.0709186341646, worksheet.flows_i11, 0.002); end
  def test_flows_j11; assert_in_epsilon(60.32258214764738, worksheet.flows_j11, 0.002); end
  def test_flows_k11; assert_in_delta(0.0, (worksheet.flows_k11||0), 0.002); end
  def test_flows_l11; assert_in_delta(0.0, (worksheet.flows_l11||0), 0.002); end
  def test_flows_m11; assert_in_delta(0.0, (worksheet.flows_m11||0), 0.002); end
  def test_flows_n11; assert_in_delta(0.0, (worksheet.flows_n11||0), 0.002); end
  def test_flows_o11; assert_in_delta(0.0, (worksheet.flows_o11||0), 0.002); end
  def test_flows_p11; assert_in_delta(0.0, (worksheet.flows_p11||0), 0.002); end
  def test_flows_c12; assert_equal("Therm.b", worksheet.flows_c12); end
  def test_flows_d12; assert_equal("Gas", worksheet.flows_d12); end
  def test_flows_e12; assert_equal("Thermal generation", worksheet.flows_e12); end
  def test_flows_f12; assert_in_delta(1.0, worksheet.flows_f12, 0.002); end
  def test_flows_g12; assert_in_delta(0.0, (worksheet.flows_g12||0), 0.002); end
  def test_flows_h12; assert_in_delta(0.0, (worksheet.flows_h12||0), 0.002); end
  def test_flows_i12; assert_in_epsilon(5.218838100000001, worksheet.flows_i12, 0.002); end
  def test_flows_j12; assert_in_epsilon(5.218838100000001, worksheet.flows_j12, 0.002); end
  def test_flows_k12; assert_in_epsilon(6.0461293128385885, worksheet.flows_k12, 0.002); end
  def test_flows_l12; assert_in_epsilon(484.4845632364902, worksheet.flows_l12, 0.002); end
  def test_flows_m12; assert_in_epsilon(603.6835354864902, worksheet.flows_m12, 0.002); end
  def test_flows_n12; assert_in_epsilon(722.422901543612, worksheet.flows_n12, 0.002); end
  def test_flows_o12; assert_in_epsilon(841.6218737936122, worksheet.flows_o12, 0.002); end
  def test_flows_p12; assert_in_epsilon(955.6020079436121, worksheet.flows_p12, 0.002); end
  def test_flows_c13; assert_equal("Therm.b", worksheet.flows_c13); end
  def test_flows_d13; assert_equal("Thermal generation", worksheet.flows_d13); end
  def test_flows_e13; assert_equal("Electricity grid", worksheet.flows_e13); end
  def test_flows_f13; assert_in_epsilon(2.0, worksheet.flows_f13, 0.002); end
  def test_flows_g13; assert_in_delta(0.20894301369863016, worksheet.flows_g13, 0.002); end
  def test_flows_h13; assert_in_delta(0.1802578754328802, worksheet.flows_h13, 0.002); end
  def test_flows_i13; assert_in_epsilon(2.7600412337343188, worksheet.flows_i13, 0.002); end
  def test_flows_j13; assert_in_epsilon(2.8190280588251593, worksheet.flows_j13, 0.002); end
  def test_flows_k13; assert_in_epsilon(3.0590055589054064, worksheet.flows_k13, 0.002); end
  def test_flows_l13; assert_in_epsilon(232.19398369265858, worksheet.flows_l13, 0.002); end
  def test_flows_m13; assert_in_epsilon(289.40949037265864, worksheet.flows_m13, 0.002); end
  def test_flows_n13; assert_in_epsilon(346.4711183785086, worksheet.flows_n13, 0.002); end
  def test_flows_o13; assert_in_epsilon(403.68662505850864, worksheet.flows_o13, 0.002); end
  def test_flows_p13; assert_in_epsilon(458.3970894505086, worksheet.flows_p13, 0.002); end
  def test_flows_c14; assert_equal("Therm.b", worksheet.flows_c14); end
  def test_flows_d14; assert_equal("Thermal generation", worksheet.flows_d14); end
  def test_flows_e14; assert_equal("Losses", worksheet.flows_e14); end
  def test_flows_f14; assert_in_epsilon(3.0, worksheet.flows_f14, 0.002); end
  def test_flows_g14; assert_in_delta(0.4381350024478163, worksheet.flows_g14, 0.002); end
  def test_flows_h14; assert_in_delta(0.35813795051002373, worksheet.flows_h14, 0.002); end
  def test_flows_i14; assert_in_epsilon(3.2204299858922294, worksheet.flows_i14, 0.002); end
  def test_flows_j14; assert_in_epsilon(3.337625534737989, worksheet.flows_j14, 0.002); end
  def test_flows_k14; assert_in_epsilon(3.8144149667717686, worksheet.flows_k14, 0.002); end
  def test_flows_l14; assert_in_epsilon(252.29057954383157, worksheet.flows_l14, 0.002); end
  def test_flows_m14; assert_in_epsilon(314.2740451138316, worksheet.flows_m14, 0.002); end
  def test_flows_n14; assert_in_epsilon(375.95178316510356, worksheet.flows_n14, 0.002); end
  def test_flows_o14; assert_in_epsilon(437.93524873510364, worksheet.flows_o14, 0.002); end
  def test_flows_p14; assert_in_epsilon(497.20491849310355, worksheet.flows_p14, 0.002); end
  def test_flows_c15; assert_equal("Therm.b", worksheet.flows_c15); end
  def test_flows_d15; assert_equal("Liquid", worksheet.flows_d15); end
  def test_flows_e15; assert_equal("Thermal generation", worksheet.flows_e15); end
  def test_flows_f15; assert_in_epsilon(4.0, worksheet.flows_f15, 0.002); end
  def test_flows_g15; assert_in_delta(0.6470780161464464, worksheet.flows_g15, 0.002); end
  def test_flows_h15; assert_in_delta(0.5383958259429039, worksheet.flows_h15, 0.002); end
  def test_flows_i15; assert_in_delta(0.7616331196265471, worksheet.flows_i15, 0.002); end
  def test_flows_j15; assert_in_delta(0.9378154935631475, worksheet.flows_j15, 0.002); end
  def test_flows_k15; assert_in_delta(0.8272912128385871, worksheet.flows_k15, 0.002); end
  def test_flows_l15; assert_in_delta(0.0, (worksheet.flows_l15||0), 0.002); end
  def test_flows_m15; assert_in_delta(0.0, (worksheet.flows_m15||0), 0.002); end
  def test_flows_n15; assert_in_delta(0.0, (worksheet.flows_n15||0), 0.002); end
  def test_flows_o15; assert_in_delta(0.0, (worksheet.flows_o15||0), 0.002); end
  def test_flows_p15; assert_in_delta(0.0, (worksheet.flows_p15||0), 0.002); end
  def test_flows_c16; assert_equal("COM.A", worksheet.flows_c16); end
  def test_flows_d16; assert_equal("Electricity grid", worksheet.flows_d16); end
  def test_flows_e16; assert_equal("Commercial", worksheet.flows_e16); end
  def test_flows_f16; assert_in_delta(1.0, worksheet.flows_f16, 0.002); end
  def test_flows_g16; assert_in_epsilon(105.05730459165791, worksheet.flows_g16, 0.002); end
  def test_flows_h16; assert_in_epsilon(114.9181249546317, worksheet.flows_h16, 0.002); end
  def test_flows_i16; assert_in_epsilon(127.08818616208006, worksheet.flows_i16, 0.002); end
  def test_flows_j16; assert_in_epsilon(141.91317269010125, worksheet.flows_j16, 0.002); end
  def test_flows_k16; assert_in_epsilon(159.99610378293667, worksheet.flows_k16, 0.002); end
  def test_flows_l16; assert_in_epsilon(179.54054237953775, worksheet.flows_l16, 0.002); end
  def test_flows_m16; assert_in_epsilon(193.08331082040465, worksheet.flows_m16, 0.002); end
  def test_flows_n16; assert_in_epsilon(208.42719300060645, worksheet.flows_n16, 0.002); end
  def test_flows_o16; assert_in_epsilon(225.7564713049543, worksheet.flows_o16, 0.002); end
  def test_flows_p16; assert_in_epsilon(245.27447814821141, worksheet.flows_p16, 0.002); end
  def test_flows_c17; assert_equal("COM.A", worksheet.flows_c17); end
  def test_flows_d17; assert_equal("Gas", worksheet.flows_d17); end
  def test_flows_e17; assert_equal("Commercial", worksheet.flows_e17); end
  def test_flows_f17; assert_in_epsilon(2.0, worksheet.flows_f17, 0.002); end
  def test_flows_g17; assert_in_epsilon(21.95396556633637, worksheet.flows_g17, 0.002); end
  def test_flows_h17; assert_in_epsilon(24.03972368555916, worksheet.flows_h17, 0.002); end
  def test_flows_i17; assert_in_epsilon(20.73260506402081, worksheet.flows_i17, 0.002); end
  def test_flows_j17; assert_in_epsilon(17.058702723140733, worksheet.flows_j17, 0.002); end
  def test_flows_k17; assert_in_epsilon(12.1619669803297, worksheet.flows_k17, 0.002); end
  def test_flows_l17; assert_in_epsilon(5.796797310231382, worksheet.flows_l17, 0.002); end
  def test_flows_m17; assert_in_epsilon(6.511993558156521, worksheet.flows_m17, 0.002); end
  def test_flows_n17; assert_in_epsilon(7.315338583745477, worksheet.flows_n17, 0.002); end
  def test_flows_o17; assert_in_epsilon(8.217686507850722, worksheet.flows_o17, 0.002); end
  def test_flows_p17; assert_in_epsilon(9.231226785594083, worksheet.flows_p17, 0.002); end
  def test_flows_c18; assert_equal("COM.A", worksheet.flows_c18); end
  def test_flows_d18; assert_equal("Liquid", worksheet.flows_d18); end
  def test_flows_e18; assert_equal("Commercial", worksheet.flows_e18); end
  def test_flows_f18; assert_in_epsilon(3.0, worksheet.flows_f18, 0.002); end
  def test_flows_g18; assert_in_epsilon(3.3138531529945108, worksheet.flows_g18, 0.002); end
  def test_flows_h18; assert_in_epsilon(3.6286890353268055, worksheet.flows_h18, 0.002); end
  def test_flows_i18; assert_in_epsilon(2.9752041085993652, worksheet.flows_i18, 0.002); end
  def test_flows_j18; assert_in_epsilon(2.228269754869844, worksheet.flows_j18, 0.002); end
  def test_flows_k18; assert_in_epsilon(1.2516258128867204, worksheet.flows_k18, 0.002); end
  def test_flows_l18; assert_in_delta(0.0, (worksheet.flows_l18||0), 0.002); end
  def test_flows_m18; assert_in_delta(0.0, (worksheet.flows_m18||0), 0.002); end
  def test_flows_n18; assert_in_delta(0.0, (worksheet.flows_n18||0), 0.002); end
  def test_flows_o18; assert_in_delta(0.0, (worksheet.flows_o18||0), 0.002); end
  def test_flows_p18; assert_in_delta(0.0, (worksheet.flows_p18||0), 0.002); end
  def test_flows_c19; assert_equal("COM.A", worksheet.flows_c19); end
  def test_flows_d19; assert_equal("Coal ", worksheet.flows_d19); end
  def test_flows_e19; assert_equal("Commercial", worksheet.flows_e19); end
  def test_flows_f19; assert_in_epsilon(4.0, worksheet.flows_f19, 0.002); end
  def test_flows_g19; assert_in_epsilon(97.4855405060977, worksheet.flows_g19, 0.002); end
  def test_flows_h19; assert_in_epsilon(106.74725028709499, worksheet.flows_h19, 0.002); end
  def test_flows_i19; assert_in_epsilon(84.38073498838037, worksheet.flows_i19, 0.002); end
  def test_flows_j19; assert_in_epsilon(59.72137600077248, worksheet.flows_j19, 0.002); end
  def test_flows_k19; assert_in_epsilon(31.825316720007812, worksheet.flows_k19, 0.002); end
  def test_flows_l19; assert_in_delta(0.0, (worksheet.flows_l19||0), 0.002); end
  def test_flows_m19; assert_in_delta(0.0, (worksheet.flows_m19||0), 0.002); end
  def test_flows_n19; assert_in_delta(0.0, (worksheet.flows_n19||0), 0.002); end
  def test_flows_o19; assert_in_delta(0.0, (worksheet.flows_o19||0), 0.002); end
  def test_flows_p19; assert_in_delta(0.0, (worksheet.flows_p19||0), 0.002); end
  def test_flows_c20; assert_equal("COM.A", worksheet.flows_c20); end
  def test_flows_d20; assert_equal("Commercial", worksheet.flows_d20); end
  def test_flows_e20; assert_equal("Losses in End use RES + COM", worksheet.flows_e20); end
  def test_flows_f20; assert_in_epsilon(5.0, worksheet.flows_f20, 0.002); end
  def test_flows_g20; assert_in_epsilon(154.48938094044018, worksheet.flows_g20, 0.002); end
  def test_flows_h20; assert_in_epsilon(169.0910839155481, worksheet.flows_h20, 0.002); end
  def test_flows_i20; assert_in_epsilon(207.77089456276104, worksheet.flows_i20, 0.002); end
  def test_flows_j20; assert_in_epsilon(247.42197969239558, worksheet.flows_j20, 0.002); end
  def test_flows_k20; assert_in_epsilon(290.6773435225301, worksheet.flows_k20, 0.002); end
  def test_flows_l20; assert_in_epsilon(328.20878604524813, worksheet.flows_l20, 0.002); end
  def test_flows_m20; assert_in_epsilon(333.99049457387486, worksheet.flows_m20, 0.002); end
  def test_flows_n20; assert_in_epsilon(340.45412406556784, worksheet.flows_n20, 0.002); end
  def test_flows_o20; assert_in_epsilon(347.57376384196783, worksheet.flows_o20, 0.002); end
  def test_flows_p20; assert_in_epsilon(355.30553230537606, worksheet.flows_p20, 0.002); end
  def test_flows_c21; assert_equal("Nuke", worksheet.flows_c21); end
  def test_flows_d21; assert_equal("Nuclear", worksheet.flows_d21); end
  def test_flows_e21; assert_equal("Thermal generation", worksheet.flows_e21); end
  def test_flows_f21; assert_in_delta(1.0, worksheet.flows_f21, 0.002); end
  def test_flows_g21; assert_in_epsilon(113.72570100000002, worksheet.flows_g21, 0.002); end
  def test_flows_h21; assert_in_epsilon(148.57712550000005, worksheet.flows_h21, 0.002); end
  def test_flows_i21; assert_in_epsilon(148.57712550000005, worksheet.flows_i21, 0.002); end
  def test_flows_j21; assert_in_epsilon(148.57712550000005, worksheet.flows_j21, 0.002); end
  def test_flows_k21; assert_in_epsilon(1543.513210071429, worksheet.flows_k21, 0.002); end
  def test_flows_l21; assert_in_epsilon(2938.449294642858, worksheet.flows_l21, 0.002); end
  def test_flows_m21; assert_in_epsilon(3303.6158089285723, worksheet.flows_m21, 0.002); end
  def test_flows_n21; assert_in_epsilon(3668.7823232142864, worksheet.flows_n21, 0.002); end
  def test_flows_o21; assert_in_epsilon(4033.9488375000005, worksheet.flows_o21, 0.002); end
  def test_flows_p21; assert_in_epsilon(4399.115351785715, worksheet.flows_p21, 0.002); end
  def test_flows_c22; assert_equal("Nuke", worksheet.flows_c22); end
  def test_flows_d22; assert_equal("Thermal generation", worksheet.flows_d22); end
  def test_flows_e22; assert_equal("Electricity grid", worksheet.flows_e22); end
  def test_flows_f22; assert_in_epsilon(2.0, worksheet.flows_f22, 0.002); end
  def test_flows_g22; assert_in_epsilon(36.392224320000004, worksheet.flows_g22, 0.002); end
  def test_flows_h22; assert_in_epsilon(47.54468016000001, worksheet.flows_h22, 0.002); end
  def test_flows_i22; assert_in_epsilon(47.54468016000001, worksheet.flows_i22, 0.002); end
  def test_flows_j22; assert_in_epsilon(47.54468016000001, worksheet.flows_j22, 0.002); end
  def test_flows_k22; assert_in_epsilon(535.7723097600001, worksheet.flows_k22, 0.002); end
  def test_flows_l22; assert_in_epsilon(1023.9999393600002, worksheet.flows_l22, 0.002); end
  def test_flows_m22; assert_in_epsilon(1151.8082193600003, worksheet.flows_m22, 0.002); end
  def test_flows_n22; assert_in_epsilon(1279.6164993600003, worksheet.flows_n22, 0.002); end
  def test_flows_o22; assert_in_epsilon(1407.4247793600002, worksheet.flows_o22, 0.002); end
  def test_flows_p22; assert_in_epsilon(1535.2330593600002, worksheet.flows_p22, 0.002); end
  def test_flows_c23; assert_equal("Nuke", worksheet.flows_c23); end
  def test_flows_d23; assert_equal("Thermal generation", worksheet.flows_d23); end
  def test_flows_e23; assert_equal("Losses", worksheet.flows_e23); end
  def test_flows_f23; assert_in_epsilon(3.0, worksheet.flows_f23, 0.002); end
  def test_flows_g23; assert_in_epsilon(77.33347668000002, worksheet.flows_g23, 0.002); end
  def test_flows_h23; assert_in_epsilon(101.03244534000004, worksheet.flows_h23, 0.002); end
  def test_flows_i23; assert_in_epsilon(101.03244534000004, worksheet.flows_i23, 0.002); end
  def test_flows_j23; assert_in_epsilon(101.03244534000004, worksheet.flows_j23, 0.002); end
  def test_flows_k23; assert_in_epsilon(1007.740900311429, worksheet.flows_k23, 0.002); end
  def test_flows_l23; assert_in_epsilon(1914.449355282858, worksheet.flows_l23, 0.002); end
  def test_flows_m23; assert_in_epsilon(2151.807589568572, worksheet.flows_m23, 0.002); end
  def test_flows_n23; assert_in_epsilon(2389.165823854286, worksheet.flows_n23, 0.002); end
  def test_flows_o23; assert_in_epsilon(2626.5240581400003, worksheet.flows_o23, 0.002); end
  def test_flows_p23; assert_in_epsilon(2863.8822924257147, worksheet.flows_p23, 0.002); end
  def test_flows_c24; assert_equal("RE.a", worksheet.flows_c24); end
  def test_flows_d24; assert_equal("Wind", worksheet.flows_d24); end
  def test_flows_e24; assert_equal("Electricity grid", worksheet.flows_e24); end
  def test_flows_f24; assert_in_delta(1.0, worksheet.flows_f24, 0.002); end
  def test_flows_g24; assert_in_delta(0.055844328960000016, worksheet.flows_g24, 0.002); end
  def test_flows_h24; assert_in_delta(0.07387003008000001, worksheet.flows_h24, 0.002); end
  def test_flows_i24; assert_in_epsilon(11.57035420224, worksheet.flows_i24, 0.002); end
  def test_flows_j24; assert_in_epsilon(107.85635346816002, worksheet.flows_j24, 0.002); end
  def test_flows_k24; assert_in_epsilon(180.12560535359998, worksheet.flows_k24, 0.002); end
  def test_flows_l24; assert_in_epsilon(265.08384, worksheet.flows_l24, 0.002); end
  def test_flows_m24; assert_in_epsilon(276.129, worksheet.flows_m24, 0.002); end
  def test_flows_n24; assert_in_epsilon(331.35480000000007, worksheet.flows_n24, 0.002); end
  def test_flows_o24; assert_in_epsilon(386.58060000000006, worksheet.flows_o24, 0.002); end
  def test_flows_p24; assert_in_epsilon(441.80640000000005, worksheet.flows_p24, 0.002); end
  def test_flows_c25; assert_equal("RE.b", worksheet.flows_c25); end
  def test_flows_d25; assert_equal("Hydro", worksheet.flows_d25); end
  def test_flows_e25; assert_equal("Electricity grid", worksheet.flows_e25); end
  def test_flows_f25; assert_in_delta(1.0, worksheet.flows_f25, 0.002); end
  def test_flows_g25; assert_in_epsilon(31.320918000000006, worksheet.flows_g25, 0.002); end
  def test_flows_h25; assert_in_epsilon(31.320918000000006, worksheet.flows_h25, 0.002); end
  def test_flows_i25; assert_in_epsilon(37.00128600000001, worksheet.flows_i25, 0.002); end
  def test_flows_j25; assert_in_epsilon(37.00128600000001, worksheet.flows_j25, 0.002); end
  def test_flows_k25; assert_in_epsilon(92.16491752800002, worksheet.flows_k25, 0.002); end
  def test_flows_l25; assert_in_epsilon(139.8944621088, worksheet.flows_l25, 0.002); end
  def test_flows_m25; assert_in_epsilon(187.62400668960004, worksheet.flows_m25, 0.002); end
  def test_flows_n25; assert_in_epsilon(235.35355127040003, worksheet.flows_n25, 0.002); end
  def test_flows_o25; assert_in_epsilon(283.0830958512, worksheet.flows_o25, 0.002); end
  def test_flows_p25; assert_in_epsilon(330.812640432, worksheet.flows_p25, 0.002); end
  def test_flows_c26; assert_equal("RE.c", worksheet.flows_c26); end
  def test_flows_d26; assert_equal("Solar", worksheet.flows_d26); end
  def test_flows_e26; assert_equal("Electricity grid", worksheet.flows_e26); end
  def test_flows_f26; assert_in_delta(1.0, worksheet.flows_f26, 0.002); end
  def test_flows_g26; assert_in_delta(0.0, (worksheet.flows_g26||0), 0.002); end
  def test_flows_h26; assert_in_delta(0.0, (worksheet.flows_h26||0), 0.002); end
  def test_flows_i26; assert_in_epsilon(1.9881288000000001, worksheet.flows_i26, 0.002); end
  def test_flows_j26; assert_in_epsilon(606.1583808, worksheet.flows_j26, 0.002); end
  def test_flows_k26; assert_in_epsilon(1210.3286328000002, worksheet.flows_k26, 0.002); end
  def test_flows_l26; assert_in_epsilon(1814.4988848000003, worksheet.flows_l26, 0.002); end
  def test_flows_m26; assert_in_epsilon(2268.123606, worksheet.flows_m26, 0.002); end
  def test_flows_n26; assert_in_epsilon(2721.7483272000004, worksheet.flows_n26, 0.002); end
  def test_flows_o26; assert_in_epsilon(3175.3730484000002, worksheet.flows_o26, 0.002); end
  def test_flows_p26; assert_in_epsilon(3628.9977696000005, worksheet.flows_p26, 0.002); end
  def test_flows_c27; assert_equal("RE.e", worksheet.flows_c27); end
  def test_flows_d27; assert_equal("Solar", worksheet.flows_d27); end
  def test_flows_e27; assert_equal("Electricity grid", worksheet.flows_e27); end
  def test_flows_f27; assert_in_delta(1.0, worksheet.flows_f27, 0.002); end
  def test_flows_g27; assert_in_delta(0.0, (worksheet.flows_g27||0), 0.002); end
  def test_flows_h27; assert_in_delta(0.0, (worksheet.flows_h27||0), 0.002); end
  def test_flows_i27; assert_in_epsilon(11.005397424, worksheet.flows_i27, 0.002); end
  def test_flows_j27; assert_in_epsilon(351.31740141600005, worksheet.flows_j27, 0.002); end
  def test_flows_k27; assert_in_epsilon(691.6294054080001, worksheet.flows_k27, 0.002); end
  def test_flows_l27; assert_in_epsilon(1031.9414094, worksheet.flows_l27, 0.002); end
  def test_flows_m27; assert_in_epsilon(1289.9267617500002, worksheet.flows_m27, 0.002); end
  def test_flows_n27; assert_in_epsilon(1547.9121141000003, worksheet.flows_n27, 0.002); end
  def test_flows_o27; assert_in_epsilon(1805.8974664500001, worksheet.flows_o27, 0.002); end
  def test_flows_p27; assert_in_epsilon(2063.8828188, worksheet.flows_p27, 0.002); end
  def test_flows_c28; assert_equal("RE.d", worksheet.flows_c28); end
  def test_flows_d28; assert_equal("Solar", worksheet.flows_d28); end
  def test_flows_e28; assert_equal("Electricity end use", worksheet.flows_e28); end
  def test_flows_f28; assert_in_delta(1.0, worksheet.flows_f28, 0.002); end
  def test_flows_g28; assert_in_delta(0.0, (worksheet.flows_g28||0), 0.002); end
  def test_flows_h28; assert_in_delta(0.08645917808219179, worksheet.flows_h28, 0.002); end
  def test_flows_i28; assert_in_epsilon(1.2036972173562765, worksheet.flows_i28, 0.002); end
  def test_flows_j28; assert_in_epsilon(6.397813967546769, worksheet.flows_j28, 0.002); end
  def test_flows_k28; assert_in_epsilon(17.62293769445492, worksheet.flows_k28, 0.002); end
  def test_flows_l28; assert_in_epsilon(32.58217859374228, worksheet.flows_l28, 0.002); end
  def test_flows_m28; assert_in_epsilon(47.300338990014545, worksheet.flows_m28, 0.002); end
  def test_flows_n28; assert_in_epsilon(59.299624517661975, worksheet.flows_n28, 0.002); end
  def test_flows_o28; assert_in_epsilon(68.01517001090049, worksheet.flows_o28, 0.002); end
  def test_flows_p28; assert_in_epsilon(73.91405360381108, worksheet.flows_p28, 0.002); end
  def test_flows_c29; assert_equal("ElcDSB.s", worksheet.flows_c29); end
  def test_flows_d29; assert_equal("Thermal generation", worksheet.flows_d29); end
  def test_flows_e29; assert_equal("Losses", worksheet.flows_e29); end
  def test_flows_f29; assert_in_delta(1.0, worksheet.flows_f29, 0.002); end
  def test_flows_g29; assert_in_epsilon(15.026605150684937, worksheet.flows_g29, 0.002); end
  def test_flows_h29; assert_in_epsilon(15.026605150684937, worksheet.flows_h29, 0.002); end
  def test_flows_i29; assert_in_epsilon(27.694603923287676, worksheet.flows_i29, 0.002); end
  def test_flows_j29; assert_in_epsilon(27.694603923287676, worksheet.flows_j29, 0.002); end
  def test_flows_k29; assert_in_epsilon(27.694603923287676, worksheet.flows_k29, 0.002); end
  def test_flows_l29; assert_in_epsilon(27.694603923287676, worksheet.flows_l29, 0.002); end
  def test_flows_m29; assert_in_epsilon(27.694603923287676, worksheet.flows_m29, 0.002); end
  def test_flows_n29; assert_in_epsilon(27.694603923287676, worksheet.flows_n29, 0.002); end
  def test_flows_o29; assert_in_epsilon(27.694603923287676, worksheet.flows_o29, 0.002); end
  def test_flows_p29; assert_in_epsilon(27.694603923287676, worksheet.flows_p29, 0.002); end
  def test_flows_c30; assert_equal("ElcDSB.i", worksheet.flows_c30); end
  def test_flows_d30; assert_equal("Electricity grid", worksheet.flows_d30); end
  def test_flows_e30; assert_equal("Over generation / exports", worksheet.flows_e30); end
  def test_flows_f30; assert_in_delta(1.0, worksheet.flows_f30, 0.002); end
  def test_flows_g30; assert_in_delta(0.0, (worksheet.flows_g30||0), 0.002); end
  def test_flows_h30; assert_in_delta(0.0, (worksheet.flows_h30||0), 0.002); end
  def test_flows_i30; assert_in_delta(-0.6641088393012069, worksheet.flows_i30, 0.002); end
  def test_flows_j30; assert_in_epsilon(-3.988952849103498, worksheet.flows_j30, 0.002); end
  def test_flows_k30; assert_in_epsilon(1379.6752250926222, worksheet.flows_k30, 0.002); end
  def test_flows_l30; assert_in_epsilon(3094.479448551765, worksheet.flows_l30, 0.002); end
  def test_flows_m30; assert_in_epsilon(3982.355866525027, worksheet.flows_m30, 0.002); end
  def test_flows_n30; assert_in_epsilon(4930.43360901911, worksheet.flows_n30, 0.002); end
  def test_flows_o30; assert_in_epsilon(5848.4984138389245, worksheet.flows_o30, 0.002); end
  def test_flows_p30; assert_in_epsilon(6780.047802696674, worksheet.flows_p30, 0.002); end
  def test_flows_c31; assert_equal("ElcDSB.d", worksheet.flows_c31); end
  def test_flows_d31; assert_equal("Electricity grid", worksheet.flows_d31); end
  def test_flows_e31; assert_equal("Losses", worksheet.flows_e31); end
  def test_flows_f31; assert_in_delta(1.0, worksheet.flows_f31, 0.002); end
  def test_flows_g31; assert_in_epsilon(94.95780538928473, worksheet.flows_g31, 0.002); end
  def test_flows_h31; assert_in_epsilon(148.9517861339029, worksheet.flows_h31, 0.002); end
  def test_flows_i31; assert_in_epsilon(161.26048850591346, worksheet.flows_i31, 0.002); end
  def test_flows_j31; assert_in_epsilon(182.24541053379792, worksheet.flows_j31, 0.002); end
  def test_flows_k31; assert_in_epsilon(201.63252975971102, worksheet.flows_k31, 0.002); end
  def test_flows_l31; assert_in_epsilon(215.59442147113367, worksheet.flows_l31, 0.002); end
  def test_flows_m31; assert_in_epsilon(227.4195818807938, worksheet.flows_m31, 0.002); end
  def test_flows_n31; assert_in_epsilon(235.99219367220206, worksheet.flows_n31, 0.002); end
  def test_flows_o31; assert_in_epsilon(248.55085781955336, worksheet.flows_o31, 0.002); end
  def test_flows_p31; assert_in_epsilon(257.72737129622533, worksheet.flows_p31, 0.002); end
  def test_flows_c32; assert_equal("H2prod", worksheet.flows_c32); end
  def test_flows_d32; assert_equal("Gas", worksheet.flows_d32); end
  def test_flows_e32; assert_equal("H2 conversion", worksheet.flows_e32); end
  def test_flows_f32; assert_in_delta(1.0, worksheet.flows_f32, 0.002); end
  def test_flows_g32; assert_in_delta(0.0, (worksheet.flows_g32||0), 0.002); end
  def test_flows_h32; assert_in_delta(0.0, (worksheet.flows_h32||0), 0.002); end
  def test_flows_i32; assert_in_epsilon(4.96291883208249, worksheet.flows_i32, 0.002); end
  def test_flows_j32; assert_in_epsilon(8.614486953537774, worksheet.flows_j32, 0.002); end
  def test_flows_k32; assert_in_epsilon(12.0810837216187, worksheet.flows_k32, 0.002); end
  def test_flows_l32; assert_in_epsilon(14.428249476301053, worksheet.flows_l32, 0.002); end
  def test_flows_m32; assert_in_epsilon(14.551733162366467, worksheet.flows_m32, 0.002); end
  def test_flows_n32; assert_in_epsilon(12.669284677025614, worksheet.flows_n32, 0.002); end
  def test_flows_o32; assert_in_epsilon(7.98084768492676, worksheet.flows_o32, 0.002); end
  def test_flows_p32; assert_in_delta(0.0, (worksheet.flows_p32||0), 0.002); end
  def test_flows_c33; assert_equal("H2prod", worksheet.flows_c33); end
  def test_flows_d33; assert_equal("Electricity grid", worksheet.flows_d33); end
  def test_flows_e33; assert_equal("H2 conversion", worksheet.flows_e33); end
  def test_flows_f33; assert_in_epsilon(2.0, worksheet.flows_f33, 0.002); end
  def test_flows_g33; assert_in_delta(0.0, (worksheet.flows_g33||0), 0.002); end
  def test_flows_h33; assert_in_delta(0.0, (worksheet.flows_h33||0), 0.002); end
  def test_flows_i33; assert_in_delta(0.6641088393011486, worksheet.flows_i33, 0.002); end
  def test_flows_j33; assert_in_epsilon(3.988952849103494, worksheet.flows_j33, 0.002); end
  def test_flows_k33; assert_in_epsilon(7.39334015247111, worksheet.flows_k33, 0.002); end
  def test_flows_l33; assert_in_epsilon(12.134112178760795, worksheet.flows_l33, 0.002); end
  def test_flows_m33; assert_in_epsilon(17.899774468839176, worksheet.flows_m33, 0.002); end
  def test_flows_n33; assert_in_epsilon(25.29182787788934, worksheet.flows_n33, 0.002); end
  def test_flows_o33; assert_in_epsilon(34.2875075810109, worksheet.flows_o33, 0.002); end
  def test_flows_p33; assert_in_epsilon(45.81253453270527, worksheet.flows_p33, 0.002); end
  def test_flows_c34; assert_equal("H2prod", worksheet.flows_c34); end
  def test_flows_d34; assert_equal("H2 conversion", worksheet.flows_d34); end
  def test_flows_e34; assert_equal("H2", worksheet.flows_e34); end
  def test_flows_f34; assert_in_epsilon(3.0, worksheet.flows_f34, 0.002); end
  def test_flows_g34; assert_in_delta(0.0, (worksheet.flows_g34||0), 0.002); end
  def test_flows_h34; assert_in_delta(0.0, (worksheet.flows_h34||0), 0.002); end
  def test_flows_i34; assert_in_epsilon(3.9421985894588736, worksheet.flows_i34, 0.002); end
  def test_flows_j34; assert_in_epsilon(8.642731173057571, worksheet.flows_j34, 0.002); end
  def test_flows_k34; assert_in_epsilon(13.485888052257042, worksheet.flows_k34, 0.002); end
  def test_flows_l34; assert_in_epsilon(18.63868983922176, worksheet.flows_l34, 0.002); end
  def test_flows_m34; assert_in_epsilon(23.14902314826305, worksheet.flows_m34, 0.002); end
  def test_flows_n34; assert_in_epsilon(27.541923210925248, worksheet.flows_n34, 0.002); end
  def test_flows_o34; assert_in_epsilon(31.434411012840627, worksheet.flows_o34, 0.002); end
  def test_flows_p34; assert_in_epsilon(35.27565159018306, worksheet.flows_p34, 0.002); end
  def test_flows_c35; assert_equal("H2prod", worksheet.flows_c35); end
  def test_flows_d35; assert_equal("H2 conversion", worksheet.flows_d35); end
  def test_flows_e35; assert_equal("Losses", worksheet.flows_e35); end
  def test_flows_f35; assert_in_epsilon(4.0, worksheet.flows_f35, 0.002); end
  def test_flows_g35; assert_in_delta(0.0, (worksheet.flows_g35||0), 0.002); end
  def test_flows_h35; assert_in_delta(0.0, (worksheet.flows_h35||0), 0.002); end
  def test_flows_i35; assert_in_epsilon(1.6848290819247649, worksheet.flows_i35, 0.002); end
  def test_flows_j35; assert_in_epsilon(3.960708629583698, worksheet.flows_j35, 0.002); end
  def test_flows_k35; assert_in_epsilon(5.988535821832769, worksheet.flows_k35, 0.002); end
  def test_flows_l35; assert_in_epsilon(7.925535684824009, worksheet.flows_l35, 0.002); end
  def test_flows_m35; assert_in_epsilon(9.30479938525742, worksheet.flows_m35, 0.002); end
  def test_flows_n35; assert_in_epsilon(10.419189343989705, worksheet.flows_n35, 0.002); end
  def test_flows_o35; assert_in_epsilon(10.83394425309703, worksheet.flows_o35, 0.002); end
  def test_flows_p35; assert_in_epsilon(10.536882942522212, worksheet.flows_p35, 0.002); end
  def test_flows_c36; assert_equal("RES.L", worksheet.flows_c36); end
  def test_flows_d36; assert_equal("Electricity grid", worksheet.flows_d36); end
  def test_flows_e36; assert_equal("Households", worksheet.flows_e36); end
  def test_flows_f36; assert_in_delta(1.0, worksheet.flows_f36, 0.002); end
  def test_flows_g36; assert_in_epsilon(27.30113244603715, worksheet.flows_g36, 0.002); end
  def test_flows_h36; assert_in_epsilon(30.460512822221403, worksheet.flows_h36, 0.002); end
  def test_flows_i36; assert_in_epsilon(35.3722064908628, worksheet.flows_i36, 0.002); end
  def test_flows_j36; assert_in_epsilon(40.92225213849555, worksheet.flows_j36, 0.002); end
  def test_flows_k36; assert_in_epsilon(44.57152664935772, worksheet.flows_k36, 0.002); end
  def test_flows_l36; assert_in_epsilon(47.76783248514761, worksheet.flows_l36, 0.002); end
  def test_flows_m36; assert_in_epsilon(50.56746848279759, worksheet.flows_m36, 0.002); end
  def test_flows_n36; assert_in_epsilon(53.039941693041996, worksheet.flows_n36, 0.002); end
  def test_flows_o36; assert_in_epsilon(55.14833975762119, worksheet.flows_o36, 0.002); end
  def test_flows_p36; assert_in_epsilon(56.912177006305924, worksheet.flows_p36, 0.002); end
  def test_flows_c37; assert_equal("RES.L", worksheet.flows_c37); end
  def test_flows_d37; assert_equal("Gas", worksheet.flows_d37); end
  def test_flows_e37; assert_equal("Households", worksheet.flows_e37); end
  def test_flows_f37; assert_in_epsilon(2.0, worksheet.flows_f37, 0.002); end
  def test_flows_g37; assert_in_delta(0.0, (worksheet.flows_g37||0), 0.002); end
  def test_flows_h37; assert_in_delta(0.0, (worksheet.flows_h37||0), 0.002); end
  def test_flows_i37; assert_in_delta(0.0, (worksheet.flows_i37||0), 0.002); end
  def test_flows_j37; assert_in_delta(0.0, (worksheet.flows_j37||0), 0.002); end
  def test_flows_k37; assert_in_delta(0.0, (worksheet.flows_k37||0), 0.002); end
  def test_flows_l37; assert_in_delta(0.0, (worksheet.flows_l37||0), 0.002); end
  def test_flows_m37; assert_in_delta(0.0, (worksheet.flows_m37||0), 0.002); end
  def test_flows_n37; assert_in_delta(0.0, (worksheet.flows_n37||0), 0.002); end
  def test_flows_o37; assert_in_delta(0.0, (worksheet.flows_o37||0), 0.002); end
  def test_flows_p37; assert_in_delta(0.0, (worksheet.flows_p37||0), 0.002); end
  def test_flows_c38; assert_equal("RES.L", worksheet.flows_c38); end
  def test_flows_d38; assert_equal("Liquid", worksheet.flows_d38); end
  def test_flows_e38; assert_equal("Households", worksheet.flows_e38); end
  def test_flows_f38; assert_in_epsilon(3.0, worksheet.flows_f38, 0.002); end
  def test_flows_g38; assert_in_delta(0.7736305079783949, worksheet.flows_g38, 0.002); end
  def test_flows_h38; assert_in_delta(0.5228911113005901, worksheet.flows_h38, 0.002); end
  def test_flows_i38; assert_in_delta(0.25303056708039245, worksheet.flows_i38, 0.002); end
  def test_flows_j38; assert_in_delta(0.0, (worksheet.flows_j38||0), 0.002); end
  def test_flows_k38; assert_in_delta(0.0, (worksheet.flows_k38||0), 0.002); end
  def test_flows_l38; assert_in_delta(0.0, (worksheet.flows_l38||0), 0.002); end
  def test_flows_m38; assert_in_delta(0.0, (worksheet.flows_m38||0), 0.002); end
  def test_flows_n38; assert_in_delta(0.0, (worksheet.flows_n38||0), 0.002); end
  def test_flows_o38; assert_in_delta(0.0, (worksheet.flows_o38||0), 0.002); end
  def test_flows_p38; assert_in_delta(0.0, (worksheet.flows_p38||0), 0.002); end
  def test_flows_c39; assert_equal("RES.L", worksheet.flows_c39); end
  def test_flows_d39; assert_equal("Coal ", worksheet.flows_d39); end
  def test_flows_e39; assert_equal("Households", worksheet.flows_e39); end
  def test_flows_f39; assert_in_epsilon(4.0, worksheet.flows_f39, 0.002); end
  def test_flows_g39; assert_in_delta(0.0, (worksheet.flows_g39||0), 0.002); end
  def test_flows_h39; assert_in_delta(0.0, (worksheet.flows_h39||0), 0.002); end
  def test_flows_i39; assert_in_delta(0.0, (worksheet.flows_i39||0), 0.002); end
  def test_flows_j39; assert_in_delta(0.0, (worksheet.flows_j39||0), 0.002); end
  def test_flows_k39; assert_in_delta(0.0, (worksheet.flows_k39||0), 0.002); end
  def test_flows_l39; assert_in_delta(0.0, (worksheet.flows_l39||0), 0.002); end
  def test_flows_m39; assert_in_delta(0.0, (worksheet.flows_m39||0), 0.002); end
  def test_flows_n39; assert_in_delta(0.0, (worksheet.flows_n39||0), 0.002); end
  def test_flows_o39; assert_in_delta(0.0, (worksheet.flows_o39||0), 0.002); end
  def test_flows_p39; assert_in_delta(0.0, (worksheet.flows_p39||0), 0.002); end
  def test_flows_c40; assert_equal("RES.W", worksheet.flows_c40); end
  def test_flows_d40; assert_equal("Electricity grid", worksheet.flows_d40); end
  def test_flows_e40; assert_equal("Water Heating - homes", worksheet.flows_e40); end
  def test_flows_f40; assert_in_delta(1.0, worksheet.flows_f40, 0.002); end
  def test_flows_g40; assert_in_epsilon(53.82287433271977, worksheet.flows_g40, 0.002); end
  def test_flows_h40; assert_in_epsilon(57.16150040944188, worksheet.flows_h40, 0.002); end
  def test_flows_i40; assert_in_epsilon(67.22316932274033, worksheet.flows_i40, 0.002); end
  def test_flows_j40; assert_in_epsilon(78.8744583777794, worksheet.flows_j40, 0.002); end
  def test_flows_k40; assert_in_epsilon(87.31018477464396, worksheet.flows_k40, 0.002); end
  def test_flows_l40; assert_in_epsilon(94.55732284238292, worksheet.flows_l40, 0.002); end
  def test_flows_m40; assert_in_epsilon(100.73456237769707, worksheet.flows_m40, 0.002); end
  def test_flows_n40; assert_in_epsilon(105.99958907257641, worksheet.flows_n40, 0.002); end
  def test_flows_o40; assert_in_epsilon(110.30285306333133, worksheet.flows_o40, 0.002); end
  def test_flows_p40; assert_in_epsilon(113.70937242663231, worksheet.flows_p40, 0.002); end
  def test_flows_c41; assert_equal("RES.W", worksheet.flows_c41); end
  def test_flows_d41; assert_equal("Gas", worksheet.flows_d41); end
  def test_flows_e41; assert_equal("Water Heating - homes", worksheet.flows_e41); end
  def test_flows_f41; assert_in_epsilon(2.0, worksheet.flows_f41, 0.002); end
  def test_flows_g41; assert_in_delta(0.41817349783524493, worksheet.flows_g41, 0.002); end
  def test_flows_h41; assert_in_delta(0.46830170853961894, worksheet.flows_h41, 0.002); end
  def test_flows_i41; assert_in_delta(0.5312694074299474, worksheet.flows_i41, 0.002); end
  def test_flows_j41; assert_in_delta(0.5930225632646242, worksheet.flows_j41, 0.002); end
  def test_flows_k41; assert_in_delta(0.6191171588904849, worksheet.flows_k41, 0.002); end
  def test_flows_l41; assert_in_delta(0.6400030880506478, worksheet.flows_l41, 0.002); end
  def test_flows_m41; assert_in_delta(0.6567870021375846, worksheet.flows_m41, 0.002); end
  def test_flows_n41; assert_in_delta(0.6705439070356419, worksheet.flows_n41, 0.002); end
  def test_flows_o41; assert_in_delta(0.6808916901186386, worksheet.flows_o41, 0.002); end
  def test_flows_p41; assert_in_delta(0.6881445486863098, worksheet.flows_p41, 0.002); end
  def test_flows_c42; assert_equal("RES.W", worksheet.flows_c42); end
  def test_flows_d42; assert_equal("Liquid", worksheet.flows_d42); end
  def test_flows_e42; assert_equal("Water Heating - homes", worksheet.flows_e42); end
  def test_flows_f42; assert_in_epsilon(3.0, worksheet.flows_f42, 0.002); end
  def test_flows_g42; assert_in_epsilon(1.4580060207328212, worksheet.flows_g42, 0.002); end
  def test_flows_h42; assert_in_epsilon(1.6658954671875443, worksheet.flows_h42, 0.002); end
  def test_flows_i42; assert_in_epsilon(1.828954490001762, worksheet.flows_i42, 0.002); end
  def test_flows_j42; assert_in_epsilon(1.9469791469143614, worksheet.flows_j42, 0.002); end
  def test_flows_k42; assert_in_epsilon(1.9097340043455406, worksheet.flows_k42, 0.002); end
  def test_flows_l42; assert_in_epsilon(1.8688468031003986, worksheet.flows_l42, 0.002); end
  def test_flows_m42; assert_in_epsilon(1.8285974945049197, worksheet.flows_m42, 0.002); end
  def test_flows_n42; assert_in_epsilon(1.7920764976865324, worksheet.flows_n42, 0.002); end
  def test_flows_o42; assert_in_epsilon(1.7579032315697267, worksheet.flows_o42, 0.002); end
  def test_flows_p42; assert_in_epsilon(1.7264335305589775, worksheet.flows_p42, 0.002); end
  def test_flows_c43; assert_equal("RES.W", worksheet.flows_c43); end
  def test_flows_d43; assert_equal("Coal ", worksheet.flows_d43); end
  def test_flows_e43; assert_equal("Water Heating - homes", worksheet.flows_e43); end
  def test_flows_f43; assert_in_epsilon(4.0, worksheet.flows_f43, 0.002); end
  def test_flows_g43; assert_in_delta(0.0, (worksheet.flows_g43||0), 0.002); end
  def test_flows_h43; assert_in_delta(0.0, (worksheet.flows_h43||0), 0.002); end
  def test_flows_i43; assert_in_delta(0.0, (worksheet.flows_i43||0), 0.002); end
  def test_flows_j43; assert_in_delta(0.0, (worksheet.flows_j43||0), 0.002); end
  def test_flows_k43; assert_in_delta(0.0, (worksheet.flows_k43||0), 0.002); end
  def test_flows_l43; assert_in_delta(0.0, (worksheet.flows_l43||0), 0.002); end
  def test_flows_m43; assert_in_delta(0.0, (worksheet.flows_m43||0), 0.002); end
  def test_flows_n43; assert_in_delta(0.0, (worksheet.flows_n43||0), 0.002); end
  def test_flows_o43; assert_in_delta(0.0, (worksheet.flows_o43||0), 0.002); end
  def test_flows_p43; assert_in_delta(0.0, (worksheet.flows_p43||0), 0.002); end
  def test_flows_c44; assert_equal("RES.W", worksheet.flows_c44); end
  def test_flows_d44; assert_equal("Biomass", worksheet.flows_d44); end
  def test_flows_e44; assert_equal("Water Heating - homes", worksheet.flows_e44); end
  def test_flows_f44; assert_in_epsilon(5.0, worksheet.flows_f44, 0.002); end
  def test_flows_g44; assert_in_epsilon(8.408109094688218, worksheet.flows_g44, 0.002); end
  def test_flows_h44; assert_in_epsilon(5.69611853423768, worksheet.flows_h44, 0.002); end
  def test_flows_i44; assert_in_epsilon(6.4077668990558845, worksheet.flows_i44, 0.002); end
  def test_flows_j44; assert_in_epsilon(7.122154200099067, worksheet.flows_j44, 0.002); end
  def test_flows_k44; assert_in_epsilon(7.387833003190446, worksheet.flows_k44, 0.002); end
  def test_flows_l44; assert_in_epsilon(7.613259102555056, worksheet.flows_l44, 0.002); end
  def test_flows_m44; assert_in_epsilon(7.811124848929259, worksheet.flows_m44, 0.002); end
  def test_flows_n44; assert_in_epsilon(7.993089906752285, worksheet.flows_n44, 0.002); end
  def test_flows_o44; assert_in_epsilon(8.153152577131802, worksheet.flows_o44, 0.002); end
  def test_flows_p44; assert_in_epsilon(8.293372154594312, worksheet.flows_p44, 0.002); end
  def test_flows_c45; assert_equal("RES.O", worksheet.flows_c45); end
  def test_flows_d45; assert_equal("Electricity grid", worksheet.flows_d45); end
  def test_flows_e45; assert_equal("Households", worksheet.flows_e45); end
  def test_flows_f45; assert_in_delta(1.0, worksheet.flows_f45, 0.002); end
  def test_flows_g45; assert_in_epsilon(9.685761027820757, worksheet.flows_g45, 0.002); end
  def test_flows_h45; assert_in_epsilon(10.54074204635818, worksheet.flows_h45, 0.002); end
  def test_flows_i45; assert_in_epsilon(12.66533170189319, worksheet.flows_i45, 0.002); end
  def test_flows_j45; assert_in_epsilon(15.252887343833635, worksheet.flows_j45, 0.002); end
  def test_flows_k45; assert_in_epsilon(17.374363596474264, worksheet.flows_k45, 0.002); end
  def test_flows_l45; assert_in_epsilon(19.243990103691534, worksheet.flows_l45, 0.002); end
  def test_flows_m45; assert_in_epsilon(20.877356672803305, worksheet.flows_m45, 0.002); end
  def test_flows_n45; assert_in_epsilon(22.301845480195563, worksheet.flows_n45, 0.002); end
  def test_flows_o45; assert_in_epsilon(23.503407903601936, worksheet.flows_o45, 0.002); end
  def test_flows_p45; assert_in_epsilon(24.49261722658445, worksheet.flows_p45, 0.002); end
  def test_flows_c46; assert_equal("RES.O", worksheet.flows_c46); end
  def test_flows_d46; assert_equal("Gas", worksheet.flows_d46); end
  def test_flows_e46; assert_equal("Households", worksheet.flows_e46); end
  def test_flows_f46; assert_in_epsilon(2.0, worksheet.flows_f46, 0.002); end
  def test_flows_g46; assert_in_delta(0.0, (worksheet.flows_g46||0), 0.002); end
  def test_flows_h46; assert_in_delta(0.0, (worksheet.flows_h46||0), 0.002); end
  def test_flows_i46; assert_in_delta(0.0, (worksheet.flows_i46||0), 0.002); end
  def test_flows_j46; assert_in_delta(0.0, (worksheet.flows_j46||0), 0.002); end
  def test_flows_k46; assert_in_delta(0.0, (worksheet.flows_k46||0), 0.002); end
  def test_flows_l46; assert_in_delta(0.0, (worksheet.flows_l46||0), 0.002); end
  def test_flows_m46; assert_in_delta(0.0, (worksheet.flows_m46||0), 0.002); end
  def test_flows_n46; assert_in_delta(0.0, (worksheet.flows_n46||0), 0.002); end
  def test_flows_o46; assert_in_delta(0.0, (worksheet.flows_o46||0), 0.002); end
  def test_flows_p46; assert_in_delta(0.0, (worksheet.flows_p46||0), 0.002); end
  def test_flows_c47; assert_equal("RES.O", worksheet.flows_c47); end
  def test_flows_d47; assert_equal("Liquid", worksheet.flows_d47); end
  def test_flows_e47; assert_equal("Households", worksheet.flows_e47); end
  def test_flows_f47; assert_in_epsilon(3.0, worksheet.flows_f47, 0.002); end
  def test_flows_g47; assert_in_delta(0.0, (worksheet.flows_g47||0), 0.002); end
  def test_flows_h47; assert_in_delta(0.0, (worksheet.flows_h47||0), 0.002); end
  def test_flows_i47; assert_in_delta(0.0, (worksheet.flows_i47||0), 0.002); end
  def test_flows_j47; assert_in_delta(0.0, (worksheet.flows_j47||0), 0.002); end
  def test_flows_k47; assert_in_delta(0.0, (worksheet.flows_k47||0), 0.002); end
  def test_flows_l47; assert_in_delta(0.0, (worksheet.flows_l47||0), 0.002); end
  def test_flows_m47; assert_in_delta(0.0, (worksheet.flows_m47||0), 0.002); end
  def test_flows_n47; assert_in_delta(0.0, (worksheet.flows_n47||0), 0.002); end
  def test_flows_o47; assert_in_delta(0.0, (worksheet.flows_o47||0), 0.002); end
  def test_flows_p47; assert_in_delta(0.0, (worksheet.flows_p47||0), 0.002); end
  def test_flows_c48; assert_equal("RES.O", worksheet.flows_c48); end
  def test_flows_d48; assert_equal("Coal ", worksheet.flows_d48); end
  def test_flows_e48; assert_equal("Households", worksheet.flows_e48); end
  def test_flows_f48; assert_in_epsilon(4.0, worksheet.flows_f48, 0.002); end
  def test_flows_g48; assert_in_delta(0.0, (worksheet.flows_g48||0), 0.002); end
  def test_flows_h48; assert_in_delta(0.0, (worksheet.flows_h48||0), 0.002); end
  def test_flows_i48; assert_in_delta(0.0, (worksheet.flows_i48||0), 0.002); end
  def test_flows_j48; assert_in_delta(0.0, (worksheet.flows_j48||0), 0.002); end
  def test_flows_k48; assert_in_delta(0.0, (worksheet.flows_k48||0), 0.002); end
  def test_flows_l48; assert_in_delta(0.0, (worksheet.flows_l48||0), 0.002); end
  def test_flows_m48; assert_in_delta(0.0, (worksheet.flows_m48||0), 0.002); end
  def test_flows_n48; assert_in_delta(0.0, (worksheet.flows_n48||0), 0.002); end
  def test_flows_o48; assert_in_delta(0.0, (worksheet.flows_o48||0), 0.002); end
  def test_flows_p48; assert_in_delta(0.0, (worksheet.flows_p48||0), 0.002); end
  def test_flows_c49; assert_equal("RES.O", worksheet.flows_c49); end
  def test_flows_d49; assert_equal("Biomass", worksheet.flows_d49); end
  def test_flows_e49; assert_equal("Households", worksheet.flows_e49); end
  def test_flows_f49; assert_in_epsilon(5.0, worksheet.flows_f49, 0.002); end
  def test_flows_g49; assert_in_delta(0.0, (worksheet.flows_g49||0), 0.002); end
  def test_flows_h49; assert_in_delta(0.0, (worksheet.flows_h49||0), 0.002); end
  def test_flows_i49; assert_in_delta(0.0, (worksheet.flows_i49||0), 0.002); end
  def test_flows_j49; assert_in_delta(0.0, (worksheet.flows_j49||0), 0.002); end
  def test_flows_k49; assert_in_delta(0.0, (worksheet.flows_k49||0), 0.002); end
  def test_flows_l49; assert_in_delta(0.0, (worksheet.flows_l49||0), 0.002); end
  def test_flows_m49; assert_in_delta(0.0, (worksheet.flows_m49||0), 0.002); end
  def test_flows_n49; assert_in_delta(0.0, (worksheet.flows_n49||0), 0.002); end
  def test_flows_o49; assert_in_delta(0.0, (worksheet.flows_o49||0), 0.002); end
  def test_flows_p49; assert_in_delta(0.0, (worksheet.flows_p49||0), 0.002); end
  def test_flows_c50; assert_equal("RES.H", worksheet.flows_c50); end
  def test_flows_d50; assert_equal("Electricity grid", worksheet.flows_d50); end
  def test_flows_e50; assert_equal("Heating - homes", worksheet.flows_e50); end
  def test_flows_f50; assert_in_delta(1.0, worksheet.flows_f50, 0.002); end
  def test_flows_g50; assert_in_epsilon(18.278014600654977, worksheet.flows_g50, 0.002); end
  def test_flows_h50; assert_in_epsilon(20.338053886564158, worksheet.flows_h50, 0.002); end
  def test_flows_i50; assert_in_epsilon(21.722475210124482, worksheet.flows_i50, 0.002); end
  def test_flows_j50; assert_in_epsilon(22.72635363079129, worksheet.flows_j50, 0.002); end
  def test_flows_k50; assert_in_epsilon(21.92218784975075, worksheet.flows_k50, 0.002); end
  def test_flows_l50; assert_in_epsilon(20.35393556682142, worksheet.flows_l50, 0.002); end
  def test_flows_m50; assert_in_epsilon(21.185281574731, worksheet.flows_m50, 0.002); end
  def test_flows_n50; assert_in_epsilon(21.905919002616052, worksheet.flows_n50, 0.002); end
  def test_flows_o50; assert_in_epsilon(22.500725456620696, worksheet.flows_o50, 0.002); end
  def test_flows_p50; assert_in_epsilon(22.977654084898084, worksheet.flows_p50, 0.002); end
  def test_flows_c51; assert_equal("RES.H", worksheet.flows_c51); end
  def test_flows_d51; assert_equal("Gas", worksheet.flows_d51); end
  def test_flows_e51; assert_equal("Heating - homes", worksheet.flows_e51); end
  def test_flows_f51; assert_in_epsilon(2.0, worksheet.flows_f51, 0.002); end
  def test_flows_g51; assert_in_delta(0.015068956280176871, worksheet.flows_g51, 0.002); end
  def test_flows_h51; assert_in_delta(0.017194568783484406, worksheet.flows_h51, 0.002); end
  def test_flows_i51; assert_in_epsilon(7.483699764144696, worksheet.flows_i51, 0.002); end
  def test_flows_j51; assert_in_epsilon(16.299665658390683, worksheet.flows_j51, 0.002); end
  def test_flows_k51; assert_in_epsilon(24.759312289695245, worksheet.flows_k51, 0.002); end
  def test_flows_l51; assert_in_epsilon(33.284301632693506, worksheet.flows_l51, 0.002); end
  def test_flows_m51; assert_in_epsilon(33.47663460246395, worksheet.flows_m51, 0.002); end
  def test_flows_n51; assert_in_epsilon(33.63624772520967, worksheet.flows_n51, 0.002); end
  def test_flows_o51; assert_in_epsilon(33.73785244381086, worksheet.flows_o51, 0.002); end
  def test_flows_p51; assert_in_epsilon(33.789962402740954, worksheet.flows_p51, 0.002); end
  def test_flows_c52; assert_equal("RES.H", worksheet.flows_c52); end
  def test_flows_d52; assert_equal("Liquid", worksheet.flows_d52); end
  def test_flows_e52; assert_equal("Heating - homes", worksheet.flows_e52); end
  def test_flows_f52; assert_in_epsilon(3.0, worksheet.flows_f52, 0.002); end
  def test_flows_g52; assert_in_epsilon(5.3342914487858675, worksheet.flows_g52, 0.002); end
  def test_flows_h52; assert_in_epsilon(4.856262983857607, worksheet.flows_h52, 0.002); end
  def test_flows_i52; assert_in_epsilon(3.797914402521945, worksheet.flows_i52, 0.002); end
  def test_flows_j52; assert_in_epsilon(1.8510360473160383, worksheet.flows_j52, 0.002); end
  def test_flows_k52; assert_in_delta(0.9450685177405157, worksheet.flows_k52, 0.002); end
  def test_flows_l52; assert_in_delta(0.0, (worksheet.flows_l52||0), 0.002); end
  def test_flows_m52; assert_in_delta(0.0, (worksheet.flows_m52||0), 0.002); end
  def test_flows_n52; assert_in_delta(0.0, (worksheet.flows_n52||0), 0.002); end
  def test_flows_o52; assert_in_delta(0.0, (worksheet.flows_o52||0), 0.002); end
  def test_flows_p52; assert_in_delta(0.0, (worksheet.flows_p52||0), 0.002); end
  def test_flows_c53; assert_equal("RES.H", worksheet.flows_c53); end
  def test_flows_d53; assert_equal("Coal ", worksheet.flows_d53); end
  def test_flows_e53; assert_equal("Heating - homes", worksheet.flows_e53); end
  def test_flows_f53; assert_in_epsilon(4.0, worksheet.flows_f53, 0.002); end
  def test_flows_g53; assert_in_epsilon(21.32467675301719, worksheet.flows_g53, 0.002); end
  def test_flows_h53; assert_in_epsilon(21.114190337552994, worksheet.flows_h53, 0.002); end
  def test_flows_i53; assert_in_epsilon(15.811132143284398, worksheet.flows_i53, 0.002); end
  def test_flows_j53; assert_in_epsilon(9.791203788985882, worksheet.flows_j53, 0.002); end
  def test_flows_k53; assert_in_epsilon(4.934803544339867, worksheet.flows_k53, 0.002); end
  def test_flows_l53; assert_in_delta(0.0, (worksheet.flows_l53||0), 0.002); end
  def test_flows_m53; assert_in_delta(0.0, (worksheet.flows_m53||0), 0.002); end
  def test_flows_n53; assert_in_delta(0.0, (worksheet.flows_n53||0), 0.002); end
  def test_flows_o53; assert_in_delta(0.0, (worksheet.flows_o53||0), 0.002); end
  def test_flows_p53; assert_in_delta(0.0, (worksheet.flows_p53||0), 0.002); end
  def test_flows_c54; assert_equal("RES.H", worksheet.flows_c54); end
  def test_flows_d54; assert_equal("Biomass", worksheet.flows_d54); end
  def test_flows_e54; assert_equal("Heating - homes", worksheet.flows_e54); end
  def test_flows_f54; assert_in_epsilon(5.0, worksheet.flows_f54, 0.002); end
  def test_flows_g54; assert_in_epsilon(16.266345503722842, worksheet.flows_g54, 0.002); end
  def test_flows_h54; assert_in_epsilon(13.995922513436264, worksheet.flows_h54, 0.002); end
  def test_flows_i54; assert_in_epsilon(8.911274575272994, worksheet.flows_i54, 0.002); end
  def test_flows_j54; assert_in_epsilon(4.200180941154855, worksheet.flows_j54, 0.002); end
  def test_flows_k54; assert_in_epsilon(2.0634415002929942, worksheet.flows_k54, 0.002); end
  def test_flows_l54; assert_in_delta(0.0, (worksheet.flows_l54||0), 0.002); end
  def test_flows_m54; assert_in_delta(0.0, (worksheet.flows_m54||0), 0.002); end
  def test_flows_n54; assert_in_delta(0.0, (worksheet.flows_n54||0), 0.002); end
  def test_flows_o54; assert_in_delta(0.0, (worksheet.flows_o54||0), 0.002); end
  def test_flows_p54; assert_in_delta(0.0, (worksheet.flows_p54||0), 0.002); end
  def test_flows_c55; assert_equal("RES.K", worksheet.flows_c55); end
  def test_flows_d55; assert_equal("Electricity grid", worksheet.flows_d55); end
  def test_flows_e55; assert_equal("Households", worksheet.flows_e55); end
  def test_flows_f55; assert_in_delta(1.0, worksheet.flows_f55, 0.002); end
  def test_flows_g55; assert_in_epsilon(26.8552608121006, worksheet.flows_g55, 0.002); end
  def test_flows_h55; assert_in_epsilon(29.950405418185206, worksheet.flows_h55, 0.002); end
  def test_flows_i55; assert_in_epsilon(31.63240521297105, worksheet.flows_i55, 0.002); end
  def test_flows_j55; assert_in_epsilon(32.72575358531363, worksheet.flows_j55, 0.002); end
  def test_flows_k55; assert_in_epsilon(31.301304207406332, worksheet.flows_k55, 0.002); end
  def test_flows_l55; assert_in_epsilon(29.018366262561543, worksheet.flows_l55, 0.002); end
  def test_flows_m55; assert_in_epsilon(30.0475835617409, worksheet.flows_m55, 0.002); end
  def test_flows_n55; assert_in_epsilon(30.914882501788014, worksheet.flows_n55, 0.002); end
  def test_flows_o55; assert_in_epsilon(31.602776632822973, worksheet.flows_o55, 0.002); end
  def test_flows_p55; assert_in_epsilon(32.12610037951907, worksheet.flows_p55, 0.002); end
  def test_flows_c56; assert_equal("RES.K", worksheet.flows_c56); end
  def test_flows_d56; assert_equal("Gas", worksheet.flows_d56); end
  def test_flows_e56; assert_equal("Households", worksheet.flows_e56); end
  def test_flows_f56; assert_in_epsilon(2.0, worksheet.flows_f56, 0.002); end
  def test_flows_g56; assert_in_epsilon(1.3806331018485154, worksheet.flows_g56, 0.002); end
  def test_flows_h56; assert_in_epsilon(1.241899177084446, worksheet.flows_h56, 0.002); end
  def test_flows_i56; assert_in_epsilon(8.372691693956314, worksheet.flows_i56, 0.002); end
  def test_flows_j56; assert_in_epsilon(15.502323967487968, worksheet.flows_j56, 0.002); end
  def test_flows_k56; assert_in_epsilon(23.93360796592541, worksheet.flows_k56, 0.002); end
  def test_flows_l56; assert_in_epsilon(32.86431902641529, worksheet.flows_l56, 0.002); end
  def test_flows_m56; assert_in_epsilon(33.997553257874856, worksheet.flows_m56, 0.002); end
  def test_flows_n56; assert_in_epsilon(34.99073457187026, worksheet.flows_n56, 0.002); end
  def test_flows_o56; assert_in_epsilon(35.821130195016835, worksheet.flows_o56, 0.002); end
  def test_flows_p56; assert_in_epsilon(36.502082218456366, worksheet.flows_p56, 0.002); end
  def test_flows_c57; assert_equal("RES.K", worksheet.flows_c57); end
  def test_flows_d57; assert_equal("Liquid", worksheet.flows_d57); end
  def test_flows_e57; assert_equal("Households", worksheet.flows_e57); end
  def test_flows_f57; assert_in_epsilon(3.0, worksheet.flows_f57, 0.002); end
  def test_flows_g57; assert_in_epsilon(4.815481829811853, worksheet.flows_g57, 0.002); end
  def test_flows_h57; assert_in_epsilon(4.540044699396351, worksheet.flows_h57, 0.002); end
  def test_flows_i57; assert_in_epsilon(3.1492412732068993, worksheet.flows_i57, 0.002); end
  def test_flows_j57; assert_in_epsilon(1.7152894148814273, worksheet.flows_j57, 0.002); end
  def test_flows_k57; assert_in_delta(0.8415639503994262, worksheet.flows_k57, 0.002); end
  def test_flows_l57; assert_in_delta(0.0, (worksheet.flows_l57||0), 0.002); end
  def test_flows_m57; assert_in_delta(0.0, (worksheet.flows_m57||0), 0.002); end
  def test_flows_n57; assert_in_delta(0.0, (worksheet.flows_n57||0), 0.002); end
  def test_flows_o57; assert_in_delta(0.0, (worksheet.flows_o57||0), 0.002); end
  def test_flows_p57; assert_in_delta(0.0, (worksheet.flows_p57||0), 0.002); end
  def test_flows_c58; assert_equal("RES.K", worksheet.flows_c58); end
  def test_flows_d58; assert_equal("Coal ", worksheet.flows_d58); end
  def test_flows_e58; assert_equal("Households", worksheet.flows_e58); end
  def test_flows_f58; assert_in_epsilon(4.0, worksheet.flows_f58, 0.002); end
  def test_flows_g58; assert_in_epsilon(15.100491858366102, worksheet.flows_g58, 0.002); end
  def test_flows_h58; assert_in_epsilon(10.23018526369621, worksheet.flows_h58, 0.002); end
  def test_flows_i58; assert_in_epsilon(3.7275533305667894, worksheet.flows_i58, 0.002); end
  def test_flows_j58; assert_in_delta(0.0, (worksheet.flows_j58||0), 0.002); end
  def test_flows_k58; assert_in_delta(0.0, (worksheet.flows_k58||0), 0.002); end
  def test_flows_l58; assert_in_delta(0.0, (worksheet.flows_l58||0), 0.002); end
  def test_flows_m58; assert_in_delta(0.0, (worksheet.flows_m58||0), 0.002); end
  def test_flows_n58; assert_in_delta(0.0, (worksheet.flows_n58||0), 0.002); end
  def test_flows_o58; assert_in_delta(0.0, (worksheet.flows_o58||0), 0.002); end
  def test_flows_p58; assert_in_delta(0.0, (worksheet.flows_p58||0), 0.002); end
  def test_flows_c59; assert_equal("RES.K", worksheet.flows_c59); end
  def test_flows_d59; assert_equal("Biomass", worksheet.flows_d59); end
  def test_flows_e59; assert_equal("Households", worksheet.flows_e59); end
  def test_flows_f59; assert_in_epsilon(5.0, worksheet.flows_f59, 0.002); end
  def test_flows_g59; assert_in_epsilon(47.457671511457704, worksheet.flows_g59, 0.002); end
  def test_flows_h59; assert_in_epsilon(47.6209110823538, worksheet.flows_h59, 0.002); end
  def test_flows_i59; assert_in_epsilon(37.31878791846695, worksheet.flows_i59, 0.002); end
  def test_flows_j59; assert_in_epsilon(21.014913832198655, worksheet.flows_j59, 0.002); end
  def test_flows_k59; assert_in_epsilon(10.190699929985163, worksheet.flows_k59, 0.002); end
  def test_flows_l59; assert_in_delta(0.0, (worksheet.flows_l59||0), 0.002); end
  def test_flows_m59; assert_in_delta(0.0, (worksheet.flows_m59||0), 0.002); end
  def test_flows_n59; assert_in_delta(0.0, (worksheet.flows_n59||0), 0.002); end
  def test_flows_o59; assert_in_delta(0.0, (worksheet.flows_o59||0), 0.002); end
  def test_flows_p59; assert_in_delta(0.0, (worksheet.flows_p59||0), 0.002); end
  def test_flows_c60; assert_equal("RES.R", worksheet.flows_c60); end
  def test_flows_d60; assert_equal("Electricity grid", worksheet.flows_d60); end
  def test_flows_e60; assert_equal("Households", worksheet.flows_e60); end
  def test_flows_f60; assert_in_delta(1.0, worksheet.flows_f60, 0.002); end
  def test_flows_g60; assert_in_epsilon(14.798153072992918, worksheet.flows_g60, 0.002); end
  def test_flows_h60; assert_in_epsilon(16.351946324783505, worksheet.flows_h60, 0.002); end
  def test_flows_i60; assert_in_epsilon(18.492937750957505, worksheet.flows_i60, 0.002); end
  def test_flows_j60; assert_in_epsilon(20.83632290101677, worksheet.flows_j60, 0.002); end
  def test_flows_k60; assert_in_epsilon(22.131960734911054, worksheet.flows_k60, 0.002); end
  def test_flows_l60; assert_in_epsilon(23.056662914634217, worksheet.flows_l60, 0.002); end
  def test_flows_m60; assert_in_epsilon(24.505069007228776, worksheet.flows_m60, 0.002); end
  def test_flows_n60; assert_in_epsilon(25.755031721578284, worksheet.flows_n60, 0.002); end
  def test_flows_o60; assert_in_epsilon(26.791734636993016, worksheet.flows_o60, 0.002); end
  def test_flows_p60; assert_in_epsilon(27.628122297522985, worksheet.flows_p60, 0.002); end
  def test_flows_c61; assert_equal("RES.R", worksheet.flows_c61); end
  def test_flows_d61; assert_equal("Gas", worksheet.flows_d61); end
  def test_flows_e61; assert_equal("Households", worksheet.flows_e61); end
  def test_flows_f61; assert_in_epsilon(2.0, worksheet.flows_f61, 0.002); end
  def test_flows_g61; assert_in_delta(0.0, (worksheet.flows_g61||0), 0.002); end
  def test_flows_h61; assert_in_delta(0.0, (worksheet.flows_h61||0), 0.002); end
  def test_flows_i61; assert_in_delta(0.0, (worksheet.flows_i61||0), 0.002); end
  def test_flows_j61; assert_in_delta(0.0, (worksheet.flows_j61||0), 0.002); end
  def test_flows_k61; assert_in_delta(0.0, (worksheet.flows_k61||0), 0.002); end
  def test_flows_l61; assert_in_delta(0.0, (worksheet.flows_l61||0), 0.002); end
  def test_flows_m61; assert_in_delta(0.0, (worksheet.flows_m61||0), 0.002); end
  def test_flows_n61; assert_in_delta(0.0, (worksheet.flows_n61||0), 0.002); end
  def test_flows_o61; assert_in_delta(0.0, (worksheet.flows_o61||0), 0.002); end
  def test_flows_p61; assert_in_delta(0.0, (worksheet.flows_p61||0), 0.002); end
  def test_flows_c62; assert_equal("RES.R", worksheet.flows_c62); end
  def test_flows_d62; assert_equal("Liquid", worksheet.flows_d62); end
  def test_flows_e62; assert_equal("Households", worksheet.flows_e62); end
  def test_flows_f62; assert_in_epsilon(3.0, worksheet.flows_f62, 0.002); end
  def test_flows_g62; assert_in_delta(0.0, (worksheet.flows_g62||0), 0.002); end
  def test_flows_h62; assert_in_delta(0.0, (worksheet.flows_h62||0), 0.002); end
  def test_flows_i62; assert_in_delta(0.0, (worksheet.flows_i62||0), 0.002); end
  def test_flows_j62; assert_in_delta(0.0, (worksheet.flows_j62||0), 0.002); end
  def test_flows_k62; assert_in_delta(0.0, (worksheet.flows_k62||0), 0.002); end
  def test_flows_l62; assert_in_delta(0.0, (worksheet.flows_l62||0), 0.002); end
  def test_flows_m62; assert_in_delta(0.0, (worksheet.flows_m62||0), 0.002); end
  def test_flows_n62; assert_in_delta(0.0, (worksheet.flows_n62||0), 0.002); end
  def test_flows_o62; assert_in_delta(0.0, (worksheet.flows_o62||0), 0.002); end
  def test_flows_p62; assert_in_delta(0.0, (worksheet.flows_p62||0), 0.002); end
  def test_flows_c63; assert_equal("RES.R", worksheet.flows_c63); end
  def test_flows_d63; assert_equal("Coal ", worksheet.flows_d63); end
  def test_flows_e63; assert_equal("Households", worksheet.flows_e63); end
  def test_flows_f63; assert_in_epsilon(4.0, worksheet.flows_f63, 0.002); end
  def test_flows_g63; assert_in_delta(0.0, (worksheet.flows_g63||0), 0.002); end
  def test_flows_h63; assert_in_delta(0.0, (worksheet.flows_h63||0), 0.002); end
  def test_flows_i63; assert_in_delta(0.0, (worksheet.flows_i63||0), 0.002); end
  def test_flows_j63; assert_in_delta(0.0, (worksheet.flows_j63||0), 0.002); end
  def test_flows_k63; assert_in_delta(0.0, (worksheet.flows_k63||0), 0.002); end
  def test_flows_l63; assert_in_delta(0.0, (worksheet.flows_l63||0), 0.002); end
  def test_flows_m63; assert_in_delta(0.0, (worksheet.flows_m63||0), 0.002); end
  def test_flows_n63; assert_in_delta(0.0, (worksheet.flows_n63||0), 0.002); end
  def test_flows_o63; assert_in_delta(0.0, (worksheet.flows_o63||0), 0.002); end
  def test_flows_p63; assert_in_delta(0.0, (worksheet.flows_p63||0), 0.002); end
  def test_flows_c64; assert_equal("RES.R", worksheet.flows_c64); end
  def test_flows_d64; assert_equal("Biomass", worksheet.flows_d64); end
  def test_flows_e64; assert_equal("Households", worksheet.flows_e64); end
  def test_flows_f64; assert_in_epsilon(5.0, worksheet.flows_f64, 0.002); end
  def test_flows_g64; assert_in_delta(0.0, (worksheet.flows_g64||0), 0.002); end
  def test_flows_h64; assert_in_delta(0.0, (worksheet.flows_h64||0), 0.002); end
  def test_flows_i64; assert_in_delta(0.0, (worksheet.flows_i64||0), 0.002); end
  def test_flows_j64; assert_in_delta(0.0, (worksheet.flows_j64||0), 0.002); end
  def test_flows_k64; assert_in_delta(0.0, (worksheet.flows_k64||0), 0.002); end
  def test_flows_l64; assert_in_delta(0.0, (worksheet.flows_l64||0), 0.002); end
  def test_flows_m64; assert_in_delta(0.0, (worksheet.flows_m64||0), 0.002); end
  def test_flows_n64; assert_in_delta(0.0, (worksheet.flows_n64||0), 0.002); end
  def test_flows_o64; assert_in_delta(0.0, (worksheet.flows_o64||0), 0.002); end
  def test_flows_p64; assert_in_delta(0.0, (worksheet.flows_p64||0), 0.002); end
  def test_flows_c65; assert_equal("BIO.SUP", worksheet.flows_c65); end
  def test_flows_d65; assert_equal("Biomass", worksheet.flows_d65); end
  def test_flows_e65; assert_equal("Liquid", worksheet.flows_e65); end
  def test_flows_f65; assert_in_delta(1.0, worksheet.flows_f65, 0.002); end
  def test_flows_g65; assert_in_delta(0.0, (worksheet.flows_g65||0), 0.002); end
  def test_flows_h65; assert_in_delta(0.0, (worksheet.flows_h65||0), 0.002); end
  def test_flows_i65; assert_in_delta(0.0, (worksheet.flows_i65||0), 0.002); end
  def test_flows_j65; assert_in_delta(0.0, (worksheet.flows_j65||0), 0.002); end
  def test_flows_k65; assert_in_delta(0.0, (worksheet.flows_k65||0), 0.002); end
  def test_flows_l65; assert_in_delta(0.0, (worksheet.flows_l65||0), 0.002); end
  def test_flows_m65; assert_in_delta(0.0, (worksheet.flows_m65||0), 0.002); end
  def test_flows_n65; assert_in_delta(0.0, (worksheet.flows_n65||0), 0.002); end
  def test_flows_o65; assert_in_delta(0.0, (worksheet.flows_o65||0), 0.002); end
  def test_flows_p65; assert_in_delta(0.0, (worksheet.flows_p65||0), 0.002); end
  def test_flows_c66; assert_equal("BIO.SUP", worksheet.flows_c66); end
  def test_flows_d66; assert_equal("Biomass", worksheet.flows_d66); end
  def test_flows_e66; assert_equal("Losses", worksheet.flows_e66); end
  def test_flows_f66; assert_in_epsilon(2.0, worksheet.flows_f66, 0.002); end
  def test_flows_g66; assert_in_epsilon(28.052414086123235, worksheet.flows_g66, 0.002); end
  def test_flows_h66; assert_in_epsilon(40.755779114600784, worksheet.flows_h66, 0.002); end
  def test_flows_i66; assert_in_epsilon(37.97167536688167, worksheet.flows_i66, 0.002); end
  def test_flows_j66; assert_in_epsilon(35.485109904503744, worksheet.flows_j66, 0.002); end
  def test_flows_k66; assert_in_epsilon(22.348173902826048, worksheet.flows_k66, 0.002); end
  def test_flows_l66; assert_in_epsilon(21.183460995185314, worksheet.flows_l66, 0.002); end
  def test_flows_m66; assert_in_epsilon(20.22654416312993, worksheet.flows_m66, 0.002); end
  def test_flows_n66; assert_in_epsilon(19.465304508491243, worksheet.flows_n66, 0.002); end
  def test_flows_o66; assert_in_epsilon(18.889618394979976, worksheet.flows_o66, 0.002); end
  def test_flows_p66; assert_in_epsilon(18.49124785595052, worksheet.flows_p66, 0.002); end
  def test_flows_c67; assert_equal("BIO.SUP", worksheet.flows_c67); end
  def test_flows_d67; assert_equal("Agriculture", worksheet.flows_d67); end
  def test_flows_e67; assert_equal("Biomass", worksheet.flows_e67); end
  def test_flows_f67; assert_in_epsilon(3.0, worksheet.flows_f67, 0.002); end
  def test_flows_g67; assert_in_epsilon(93.5080469537441, worksheet.flows_g67, 0.002); end
  def test_flows_h67; assert_in_epsilon(135.85259704866925, worksheet.flows_h67, 0.002); end
  def test_flows_i67; assert_in_epsilon(126.57730587007944, worksheet.flows_i67, 0.002); end
  def test_flows_j67; assert_in_epsilon(118.2340525478663, worksheet.flows_j67, 0.002); end
  def test_flows_k67; assert_in_epsilon(111.07146739131709, worksheet.flows_k67, 0.002); end
  def test_flows_l67; assert_in_epsilon(104.96522583860565, worksheet.flows_l67, 0.002); end
  def test_flows_m67; assert_in_epsilon(99.86322788004625, worksheet.flows_m67, 0.002); end
  def test_flows_n67; assert_in_epsilon(95.7015023520563, worksheet.flows_n67, 0.002); end
  def test_flows_o67; assert_in_epsilon(92.42575846676839, worksheet.flows_o67, 0.002); end
  def test_flows_p67; assert_in_epsilon(89.99081339403119, worksheet.flows_p67, 0.002); end
  def test_flows_c68; assert_equal("BIO.SUP", worksheet.flows_c68); end
  def test_flows_d68; assert_equal("Biomass", worksheet.flows_d68); end
  def test_flows_e68; assert_equal("Gas", worksheet.flows_e68); end
  def test_flows_f68; assert_in_epsilon(4.0, worksheet.flows_f68, 0.002); end
  def test_flows_g68; assert_in_epsilon(65.47238385878319, worksheet.flows_g68, 0.002); end
  def test_flows_h68; assert_in_epsilon(95.49540787702776, worksheet.flows_h68, 0.002); end
  def test_flows_i68; assert_in_epsilon(90.86055177860258, worksheet.flows_i68, 0.002); end
  def test_flows_j68; assert_in_epsilon(85.97069871045413, worksheet.flows_j68, 0.002); end
  def test_flows_k68; assert_in_epsilon(94.2088935771473, worksheet.flows_k68, 0.002); end
  def test_flows_l68; assert_in_epsilon(97.69331680738355, worksheet.flows_l68, 0.002); end
  def test_flows_m68; assert_in_epsilon(95.21154227761181, worksheet.flows_m68, 0.002); end
  def test_flows_n68; assert_in_epsilon(91.75660252613726, worksheet.flows_n68, 0.002); end
  def test_flows_o68; assert_in_epsilon(130.66934352912966, worksheet.flows_o68, 0.002); end
  def test_flows_p68; assert_in_epsilon(147.35450526096136, worksheet.flows_p68, 0.002); end
  def test_flows_c69; assert_equal("FOS.SUP", worksheet.flows_c69); end
  def test_flows_d69; assert_equal("Domestic coal production", worksheet.flows_d69); end
  def test_flows_e69; assert_equal("Coal ", worksheet.flows_e69); end
  def test_flows_f69; assert_in_delta(1.0, worksheet.flows_f69, 0.002); end
  def test_flows_g69; assert_in_epsilon(3975.951157266053, worksheet.flows_g69, 0.002); end
  def test_flows_h69; assert_in_epsilon(4116.050764522572, worksheet.flows_h69, 0.002); end
  def test_flows_i69; assert_in_epsilon(4250.57432202361, worksheet.flows_i69, 0.002); end
  def test_flows_j69; assert_in_epsilon(1529.0024297634166, worksheet.flows_j69, 0.002); end
  def test_flows_k69; assert_in_epsilon(1366.274673062711, worksheet.flows_k69, 0.002); end
  def test_flows_l69; assert_in_epsilon(1368.960470724325, worksheet.flows_l69, 0.002); end
  def test_flows_m69; assert_in_epsilon(1407.1992171981753, worksheet.flows_m69, 0.002); end
  def test_flows_n69; assert_in_epsilon(1263.1961909586992, worksheet.flows_n69, 0.002); end
  def test_flows_o69; assert_in_epsilon(1343.3300580796422, worksheet.flows_o69, 0.002); end
  def test_flows_p69; assert_in_epsilon(1294.0937780490003, worksheet.flows_p69, 0.002); end
  def test_flows_c70; assert_equal("FOS.SUP", worksheet.flows_c70); end
  def test_flows_d70; assert_equal("Domestic gas production", worksheet.flows_d70); end
  def test_flows_e70; assert_equal("Gas", worksheet.flows_e70); end
  def test_flows_f70; assert_in_epsilon(2.0, worksheet.flows_f70, 0.002); end
  def test_flows_g70; assert_in_epsilon(243.79442324880313, worksheet.flows_g70, 0.002); end
  def test_flows_h70; assert_in_epsilon(296.20827396053335, worksheet.flows_h70, 0.002); end
  def test_flows_i70; assert_in_epsilon(367.11740261415423, worksheet.flows_i70, 0.002); end
  def test_flows_j70; assert_in_epsilon(440.8064473430204, worksheet.flows_j70, 0.002); end
  def test_flows_k70; assert_in_epsilon(567.7878933223021, worksheet.flows_k70, 0.002); end
  def test_flows_l70; assert_in_epsilon(691.0245569706772, worksheet.flows_l70, 0.002); end
  def test_flows_m70; assert_in_epsilon(814.2796102109943, worksheet.flows_m70, 0.002); end
  def test_flows_n70; assert_in_epsilon(957.9090168618565, worksheet.flows_n70, 0.002); end
  def test_flows_o70; assert_in_epsilon(1231.696131512473, worksheet.flows_o70, 0.002); end
  def test_flows_p70; assert_in_epsilon(1454.7611835184787, worksheet.flows_p70, 0.002); end
  def test_flows_c71; assert_equal("FOS.SUP", worksheet.flows_c71); end
  def test_flows_d71; assert_equal("Gas imports", worksheet.flows_d71); end
  def test_flows_e71; assert_equal("Gas", worksheet.flows_e71); end
  def test_flows_f71; assert_in_epsilon(3.0, worksheet.flows_f71, 0.002); end
  def test_flows_g71; assert_in_epsilon(182.57942324880312, worksheet.flows_g71, 0.002); end
  def test_flows_h71; assert_in_epsilon(251.40827396053334, worksheet.flows_h71, 0.002); end
  def test_flows_i71; assert_in_epsilon(340.6634506141542, worksheet.flows_i71, 0.002); end
  def test_flows_j71; assert_in_delta(0.0, (worksheet.flows_j71||0), 0.002); end
  def test_flows_k71; assert_in_delta(0.0, (worksheet.flows_k71||0), 0.002); end
  def test_flows_l71; assert_in_delta(0.0, (worksheet.flows_l71||0), 0.002); end
  def test_flows_m71; assert_in_epsilon(100.34916776533976, worksheet.flows_m71, 0.002); end
  def test_flows_n71; assert_in_epsilon(311.31630360062036, worksheet.flows_n71, 0.002); end
  def test_flows_o71; assert_in_epsilon(666.7788974173325, worksheet.flows_o71, 0.002); end
  def test_flows_p71; assert_in_epsilon(972.9261338620234, worksheet.flows_p71, 0.002); end
  def test_flows_c72; assert_equal("FOS.SUP", worksheet.flows_c72); end
  def test_flows_d72; assert_equal("Domestic gas production", worksheet.flows_d72); end
  def test_flows_e72; assert_equal("Losses", worksheet.flows_e72); end
  def test_flows_f72; assert_in_epsilon(4.0, worksheet.flows_f72, 0.002); end
  def test_flows_g72; assert_in_delta(0.0, (worksheet.flows_g72||0), 0.002); end
  def test_flows_h72; assert_in_delta(0.0, (worksheet.flows_h72||0), 0.002); end
  def test_flows_i72; assert_in_delta(0.0, (worksheet.flows_i72||0), 0.002); end
  def test_flows_j72; assert_in_epsilon(9.970135694247544, worksheet.flows_j72, 0.002); end
  def test_flows_k72; assert_in_epsilon(11.020261108555163, worksheet.flows_k72, 0.002); end
  def test_flows_l72; assert_in_epsilon(11.235603820933504, worksheet.flows_l72, 0.002); end
  def test_flows_m72; assert_in_epsilon(10.708956636684817, worksheet.flows_m72, 0.002); end
  def test_flows_n72; assert_in_epsilon(9.698890698918541, worksheet.flows_n72, 0.002); end
  def test_flows_o72; assert_in_epsilon(8.473758511427107, worksheet.flows_o72, 0.002); end
  def test_flows_p72; assert_in_epsilon(7.2275257448468295, worksheet.flows_p72, 0.002); end
  def test_flows_c73; assert_equal("FOS.SUP", worksheet.flows_c73); end
  def test_flows_d73; assert_equal("Electricity grid", worksheet.flows_d73); end
  def test_flows_e73; assert_equal("Domestic gas production", worksheet.flows_e73); end
  def test_flows_f73; assert_in_epsilon(5.0, worksheet.flows_f73, 0.002); end
  def test_flows_g73; assert_in_delta(0.0, (worksheet.flows_g73||0), 0.002); end
  def test_flows_h73; assert_in_delta(0.0, (worksheet.flows_h73||0), 0.002); end
  def test_flows_i73; assert_in_delta(0.0, (worksheet.flows_i73||0), 0.002); end
  def test_flows_j73; assert_in_epsilon(3.323378564749181, worksheet.flows_j73, 0.002); end
  def test_flows_k73; assert_in_epsilon(3.6734203695183876, worksheet.flows_k73, 0.002); end
  def test_flows_l73; assert_in_epsilon(3.745201273644501, worksheet.flows_l73, 0.002); end
  def test_flows_m73; assert_in_epsilon(3.569652212228273, worksheet.flows_m73, 0.002); end
  def test_flows_n73; assert_in_epsilon(3.2329635663061804, worksheet.flows_n73, 0.002); end
  def test_flows_o73; assert_in_epsilon(2.824586170475702, worksheet.flows_o73, 0.002); end
  def test_flows_p73; assert_in_epsilon(2.4091752482822764, worksheet.flows_p73, 0.002); end
  def test_flows_c74; assert_equal("FOS.SUP", worksheet.flows_c74); end
  def test_flows_d74; assert_equal("Liquid", worksheet.flows_d74); end
  def test_flows_e74; assert_equal("Domestic gas production", worksheet.flows_e74); end
  def test_flows_f74; assert_in_epsilon(6.0, worksheet.flows_f74, 0.002); end
  def test_flows_g74; assert_in_delta(0.0, (worksheet.flows_g74||0), 0.002); end
  def test_flows_h74; assert_in_delta(0.0, (worksheet.flows_h74||0), 0.002); end
  def test_flows_i74; assert_in_delta(0.0, (worksheet.flows_i74||0), 0.002); end
  def test_flows_j74; assert_in_epsilon(6.646757129498362, worksheet.flows_j74, 0.002); end
  def test_flows_k74; assert_in_epsilon(7.346840739036775, worksheet.flows_k74, 0.002); end
  def test_flows_l74; assert_in_epsilon(7.490402547289002, worksheet.flows_l74, 0.002); end
  def test_flows_m74; assert_in_epsilon(7.139304424456546, worksheet.flows_m74, 0.002); end
  def test_flows_n74; assert_in_epsilon(6.465927132612361, worksheet.flows_n74, 0.002); end
  def test_flows_o74; assert_in_epsilon(5.649172340951404, worksheet.flows_o74, 0.002); end
  def test_flows_p74; assert_in_epsilon(4.818350496564553, worksheet.flows_p74, 0.002); end
  def test_flows_c75; assert_equal("FOS.CTL", worksheet.flows_c75); end
  def test_flows_d75; assert_equal("Coal ", worksheet.flows_d75); end
  def test_flows_e75; assert_equal("Coal to Liquid", worksheet.flows_e75); end
  def test_flows_f75; assert_in_delta(1.0, worksheet.flows_f75, 0.002); end
  def test_flows_g75; assert_in_epsilon(722.8014313365283, worksheet.flows_g75, 0.002); end
  def test_flows_h75; assert_in_epsilon(719.9217443590918, worksheet.flows_h75, 0.002); end
  def test_flows_i75; assert_in_epsilon(708.3610940606086, worksheet.flows_i75, 0.002); end
  def test_flows_j75; assert_in_epsilon(688.4848755320251, worksheet.flows_j75, 0.002); end
  def test_flows_k75; assert_in_epsilon(665.8102997992672, worksheet.flows_k75, 0.002); end
  def test_flows_l75; assert_in_epsilon(641.1688090447187, worksheet.flows_l75, 0.002); end
  def test_flows_m75; assert_in_epsilon(613.8397980119752, worksheet.flows_m75, 0.002); end
  def test_flows_n75; assert_in_epsilon(401.37498864027737, worksheet.flows_n75, 0.002); end
  def test_flows_o75; assert_in_epsilon(383.58923080645883, worksheet.flows_o75, 0.002); end
  def test_flows_p75; assert_in_epsilon(232.4346598544382, worksheet.flows_p75, 0.002); end
  def test_flows_c76; assert_equal("FOS.CTL", worksheet.flows_c76); end
  def test_flows_d76; assert_equal("Electricity grid", worksheet.flows_d76); end
  def test_flows_e76; assert_equal("Coal to Liquid", worksheet.flows_e76); end
  def test_flows_f76; assert_in_epsilon(2.0, worksheet.flows_f76, 0.002); end
  def test_flows_g76; assert_in_epsilon(19.695173750777297, worksheet.flows_g76, 0.002); end
  def test_flows_h76; assert_in_epsilon(19.61670692308496, worksheet.flows_h76, 0.002); end
  def test_flows_i76; assert_in_epsilon(19.461634141084286, worksheet.flows_i76, 0.002); end
  def test_flows_j76; assert_in_epsilon(19.121527913376017, worksheet.flows_j76, 0.002); end
  def test_flows_k76; assert_in_epsilon(40.53721173153876, worksheet.flows_k76, 0.002); end
  def test_flows_l76; assert_in_epsilon(39.779506839360465, worksheet.flows_l76, 0.002); end
  def test_flows_m76; assert_in_epsilon(39.0496076312988, worksheet.flows_m76, 0.002); end
  def test_flows_n76; assert_in_epsilon(26.40393683563805, worksheet.flows_n76, 0.002); end
  def test_flows_o76; assert_in_epsilon(26.40393683563805, worksheet.flows_o76, 0.002); end
  def test_flows_p76; assert_in_epsilon(17.02562892724628, worksheet.flows_p76, 0.002); end
  def test_flows_c77; assert_equal("FOS.CTL", worksheet.flows_c77); end
  def test_flows_d77; assert_equal("Coal to Liquid", worksheet.flows_d77); end
  def test_flows_e77; assert_equal("Liquid", worksheet.flows_e77); end
  def test_flows_f77; assert_in_epsilon(3.0, worksheet.flows_f77, 0.002); end
  def test_flows_g77; assert_in_epsilon(199.51181758596977, worksheet.flows_g77, 0.002); end
  def test_flows_h77; assert_in_epsilon(199.51181758596977, worksheet.flows_h77, 0.002); end
  def test_flows_i77; assert_in_epsilon(199.51181758596977, worksheet.flows_i77, 0.002); end
  def test_flows_j77; assert_in_epsilon(199.51181758596977, worksheet.flows_j77, 0.002); end
  def test_flows_k77; assert_in_epsilon(199.51181758596977, worksheet.flows_k77, 0.002); end
  def test_flows_l77; assert_in_epsilon(199.51181758596977, worksheet.flows_l77, 0.002); end
  def test_flows_m77; assert_in_epsilon(199.51181758596977, worksheet.flows_m77, 0.002); end
  def test_flows_n77; assert_in_epsilon(129.4405005796209, worksheet.flows_n77, 0.002); end
  def test_flows_o77; assert_in_epsilon(129.4405005796209, worksheet.flows_o77, 0.002); end
  def test_flows_p77; assert_in_epsilon(79.80472703438792, worksheet.flows_p77, 0.002); end
  def test_flows_c78; assert_equal("FOS.CTL", worksheet.flows_c78); end
  def test_flows_d78; assert_equal("Coal to Liquid", worksheet.flows_d78); end
  def test_flows_e78; assert_equal("Losses", worksheet.flows_e78); end
  def test_flows_f78; assert_in_epsilon(4.0, worksheet.flows_f78, 0.002); end
  def test_flows_g78; assert_in_epsilon(543.1847876409718, worksheet.flows_g78, 0.002); end
  def test_flows_h78; assert_in_epsilon(540.1477493186161, worksheet.flows_h78, 0.002); end
  def test_flows_i78; assert_in_epsilon(534.1456972981503, worksheet.flows_i78, 0.002); end
  def test_flows_j78; assert_in_epsilon(520.9819734979249, worksheet.flows_j78, 0.002); end
  def test_flows_k78; assert_in_epsilon(528.6648520426617, worksheet.flows_k78, 0.002); end
  def test_flows_l78; assert_in_epsilon(514.6877177751296, worksheet.flows_l78, 0.002); end
  def test_flows_m78; assert_in_epsilon(501.223505866039, worksheet.flows_m78, 0.002); end
  def test_flows_n78; assert_in_epsilon(344.9080672612554, worksheet.flows_n78, 0.002); end
  def test_flows_o78; assert_in_epsilon(344.9080672612554, worksheet.flows_o78, 0.002); end
  def test_flows_p78; assert_in_epsilon(226.4214744833241, worksheet.flows_p78, 0.002); end
  def test_flows_c79; assert_equal("FOS.CTL", worksheet.flows_c79); end
  def test_flows_d79; assert_equal("Gas", worksheet.flows_d79); end
  def test_flows_e79; assert_equal("Coal to Liquid", worksheet.flows_e79); end
  def test_flows_f79; assert_in_epsilon(5.0, worksheet.flows_f79, 0.002); end
  def test_flows_g79; assert_in_delta(-0.2000001396361064, worksheet.flows_g79, 0.002); end
  def test_flows_h79; assert_in_delta(-0.12111562240911766, worksheet.flows_h79, 0.002); end
  def test_flows_i79; assert_in_epsilon(-5.834786682427282, worksheet.flows_i79, 0.002); end
  def test_flows_j79; assert_in_epsilon(-12.887387638493578, worksheet.flows_j79, 0.002); end
  def test_flows_k79; assert_in_epsilon(-21.82915809782544, worksheet.flows_k79, 0.002); end
  def test_flows_l79; assert_in_epsilon(-33.25121947702016, worksheet.flows_l79, 0.002); end
  def test_flows_m79; assert_in_epsilon(-47.84591780873478, worksheet.flows_m79, 0.002); end
  def test_flows_n79; assert_in_epsilon(-46.569642364960856, worksheet.flows_n79, 0.002); end
  def test_flows_o79; assert_in_epsilon(-64.35540019877936, worksheet.flows_o79, 0.002); end
  def test_flows_p79; assert_in_epsilon(-56.765912736027516, worksheet.flows_p79, 0.002); end
  def test_flows_c80; assert_equal("FOS.GTL", worksheet.flows_c80); end
  def test_flows_d80; assert_equal("Gas", worksheet.flows_d80); end
  def test_flows_e80; assert_equal("Gas to Liquid", worksheet.flows_e80); end
  def test_flows_f80; assert_in_delta(1.0, worksheet.flows_f80, 0.002); end
  def test_flows_g80; assert_in_epsilon(64.22834761321909, worksheet.flows_g80, 0.002); end
  def test_flows_h80; assert_in_epsilon(41.41776319655393, worksheet.flows_h80, 0.002); end
  def test_flows_i80; assert_in_epsilon(41.09035004875508, worksheet.flows_i80, 0.002); end
  def test_flows_j80; assert_in_epsilon(40.37226626149528, worksheet.flows_j80, 0.002); end
  def test_flows_k80; assert_in_epsilon(39.603270713657274, worksheet.flows_k80, 0.002); end
  def test_flows_l80; assert_in_epsilon(38.86302266293471, worksheet.flows_l80, 0.002); end
  def test_flows_m80; assert_in_delta(0.0, (worksheet.flows_m80||0), 0.002); end
  def test_flows_n80; assert_in_delta(0.0, (worksheet.flows_n80||0), 0.002); end
  def test_flows_o80; assert_in_delta(0.0, (worksheet.flows_o80||0), 0.002); end
  def test_flows_p80; assert_in_delta(0.0, (worksheet.flows_p80||0), 0.002); end
  def test_flows_c81; assert_equal("FOS.GTL", worksheet.flows_c81); end
  def test_flows_d81; assert_equal("Gas to Liquid", worksheet.flows_d81); end
  def test_flows_e81; assert_equal("Liquid", worksheet.flows_e81); end
  def test_flows_f81; assert_in_epsilon(2.0, worksheet.flows_f81, 0.002); end
  def test_flows_g81; assert_in_epsilon(54.80695973516084, worksheet.flows_g81, 0.002); end
  def test_flows_h81; assert_in_epsilon(40.55283893874978, worksheet.flows_h81, 0.002); end
  def test_flows_i81; assert_in_epsilon(40.55283893874978, worksheet.flows_i81, 0.002); end
  def test_flows_j81; assert_in_epsilon(40.55283893874978, worksheet.flows_j81, 0.002); end
  def test_flows_k81; assert_in_epsilon(40.55283893874978, worksheet.flows_k81, 0.002); end
  def test_flows_l81; assert_in_epsilon(40.55283893874978, worksheet.flows_l81, 0.002); end
  def test_flows_m81; assert_in_delta(0.0, (worksheet.flows_m81||0), 0.002); end
  def test_flows_n81; assert_in_delta(0.0, (worksheet.flows_n81||0), 0.002); end
  def test_flows_o81; assert_in_delta(0.0, (worksheet.flows_o81||0), 0.002); end
  def test_flows_p81; assert_in_delta(0.0, (worksheet.flows_p81||0), 0.002); end
  def test_flows_c82; assert_equal("FOS.GTL", worksheet.flows_c82); end
  def test_flows_d82; assert_equal("Electricity grid", worksheet.flows_d82); end
  def test_flows_e82; assert_equal("Gas to Liquid", worksheet.flows_e82); end
  def test_flows_f82; assert_in_epsilon(3.0, worksheet.flows_f82, 0.002); end
  def test_flows_g82; assert_in_epsilon(4.091591697009967, worksheet.flows_g82, 0.002); end
  def test_flows_h82; assert_in_epsilon(3.0153944223107563, worksheet.flows_h82, 0.002); end
  def test_flows_i82; assert_in_epsilon(2.9915573122529637, worksheet.flows_i82, 0.002); end
  def test_flows_j82; assert_in_epsilon(2.939277669902912, worksheet.flows_j82, 0.002); end
  def test_flows_k82; assert_in_epsilon(2.883291428571428, worksheet.flows_k82, 0.002); end
  def test_flows_l82; assert_in_epsilon(2.829398130841121, worksheet.flows_l82, 0.002); end
  def test_flows_m82; assert_in_delta(0.0, (worksheet.flows_m82||0), 0.002); end
  def test_flows_n82; assert_in_delta(0.0, (worksheet.flows_n82||0), 0.002); end
  def test_flows_o82; assert_in_delta(0.0, (worksheet.flows_o82||0), 0.002); end
  def test_flows_p82; assert_in_delta(0.0, (worksheet.flows_p82||0), 0.002); end
  def test_flows_c83; assert_equal("FOS.GTL", worksheet.flows_c83); end
  def test_flows_d83; assert_equal("Oil", worksheet.flows_d83); end
  def test_flows_e83; assert_equal("Gas to Liquid", worksheet.flows_e83); end
  def test_flows_f83; assert_in_epsilon(4.0, worksheet.flows_f83, 0.002); end
  def test_flows_g83; assert_in_epsilon(14.694603594919437, worksheet.flows_g83, 0.002); end
  def test_flows_h83; assert_in_epsilon(16.746355925898467, worksheet.flows_h83, 0.002); end
  def test_flows_i83; assert_in_epsilon(16.613973665614683, worksheet.flows_i83, 0.002); end
  def test_flows_j83; assert_in_epsilon(16.323632378254427, worksheet.flows_j83, 0.002); end
  def test_flows_k83; assert_in_epsilon(16.01270604724006, worksheet.flows_k83, 0.002); end
  def test_flows_l83; assert_in_epsilon(15.713403130469215, worksheet.flows_l83, 0.002); end
  def test_flows_m83; assert_in_delta(0.0, (worksheet.flows_m83||0), 0.002); end
  def test_flows_n83; assert_in_delta(0.0, (worksheet.flows_n83||0), 0.002); end
  def test_flows_o83; assert_in_delta(0.0, (worksheet.flows_o83||0), 0.002); end
  def test_flows_p83; assert_in_delta(0.0, (worksheet.flows_p83||0), 0.002); end
  def test_flows_c84; assert_equal("FOS.GTL", worksheet.flows_c84); end
  def test_flows_d84; assert_equal("Gas to Liquid", worksheet.flows_d84); end
  def test_flows_e84; assert_equal("Losses", worksheet.flows_e84); end
  def test_flows_f84; assert_in_epsilon(5.0, worksheet.flows_f84, 0.002); end
  def test_flows_g84; assert_in_epsilon(28.20758316998765, worksheet.flows_g84, 0.002); end
  def test_flows_h84; assert_in_epsilon(20.62667460601338, worksheet.flows_h84, 0.002); end
  def test_flows_i84; assert_in_epsilon(20.143042087872956, worksheet.flows_i84, 0.002); end
  def test_flows_j84; assert_in_epsilon(19.082337370902845, worksheet.flows_j84, 0.002); end
  def test_flows_k84; assert_in_epsilon(17.946429250718985, worksheet.flows_k84, 0.002); end
  def test_flows_l84; assert_in_epsilon(16.85298498549527, worksheet.flows_l84, 0.002); end
  def test_flows_m84; assert_in_delta(0.0, (worksheet.flows_m84||0), 0.002); end
  def test_flows_n84; assert_in_delta(0.0, (worksheet.flows_n84||0), 0.002); end
  def test_flows_o84; assert_in_delta(0.0, (worksheet.flows_o84||0), 0.002); end
  def test_flows_p84; assert_in_delta(0.0, (worksheet.flows_p84||0), 0.002); end
  def test_flows_c85; assert_equal("FOS.GTL", worksheet.flows_c85); end
  def test_flows_d85; assert_equal("Crude oil imports", worksheet.flows_d85); end
  def test_flows_e85; assert_equal("Oil", worksheet.flows_e85); end
  def test_flows_f85; assert_in_epsilon(6.0, worksheet.flows_f85, 0.002); end
  def test_flows_g85; assert_in_epsilon(14.694603594919437, worksheet.flows_g85, 0.002); end
  def test_flows_h85; assert_in_epsilon(16.746355925898467, worksheet.flows_h85, 0.002); end
  def test_flows_i85; assert_in_epsilon(16.613973665614683, worksheet.flows_i85, 0.002); end
  def test_flows_j85; assert_in_epsilon(16.323632378254427, worksheet.flows_j85, 0.002); end
  def test_flows_k85; assert_in_epsilon(16.01270604724006, worksheet.flows_k85, 0.002); end
  def test_flows_l85; assert_in_epsilon(15.713403130469215, worksheet.flows_l85, 0.002); end
  def test_flows_m85; assert_in_delta(0.0, (worksheet.flows_m85||0), 0.002); end
  def test_flows_n85; assert_in_delta(0.0, (worksheet.flows_n85||0), 0.002); end
  def test_flows_o85; assert_in_delta(0.0, (worksheet.flows_o85||0), 0.002); end
  def test_flows_p85; assert_in_delta(0.0, (worksheet.flows_p85||0), 0.002); end
  def test_flows_c86; assert_equal("FOS.REF", worksheet.flows_c86); end
  def test_flows_d86; assert_equal("Crude oil imports", worksheet.flows_d86); end
  def test_flows_e86; assert_equal("Oil", worksheet.flows_e86); end
  def test_flows_f86; assert_in_delta(1.0, worksheet.flows_f86, 0.002); end
  def test_flows_g86; assert_in_epsilon(649.0810613358369, worksheet.flows_g86, 0.002); end
  def test_flows_h86; assert_in_epsilon(604.3913342117879, worksheet.flows_h86, 0.002); end
  def test_flows_i86; assert_in_epsilon(574.8693675796071, worksheet.flows_i86, 0.002); end
  def test_flows_j86; assert_in_epsilon(557.595174995684, worksheet.flows_j86, 0.002); end
  def test_flows_k86; assert_in_epsilon(531.5310912915251, worksheet.flows_k86, 0.002); end
  def test_flows_l86; assert_in_epsilon(501.1048582376795, worksheet.flows_l86, 0.002); end
  def test_flows_m86; assert_in_epsilon(351.29273365686646, worksheet.flows_m86, 0.002); end
  def test_flows_n86; assert_in_epsilon(351.29273365686646, worksheet.flows_n86, 0.002); end
  def test_flows_o86; assert_in_delta(0.0, (worksheet.flows_o86||0), 0.002); end
  def test_flows_p86; assert_in_delta(0.0, (worksheet.flows_p86||0), 0.002); end
  def test_flows_c87; assert_equal("FOS.REF", worksheet.flows_c87); end
  def test_flows_d87; assert_equal("Oil", worksheet.flows_d87); end
  def test_flows_e87; assert_equal("Losses", worksheet.flows_e87); end
  def test_flows_f87; assert_in_epsilon(2.0, worksheet.flows_f87, 0.002); end
  def test_flows_g87; assert_in_epsilon(47.48721099636325, worksheet.flows_g87, 0.002); end
  def test_flows_h87; assert_in_epsilon(44.21768022783019, worksheet.flows_h87, 0.002); end
  def test_flows_i87; assert_in_epsilon(42.05783311165527, worksheet.flows_i87, 0.002); end
  def test_flows_j87; assert_in_epsilon(40.794041457749444, worksheet.flows_j87, 0.002); end
  def test_flows_k87; assert_in_epsilon(38.88717540354813, worksheet.flows_k87, 0.002); end
  def test_flows_l87; assert_in_epsilon(36.66117154221391, worksheet.flows_l87, 0.002); end
  def test_flows_m87; assert_in_epsilon(25.700814826303446, worksheet.flows_m87, 0.002); end
  def test_flows_n87; assert_in_epsilon(25.700814826303446, worksheet.flows_n87, 0.002); end
  def test_flows_o87; assert_in_delta(0.0, (worksheet.flows_o87||0), 0.002); end
  def test_flows_p87; assert_in_delta(0.0, (worksheet.flows_p87||0), 0.002); end
  def test_flows_c88; assert_equal("FOS.REF", worksheet.flows_c88); end
  def test_flows_d88; assert_equal("Oil", worksheet.flows_d88); end
  def test_flows_e88; assert_equal("Liquid", worksheet.flows_e88); end
  def test_flows_f88; assert_in_epsilon(3.0, worksheet.flows_f88, 0.002); end
  def test_flows_g88; assert_in_epsilon(601.5938503394736, worksheet.flows_g88, 0.002); end
  def test_flows_h88; assert_in_epsilon(560.1736539839577, worksheet.flows_h88, 0.002); end
  def test_flows_i88; assert_in_epsilon(532.8115344679518, worksheet.flows_i88, 0.002); end
  def test_flows_j88; assert_in_epsilon(516.8011335379346, worksheet.flows_j88, 0.002); end
  def test_flows_k88; assert_in_epsilon(492.64391588797696, worksheet.flows_k88, 0.002); end
  def test_flows_l88; assert_in_epsilon(464.4436866954656, worksheet.flows_l88, 0.002); end
  def test_flows_m88; assert_in_epsilon(325.591918830563, worksheet.flows_m88, 0.002); end
  def test_flows_n88; assert_in_epsilon(325.591918830563, worksheet.flows_n88, 0.002); end
  def test_flows_o88; assert_in_delta(0.0, (worksheet.flows_o88||0), 0.002); end
  def test_flows_p88; assert_in_delta(0.0, (worksheet.flows_p88||0), 0.002); end
  def test_flows_c89; assert_equal("IND.a", worksheet.flows_c89); end
  def test_flows_d89; assert_equal("Electricity grid", worksheet.flows_d89); end
  def test_flows_e89; assert_equal("Industry", worksheet.flows_e89); end
  def test_flows_f89; assert_in_delta(1.0, worksheet.flows_f89, 0.002); end
  def test_flows_g89; assert_in_epsilon(421.6693628370874, worksheet.flows_g89, 0.002); end
  def test_flows_h89; assert_in_epsilon(415.6261256000089, worksheet.flows_h89, 0.002); end
  def test_flows_i89; assert_in_epsilon(432.2135776109476, worksheet.flows_i89, 0.002); end
  def test_flows_j89; assert_in_epsilon(483.90583489409113, worksheet.flows_j89, 0.002); end
  def test_flows_k89; assert_in_epsilon(515.3787779902318, worksheet.flows_k89, 0.002); end
  def test_flows_l89; assert_in_epsilon(540.2241449313483, worksheet.flows_l89, 0.002); end
  def test_flows_m89; assert_in_epsilon(557.8283923588417, worksheet.flows_m89, 0.002); end
  def test_flows_n89; assert_in_epsilon(564.1833841240881, worksheet.flows_n89, 0.002); end
  def test_flows_o89; assert_in_epsilon(579.1182624105768, worksheet.flows_o89, 0.002); end
  def test_flows_p89; assert_in_epsilon(579.7202133066852, worksheet.flows_p89, 0.002); end
  def test_flows_c90; assert_equal("IND.a", worksheet.flows_c90); end
  def test_flows_d90; assert_equal("Gas", worksheet.flows_d90); end
  def test_flows_e90; assert_equal("Industry", worksheet.flows_e90); end
  def test_flows_f90; assert_in_epsilon(2.0, worksheet.flows_f90, 0.002); end
  def test_flows_g90; assert_in_epsilon(89.38764071149885, worksheet.flows_g90, 0.002); end
  def test_flows_h90; assert_in_epsilon(132.71948463033848, worksheet.flows_h90, 0.002); end
  def test_flows_i90; assert_in_epsilon(181.63180279990462, worksheet.flows_i90, 0.002); end
  def test_flows_j90; assert_in_epsilon(234.25924440549494, worksheet.flows_j90, 0.002); end
  def test_flows_k90; assert_in_epsilon(325.9058806682999, worksheet.flows_k90, 0.002); end
  def test_flows_l90; assert_in_epsilon(419.20516380555205, worksheet.flows_l90, 0.002); end
  def test_flows_m90; assert_in_epsilon(567.076184788599, worksheet.flows_m90, 0.002); end
  def test_flows_n90; assert_in_epsilon(717.2318072381631, worksheet.flows_n90, 0.002); end
  def test_flows_o90; assert_in_epsilon(942.2521315779134, worksheet.flows_o90, 0.002); end
  def test_flows_p90; assert_in_epsilon(1170.4293495660122, worksheet.flows_p90, 0.002); end
  def test_flows_c91; assert_equal("IND.a", worksheet.flows_c91); end
  def test_flows_d91; assert_equal("Liquid", worksheet.flows_d91); end
  def test_flows_e91; assert_equal("Industry", worksheet.flows_e91); end
  def test_flows_f91; assert_in_epsilon(3.0, worksheet.flows_f91, 0.002); end
  def test_flows_g91; assert_in_epsilon(40.030363550476274, worksheet.flows_g91, 0.002); end
  def test_flows_h91; assert_in_epsilon(38.71596022834045, worksheet.flows_h91, 0.002); end
  def test_flows_i91; assert_in_epsilon(41.44468607065188, worksheet.flows_i91, 0.002); end
  def test_flows_j91; assert_in_epsilon(49.00322987238812, worksheet.flows_j91, 0.002); end
  def test_flows_k91; assert_in_epsilon(58.650952938003854, worksheet.flows_k91, 0.002); end
  def test_flows_l91; assert_in_epsilon(69.76918055106965, worksheet.flows_l91, 0.002); end
  def test_flows_m91; assert_in_epsilon(82.21902114505932, worksheet.flows_m91, 0.002); end
  def test_flows_n91; assert_in_epsilon(96.61499048550226, worksheet.flows_n91, 0.002); end
  def test_flows_o91; assert_in_epsilon(113.81729392778902, worksheet.flows_o91, 0.002); end
  def test_flows_p91; assert_in_epsilon(133.8987196137436, worksheet.flows_p91, 0.002); end
  def test_flows_c92; assert_equal("IND.a", worksheet.flows_c92); end
  def test_flows_d92; assert_equal("Coal ", worksheet.flows_d92); end
  def test_flows_e92; assert_equal("Industry", worksheet.flows_e92); end
  def test_flows_f92; assert_in_epsilon(4.0, worksheet.flows_f92, 0.002); end
  def test_flows_g92; assert_in_epsilon(562.0237640698921, worksheet.flows_g92, 0.002); end
  def test_flows_h92; assert_in_epsilon(523.1928880872387, worksheet.flows_h92, 0.002); end
  def test_flows_i92; assert_in_epsilon(559.808125805524, worksheet.flows_i92, 0.002); end
  def test_flows_j92; assert_in_epsilon(601.127522141106, worksheet.flows_j92, 0.002); end
  def test_flows_k92; assert_in_epsilon(663.0995508973544, worksheet.flows_k92, 0.002); end
  def test_flows_l92; assert_in_epsilon(727.1641919637061, worksheet.flows_l92, 0.002); end
  def test_flows_m92; assert_in_epsilon(792.7080204790024, worksheet.flows_m92, 0.002); end
  def test_flows_n92; assert_in_epsilon(861.1446540008815, worksheet.flows_n92, 0.002); end
  def test_flows_o92; assert_in_epsilon(959.0378464624167, worksheet.flows_o92, 0.002); end
  def test_flows_p92; assert_in_epsilon(1060.9283565677658, worksheet.flows_p92, 0.002); end
  def test_flows_c93; assert_equal("IND.a", worksheet.flows_c93); end
  def test_flows_d93; assert_equal("Biomass", worksheet.flows_d93); end
  def test_flows_e93; assert_equal("Industry", worksheet.flows_e93); end
  def test_flows_f93; assert_in_epsilon(5.0, worksheet.flows_f93, 0.002); end
  def test_flows_g93; assert_in_epsilon(76.23745007591569, worksheet.flows_g93, 0.002); end
  def test_flows_h93; assert_in_epsilon(77.50056729008222, worksheet.flows_h93, 0.002); end
  def test_flows_i93; assert_in_epsilon(86.04143145526191, worksheet.flows_i93, 0.002); end
  def test_flows_j93; assert_in_epsilon(94.58229562044164, worksheet.flows_j93, 0.002); end
  def test_flows_k93; assert_in_epsilon(110.25815198088875, worksheet.flows_k93, 0.002); end
  def test_flows_l93; assert_in_epsilon(125.93400834133587, worksheet.flows_l93, 0.002); end
  def test_flows_m93; assert_in_epsilon(152.2739810087679, worksheet.flows_m93, 0.002); end
  def test_flows_n93; assert_in_epsilon(178.61395367619994, worksheet.flows_n93, 0.002); end
  def test_flows_o93; assert_in_epsilon(228.74381296235634, worksheet.flows_o93, 0.002); end
  def test_flows_p93; assert_in_epsilon(278.87367224851266, worksheet.flows_p93, 0.002); end
  def test_flows_c94; assert_equal("AGL", worksheet.flows_c94); end
  def test_flows_d94; assert_equal("Electricity grid", worksheet.flows_d94); end
  def test_flows_e94; assert_equal("Agriculture", worksheet.flows_e94); end
  def test_flows_f94; assert_in_delta(1.0, worksheet.flows_f94, 0.002); end
  def test_flows_g94; assert_in_epsilon(20.760772499999998, worksheet.flows_g94, 0.002); end
  def test_flows_h94; assert_in_epsilon(21.350817792117, worksheet.flows_h94, 0.002); end
  def test_flows_i94; assert_in_epsilon(21.50203524503817, worksheet.flows_i94, 0.002); end
  def test_flows_j94; assert_in_epsilon(22.93288692450516, worksheet.flows_j94, 0.002); end
  def test_flows_k94; assert_in_epsilon(23.784949335160263, worksheet.flows_k94, 0.002); end
  def test_flows_l94; assert_in_epsilon(24.680475492071224, worksheet.flows_l94, 0.002); end
  def test_flows_m94; assert_in_epsilon(25.621682483112068, worksheet.flows_m94, 0.002); end
  def test_flows_n94; assert_in_epsilon(26.610900489920375, worksheet.flows_n94, 0.002); end
  def test_flows_o94; assert_in_epsilon(27.65057855681579, worksheet.flows_o94, 0.002); end
  def test_flows_p94; assert_in_epsilon(28.743290653991423, worksheet.flows_p94, 0.002); end
  def test_flows_c95; assert_equal("AGL", worksheet.flows_c95); end
  def test_flows_d95; assert_equal("Gas", worksheet.flows_d95); end
  def test_flows_e95; assert_equal("Agriculture", worksheet.flows_e95); end
  def test_flows_f95; assert_in_epsilon(2.0, worksheet.flows_f95, 0.002); end
  def test_flows_g95; assert_in_delta(0.0, (worksheet.flows_g95||0), 0.002); end
  def test_flows_h95; assert_in_delta(0.0, (worksheet.flows_h95||0), 0.002); end
  def test_flows_i95; assert_in_delta(0.0, (worksheet.flows_i95||0), 0.002); end
  def test_flows_j95; assert_in_delta(0.0, (worksheet.flows_j95||0), 0.002); end
  def test_flows_k95; assert_in_delta(0.0, (worksheet.flows_k95||0), 0.002); end
  def test_flows_l95; assert_in_delta(0.0, (worksheet.flows_l95||0), 0.002); end
  def test_flows_m95; assert_in_delta(0.0, (worksheet.flows_m95||0), 0.002); end
  def test_flows_n95; assert_in_delta(0.0, (worksheet.flows_n95||0), 0.002); end
  def test_flows_o95; assert_in_delta(0.0, (worksheet.flows_o95||0), 0.002); end
  def test_flows_p95; assert_in_delta(0.0, (worksheet.flows_p95||0), 0.002); end
  def test_flows_c96; assert_equal("AGL", worksheet.flows_c96); end
  def test_flows_d96; assert_equal("Liquid", worksheet.flows_d96); end
  def test_flows_e96; assert_equal("Agriculture", worksheet.flows_e96); end
  def test_flows_f96; assert_in_epsilon(3.0, worksheet.flows_f96, 0.002); end
  def test_flows_g96; assert_in_epsilon(49.08691125, worksheet.flows_g96, 0.002); end
  def test_flows_h96; assert_in_epsilon(50.482018338988496, worksheet.flows_h96, 0.002); end
  def test_flows_i96; assert_in_epsilon(50.83955790987838, worksheet.flows_i96, 0.002); end
  def test_flows_j96; assert_in_epsilon(54.22267332149949, worksheet.flows_j96, 0.002); end
  def test_flows_k96; assert_in_epsilon(56.23729546194673, worksheet.flows_k96, 0.002); end
  def test_flows_l96; assert_in_epsilon(58.35468357871078, worksheet.flows_l96, 0.002); end
  def test_flows_m96; assert_in_epsilon(60.58007976939209, worksheet.flows_m96, 0.002); end
  def test_flows_n96; assert_in_epsilon(62.91899353125242, worksheet.flows_n96, 0.002); end
  def test_flows_o96; assert_in_epsilon(65.3772154012848, worksheet.flows_o96, 0.002); end
  def test_flows_p96; assert_in_epsilon(67.96083129206447, worksheet.flows_p96, 0.002); end
  def test_flows_c97; assert_equal("AGL", worksheet.flows_c97); end
  def test_flows_d97; assert_equal("Coal ", worksheet.flows_d97); end
  def test_flows_e97; assert_equal("Agriculture", worksheet.flows_e97); end
  def test_flows_f97; assert_in_epsilon(4.0, worksheet.flows_f97, 0.002); end
  def test_flows_g97; assert_in_delta(0.52781625, worksheet.flows_g97, 0.002); end
  def test_flows_h97; assert_in_delta(0.5428174014945, worksheet.flows_h97, 0.002); end
  def test_flows_i97; assert_in_delta(0.546661913009445, worksheet.flows_i97, 0.002); end
  def test_flows_j97; assert_in_delta(0.5830394980806397, worksheet.flows_j97, 0.002); end
  def test_flows_k97; assert_in_delta(0.6047021017413626, worksheet.flows_k97, 0.002); end
  def test_flows_l97; assert_in_delta(0.6274697159001159, worksheet.flows_l97, 0.002); end
  def test_flows_m97; assert_in_delta(0.6513987071977644, worksheet.flows_m97, 0.002); end
  def test_flows_n97; assert_in_delta(0.6765483175403486, worksheet.flows_n97, 0.002); end
  def test_flows_o97; assert_in_delta(0.7029808107665032, worksheet.flows_o97, 0.002); end
  def test_flows_p97; assert_in_delta(0.7307616267963921, worksheet.flows_p97, 0.002); end
  def test_flows_c98; assert_equal("AGL", worksheet.flows_c98); end
  def test_flows_d98; assert_equal("Agriculture", worksheet.flows_d98); end
  def test_flows_e98; assert_equal("Biomass", worksheet.flows_e98); end
  def test_flows_f98; assert_in_epsilon(5.0, worksheet.flows_f98, 0.002); end
  def test_flows_g98; assert_in_epsilon(93.30284604816, worksheet.flows_g98, 0.002); end
  def test_flows_h98; assert_in_epsilon(135.5323250547273, worksheet.flows_h98, 0.002); end
  def test_flows_i98; assert_in_epsilon(125.19578352396387, worksheet.flows_i98, 0.002); end
  def test_flows_j98; assert_in_epsilon(116.00963583452902, worksheet.flows_j98, 0.002); end
  def test_flows_k98; assert_in_epsilon(107.86335303913974, worksheet.flows_k98, 0.002); end
  def test_flows_l98; assert_in_epsilon(100.6570256657985, worksheet.flows_l98, 0.002); end
  def test_flows_m98; assert_in_epsilon(94.30034360893383, worksheet.flows_m98, 0.002); end
  def test_flows_n98; assert_in_epsilon(88.71167362353611, worksheet.flows_n98, 0.002); end
  def test_flows_o98; assert_in_epsilon(83.81722572173078, worksheet.flows_o98, 0.002); end
  def test_flows_p98; assert_in_epsilon(79.55029959888248, worksheet.flows_p98, 0.002); end
  def test_flows_c99; assert_equal("TRA.a", worksheet.flows_c99); end
  def test_flows_d99; assert_equal("Electricity grid", worksheet.flows_d99); end
  def test_flows_e99; assert_equal("Passenger transport", worksheet.flows_e99); end
  def test_flows_f99; assert_in_delta(1.0, worksheet.flows_f99, 0.002); end
  def test_flows_g99; assert_in_epsilon(2.3417856574208473, worksheet.flows_g99, 0.002); end
  def test_flows_h99; assert_in_epsilon(2.846718476468803, worksheet.flows_h99, 0.002); end
  def test_flows_i99; assert_in_epsilon(9.587811166969248, worksheet.flows_i99, 0.002); end
  def test_flows_j99; assert_in_epsilon(16.90698804109396, worksheet.flows_j99, 0.002); end
  def test_flows_k99; assert_in_epsilon(24.72198032841952, worksheet.flows_k99, 0.002); end
  def test_flows_l99; assert_in_epsilon(33.0365569870348, worksheet.flows_l99, 0.002); end
  def test_flows_m99; assert_in_epsilon(40.43291142328471, worksheet.flows_m99, 0.002); end
  def test_flows_n99; assert_in_epsilon(47.716982306214724, worksheet.flows_n99, 0.002); end
  def test_flows_o99; assert_in_epsilon(54.43679559923003, worksheet.flows_o99, 0.002); end
  def test_flows_p99; assert_in_epsilon(61.004238826438225, worksheet.flows_p99, 0.002); end
  def test_flows_c100; assert_equal("TRA.a", worksheet.flows_c100); end
  def test_flows_d100; assert_equal("Liquid", worksheet.flows_d100); end
  def test_flows_e100; assert_equal("Passenger transport", worksheet.flows_e100); end
  def test_flows_f100; assert_in_epsilon(2.0, worksheet.flows_f100, 0.002); end
  def test_flows_g100; assert_in_epsilon(432.3207275713987, worksheet.flows_g100, 0.002); end
  def test_flows_h100; assert_in_epsilon(441.8893663016349, worksheet.flows_h100, 0.002); end
  def test_flows_i100; assert_in_epsilon(416.8960806636786, worksheet.flows_i100, 0.002); end
  def test_flows_j100; assert_in_epsilon(373.04896406808444, worksheet.flows_j100, 0.002); end
  def test_flows_k100; assert_in_epsilon(331.27954702909, worksheet.flows_k100, 0.002); end
  def test_flows_l100; assert_in_epsilon(284.49662962293513, worksheet.flows_l100, 0.002); end
  def test_flows_m100; assert_in_epsilon(243.23773018779687, worksheet.flows_m100, 0.002); end
  def test_flows_n100; assert_in_epsilon(201.4982544684294, worksheet.flows_n100, 0.002); end
  def test_flows_o100; assert_in_epsilon(162.28968874891834, worksheet.flows_o100, 0.002); end
  def test_flows_p100; assert_in_epsilon(126.57214327479565, worksheet.flows_p100, 0.002); end
  def test_flows_c101; assert_equal("TRA.a", worksheet.flows_c101); end
  def test_flows_d101; assert_equal("Gas", worksheet.flows_d101); end
  def test_flows_e101; assert_equal("Passenger transport", worksheet.flows_e101); end
  def test_flows_f101; assert_in_epsilon(3.0, worksheet.flows_f101, 0.002); end
  def test_flows_g101; assert_in_delta(0.0, (worksheet.flows_g101||0), 0.002); end
  def test_flows_h101; assert_in_delta(0.0, (worksheet.flows_h101||0), 0.002); end
  def test_flows_i101; assert_in_epsilon(3.4391698554663215, worksheet.flows_i101, 0.002); end
  def test_flows_j101; assert_in_epsilon(6.348322287110617, worksheet.flows_j101, 0.002); end
  def test_flows_k101; assert_in_epsilon(9.879083265321572, worksheet.flows_k101, 0.002); end
  def test_flows_l101; assert_in_epsilon(13.746011612839837, worksheet.flows_l101, 0.002); end
  def test_flows_m101; assert_in_epsilon(17.284238381986533, worksheet.flows_m101, 0.002); end
  def test_flows_n101; assert_in_epsilon(20.896015507875347, worksheet.flows_n101, 0.002); end
  def test_flows_o101; assert_in_epsilon(24.429044945722097, worksheet.flows_o101, 0.002); end
  def test_flows_p101; assert_in_epsilon(27.996628625066172, worksheet.flows_p101, 0.002); end
  def test_flows_c102; assert_equal("TRA.a", worksheet.flows_c102); end
  def test_flows_d102; assert_equal("H2", worksheet.flows_d102); end
  def test_flows_e102; assert_equal("Passenger transport", worksheet.flows_e102); end
  def test_flows_f102; assert_in_epsilon(4.0, worksheet.flows_f102, 0.002); end
  def test_flows_g102; assert_in_delta(0.0, (worksheet.flows_g102||0), 0.002); end
  def test_flows_h102; assert_in_delta(0.0, (worksheet.flows_h102||0), 0.002); end
  def test_flows_i102; assert_in_epsilon(3.9421985894588736, worksheet.flows_i102, 0.002); end
  def test_flows_j102; assert_in_epsilon(8.642731173057571, worksheet.flows_j102, 0.002); end
  def test_flows_k102; assert_in_epsilon(13.485888052257042, worksheet.flows_k102, 0.002); end
  def test_flows_l102; assert_in_epsilon(18.63868983922176, worksheet.flows_l102, 0.002); end
  def test_flows_m102; assert_in_epsilon(23.14902314826305, worksheet.flows_m102, 0.002); end
  def test_flows_n102; assert_in_epsilon(27.541923210925248, worksheet.flows_n102, 0.002); end
  def test_flows_o102; assert_in_epsilon(31.434411012840627, worksheet.flows_o102, 0.002); end
  def test_flows_p102; assert_in_epsilon(35.27565159018306, worksheet.flows_p102, 0.002); end
  def test_flows_c103; assert_equal("TRA.b", worksheet.flows_c103); end
  def test_flows_d103; assert_equal("Electricity grid", worksheet.flows_d103); end
  def test_flows_e103; assert_equal("Freight transport", worksheet.flows_e103); end
  def test_flows_f103; assert_in_delta(1.0, worksheet.flows_f103, 0.002); end
  def test_flows_g103; assert_in_epsilon(29.72969999999999, worksheet.flows_g103, 0.002); end
  def test_flows_h103; assert_in_epsilon(33.71155853471132, worksheet.flows_h103, 0.002); end
  def test_flows_i103; assert_in_epsilon(37.94589745248903, worksheet.flows_i103, 0.002); end
  def test_flows_j103; assert_in_epsilon(43.66940570359651, worksheet.flows_j103, 0.002); end
  def test_flows_k103; assert_in_epsilon(50.057911364075466, worksheet.flows_k103, 0.002); end
  def test_flows_l103; assert_in_epsilon(57.17975739017223, worksheet.flows_l103, 0.002); end
  def test_flows_m103; assert_in_epsilon(65.1117113319655, worksheet.flows_m103, 0.002); end
  def test_flows_n103; assert_in_epsilon(73.93424865103691, worksheet.flows_n103, 0.002); end
  def test_flows_o103; assert_in_epsilon(83.73694601601865, worksheet.flows_o103, 0.002); end
  def test_flows_p103; assert_in_epsilon(94.61767888881049, worksheet.flows_p103, 0.002); end
  def test_flows_c104; assert_equal("TRA.b", worksheet.flows_c104); end
  def test_flows_d104; assert_equal("Liquid", worksheet.flows_d104); end
  def test_flows_e104; assert_equal("Freight transport", worksheet.flows_e104); end
  def test_flows_f104; assert_in_epsilon(2.0, worksheet.flows_f104, 0.002); end
  def test_flows_g104; assert_in_epsilon(318.5026695874588, worksheet.flows_g104, 0.002); end
  def test_flows_h104; assert_in_epsilon(253.7436704826232, worksheet.flows_h104, 0.002); end
  def test_flows_i104; assert_in_epsilon(265.9845188349582, worksheet.flows_i104, 0.002); end
  def test_flows_j104; assert_in_epsilon(288.14680300328865, worksheet.flows_j104, 0.002); end
  def test_flows_k104; assert_in_epsilon(303.659294158497, worksheet.flows_k104, 0.002); end
  def test_flows_l104; assert_in_epsilon(319.4913881470817, worksheet.flows_l104, 0.002); end
  def test_flows_m104; assert_in_epsilon(335.04532408104217, worksheet.flows_m104, 0.002); end
  def test_flows_n104; assert_in_epsilon(350.7320023527151, worksheet.flows_n104, 0.002); end
  def test_flows_o104; assert_in_epsilon(366.56419255017533, worksheet.flows_o104, 0.002); end
  def test_flows_p104; assert_in_epsilon(382.472906821121, worksheet.flows_p104, 0.002); end
  def test_flows_c105; assert_equal("WST", worksheet.flows_c105); end
  def test_flows_d105; assert_equal("Agricultural 'waste'", worksheet.flows_d105); end
  def test_flows_e105; assert_equal("Biomass", worksheet.flows_e105); end
  def test_flows_f105; assert_in_delta(1.0, worksheet.flows_f105, 0.002); end
  def test_flows_g105; assert_in_delta(0.2052009055840997, worksheet.flows_g105, 0.002); end
  def test_flows_h105; assert_in_delta(0.32027199394196354, worksheet.flows_h105, 0.002); end
  def test_flows_i105; assert_in_delta(0.48836681434674983, worksheet.flows_i105, 0.002); end
  def test_flows_j105; assert_in_delta(0.6815221068293773, worksheet.flows_j105, 0.002); end
  def test_flows_k105; assert_in_delta(0.9026891606020662, worksheet.flows_k105, 0.002); end
  def test_flows_l105; assert_in_epsilon(1.155132495296608, worksheet.flows_l105, 0.002); end
  def test_flows_m105; assert_in_epsilon(1.4424612038877094, worksheet.flows_m105, 0.002); end
  def test_flows_n105; assert_in_epsilon(1.7686633150680136, worksheet.flows_n105, 0.002); end
  def test_flows_o105; assert_in_epsilon(2.138143458342247, worksheet.flows_o105, 0.002); end
  def test_flows_p105; assert_in_epsilon(2.5557641411669785, worksheet.flows_p105, 0.002); end
  def test_flows_c106; assert_equal("WST", worksheet.flows_c106); end
  def test_flows_d106; assert_equal("Agricultural 'waste'", worksheet.flows_d106); end
  def test_flows_e106; assert_equal("Gas", worksheet.flows_e106); end
  def test_flows_f106; assert_in_epsilon(2.0, worksheet.flows_f106, 0.002); end
  def test_flows_g106; assert_in_delta(0.016750991162331464, worksheet.flows_g106, 0.002); end
  def test_flows_h106; assert_in_delta(0.39858994295928857, worksheet.flows_h106, 0.002); end
  def test_flows_i106; assert_in_epsilon(2.2706090508398344, worksheet.flows_i106, 0.002); end
  def test_flows_j106; assert_in_epsilon(3.2552247472622007, worksheet.flows_j106, 0.002); end
  def test_flows_k106; assert_in_epsilon(5.565928343393839, worksheet.flows_k106, 0.002); end
  def test_flows_l106; assert_in_epsilon(14.02580146044174, worksheet.flows_l106, 0.002); end
  def test_flows_m106; assert_in_epsilon(15.727197712967905, worksheet.flows_m106, 0.002); end
  def test_flows_n106; assert_in_epsilon(15.715407105420198, worksheet.flows_n106, 0.002); end
  def test_flows_o106; assert_in_epsilon(57.37588347831706, worksheet.flows_o106, 0.002); end
  def test_flows_p106; assert_in_epsilon(76.15079082916726, worksheet.flows_p106, 0.002); end
  def test_flows_c107; assert_equal("XVI.b", worksheet.flows_c107); end
  def test_flows_d107; assert_equal("Gas imports", worksheet.flows_d107); end
  def test_flows_e107; assert_equal("Gas", worksheet.flows_e107); end
  def test_flows_f107; assert_in_delta(1.0, worksheet.flows_f107, 0.002); end
  def test_flows_g107; assert_in_epsilon(182.57942324880312, worksheet.flows_g107, 0.002); end
  def test_flows_h107; assert_in_epsilon(251.40827396053334, worksheet.flows_h107, 0.002); end
  def test_flows_i107; assert_in_epsilon(349.3214585696206, worksheet.flows_i107, 0.002); end
  def test_flows_j107; assert_in_epsilon(-227.92289933618525, worksheet.flows_j107, 0.002); end
  def test_flows_k107; assert_in_epsilon(-150.97096800321515, worksheet.flows_k107, 0.002); end
  def test_flows_l107; assert_in_epsilon(440.21487709110704, worksheet.flows_l107, 0.002); end
  def test_flows_m107; assert_in_epsilon(721.3169416338164, worksheet.flows_m107, 0.002); end
  def test_flows_n107; assert_in_epsilon(1054.6352206521078, worksheet.flows_n107, 0.002); end
  def test_flows_o107; assert_in_epsilon(1532.8298161566668, worksheet.flows_o107, 0.002); end
  def test_flows_p107; assert_in_epsilon(1956.5247704307017, worksheet.flows_p107, 0.002); end
  def test_flows_c108; assert_equal("XVI.b", worksheet.flows_c108); end
  def test_flows_d108; assert_equal("Crude oil imports", worksheet.flows_d108); end
  def test_flows_e108; assert_equal("Oil", worksheet.flows_e108); end
  def test_flows_f108; assert_in_epsilon(2.0, worksheet.flows_f108, 0.002); end
  def test_flows_g108; assert_in_epsilon(664.1460502059357, worksheet.flows_g108, 0.002); end
  def test_flows_h108; assert_in_epsilon(621.4825741036079, worksheet.flows_h108, 0.002); end
  def test_flows_i108; assert_in_epsilon(606.5379716927544, worksheet.flows_i108, 0.002); end
  def test_flows_j108; assert_in_epsilon(596.8008345635882, worksheet.flows_j108, 0.002); end
  def test_flows_k108; assert_in_epsilon(577.7844387508538, worksheet.flows_k108, 0.002); end
  def test_flows_l108; assert_in_epsilon(553.7810493981501, worksheet.flows_l108, 0.002); end
  def test_flows_m108; assert_in_epsilon(556.2390543425856, worksheet.flows_m108, 0.002); end
  def test_flows_n108; assert_in_epsilon(616.2825587148807, worksheet.flows_n108, 0.002); end
  def test_flows_o108; assert_in_epsilon(586.0149656210677, worksheet.flows_o108, 0.002); end
  def test_flows_p108; assert_in_epsilon(637.6446579944602, worksheet.flows_p108, 0.002); end
  def test_flows_s111; assert_equal("List of items", worksheet.flows_s111); end
  def test_flows_v111; assert_equal("Craigs List", worksheet.flows_v111); end
  def test_flows_c112; assert_equal("FROM", worksheet.flows_c112); end
  def test_flows_d112; assert_equal("TO", worksheet.flows_d112); end
  def test_flows_e112; assert_equal("flow for 2050", worksheet.flows_e112); end
  def test_flows_m112; assert_equal("Check:", worksheet.flows_m112); end
  def test_flows_n112; assert_in_delta(-1.0, worksheet.flows_n112, 0.002); end
  def test_flows_o112; assert_equal("if not zero there are items missing from table", worksheet.flows_o112); end
  def test_flows_s113; assert_equal("Agricultural 'waste'", worksheet.flows_s113); end
  def test_flows_v113; assert_equal("Coal", worksheet.flows_v113); end
  def test_flows_c114; assert_equal("Primary energy initial flow", worksheet.flows_c114); end
  def test_flows_m114; assert_equal("Sheet index", worksheet.flows_m114); end
  def test_flows_n114; assert_equal("Sheets", worksheet.flows_n114); end
  def test_flows_p114; assert_equal("Items in flow table", worksheet.flows_p114); end
  def test_flows_s114; assert_equal("Agriculture", worksheet.flows_s114); end
  def test_flows_v114; assert_equal("Crude oil", worksheet.flows_v114); end
  def test_flows_s115; assert_equal("Bio-conversion", worksheet.flows_s115); end
  def test_flows_v115; assert_equal("Natural gas", worksheet.flows_v115); end
  def test_flows_c116; assert_equal("Coal", worksheet.flows_c116); end
  def test_flows_e116; assert_in_epsilon(1294.0937780490003, worksheet.flows_e116, 0.002); end
  def test_flows_m116; assert_in_delta(1.0, worksheet.flows_m116, 0.002); end
  def test_flows_n116; assert_equal("Therm.a", worksheet.flows_n116); end
  def test_flows_p116; assert_in_epsilon(4.0, worksheet.flows_p116, 0.002); end
  def test_flows_s116; assert_equal("Biofuel imports", worksheet.flows_s116); end
  def test_flows_v116; assert_equal("Solar", worksheet.flows_v116); end
  def test_flows_c117; assert_equal("Crude oil", worksheet.flows_c117); end
  def test_flows_e117; assert_in_delta(0.0, (worksheet.flows_e117||0), 0.002); end
  def test_flows_m117; assert_in_epsilon(2.0, worksheet.flows_m117, 0.002); end
  def test_flows_n117; assert_equal("Therm.b", worksheet.flows_n117); end
  def test_flows_p117; assert_in_epsilon(4.0, worksheet.flows_p117, 0.002); end
  def test_flows_s117; assert_equal("Biomass", worksheet.flows_s117); end
  def test_flows_v117; assert_equal("Wind", worksheet.flows_v117); end
  def test_flows_c118; assert_equal("Natural gas", worksheet.flows_c118); end
  def test_flows_e118; assert_in_epsilon(2427.687317380502, worksheet.flows_e118, 0.002); end
  def test_flows_m118; assert_in_epsilon(3.0, worksheet.flows_m118, 0.002); end
  def test_flows_n118; assert_equal("Nuke", worksheet.flows_n118); end
  def test_flows_p118; assert_in_epsilon(3.0, worksheet.flows_p118, 0.002); end
  def test_flows_s118; assert_equal("Coal ", worksheet.flows_s118); end
  def test_flows_v118; assert_equal("Hydro", worksheet.flows_v118); end
  def test_flows_c119; assert_equal("Solar", worksheet.flows_c119); end
  def test_flows_e119; assert_in_epsilon(5766.794642003812, worksheet.flows_e119, 0.002); end
  def test_flows_m119; assert_in_epsilon(4.0, worksheet.flows_m119, 0.002); end
  def test_flows_n119; assert_equal("RE.a", worksheet.flows_n119); end
  def test_flows_p119; assert_in_delta(1.0, worksheet.flows_p119, 0.002); end
  def test_flows_s119; assert_equal("Coal to Liquid", worksheet.flows_s119); end
  def test_flows_v119; assert_equal("Nuclear fuel", worksheet.flows_v119); end
  def test_flows_c120; assert_equal("Wind", worksheet.flows_c120); end
  def test_flows_e120; assert_in_epsilon(441.80640000000005, worksheet.flows_e120, 0.002); end
  def test_flows_m120; assert_in_epsilon(5.0, worksheet.flows_m120, 0.002); end
  def test_flows_n120; assert_equal("RE.b", worksheet.flows_n120); end
  def test_flows_p120; assert_in_delta(1.0, worksheet.flows_p120, 0.002); end
  def test_flows_s120; assert_equal("Commercial", worksheet.flows_s120); end
  def test_flows_v120; assert_equal("Biomass", worksheet.flows_v120); end
  def test_flows_c121; assert_equal("Hydro", worksheet.flows_c121); end
  def test_flows_e121; assert_in_epsilon(330.812640432, worksheet.flows_e121, 0.002); end
  def test_flows_m121; assert_in_epsilon(6.0, worksheet.flows_m121, 0.002); end
  def test_flows_n121; assert_equal("RE.c", worksheet.flows_n121); end
  def test_flows_p121; assert_in_delta(1.0, worksheet.flows_p121, 0.002); end
  def test_flows_s121; assert_equal("Crude oil imports", worksheet.flows_s121); end
  def test_flows_v121; assert_equal("electricity imports", worksheet.flows_v121); end
  def test_flows_c122; assert_equal("Nuclear fuel", worksheet.flows_c122); end
  def test_flows_e122; assert_in_epsilon(4399.115351785715, worksheet.flows_e122, 0.002); end
  def test_flows_m122; assert_in_epsilon(7.0, worksheet.flows_m122, 0.002); end
  def test_flows_n122; assert_equal("RE.e", worksheet.flows_n122); end
  def test_flows_p122; assert_in_delta(1.0, worksheet.flows_p122, 0.002); end
  def test_flows_s122; assert_equal("Domestic coal production", worksheet.flows_s122); end
  def test_flows_v122; assert_equal("electricity generation", worksheet.flows_v122); end
  def test_flows_c123; assert_equal("Biomass", worksheet.flows_c123); end
  def test_flows_e123; assert_in_epsilon(172.09687713408064, worksheet.flows_e123, 0.002); end
  def test_flows_m123; assert_in_epsilon(8.0, worksheet.flows_m123, 0.002); end
  def test_flows_n123; assert_equal("RE.d", worksheet.flows_n123); end
  def test_flows_p123; assert_in_delta(1.0, worksheet.flows_p123, 0.002); end
  def test_flows_s123; assert_equal("Domestic gas production", worksheet.flows_s123); end
  def test_flows_v123; assert_equal("synthetic fuels", worksheet.flows_v123); end
  def test_flows_c124; assert_equal("electricity overgeneration/exports", worksheet.flows_c124); end
  def test_flows_e124; assert_in_epsilon(6780.047802696674, worksheet.flows_e124, 0.002); end
  def test_flows_m124; assert_in_epsilon(9.0, worksheet.flows_m124, 0.002); end
  def test_flows_n124; assert_equal("ElcDSB.i", worksheet.flows_n124); end
  def test_flows_p124; assert_in_delta(1.0, worksheet.flows_p124, 0.002); end
  def test_flows_s124; assert_equal("Electricity end use", worksheet.flows_s124); end
  def test_flows_v124; assert_equal("coal direct", worksheet.flows_v124); end
  def test_flows_m125; assert_in_epsilon(10.0, worksheet.flows_m125, 0.002); end
  def test_flows_n125; assert_equal("ElcDSB.s", worksheet.flows_n125); end
  def test_flows_p125; assert_in_delta(1.0, worksheet.flows_p125, 0.002); end
  def test_flows_s125; assert_equal("Electricity grid", worksheet.flows_s125); end
  def test_flows_v125; assert_equal("crude refineries", worksheet.flows_v125); end
  def test_flows_m126; assert_in_epsilon(11.0, worksheet.flows_m126, 0.002); end
  def test_flows_n126; assert_equal("ElcDSB.d", worksheet.flows_n126); end
  def test_flows_p126; assert_in_delta(1.0, worksheet.flows_p126, 0.002); end
  def test_flows_s126; assert_equal("Electricity imports", worksheet.flows_s126); end
  def test_flows_v126; assert_equal("natural gas direct", worksheet.flows_v126); end
  def test_flows_m127; assert_in_epsilon(12.0, worksheet.flows_m127, 0.002); end
  def test_flows_n127; assert_equal("RES.H", worksheet.flows_n127); end
  def test_flows_p127; assert_in_epsilon(5.0, worksheet.flows_p127, 0.002); end
  def test_flows_s127; assert_equal("Freight transport", worksheet.flows_s127); end
  def test_flows_v127; assert_equal("biofuels refining", worksheet.flows_v127); end
  def test_flows_m128; assert_in_epsilon(13.0, worksheet.flows_m128, 0.002); end
  def test_flows_n128; assert_equal("RES.K", worksheet.flows_n128); end
  def test_flows_p128; assert_in_epsilon(5.0, worksheet.flows_p128, 0.002); end
  def test_flows_s128; assert_equal("Gas", worksheet.flows_s128); end
  def test_flows_v128; assert_equal("biomass direct", worksheet.flows_v128); end
  def test_flows_m129; assert_in_epsilon(14.0, worksheet.flows_m129, 0.002); end
  def test_flows_n129; assert_equal("RES.R", worksheet.flows_n129); end
  def test_flows_p129; assert_in_epsilon(5.0, worksheet.flows_p129, 0.002); end
  def test_flows_s129; assert_equal("Gas imports", worksheet.flows_s129); end
  def test_flows_v129; assert_equal("electricity imports 2", worksheet.flows_v129); end
  def test_flows_c130; assert_equal("sum", worksheet.flows_c130); end
  def test_flows_e130; assert_in_epsilon(21612.454809481784, worksheet.flows_e130, 0.002); end
  def test_flows_m130; assert_in_epsilon(15.0, worksheet.flows_m130, 0.002); end
  def test_flows_n130; assert_equal("RES.N", worksheet.flows_n130); end
  def test_flows_p130; assert_in_delta(0.0, (worksheet.flows_p130||0), 0.002); end
  def test_flows_s130; assert_equal("Gas to Liquid", worksheet.flows_s130); end
  def test_flows_v130; assert_equal("electricity", worksheet.flows_v130); end
  def test_flows_m131; assert_in_epsilon(16.0, worksheet.flows_m131, 0.002); end
  def test_flows_n131; assert_equal("RES.L", worksheet.flows_n131); end
  def test_flows_p131; assert_in_epsilon(4.0, worksheet.flows_p131, 0.002); end
  def test_flows_s131; assert_equal("H2", worksheet.flows_s131); end
  def test_flows_v131; assert_equal("liquid fuels", worksheet.flows_v131); end
  def test_flows_m132; assert_in_epsilon(17.0, worksheet.flows_m132, 0.002); end
  def test_flows_n132; assert_equal("RES.W", worksheet.flows_n132); end
  def test_flows_p132; assert_in_epsilon(5.0, worksheet.flows_p132, 0.002); end
  def test_flows_s132; assert_equal("H2 conversion", worksheet.flows_s132); end
  def test_flows_v132; assert_equal("coal final", worksheet.flows_v132); end
  def test_flows_c133; assert_equal("Primary energy", worksheet.flows_c133); end
  def test_flows_d133; assert_equal("transformation", worksheet.flows_d133); end
  def test_flows_m133; assert_in_epsilon(18.0, worksheet.flows_m133, 0.002); end
  def test_flows_n133; assert_equal("RES.O", worksheet.flows_n133); end
  def test_flows_p133; assert_in_epsilon(5.0, worksheet.flows_p133, 0.002); end
  def test_flows_s133; assert_equal("Heating - homes", worksheet.flows_s133); end
  def test_flows_v133; assert_equal("natural gas final", worksheet.flows_v133); end
  def test_flows_m134; assert_in_epsilon(19.0, worksheet.flows_m134, 0.002); end
  def test_flows_n134; assert_equal("COM.A", worksheet.flows_n134); end
  def test_flows_p134; assert_in_epsilon(5.0, worksheet.flows_p134, 0.002); end
  def test_flows_s134; assert_equal("Households", worksheet.flows_s134); end
  def test_flows_v134; assert_equal("biomass final", worksheet.flows_v134); end
  def test_flows_c135; assert_equal("Coal", worksheet.flows_c135); end
  def test_flows_d135; assert_equal("Electricity generation", worksheet.flows_d135); end
  def test_flows_e135; assert_in_delta(0.0, (worksheet.flows_e135||0), 0.002); end
  def test_flows_m135; assert_in_epsilon(20.0, worksheet.flows_m135, 0.002); end
  def test_flows_n135; assert_equal("TRA.a", worksheet.flows_n135); end
  def test_flows_p135; assert_in_epsilon(5.0, worksheet.flows_p135, 0.002); end
  def test_flows_s135; assert_equal("Hydro", worksheet.flows_s135); end
  def test_flows_v135; assert_equal("coal exports", worksheet.flows_v135); end
  def test_flows_c136; assert_equal("Coal", worksheet.flows_c136); end
  def test_flows_d136; assert_equal("Synthetic fuels", worksheet.flows_d136); end
  def test_flows_e136; assert_in_epsilon(232.4346598544382, worksheet.flows_e136, 0.002); end
  def test_flows_m136; assert_in_epsilon(21.0, worksheet.flows_m136, 0.002); end
  def test_flows_n136; assert_equal("TRA.b", worksheet.flows_n136); end
  def test_flows_p136; assert_in_epsilon(2.0, worksheet.flows_p136, 0.002); end
  def test_flows_s136; assert_equal("Industry", worksheet.flows_s136); end
  def test_flows_v136; assert_equal("losses", worksheet.flows_v136); end
  def test_flows_c137; assert_equal("Coal", worksheet.flows_c137); end
  def test_flows_d137; assert_equal("coal direct", worksheet.flows_d137); end
  def test_flows_e137; assert_in_epsilon(1061.6591181945623, worksheet.flows_e137, 0.002); end
  def test_flows_m137; assert_in_epsilon(22.0, worksheet.flows_m137, 0.002); end
  def test_flows_n137; assert_equal("IND.a", worksheet.flows_n137); end
  def test_flows_p137; assert_in_epsilon(5.0, worksheet.flows_p137, 0.002); end
  def test_flows_s137; assert_equal("Liquid", worksheet.flows_s137); end
  def test_flows_v137; assert_equal("industry", worksheet.flows_v137); end
  def test_flows_c138; assert_equal("Crude oil", worksheet.flows_c138); end
  def test_flows_d138; assert_equal("Crude refineries", worksheet.flows_d138); end
  def test_flows_e138; assert_in_delta(0.0, (worksheet.flows_e138||0), 0.002); end
  def test_flows_m138; assert_in_epsilon(23.0, worksheet.flows_m138, 0.002); end
  def test_flows_n138; assert_equal("H2prod", worksheet.flows_n138); end
  def test_flows_p138; assert_in_epsilon(4.0, worksheet.flows_p138, 0.002); end
  def test_flows_s138; assert_equal("Liquid fuels import", worksheet.flows_s138); end
  def test_flows_v138; assert_equal("households", worksheet.flows_v138); end
  def test_flows_c139; assert_equal("Natural gas", worksheet.flows_c139); end
  def test_flows_d139; assert_equal("Synthetic fuels", worksheet.flows_d139); end
  def test_flows_e139; assert_in_epsilon(-56.765912736027516, worksheet.flows_e139, 0.002); end
  def test_flows_m139; assert_in_epsilon(24.0, worksheet.flows_m139, 0.002); end
  def test_flows_n139; assert_equal("AGL", worksheet.flows_n139); end
  def test_flows_p139; assert_in_epsilon(5.0, worksheet.flows_p139, 0.002); end
  def test_flows_s139; assert_equal("Losses", worksheet.flows_s139); end
  def test_flows_v139; assert_equal("transport", worksheet.flows_v139); end
  def test_flows_c140; assert_equal("Natural gas", worksheet.flows_c140); end
  def test_flows_d140; assert_equal("natural gas direct", worksheet.flows_d140); end
  def test_flows_e140; assert_in_epsilon(1278.6373941465563, worksheet.flows_e140, 0.002); end
  def test_flows_m140; assert_in_epsilon(25.0, worksheet.flows_m140, 0.002); end
  def test_flows_n140; assert_equal("BIO.SUP", worksheet.flows_n140); end
  def test_flows_p140; assert_in_epsilon(4.0, worksheet.flows_p140, 0.002); end
  def test_flows_s140; assert_equal("Losses in End use RES + COM", worksheet.flows_s140); end
  def test_flows_v140; assert_equal("agriculture", worksheet.flows_v140); end
  def test_flows_c141; assert_equal("Solar", worksheet.flows_c141); end
  def test_flows_d141; assert_equal("electricity generation", worksheet.flows_d141); end
  def test_flows_e141; assert_in_epsilon(5766.794642003812, worksheet.flows_e141, 0.002); end
  def test_flows_m141; assert_in_epsilon(26.0, worksheet.flows_m141, 0.002); end
  def test_flows_n141; assert_equal("FOS.SUP", worksheet.flows_n141); end
  def test_flows_p141; assert_in_epsilon(6.0, worksheet.flows_p141, 0.002); end
  def test_flows_s141; assert_equal("Nuclear", worksheet.flows_s141); end
  def test_flows_v141; assert_equal("commercial", worksheet.flows_v141); end
  def test_flows_c142; assert_equal("Wind", worksheet.flows_c142); end
  def test_flows_d142; assert_equal("electricity generation", worksheet.flows_d142); end
  def test_flows_e142; assert_in_epsilon(441.80640000000005, worksheet.flows_e142, 0.002); end
  def test_flows_m142; assert_in_epsilon(27.0, worksheet.flows_m142, 0.002); end
  def test_flows_n142; assert_equal("FOS.REF", worksheet.flows_n142); end
  def test_flows_p142; assert_in_epsilon(3.0, worksheet.flows_p142, 0.002); end
  def test_flows_s142; assert_equal("Oil", worksheet.flows_s142); end
  def test_flows_c143; assert_equal("Hydro", worksheet.flows_c143); end
  def test_flows_d143; assert_equal("electricity generation", worksheet.flows_d143); end
  def test_flows_e143; assert_in_epsilon(330.812640432, worksheet.flows_e143, 0.002); end
  def test_flows_m143; assert_in_epsilon(28.0, worksheet.flows_m143, 0.002); end
  def test_flows_n143; assert_equal("FOS.CTL", worksheet.flows_n143); end
  def test_flows_p143; assert_in_epsilon(5.0, worksheet.flows_p143, 0.002); end
  def test_flows_s143; assert_equal("Over generation / exports", worksheet.flows_s143); end
  def test_flows_c144; assert_equal("Nuclear fuel", worksheet.flows_c144); end
  def test_flows_d144; assert_equal("electricity generation", worksheet.flows_d144); end
  def test_flows_e144; assert_in_epsilon(4399.115351785715, worksheet.flows_e144, 0.002); end
  def test_flows_m144; assert_in_epsilon(29.0, worksheet.flows_m144, 0.002); end
  def test_flows_n144; assert_equal("FOS.GTL", worksheet.flows_n144); end
  def test_flows_p144; assert_in_epsilon(6.0, worksheet.flows_p144, 0.002); end
  def test_flows_s144; assert_equal("Passenger transport", worksheet.flows_s144); end
  def test_flows_c145; assert_equal("Biomass", worksheet.flows_c145); end
  def test_flows_d145; assert_equal("biofuels refining", worksheet.flows_d145); end
  def test_flows_m145; assert_in_epsilon(30.0, worksheet.flows_m145, 0.002); end
  def test_flows_n145; assert_equal("WST", worksheet.flows_n145); end
  def test_flows_p145; assert_in_epsilon(2.0, worksheet.flows_p145, 0.002); end
  def test_flows_s145; assert_equal("Road transport", worksheet.flows_s145); end
  def test_flows_c146; assert_equal("Biomass", worksheet.flows_c146); end
  def test_flows_d146; assert_equal("electricity generation", worksheet.flows_d146); end
  def test_flows_e146; assert_in_delta(0.0, (worksheet.flows_e146||0), 0.002); end
  def test_flows_m146; assert_in_epsilon(31.0, worksheet.flows_m146, 0.002); end
  def test_flows_n146; assert_equal("XVI.a", worksheet.flows_n146); end
  def test_flows_p146; assert_in_delta(0.0, (worksheet.flows_p146||0), 0.002); end
  def test_flows_s146; assert_equal("Solar", worksheet.flows_s146); end
  def test_flows_c147; assert_equal("Biomass", worksheet.flows_c147); end
  def test_flows_d147; assert_equal("biomass direct", worksheet.flows_d147); end
  def test_flows_e147; assert_in_epsilon(82.10606374004945, worksheet.flows_e147, 0.002); end
  def test_flows_m147; assert_in_epsilon(32.0, worksheet.flows_m147, 0.002); end
  def test_flows_n147; assert_equal("XVI.b", worksheet.flows_n147); end
  def test_flows_p147; assert_in_epsilon(2.0, worksheet.flows_p147, 0.002); end
  def test_flows_s147; assert_equal("Solid", worksheet.flows_s147); end
  def test_flows_c148; assert_equal("electricity exports", worksheet.flows_c148); end
  def test_flows_d148; assert_equal("electricity exports 2", worksheet.flows_d148); end
  def test_flows_e148; assert_in_epsilon(6780.047802696674, worksheet.flows_e148, 0.002); end
  def test_flows_s148; assert_equal("Table total", worksheet.flows_s148); end
  def test_flows_c149; assert_equal("coal", worksheet.flows_c149); end
  def test_flows_d149; assert_equal("coal exports", worksheet.flows_d149); end
  def test_flows_n149; assert_equal("Total items", worksheet.flows_n149); end
  def test_flows_p149; assert_in_epsilon(102.0, worksheet.flows_p149, 0.002); end
  def test_flows_s149; assert_equal("Thermal generation", worksheet.flows_s149); end
  def test_flows_s150; assert_equal("Water Heating - homes", worksheet.flows_s150); end
  def test_flows_s151; assert_equal("Wind", worksheet.flows_s151); end
  def test_flows_c157; assert_equal("sum", worksheet.flows_c157); end
  def test_flows_e157; assert_in_epsilon(20316.64816011778, worksheet.flows_e157, 0.002); end
  def test_flows_c158; assert_equal("missing", worksheet.flows_c158); end
  def test_flows_e158; assert_in_epsilon(1295.8066493640035, worksheet.flows_e158, 0.002); end
  def test_flows_c163; assert_equal("transformation", worksheet.flows_c163); end
  def test_flows_d163; assert_equal("final energy", worksheet.flows_d163); end
  def test_flows_c164; assert_equal("electricity generation", worksheet.flows_c164); end
  def test_flows_d164; assert_equal("electricity", worksheet.flows_d164); end
  def test_flows_e164; assert_in_epsilon(8459.12977764251, worksheet.flows_e164, 0.002); end
  def test_flows_c165; assert_equal("synthetic fuels", worksheet.flows_c165); end
  def test_flows_d165; assert_equal("liquid fuels", worksheet.flows_d165); end
  def test_flows_e165; assert_in_epsilon(79.80472703438792, worksheet.flows_e165, 0.002); end
  def test_flows_c166; assert_equal("coal direct", worksheet.flows_c166); end
  def test_flows_d166; assert_equal("coal final", worksheet.flows_d166); end
  def test_flows_e166; assert_in_epsilon(1061.6591181945623, worksheet.flows_e166, 0.002); end
  def test_flows_c167; assert_equal("crude refineries", worksheet.flows_c167); end
  def test_flows_d167; assert_equal("liquid fuels", worksheet.flows_d167); end
  def test_flows_e167; assert_in_delta(0.0, (worksheet.flows_e167||0), 0.002); end
  def test_flows_c168; assert_equal("natural gas direct", worksheet.flows_c168); end
  def test_flows_d168; assert_equal("natural gas final", worksheet.flows_d168); end
  def test_flows_e168; assert_in_epsilon(1278.6373941465563, worksheet.flows_e168, 0.002); end
  def test_flows_c169; assert_equal("biofuels refining", worksheet.flows_c169); end
  def test_flows_d169; assert_equal("liquid fuels", worksheet.flows_d169); end
  def test_flows_e169; assert_in_epsilon(89.99081339403119, worksheet.flows_e169, 0.002); end
  def test_flows_c170; assert_equal("biomass direct", worksheet.flows_c170); end
  def test_flows_d170; assert_equal("biomass final", worksheet.flows_d170); end
  def test_flows_e170; assert_in_epsilon(278.87367224851266, worksheet.flows_e170, 0.002); end
  def test_flows_c171; assert_equal("electricity exports 2", worksheet.flows_c171); end
  def test_flows_d171; assert_equal("electricity", worksheet.flows_d171); end
  def test_flows_e171; assert_in_epsilon(6780.047802696674, worksheet.flows_e171, 0.002); end
  def test_flows_c179; assert_equal("electricity generation", worksheet.flows_c179); end
  def test_flows_d179; assert_equal("losses", worksheet.flows_d179); end
  def test_flows_e179; assert_in_epsilon(3388.7818148421056, worksheet.flows_e179, 0.002); end
  def test_flows_c180; assert_equal("synthetic fuels", worksheet.flows_c180); end
  def test_flows_d180; assert_equal("losses", worksheet.flows_d180); end
  def test_flows_e180; assert_in_epsilon(226.4214744833241, worksheet.flows_e180, 0.002); end
  def test_flows_c188; assert_equal("sum", worksheet.flows_c188); end
  def test_flows_e188; assert_in_epsilon(21643.34659468266, worksheet.flows_e188, 0.002); end
  def test_flows_c189; assert_equal("missing", worksheet.flows_c189); end
  def test_flows_e189; assert_in_epsilon(-1326.6984345648816, worksheet.flows_e189, 0.002); end
  def test_flows_c197; assert_equal("Final energy", worksheet.flows_c197); end
  def test_flows_d197; assert_equal("end use", worksheet.flows_d197); end
  def test_flows_c198; assert_equal("electricity", worksheet.flows_c198); end
  def test_flows_d198; assert_equal("industry", worksheet.flows_d198); end
  def test_flows_e198; assert_in_epsilon(579.7202133066852, worksheet.flows_e198, 0.002); end
  def test_flows_c199; assert_equal("liquid fuels", worksheet.flows_c199); end
  def test_flows_d199; assert_equal("industry", worksheet.flows_d199); end
  def test_flows_e199; assert_in_epsilon(133.8987196137436, worksheet.flows_e199, 0.002); end
  def test_flows_c200; assert_equal("coal final", worksheet.flows_c200); end
  def test_flows_d200; assert_equal("industry", worksheet.flows_d200); end
  def test_flows_e200; assert_in_epsilon(1060.9283565677658, worksheet.flows_e200, 0.002); end
  def test_flows_c201; assert_equal("natural gas final", worksheet.flows_c201); end
  def test_flows_d201; assert_equal("industry", worksheet.flows_d201); end
  def test_flows_e201; assert_in_epsilon(1170.4293495660122, worksheet.flows_e201, 0.002); end
  def test_flows_c202; assert_equal("biomass final", worksheet.flows_c202); end
  def test_flows_d202; assert_equal("industry", worksheet.flows_d202); end
  def test_flows_e202; assert_in_epsilon(278.87367224851266, worksheet.flows_e202, 0.002); end
  def test_flows_c203; assert_equal("electricity", worksheet.flows_c203); end
  def test_flows_d203; assert_equal("households", worksheet.flows_d203); end
  def test_flows_e203; assert_in_epsilon(277.84604342146287, worksheet.flows_e203, 0.002); end
  def test_flows_c204; assert_equal("liquid fuels", worksheet.flows_c204); end
  def test_flows_d204; assert_equal("households", worksheet.flows_d204); end
  def test_flows_e204; assert_in_epsilon(1.7264335305589775, worksheet.flows_e204, 0.002); end
  def test_flows_c205; assert_equal("coal final", worksheet.flows_c205); end
  def test_flows_d205; assert_equal("households", worksheet.flows_d205); end
  def test_flows_e205; assert_in_delta(0.0, (worksheet.flows_e205||0), 0.002); end
  def test_flows_c206; assert_equal("natural gas final", worksheet.flows_c206); end
  def test_flows_d206; assert_equal("households", worksheet.flows_d206); end
  def test_flows_e206; assert_in_epsilon(70.98018916988363, worksheet.flows_e206, 0.002); end
  def test_flows_c207; assert_equal("biomass final", worksheet.flows_c207); end
  def test_flows_d207; assert_equal("households", worksheet.flows_d207); end
  def test_flows_e207; assert_in_delta(0.0, (worksheet.flows_e207||0), 0.002); end
  def test_flows_c208; assert_equal("electricity", worksheet.flows_c208); end
  def test_flows_d208; assert_equal("transport", worksheet.flows_d208); end
  def test_flows_e208; assert_in_epsilon(155.6219177152487, worksheet.flows_e208, 0.002); end
  def test_flows_c209; assert_equal("liquid fuels", worksheet.flows_c209); end
  def test_flows_d209; assert_equal("transport", worksheet.flows_d209); end
  def test_flows_e209; assert_in_epsilon(509.0450500959166, worksheet.flows_e209, 0.002); end
  def test_flows_c210; assert_equal("coal final", worksheet.flows_c210); end
  def test_flows_d210; assert_equal("transport", worksheet.flows_d210); end
  def test_flows_c211; assert_equal("natural gas final", worksheet.flows_c211); end
  def test_flows_d211; assert_equal("transport", worksheet.flows_d211); end
  def test_flows_e211; assert_in_epsilon(27.996628625066172, worksheet.flows_e211, 0.002); end
  def test_flows_c212; assert_equal("biomass final", worksheet.flows_c212); end
  def test_flows_d212; assert_equal("transport", worksheet.flows_d212); end
  def test_flows_c213; assert_equal("electricity", worksheet.flows_c213); end
  def test_flows_d213; assert_equal("agriculture", worksheet.flows_d213); end
  def test_flows_e213; assert_in_epsilon(28.743290653991423, worksheet.flows_e213, 0.002); end
  def test_flows_c214; assert_equal("liquid fuels", worksheet.flows_c214); end
  def test_flows_d214; assert_equal("agriculture", worksheet.flows_d214); end
  def test_flows_e214; assert_in_epsilon(67.96083129206447, worksheet.flows_e214, 0.002); end
  def test_flows_c215; assert_equal("coal final", worksheet.flows_c215); end
  def test_flows_d215; assert_equal("agriculture", worksheet.flows_d215); end
  def test_flows_e215; assert_in_delta(0.7307616267963921, worksheet.flows_e215, 0.002); end
  def test_flows_c216; assert_equal("natural gas final", worksheet.flows_c216); end
  def test_flows_d216; assert_equal("agriculture", worksheet.flows_d216); end
  def test_flows_e216; assert_in_delta(0.0, (worksheet.flows_e216||0), 0.002); end
  def test_flows_c217; assert_equal("biomass final", worksheet.flows_c217); end
  def test_flows_d217; assert_equal("agriculture", worksheet.flows_d217); end
  def test_flows_c218; assert_equal("electricity", worksheet.flows_c218); end
  def test_flows_d218; assert_equal("commercial", worksheet.flows_d218); end
  def test_flows_e218; assert_in_epsilon(245.27447814821141, worksheet.flows_e218, 0.002); end
  def test_flows_c219; assert_equal("liquid fuels", worksheet.flows_c219); end
  def test_flows_d219; assert_equal("commercial", worksheet.flows_d219); end
  def test_flows_e219; assert_in_delta(0.0, (worksheet.flows_e219||0), 0.002); end
  def test_flows_c220; assert_equal("coal final", worksheet.flows_c220); end
  def test_flows_d220; assert_equal("commercial", worksheet.flows_d220); end
  def test_flows_e220; assert_in_delta(0.0, (worksheet.flows_e220||0), 0.002); end
  def test_flows_c221; assert_equal("natural gas final", worksheet.flows_c221); end
  def test_flows_d221; assert_equal("commercial", worksheet.flows_d221); end
  def test_flows_e221; assert_in_epsilon(9.231226785594083, worksheet.flows_e221, 0.002); end
  def test_flows_c222; assert_equal("biomass final", worksheet.flows_c222); end
  def test_flows_d222; assert_equal("commercial", worksheet.flows_d222); end
  def test_flows_c226; assert_equal("losses", worksheet.flows_c226); end
  def test_flows_d226; assert_equal("losses final", worksheet.flows_d226); end
  def test_flows_e226; assert_in_epsilon(3615.2032893254295, worksheet.flows_e226, 0.002); end
  def test_flows_c231; assert_equal("sum", worksheet.flows_c231); end
  def test_flows_e231; assert_in_epsilon(8234.210451692945, worksheet.flows_e231, 0.002); end
  def test_flows_c232; assert_equal("missing", worksheet.flows_c232); end
  def test_flows_e232; assert_in_epsilon(6629.088340293043, worksheet.flows_e232, 0.002); end
  def test_flows_c236; assert_equal("elec final", worksheet.flows_c236); end
  def test_flows_e236; assert_in_epsilon(1287.2059432455999, worksheet.flows_e236, 0.002); end
  def test_flows_c237; assert_equal("elec out", worksheet.flows_c237); end
  def test_flows_e237; assert_in_epsilon(8459.12977764251, worksheet.flows_e237, 0.002); end
  def test_flows_c239; assert_equal("coal final", worksheet.flows_c239); end
  def test_flows_e239; assert_in_epsilon(1061.6591181945623, worksheet.flows_e239, 0.002); end
  def test_flows_c240; assert_equal("coal direct", worksheet.flows_c240); end
  def test_flows_e240; assert_in_epsilon(1061.6591181945623, worksheet.flows_e240, 0.002); end
  def test_flows_c247; assert_equal("TABLE FOR USE WITH ONLINE VERSION", worksheet.flows_c247); end
  def test_flows_c249; assert_equal("FROM", worksheet.flows_c249); end
  def test_flows_d249; assert_equal("TO", worksheet.flows_d249); end
  def test_flows_e249; assert_equal("QUANTITY", worksheet.flows_e249); end
  def test_flows_c250; assert_equal("Coal", worksheet.flows_c250); end
  def test_flows_d250; assert_equal("Electricity generation", worksheet.flows_d250); end
  def test_flows_e250; assert_in_delta(0.0, (worksheet.flows_e250||0), 0.002); end
  def test_flows_c251; assert_equal("Coal", worksheet.flows_c251); end
  def test_flows_d251; assert_equal("Synthetic fuels", worksheet.flows_d251); end
  def test_flows_e251; assert_in_epsilon(232.4346598544382, worksheet.flows_e251, 0.002); end
  def test_flows_c252; assert_equal("Coal", worksheet.flows_c252); end
  def test_flows_d252; assert_equal("coal direct", worksheet.flows_d252); end
  def test_flows_e252; assert_in_epsilon(1061.6591181945623, worksheet.flows_e252, 0.002); end
  def test_flows_c253; assert_equal("Crude oil", worksheet.flows_c253); end
  def test_flows_d253; assert_equal("Crude refineries", worksheet.flows_d253); end
  def test_flows_e253; assert_in_delta(0.0, (worksheet.flows_e253||0), 0.002); end
  def test_flows_c254; assert_equal("Natural gas", worksheet.flows_c254); end
  def test_flows_d254; assert_equal("Synthetic fuels", worksheet.flows_d254); end
  def test_flows_e254; assert_in_epsilon(-56.765912736027516, worksheet.flows_e254, 0.002); end
  def test_flows_c255; assert_equal("Natural gas", worksheet.flows_c255); end
  def test_flows_d255; assert_equal("natural gas direct", worksheet.flows_d255); end
  def test_flows_e255; assert_in_epsilon(1278.6373941465563, worksheet.flows_e255, 0.002); end
  def test_flows_c256; assert_equal("Solar", worksheet.flows_c256); end
  def test_flows_d256; assert_equal("electricity generation", worksheet.flows_d256); end
  def test_flows_e256; assert_in_epsilon(5766.794642003812, worksheet.flows_e256, 0.002); end
  def test_flows_c257; assert_equal("Wind", worksheet.flows_c257); end
  def test_flows_d257; assert_equal("electricity generation", worksheet.flows_d257); end
  def test_flows_e257; assert_in_epsilon(441.80640000000005, worksheet.flows_e257, 0.002); end
  def test_flows_c258; assert_equal("Hydro", worksheet.flows_c258); end
  def test_flows_d258; assert_equal("electricity generation", worksheet.flows_d258); end
  def test_flows_e258; assert_in_epsilon(330.812640432, worksheet.flows_e258, 0.002); end
  def test_flows_c259; assert_equal("Nuclear fuel", worksheet.flows_c259); end
  def test_flows_d259; assert_equal("electricity generation", worksheet.flows_d259); end
  def test_flows_e259; assert_in_epsilon(4399.115351785715, worksheet.flows_e259, 0.002); end
  def test_flows_c260; assert_equal("Biomass", worksheet.flows_c260); end
  def test_flows_d260; assert_equal("biofuels refining", worksheet.flows_d260); end
  def test_flows_e260; assert_in_delta(0.0, (worksheet.flows_e260||0), 0.002); end
  def test_flows_c261; assert_equal("Biomass", worksheet.flows_c261); end
  def test_flows_d261; assert_equal("electricity generation", worksheet.flows_d261); end
  def test_flows_e261; assert_in_delta(0.0, (worksheet.flows_e261||0), 0.002); end
  def test_flows_c262; assert_equal("Biomass", worksheet.flows_c262); end
  def test_flows_d262; assert_equal("biomass direct", worksheet.flows_d262); end
  def test_flows_e262; assert_in_epsilon(82.10606374004945, worksheet.flows_e262, 0.002); end
  def test_flows_c263; assert_equal("electricity exports", worksheet.flows_c263); end
  def test_flows_d263; assert_equal("electricity exports 2", worksheet.flows_d263); end
  def test_flows_e263; assert_in_epsilon(6780.047802696674, worksheet.flows_e263, 0.002); end
  def test_flows_c264; assert_equal("coal", worksheet.flows_c264); end
  def test_flows_d264; assert_equal("coal exports", worksheet.flows_d264); end
  def test_flows_e264; assert_in_delta(0.0, (worksheet.flows_e264||0), 0.002); end
  def test_flows_c265; assert_equal("electricity generation", worksheet.flows_c265); end
  def test_flows_d265; assert_equal("electricity", worksheet.flows_d265); end
  def test_flows_e265; assert_in_epsilon(8459.12977764251, worksheet.flows_e265, 0.002); end
  def test_flows_c266; assert_equal("synthetic fuels", worksheet.flows_c266); end
  def test_flows_d266; assert_equal("liquid fuels", worksheet.flows_d266); end
  def test_flows_e266; assert_in_epsilon(79.80472703438792, worksheet.flows_e266, 0.002); end
  def test_flows_c267; assert_equal("coal direct", worksheet.flows_c267); end
  def test_flows_d267; assert_equal("coal final", worksheet.flows_d267); end
  def test_flows_e267; assert_in_epsilon(1061.6591181945623, worksheet.flows_e267, 0.002); end
  def test_flows_c268; assert_equal("crude refineries", worksheet.flows_c268); end
  def test_flows_d268; assert_equal("liquid fuels", worksheet.flows_d268); end
  def test_flows_e268; assert_in_delta(0.0, (worksheet.flows_e268||0), 0.002); end
  def test_flows_c269; assert_equal("natural gas direct", worksheet.flows_c269); end
  def test_flows_d269; assert_equal("natural gas final", worksheet.flows_d269); end
  def test_flows_e269; assert_in_epsilon(1278.6373941465563, worksheet.flows_e269, 0.002); end
  def test_flows_c270; assert_equal("biofuels refining", worksheet.flows_c270); end
  def test_flows_d270; assert_equal("liquid fuels", worksheet.flows_d270); end
  def test_flows_e270; assert_in_epsilon(89.99081339403119, worksheet.flows_e270, 0.002); end
  def test_flows_c271; assert_equal("biomass direct", worksheet.flows_c271); end
  def test_flows_d271; assert_equal("biomass final", worksheet.flows_d271); end
  def test_flows_e271; assert_in_epsilon(278.87367224851266, worksheet.flows_e271, 0.002); end
  def test_flows_c272; assert_equal("electricity exports 2", worksheet.flows_c272); end
  def test_flows_d272; assert_equal("electricity", worksheet.flows_d272); end
  def test_flows_e272; assert_in_epsilon(6780.047802696674, worksheet.flows_e272, 0.002); end
  def test_flows_c273; assert_equal("electricity generation", worksheet.flows_c273); end
  def test_flows_d273; assert_equal("losses", worksheet.flows_d273); end
  def test_flows_e273; assert_in_epsilon(3388.7818148421056, worksheet.flows_e273, 0.002); end
  def test_flows_c274; assert_equal("synthetic fuels", worksheet.flows_c274); end
  def test_flows_d274; assert_equal("losses", worksheet.flows_d274); end
  def test_flows_e274; assert_in_epsilon(226.4214744833241, worksheet.flows_e274, 0.002); end
  def test_flows_c275; assert_equal("electricity", worksheet.flows_c275); end
  def test_flows_d275; assert_equal("industry", worksheet.flows_d275); end
  def test_flows_e275; assert_in_epsilon(579.7202133066852, worksheet.flows_e275, 0.002); end
  def test_flows_c276; assert_equal("liquid fuels", worksheet.flows_c276); end
  def test_flows_d276; assert_equal("industry", worksheet.flows_d276); end
  def test_flows_e276; assert_in_epsilon(133.8987196137436, worksheet.flows_e276, 0.002); end
  def test_flows_c277; assert_equal("coal final", worksheet.flows_c277); end
  def test_flows_d277; assert_equal("industry", worksheet.flows_d277); end
  def test_flows_e277; assert_in_epsilon(1060.9283565677658, worksheet.flows_e277, 0.002); end
  def test_flows_c278; assert_equal("natural gas final", worksheet.flows_c278); end
  def test_flows_d278; assert_equal("industry", worksheet.flows_d278); end
  def test_flows_e278; assert_in_epsilon(1170.4293495660122, worksheet.flows_e278, 0.002); end
  def test_flows_c279; assert_equal("biomass final", worksheet.flows_c279); end
  def test_flows_d279; assert_equal("industry", worksheet.flows_d279); end
  def test_flows_e279; assert_in_epsilon(278.87367224851266, worksheet.flows_e279, 0.002); end
  def test_flows_c280; assert_equal("electricity", worksheet.flows_c280); end
  def test_flows_d280; assert_equal("households", worksheet.flows_d280); end
  def test_flows_e280; assert_in_epsilon(277.84604342146287, worksheet.flows_e280, 0.002); end
  def test_flows_c281; assert_equal("liquid fuels", worksheet.flows_c281); end
  def test_flows_d281; assert_equal("households", worksheet.flows_d281); end
  def test_flows_e281; assert_in_epsilon(1.7264335305589775, worksheet.flows_e281, 0.002); end
  def test_flows_c282; assert_equal("coal final", worksheet.flows_c282); end
  def test_flows_d282; assert_equal("households", worksheet.flows_d282); end
  def test_flows_e282; assert_in_delta(0.0, (worksheet.flows_e282||0), 0.002); end
  def test_flows_c283; assert_equal("natural gas final", worksheet.flows_c283); end
  def test_flows_d283; assert_equal("households", worksheet.flows_d283); end
  def test_flows_e283; assert_in_epsilon(70.98018916988363, worksheet.flows_e283, 0.002); end
  def test_flows_c284; assert_equal("biomass final", worksheet.flows_c284); end
  def test_flows_d284; assert_equal("households", worksheet.flows_d284); end
  def test_flows_e284; assert_in_delta(0.0, (worksheet.flows_e284||0), 0.002); end
  def test_flows_c285; assert_equal("electricity", worksheet.flows_c285); end
  def test_flows_d285; assert_equal("transport", worksheet.flows_d285); end
  def test_flows_e285; assert_in_epsilon(155.6219177152487, worksheet.flows_e285, 0.002); end
  def test_flows_c286; assert_equal("liquid fuels", worksheet.flows_c286); end
  def test_flows_d286; assert_equal("transport", worksheet.flows_d286); end
  def test_flows_e286; assert_in_epsilon(509.0450500959166, worksheet.flows_e286, 0.002); end
  def test_flows_c287; assert_equal("coal final", worksheet.flows_c287); end
  def test_flows_d287; assert_equal("transport", worksheet.flows_d287); end
  def test_flows_e287; assert_in_delta(0.0, (worksheet.flows_e287||0), 0.002); end
  def test_flows_c288; assert_equal("natural gas final", worksheet.flows_c288); end
  def test_flows_d288; assert_equal("transport", worksheet.flows_d288); end
  def test_flows_e288; assert_in_epsilon(27.996628625066172, worksheet.flows_e288, 0.002); end
  def test_flows_c289; assert_equal("biomass final", worksheet.flows_c289); end
  def test_flows_d289; assert_equal("transport", worksheet.flows_d289); end
  def test_flows_e289; assert_in_delta(0.0, (worksheet.flows_e289||0), 0.002); end
  def test_flows_c290; assert_equal("electricity", worksheet.flows_c290); end
  def test_flows_d290; assert_equal("agriculture", worksheet.flows_d290); end
  def test_flows_e290; assert_in_epsilon(28.743290653991423, worksheet.flows_e290, 0.002); end
  def test_flows_c291; assert_equal("liquid fuels", worksheet.flows_c291); end
  def test_flows_d291; assert_equal("agriculture", worksheet.flows_d291); end
  def test_flows_e291; assert_in_epsilon(67.96083129206447, worksheet.flows_e291, 0.002); end
  def test_flows_c292; assert_equal("coal final", worksheet.flows_c292); end
  def test_flows_d292; assert_equal("agriculture", worksheet.flows_d292); end
  def test_flows_e292; assert_in_delta(0.7307616267963921, worksheet.flows_e292, 0.002); end
  def test_flows_c293; assert_equal("natural gas final", worksheet.flows_c293); end
  def test_flows_d293; assert_equal("agriculture", worksheet.flows_d293); end
  def test_flows_e293; assert_in_delta(0.0, (worksheet.flows_e293||0), 0.002); end
  def test_flows_c294; assert_equal("biomass final", worksheet.flows_c294); end
  def test_flows_d294; assert_equal("agriculture", worksheet.flows_d294); end
  def test_flows_e294; assert_in_delta(0.0, (worksheet.flows_e294||0), 0.002); end
  def test_flows_c295; assert_equal("electricity", worksheet.flows_c295); end
  def test_flows_d295; assert_equal("commercial", worksheet.flows_d295); end
  def test_flows_e295; assert_in_epsilon(245.27447814821141, worksheet.flows_e295, 0.002); end
  def test_flows_c296; assert_equal("liquid fuels", worksheet.flows_c296); end
  def test_flows_d296; assert_equal("commercial", worksheet.flows_d296); end
  def test_flows_e296; assert_in_delta(0.0, (worksheet.flows_e296||0), 0.002); end
  def test_flows_c297; assert_equal("coal final", worksheet.flows_c297); end
  def test_flows_d297; assert_equal("commercial", worksheet.flows_d297); end
  def test_flows_e297; assert_in_delta(0.0, (worksheet.flows_e297||0), 0.002); end
  def test_flows_c298; assert_equal("natural gas final", worksheet.flows_c298); end
  def test_flows_d298; assert_equal("commercial", worksheet.flows_d298); end
  def test_flows_e298; assert_in_epsilon(9.231226785594083, worksheet.flows_e298, 0.002); end
  def test_flows_c299; assert_equal("biomass final", worksheet.flows_c299); end
  def test_flows_d299; assert_equal("commercial", worksheet.flows_d299); end
  def test_flows_e299; assert_in_delta(0.0, (worksheet.flows_e299||0), 0.002); end
  def test_costpercapita_b1; assert_equal("ZAR/Capita/yr", worksheet.costpercapita_b1); end
  def test_costpercapita_e1; assert_equal("C1.Low", worksheet.costpercapita_e1); end
  def test_costpercapita_f1; assert_equal("Low estimate of capital costs", worksheet.costpercapita_f1); end
  def test_costpercapita_o1; assert_equal("C2.Low", worksheet.costpercapita_o1); end
  def test_costpercapita_p1; assert_equal("Low estimate of operating costs", worksheet.costpercapita_p1); end
  def test_costpercapita_y1; assert_equal("C3.Low", worksheet.costpercapita_y1); end
  def test_costpercapita_z1; assert_equal("Low estimate of fuel costs", worksheet.costpercapita_z1); end
  def test_costpercapita_ai1; assert_equal("Low estimate of total cost", worksheet.costpercapita_ai1); end
  def test_costpercapita_as1; assert_equal("Cashflow capital basis", worksheet.costpercapita_as1); end
  def test_costpercapita_av1; assert_equal("Loan", worksheet.costpercapita_av1); end
  def test_costpercapita_ay1; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay1); end
  def test_costpercapita_bi1; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi1); end
  def test_costpercapita_bs1; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_bs1); end
  def test_costpercapita_cc1; assert_equal("Amortised Capital", worksheet.costpercapita_cc1); end
  def test_costpercapita_cf1; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf1); end
  def test_costpercapita_cp1; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp1); end
  def test_costpercapita_a2; assert_equal("Code", worksheet.costpercapita_a2); end
  def test_costpercapita_b2; assert_equal("Description", worksheet.costpercapita_b2); end
  def test_costpercapita_c2; assert_equal("Category", worksheet.costpercapita_c2); end
  def test_costpercapita_e2; assert_equal("2010", worksheet.costpercapita_e2); end
  def test_costpercapita_f2; assert_equal("2015", worksheet.costpercapita_f2); end
  def test_costpercapita_g2; assert_equal("2020", worksheet.costpercapita_g2); end
  def test_costpercapita_h2; assert_equal("2025", worksheet.costpercapita_h2); end
  def test_costpercapita_i2; assert_equal("2030", worksheet.costpercapita_i2); end
  def test_costpercapita_j2; assert_equal("2035", worksheet.costpercapita_j2); end
  def test_costpercapita_k2; assert_equal("2040", worksheet.costpercapita_k2); end
  def test_costpercapita_l2; assert_equal("2045", worksheet.costpercapita_l2); end
  def test_costpercapita_m2; assert_equal("2050", worksheet.costpercapita_m2); end
  def test_costpercapita_o2; assert_equal("2010", worksheet.costpercapita_o2); end
  def test_costpercapita_p2; assert_equal("2015", worksheet.costpercapita_p2); end
  def test_costpercapita_q2; assert_equal("2020", worksheet.costpercapita_q2); end
  def test_costpercapita_r2; assert_equal("2025", worksheet.costpercapita_r2); end
  def test_costpercapita_s2; assert_equal("2030", worksheet.costpercapita_s2); end
  def test_costpercapita_t2; assert_equal("2035", worksheet.costpercapita_t2); end
  def test_costpercapita_u2; assert_equal("2040", worksheet.costpercapita_u2); end
  def test_costpercapita_v2; assert_equal("2045", worksheet.costpercapita_v2); end
  def test_costpercapita_w2; assert_equal("2050", worksheet.costpercapita_w2); end
  def test_costpercapita_y2; assert_equal("2010", worksheet.costpercapita_y2); end
  def test_costpercapita_z2; assert_equal("2015", worksheet.costpercapita_z2); end
  def test_costpercapita_aa2; assert_equal("2020", worksheet.costpercapita_aa2); end
  def test_costpercapita_ab2; assert_equal("2025", worksheet.costpercapita_ab2); end
  def test_costpercapita_ac2; assert_equal("2030", worksheet.costpercapita_ac2); end
  def test_costpercapita_ad2; assert_equal("2035", worksheet.costpercapita_ad2); end
  def test_costpercapita_ae2; assert_equal("2040", worksheet.costpercapita_ae2); end
  def test_costpercapita_af2; assert_equal("2045", worksheet.costpercapita_af2); end
  def test_costpercapita_ag2; assert_equal("2050", worksheet.costpercapita_ag2); end
  def test_costpercapita_ai2; assert_equal("2010", worksheet.costpercapita_ai2); end
  def test_costpercapita_aj2; assert_equal("2015", worksheet.costpercapita_aj2); end
  def test_costpercapita_ak2; assert_equal("2020", worksheet.costpercapita_ak2); end
  def test_costpercapita_al2; assert_equal("2025", worksheet.costpercapita_al2); end
  def test_costpercapita_am2; assert_equal("2030", worksheet.costpercapita_am2); end
  def test_costpercapita_an2; assert_equal("2035", worksheet.costpercapita_an2); end
  def test_costpercapita_ao2; assert_equal("2040", worksheet.costpercapita_ao2); end
  def test_costpercapita_ap2; assert_equal("2045", worksheet.costpercapita_ap2); end
  def test_costpercapita_aq2; assert_equal("2050", worksheet.costpercapita_aq2); end
  def test_costpercapita_as2; assert_equal("Mean", worksheet.costpercapita_as2); end
  def test_costpercapita_at2; assert_equal("NPV", worksheet.costpercapita_at2); end
  def test_costpercapita_av2; assert_equal("Rate", worksheet.costpercapita_av2); end
  def test_costpercapita_aw2; assert_equal("Years", worksheet.costpercapita_aw2); end
  def test_costpercapita_ay2; assert_in_epsilon(2010.0, worksheet.costpercapita_ay2, 0.002); end
  def test_costpercapita_az2; assert_in_epsilon(2015.0, worksheet.costpercapita_az2, 0.002); end
  def test_costpercapita_ba2; assert_in_epsilon(2020.0, worksheet.costpercapita_ba2, 0.002); end
  def test_costpercapita_bb2; assert_in_epsilon(2025.0, worksheet.costpercapita_bb2, 0.002); end
  def test_costpercapita_bc2; assert_in_epsilon(2030.0, worksheet.costpercapita_bc2, 0.002); end
  def test_costpercapita_bd2; assert_in_epsilon(2035.0, worksheet.costpercapita_bd2, 0.002); end
  def test_costpercapita_be2; assert_in_epsilon(2040.0, worksheet.costpercapita_be2, 0.002); end
  def test_costpercapita_bf2; assert_in_epsilon(2045.0, worksheet.costpercapita_bf2, 0.002); end
  def test_costpercapita_bg2; assert_in_epsilon(2050.0, worksheet.costpercapita_bg2, 0.002); end
  def test_costpercapita_bi2; assert_in_epsilon(2010.0, worksheet.costpercapita_bi2, 0.002); end
  def test_costpercapita_bj2; assert_in_epsilon(2015.0, worksheet.costpercapita_bj2, 0.002); end
  def test_costpercapita_bk2; assert_in_epsilon(2020.0, worksheet.costpercapita_bk2, 0.002); end
  def test_costpercapita_bl2; assert_in_epsilon(2025.0, worksheet.costpercapita_bl2, 0.002); end
  def test_costpercapita_bm2; assert_in_epsilon(2030.0, worksheet.costpercapita_bm2, 0.002); end
  def test_costpercapita_bn2; assert_in_epsilon(2035.0, worksheet.costpercapita_bn2, 0.002); end
  def test_costpercapita_bo2; assert_in_epsilon(2040.0, worksheet.costpercapita_bo2, 0.002); end
  def test_costpercapita_bp2; assert_in_epsilon(2045.0, worksheet.costpercapita_bp2, 0.002); end
  def test_costpercapita_bq2; assert_in_epsilon(2050.0, worksheet.costpercapita_bq2, 0.002); end
  def test_costpercapita_bs2; assert_equal("2010", worksheet.costpercapita_bs2); end
  def test_costpercapita_bt2; assert_equal("2015", worksheet.costpercapita_bt2); end
  def test_costpercapita_bu2; assert_equal("2020", worksheet.costpercapita_bu2); end
  def test_costpercapita_bv2; assert_equal("2025", worksheet.costpercapita_bv2); end
  def test_costpercapita_bw2; assert_equal("2030", worksheet.costpercapita_bw2); end
  def test_costpercapita_bx2; assert_equal("2035", worksheet.costpercapita_bx2); end
  def test_costpercapita_by2; assert_equal("2040", worksheet.costpercapita_by2); end
  def test_costpercapita_bz2; assert_equal("2045", worksheet.costpercapita_bz2); end
  def test_costpercapita_ca2; assert_equal("2050", worksheet.costpercapita_ca2); end
  def test_costpercapita_cc2; assert_equal("Mean", worksheet.costpercapita_cc2); end
  def test_costpercapita_cd2; assert_equal("NPV", worksheet.costpercapita_cd2); end
  def test_costpercapita_cf2; assert_equal("2010", worksheet.costpercapita_cf2); end
  def test_costpercapita_cg2; assert_equal("2015", worksheet.costpercapita_cg2); end
  def test_costpercapita_ch2; assert_equal("2020", worksheet.costpercapita_ch2); end
  def test_costpercapita_ci2; assert_equal("2025", worksheet.costpercapita_ci2); end
  def test_costpercapita_cj2; assert_equal("2030", worksheet.costpercapita_cj2); end
  def test_costpercapita_ck2; assert_equal("2035", worksheet.costpercapita_ck2); end
  def test_costpercapita_cl2; assert_equal("2040", worksheet.costpercapita_cl2); end
  def test_costpercapita_cm2; assert_equal("2045", worksheet.costpercapita_cm2); end
  def test_costpercapita_cn2; assert_equal("2050", worksheet.costpercapita_cn2); end
  def test_costpercapita_cp2; assert_equal("Mean", worksheet.costpercapita_cp2); end
  def test_costpercapita_cq2; assert_equal("NPV", worksheet.costpercapita_cq2); end
  def test_costpercapita_a3; assert_equal("Therm.a", worksheet.costpercapita_a3); end
  def test_costpercapita_b3; assert_equal("Biomass/coal power stations", worksheet.costpercapita_b3); end
  def test_costpercapita_c3; assert_equal("Electricity", worksheet.costpercapita_c3); end
  def test_costpercapita_e3; assert_in_delta(0.0, (worksheet.costpercapita_e3||0), 0.002); end
  def test_costpercapita_f3; assert_in_delta(0.0, (worksheet.costpercapita_f3||0), 0.002); end
  def test_costpercapita_g3; assert_in_delta(0.0, (worksheet.costpercapita_g3||0), 0.002); end
  def test_costpercapita_h3; assert_in_delta(0.0, (worksheet.costpercapita_h3||0), 0.002); end
  def test_costpercapita_i3; assert_in_delta(0.0, (worksheet.costpercapita_i3||0), 0.002); end
  def test_costpercapita_j3; assert_in_delta(0.0, (worksheet.costpercapita_j3||0), 0.002); end
  def test_costpercapita_k3; assert_in_delta(0.0, (worksheet.costpercapita_k3||0), 0.002); end
  def test_costpercapita_l3; assert_in_delta(0.0, (worksheet.costpercapita_l3||0), 0.002); end
  def test_costpercapita_m3; assert_in_delta(0.0, (worksheet.costpercapita_m3||0), 0.002); end
  def test_costpercapita_o3; assert_in_delta(0.0, (worksheet.costpercapita_o3||0), 0.002); end
  def test_costpercapita_p3; assert_in_delta(0.0, (worksheet.costpercapita_p3||0), 0.002); end
  def test_costpercapita_q3; assert_in_delta(0.0, (worksheet.costpercapita_q3||0), 0.002); end
  def test_costpercapita_r3; assert_in_delta(0.0, (worksheet.costpercapita_r3||0), 0.002); end
  def test_costpercapita_s3; assert_in_delta(0.0, (worksheet.costpercapita_s3||0), 0.002); end
  def test_costpercapita_t3; assert_in_delta(0.0, (worksheet.costpercapita_t3||0), 0.002); end
  def test_costpercapita_u3; assert_in_delta(0.0, (worksheet.costpercapita_u3||0), 0.002); end
  def test_costpercapita_v3; assert_in_delta(0.0, (worksheet.costpercapita_v3||0), 0.002); end
  def test_costpercapita_w3; assert_in_delta(0.0, (worksheet.costpercapita_w3||0), 0.002); end
  def test_costpercapita_y3; assert_in_delta(0.0, (worksheet.costpercapita_y3||0), 0.002); end
  def test_costpercapita_z3; assert_in_delta(0.0, (worksheet.costpercapita_z3||0), 0.002); end
  def test_costpercapita_aa3; assert_in_delta(0.0, (worksheet.costpercapita_aa3||0), 0.002); end
  def test_costpercapita_ab3; assert_in_delta(0.0, (worksheet.costpercapita_ab3||0), 0.002); end
  def test_costpercapita_ac3; assert_in_delta(0.0, (worksheet.costpercapita_ac3||0), 0.002); end
  def test_costpercapita_ad3; assert_in_delta(0.0, (worksheet.costpercapita_ad3||0), 0.002); end
  def test_costpercapita_ae3; assert_in_delta(0.0, (worksheet.costpercapita_ae3||0), 0.002); end
  def test_costpercapita_af3; assert_in_delta(0.0, (worksheet.costpercapita_af3||0), 0.002); end
  def test_costpercapita_ag3; assert_in_delta(0.0, (worksheet.costpercapita_ag3||0), 0.002); end
  def test_costpercapita_ai3; assert_in_delta(0.0, (worksheet.costpercapita_ai3||0), 0.002); end
  def test_costpercapita_aj3; assert_in_delta(0.0, (worksheet.costpercapita_aj3||0), 0.002); end
  def test_costpercapita_ak3; assert_in_delta(0.0, (worksheet.costpercapita_ak3||0), 0.002); end
  def test_costpercapita_al3; assert_in_delta(0.0, (worksheet.costpercapita_al3||0), 0.002); end
  def test_costpercapita_am3; assert_in_delta(0.0, (worksheet.costpercapita_am3||0), 0.002); end
  def test_costpercapita_an3; assert_in_delta(0.0, (worksheet.costpercapita_an3||0), 0.002); end
  def test_costpercapita_ao3; assert_in_delta(0.0, (worksheet.costpercapita_ao3||0), 0.002); end
  def test_costpercapita_ap3; assert_in_delta(0.0, (worksheet.costpercapita_ap3||0), 0.002); end
  def test_costpercapita_aq3; assert_in_delta(0.0, (worksheet.costpercapita_aq3||0), 0.002); end
  def test_costpercapita_as3; assert_in_delta(0.0, (worksheet.costpercapita_as3||0), 0.002); end
  def test_costpercapita_at3; assert_in_delta(0.0, (worksheet.costpercapita_at3||0), 0.002); end
  def test_costpercapita_av3; assert_in_delta(0.0, (worksheet.costpercapita_av3||0), 0.002); end
  def test_costpercapita_aw3; assert_in_epsilon(5.0, worksheet.costpercapita_aw3, 0.002); end
  def test_costpercapita_ay3; assert_in_delta(0.0, (worksheet.costpercapita_ay3||0), 0.002); end
  def test_costpercapita_az3; assert_in_delta(0.0, (worksheet.costpercapita_az3||0), 0.002); end
  def test_costpercapita_ba3; assert_in_delta(0.0, (worksheet.costpercapita_ba3||0), 0.002); end
  def test_costpercapita_bb3; assert_in_delta(0.0, (worksheet.costpercapita_bb3||0), 0.002); end
  def test_costpercapita_bc3; assert_in_delta(0.0, (worksheet.costpercapita_bc3||0), 0.002); end
  def test_costpercapita_bd3; assert_in_delta(0.0, (worksheet.costpercapita_bd3||0), 0.002); end
  def test_costpercapita_be3; assert_in_delta(0.0, (worksheet.costpercapita_be3||0), 0.002); end
  def test_costpercapita_bf3; assert_in_delta(0.0, (worksheet.costpercapita_bf3||0), 0.002); end
  def test_costpercapita_bg3; assert_in_delta(0.0, (worksheet.costpercapita_bg3||0), 0.002); end
  def test_costpercapita_bi3; assert_in_delta(0.0, (worksheet.costpercapita_bi3||0), 0.002); end
  def test_costpercapita_bj3; assert_in_delta(0.0, (worksheet.costpercapita_bj3||0), 0.002); end
  def test_costpercapita_bk3; assert_in_delta(0.0, (worksheet.costpercapita_bk3||0), 0.002); end
  def test_costpercapita_bl3; assert_in_delta(0.0, (worksheet.costpercapita_bl3||0), 0.002); end
  def test_costpercapita_bm3; assert_in_delta(0.0, (worksheet.costpercapita_bm3||0), 0.002); end
  def test_costpercapita_bn3; assert_in_delta(0.0, (worksheet.costpercapita_bn3||0), 0.002); end
  def test_costpercapita_bo3; assert_in_delta(0.0, (worksheet.costpercapita_bo3||0), 0.002); end
  def test_costpercapita_bp3; assert_in_delta(0.0, (worksheet.costpercapita_bp3||0), 0.002); end
  def test_costpercapita_bq3; assert_in_delta(0.0, (worksheet.costpercapita_bq3||0), 0.002); end
  def test_costpercapita_bs3; assert_in_delta(0.0, (worksheet.costpercapita_bs3||0), 0.002); end
  def test_costpercapita_bt3; assert_in_delta(0.0, (worksheet.costpercapita_bt3||0), 0.002); end
  def test_costpercapita_bu3; assert_in_delta(0.0, (worksheet.costpercapita_bu3||0), 0.002); end
  def test_costpercapita_bv3; assert_in_delta(0.0, (worksheet.costpercapita_bv3||0), 0.002); end
  def test_costpercapita_bw3; assert_in_delta(0.0, (worksheet.costpercapita_bw3||0), 0.002); end
  def test_costpercapita_bx3; assert_in_delta(0.0, (worksheet.costpercapita_bx3||0), 0.002); end
  def test_costpercapita_by3; assert_in_delta(0.0, (worksheet.costpercapita_by3||0), 0.002); end
  def test_costpercapita_bz3; assert_in_delta(0.0, (worksheet.costpercapita_bz3||0), 0.002); end
  def test_costpercapita_ca3; assert_in_delta(0.0, (worksheet.costpercapita_ca3||0), 0.002); end
  def test_costpercapita_cc3; assert_in_delta(0.0, (worksheet.costpercapita_cc3||0), 0.002); end
  def test_costpercapita_cd3; assert_in_delta(0.0, (worksheet.costpercapita_cd3||0), 0.002); end
  def test_costpercapita_cf3; assert_in_delta(0.0, (worksheet.costpercapita_cf3||0), 0.002); end
  def test_costpercapita_cg3; assert_in_delta(0.0, (worksheet.costpercapita_cg3||0), 0.002); end
  def test_costpercapita_ch3; assert_in_delta(0.0, (worksheet.costpercapita_ch3||0), 0.002); end
  def test_costpercapita_ci3; assert_in_delta(0.0, (worksheet.costpercapita_ci3||0), 0.002); end
  def test_costpercapita_cj3; assert_in_delta(0.0, (worksheet.costpercapita_cj3||0), 0.002); end
  def test_costpercapita_ck3; assert_in_delta(0.0, (worksheet.costpercapita_ck3||0), 0.002); end
  def test_costpercapita_cl3; assert_in_delta(0.0, (worksheet.costpercapita_cl3||0), 0.002); end
  def test_costpercapita_cm3; assert_in_delta(0.0, (worksheet.costpercapita_cm3||0), 0.002); end
  def test_costpercapita_cn3; assert_in_delta(0.0, (worksheet.costpercapita_cn3||0), 0.002); end
  def test_costpercapita_cp3; assert_in_delta(0.0, (worksheet.costpercapita_cp3||0), 0.002); end
  def test_costpercapita_cq3; assert_in_delta(0.0, (worksheet.costpercapita_cq3||0), 0.002); end
  def test_costpercapita_cr3; assert_equal("ok", worksheet.costpercapita_cr3); end
  def test_costpercapita_a4; assert_equal("Therm.b.CCGT", worksheet.costpercapita_a4); end
  def test_costpercapita_b4; assert_equal("CCGT", worksheet.costpercapita_b4); end
  def test_costpercapita_c4; assert_equal("Electricity", worksheet.costpercapita_c4); end
  def test_costpercapita_e4; assert_in_delta(0.0, (worksheet.costpercapita_e4||0), 0.002); end
  def test_costpercapita_f4; assert_in_delta(0.0, (worksheet.costpercapita_f4||0), 0.002); end
  def test_costpercapita_g4; assert_in_delta(0.0, (worksheet.costpercapita_g4||0), 0.002); end
  def test_costpercapita_h4; assert_in_delta(0.0, (worksheet.costpercapita_h4||0), 0.002); end
  def test_costpercapita_i4; assert_in_delta(0.0, (worksheet.costpercapita_i4||0), 0.002); end
  def test_costpercapita_j4; assert_in_delta(0.0, (worksheet.costpercapita_j4||0), 0.002); end
  def test_costpercapita_k4; assert_in_delta(0.0, (worksheet.costpercapita_k4||0), 0.002); end
  def test_costpercapita_l4; assert_in_delta(0.0, (worksheet.costpercapita_l4||0), 0.002); end
  def test_costpercapita_m4; assert_in_delta(0.0, (worksheet.costpercapita_m4||0), 0.002); end
  def test_costpercapita_o4; assert_in_delta(0.0, (worksheet.costpercapita_o4||0), 0.002); end
  def test_costpercapita_p4; assert_in_delta(0.0, (worksheet.costpercapita_p4||0), 0.002); end
  def test_costpercapita_q4; assert_in_delta(0.0, (worksheet.costpercapita_q4||0), 0.002); end
  def test_costpercapita_r4; assert_in_delta(0.0, (worksheet.costpercapita_r4||0), 0.002); end
  def test_costpercapita_s4; assert_in_delta(0.0, (worksheet.costpercapita_s4||0), 0.002); end
  def test_costpercapita_t4; assert_in_delta(0.0, (worksheet.costpercapita_t4||0), 0.002); end
  def test_costpercapita_u4; assert_in_delta(0.0, (worksheet.costpercapita_u4||0), 0.002); end
  def test_costpercapita_v4; assert_in_delta(0.0, (worksheet.costpercapita_v4||0), 0.002); end
  def test_costpercapita_w4; assert_in_delta(0.0, (worksheet.costpercapita_w4||0), 0.002); end
  def test_costpercapita_y4; assert_in_delta(0.0, (worksheet.costpercapita_y4||0), 0.002); end
  def test_costpercapita_z4; assert_in_delta(0.0, (worksheet.costpercapita_z4||0), 0.002); end
  def test_costpercapita_aa4; assert_in_delta(0.0, (worksheet.costpercapita_aa4||0), 0.002); end
  def test_costpercapita_ab4; assert_in_delta(0.0, (worksheet.costpercapita_ab4||0), 0.002); end
  def test_costpercapita_ac4; assert_in_delta(0.0, (worksheet.costpercapita_ac4||0), 0.002); end
  def test_costpercapita_ad4; assert_in_delta(0.0, (worksheet.costpercapita_ad4||0), 0.002); end
  def test_costpercapita_ae4; assert_in_delta(0.0, (worksheet.costpercapita_ae4||0), 0.002); end
  def test_costpercapita_af4; assert_in_delta(0.0, (worksheet.costpercapita_af4||0), 0.002); end
  def test_costpercapita_ag4; assert_in_delta(0.0, (worksheet.costpercapita_ag4||0), 0.002); end
  def test_costpercapita_ai4; assert_in_delta(0.0, (worksheet.costpercapita_ai4||0), 0.002); end
  def test_costpercapita_aj4; assert_in_delta(0.0, (worksheet.costpercapita_aj4||0), 0.002); end
  def test_costpercapita_ak4; assert_in_delta(0.0, (worksheet.costpercapita_ak4||0), 0.002); end
  def test_costpercapita_al4; assert_in_delta(0.0, (worksheet.costpercapita_al4||0), 0.002); end
  def test_costpercapita_am4; assert_in_delta(0.0, (worksheet.costpercapita_am4||0), 0.002); end
  def test_costpercapita_an4; assert_in_delta(0.0, (worksheet.costpercapita_an4||0), 0.002); end
  def test_costpercapita_ao4; assert_in_delta(0.0, (worksheet.costpercapita_ao4||0), 0.002); end
  def test_costpercapita_ap4; assert_in_delta(0.0, (worksheet.costpercapita_ap4||0), 0.002); end
  def test_costpercapita_aq4; assert_in_delta(0.0, (worksheet.costpercapita_aq4||0), 0.002); end
  def test_costpercapita_as4; assert_in_delta(0.0, (worksheet.costpercapita_as4||0), 0.002); end
  def test_costpercapita_at4; assert_in_delta(0.0, (worksheet.costpercapita_at4||0), 0.002); end
  def test_costpercapita_av4; assert_in_delta(0.0, (worksheet.costpercapita_av4||0), 0.002); end
  def test_costpercapita_aw4; assert_in_epsilon(5.0, worksheet.costpercapita_aw4, 0.002); end
  def test_costpercapita_ay4; assert_in_delta(0.0, (worksheet.costpercapita_ay4||0), 0.002); end
  def test_costpercapita_az4; assert_in_delta(0.0, (worksheet.costpercapita_az4||0), 0.002); end
  def test_costpercapita_ba4; assert_in_delta(0.0, (worksheet.costpercapita_ba4||0), 0.002); end
  def test_costpercapita_bb4; assert_in_delta(0.0, (worksheet.costpercapita_bb4||0), 0.002); end
  def test_costpercapita_bc4; assert_in_delta(0.0, (worksheet.costpercapita_bc4||0), 0.002); end
  def test_costpercapita_bd4; assert_in_delta(0.0, (worksheet.costpercapita_bd4||0), 0.002); end
  def test_costpercapita_be4; assert_in_delta(0.0, (worksheet.costpercapita_be4||0), 0.002); end
  def test_costpercapita_bf4; assert_in_delta(0.0, (worksheet.costpercapita_bf4||0), 0.002); end
  def test_costpercapita_bg4; assert_in_delta(0.0, (worksheet.costpercapita_bg4||0), 0.002); end
  def test_costpercapita_bi4; assert_in_delta(0.0, (worksheet.costpercapita_bi4||0), 0.002); end
  def test_costpercapita_bj4; assert_in_delta(0.0, (worksheet.costpercapita_bj4||0), 0.002); end
  def test_costpercapita_bk4; assert_in_delta(0.0, (worksheet.costpercapita_bk4||0), 0.002); end
  def test_costpercapita_bl4; assert_in_delta(0.0, (worksheet.costpercapita_bl4||0), 0.002); end
  def test_costpercapita_bm4; assert_in_delta(0.0, (worksheet.costpercapita_bm4||0), 0.002); end
  def test_costpercapita_bn4; assert_in_delta(0.0, (worksheet.costpercapita_bn4||0), 0.002); end
  def test_costpercapita_bo4; assert_in_delta(0.0, (worksheet.costpercapita_bo4||0), 0.002); end
  def test_costpercapita_bp4; assert_in_delta(0.0, (worksheet.costpercapita_bp4||0), 0.002); end
  def test_costpercapita_bq4; assert_in_delta(0.0, (worksheet.costpercapita_bq4||0), 0.002); end
  def test_costpercapita_bs4; assert_in_delta(0.0, (worksheet.costpercapita_bs4||0), 0.002); end
  def test_costpercapita_bt4; assert_in_delta(0.0, (worksheet.costpercapita_bt4||0), 0.002); end
  def test_costpercapita_bu4; assert_in_delta(0.0, (worksheet.costpercapita_bu4||0), 0.002); end
  def test_costpercapita_bv4; assert_in_delta(0.0, (worksheet.costpercapita_bv4||0), 0.002); end
  def test_costpercapita_bw4; assert_in_delta(0.0, (worksheet.costpercapita_bw4||0), 0.002); end
  def test_costpercapita_bx4; assert_in_delta(0.0, (worksheet.costpercapita_bx4||0), 0.002); end
  def test_costpercapita_by4; assert_in_delta(0.0, (worksheet.costpercapita_by4||0), 0.002); end
  def test_costpercapita_bz4; assert_in_delta(0.0, (worksheet.costpercapita_bz4||0), 0.002); end
  def test_costpercapita_ca4; assert_in_delta(0.0, (worksheet.costpercapita_ca4||0), 0.002); end
  def test_costpercapita_cc4; assert_in_delta(0.0, (worksheet.costpercapita_cc4||0), 0.002); end
  def test_costpercapita_cd4; assert_in_delta(0.0, (worksheet.costpercapita_cd4||0), 0.002); end
  def test_costpercapita_cf4; assert_in_delta(0.0, (worksheet.costpercapita_cf4||0), 0.002); end
  def test_costpercapita_cg4; assert_in_delta(0.0, (worksheet.costpercapita_cg4||0), 0.002); end
  def test_costpercapita_ch4; assert_in_delta(0.0, (worksheet.costpercapita_ch4||0), 0.002); end
  def test_costpercapita_ci4; assert_in_delta(0.0, (worksheet.costpercapita_ci4||0), 0.002); end
  def test_costpercapita_cj4; assert_in_delta(0.0, (worksheet.costpercapita_cj4||0), 0.002); end
  def test_costpercapita_ck4; assert_in_delta(0.0, (worksheet.costpercapita_ck4||0), 0.002); end
  def test_costpercapita_cl4; assert_in_delta(0.0, (worksheet.costpercapita_cl4||0), 0.002); end
  def test_costpercapita_cm4; assert_in_delta(0.0, (worksheet.costpercapita_cm4||0), 0.002); end
  def test_costpercapita_cn4; assert_in_delta(0.0, (worksheet.costpercapita_cn4||0), 0.002); end
  def test_costpercapita_cp4; assert_in_delta(0.0, (worksheet.costpercapita_cp4||0), 0.002); end
  def test_costpercapita_cq4; assert_in_delta(0.0, (worksheet.costpercapita_cq4||0), 0.002); end
  def test_costpercapita_cr4; assert_equal("ok", worksheet.costpercapita_cr4); end
  def test_costpercapita_a5; assert_equal("Therm.b.OCGT", worksheet.costpercapita_a5); end
  def test_costpercapita_b5; assert_equal("OCGT", worksheet.costpercapita_b5); end
  def test_costpercapita_c5; assert_equal("Electricity", worksheet.costpercapita_c5); end
  def test_costpercapita_e5; assert_in_delta(0.0, (worksheet.costpercapita_e5||0), 0.002); end
  def test_costpercapita_f5; assert_in_delta(0.0, (worksheet.costpercapita_f5||0), 0.002); end
  def test_costpercapita_g5; assert_in_delta(0.0, (worksheet.costpercapita_g5||0), 0.002); end
  def test_costpercapita_h5; assert_in_delta(0.0, (worksheet.costpercapita_h5||0), 0.002); end
  def test_costpercapita_i5; assert_in_delta(0.0, (worksheet.costpercapita_i5||0), 0.002); end
  def test_costpercapita_j5; assert_in_delta(0.0, (worksheet.costpercapita_j5||0), 0.002); end
  def test_costpercapita_k5; assert_in_delta(0.0, (worksheet.costpercapita_k5||0), 0.002); end
  def test_costpercapita_l5; assert_in_delta(0.0, (worksheet.costpercapita_l5||0), 0.002); end
  def test_costpercapita_m5; assert_in_delta(0.0, (worksheet.costpercapita_m5||0), 0.002); end
  def test_costpercapita_o5; assert_in_delta(0.0, (worksheet.costpercapita_o5||0), 0.002); end
  def test_costpercapita_p5; assert_in_delta(0.0, (worksheet.costpercapita_p5||0), 0.002); end
  def test_costpercapita_q5; assert_in_delta(0.0, (worksheet.costpercapita_q5||0), 0.002); end
  def test_costpercapita_r5; assert_in_delta(0.0, (worksheet.costpercapita_r5||0), 0.002); end
  def test_costpercapita_s5; assert_in_delta(0.0, (worksheet.costpercapita_s5||0), 0.002); end
  def test_costpercapita_t5; assert_in_delta(0.0, (worksheet.costpercapita_t5||0), 0.002); end
  def test_costpercapita_u5; assert_in_delta(0.0, (worksheet.costpercapita_u5||0), 0.002); end
  def test_costpercapita_v5; assert_in_delta(0.0, (worksheet.costpercapita_v5||0), 0.002); end
  def test_costpercapita_w5; assert_in_delta(0.0, (worksheet.costpercapita_w5||0), 0.002); end
  def test_costpercapita_y5; assert_in_delta(0.0, (worksheet.costpercapita_y5||0), 0.002); end
  def test_costpercapita_z5; assert_in_delta(0.0, (worksheet.costpercapita_z5||0), 0.002); end
  def test_costpercapita_aa5; assert_in_delta(0.0, (worksheet.costpercapita_aa5||0), 0.002); end
  def test_costpercapita_ab5; assert_in_delta(0.0, (worksheet.costpercapita_ab5||0), 0.002); end
  def test_costpercapita_ac5; assert_in_delta(0.0, (worksheet.costpercapita_ac5||0), 0.002); end
  def test_costpercapita_ad5; assert_in_delta(0.0, (worksheet.costpercapita_ad5||0), 0.002); end
  def test_costpercapita_ae5; assert_in_delta(0.0, (worksheet.costpercapita_ae5||0), 0.002); end
  def test_costpercapita_af5; assert_in_delta(0.0, (worksheet.costpercapita_af5||0), 0.002); end
  def test_costpercapita_ag5; assert_in_delta(0.0, (worksheet.costpercapita_ag5||0), 0.002); end
  def test_costpercapita_ai5; assert_in_delta(0.0, (worksheet.costpercapita_ai5||0), 0.002); end
  def test_costpercapita_aj5; assert_in_delta(0.0, (worksheet.costpercapita_aj5||0), 0.002); end
  def test_costpercapita_ak5; assert_in_delta(0.0, (worksheet.costpercapita_ak5||0), 0.002); end
  def test_costpercapita_al5; assert_in_delta(0.0, (worksheet.costpercapita_al5||0), 0.002); end
  def test_costpercapita_am5; assert_in_delta(0.0, (worksheet.costpercapita_am5||0), 0.002); end
  def test_costpercapita_an5; assert_in_delta(0.0, (worksheet.costpercapita_an5||0), 0.002); end
  def test_costpercapita_ao5; assert_in_delta(0.0, (worksheet.costpercapita_ao5||0), 0.002); end
  def test_costpercapita_ap5; assert_in_delta(0.0, (worksheet.costpercapita_ap5||0), 0.002); end
  def test_costpercapita_aq5; assert_in_delta(0.0, (worksheet.costpercapita_aq5||0), 0.002); end
  def test_costpercapita_as5; assert_in_delta(0.0, (worksheet.costpercapita_as5||0), 0.002); end
  def test_costpercapita_at5; assert_in_delta(0.0, (worksheet.costpercapita_at5||0), 0.002); end
  def test_costpercapita_av5; assert_in_delta(0.0, (worksheet.costpercapita_av5||0), 0.002); end
  def test_costpercapita_aw5; assert_in_epsilon(5.0, worksheet.costpercapita_aw5, 0.002); end
  def test_costpercapita_ay5; assert_in_delta(0.0, (worksheet.costpercapita_ay5||0), 0.002); end
  def test_costpercapita_az5; assert_in_delta(0.0, (worksheet.costpercapita_az5||0), 0.002); end
  def test_costpercapita_ba5; assert_in_delta(0.0, (worksheet.costpercapita_ba5||0), 0.002); end
  def test_costpercapita_bb5; assert_in_delta(0.0, (worksheet.costpercapita_bb5||0), 0.002); end
  def test_costpercapita_bc5; assert_in_delta(0.0, (worksheet.costpercapita_bc5||0), 0.002); end
  def test_costpercapita_bd5; assert_in_delta(0.0, (worksheet.costpercapita_bd5||0), 0.002); end
  def test_costpercapita_be5; assert_in_delta(0.0, (worksheet.costpercapita_be5||0), 0.002); end
  def test_costpercapita_bf5; assert_in_delta(0.0, (worksheet.costpercapita_bf5||0), 0.002); end
  def test_costpercapita_bg5; assert_in_delta(0.0, (worksheet.costpercapita_bg5||0), 0.002); end
  def test_costpercapita_bi5; assert_in_delta(0.0, (worksheet.costpercapita_bi5||0), 0.002); end
  def test_costpercapita_bj5; assert_in_delta(0.0, (worksheet.costpercapita_bj5||0), 0.002); end
  def test_costpercapita_bk5; assert_in_delta(0.0, (worksheet.costpercapita_bk5||0), 0.002); end
  def test_costpercapita_bl5; assert_in_delta(0.0, (worksheet.costpercapita_bl5||0), 0.002); end
  def test_costpercapita_bm5; assert_in_delta(0.0, (worksheet.costpercapita_bm5||0), 0.002); end
  def test_costpercapita_bn5; assert_in_delta(0.0, (worksheet.costpercapita_bn5||0), 0.002); end
  def test_costpercapita_bo5; assert_in_delta(0.0, (worksheet.costpercapita_bo5||0), 0.002); end
  def test_costpercapita_bp5; assert_in_delta(0.0, (worksheet.costpercapita_bp5||0), 0.002); end
  def test_costpercapita_bq5; assert_in_delta(0.0, (worksheet.costpercapita_bq5||0), 0.002); end
  def test_costpercapita_bs5; assert_in_delta(0.0, (worksheet.costpercapita_bs5||0), 0.002); end
  def test_costpercapita_bt5; assert_in_delta(0.0, (worksheet.costpercapita_bt5||0), 0.002); end
  def test_costpercapita_bu5; assert_in_delta(0.0, (worksheet.costpercapita_bu5||0), 0.002); end
  def test_costpercapita_bv5; assert_in_delta(0.0, (worksheet.costpercapita_bv5||0), 0.002); end
  def test_costpercapita_bw5; assert_in_delta(0.0, (worksheet.costpercapita_bw5||0), 0.002); end
  def test_costpercapita_bx5; assert_in_delta(0.0, (worksheet.costpercapita_bx5||0), 0.002); end
  def test_costpercapita_by5; assert_in_delta(0.0, (worksheet.costpercapita_by5||0), 0.002); end
  def test_costpercapita_bz5; assert_in_delta(0.0, (worksheet.costpercapita_bz5||0), 0.002); end
  def test_costpercapita_ca5; assert_in_delta(0.0, (worksheet.costpercapita_ca5||0), 0.002); end
  def test_costpercapita_cc5; assert_in_delta(0.0, (worksheet.costpercapita_cc5||0), 0.002); end
  def test_costpercapita_cd5; assert_in_delta(0.0, (worksheet.costpercapita_cd5||0), 0.002); end
  def test_costpercapita_cf5; assert_in_delta(0.0, (worksheet.costpercapita_cf5||0), 0.002); end
  def test_costpercapita_cg5; assert_in_delta(0.0, (worksheet.costpercapita_cg5||0), 0.002); end
  def test_costpercapita_ch5; assert_in_delta(0.0, (worksheet.costpercapita_ch5||0), 0.002); end
  def test_costpercapita_ci5; assert_in_delta(0.0, (worksheet.costpercapita_ci5||0), 0.002); end
  def test_costpercapita_cj5; assert_in_delta(0.0, (worksheet.costpercapita_cj5||0), 0.002); end
  def test_costpercapita_ck5; assert_in_delta(0.0, (worksheet.costpercapita_ck5||0), 0.002); end
  def test_costpercapita_cl5; assert_in_delta(0.0, (worksheet.costpercapita_cl5||0), 0.002); end
  def test_costpercapita_cm5; assert_in_delta(0.0, (worksheet.costpercapita_cm5||0), 0.002); end
  def test_costpercapita_cn5; assert_in_delta(0.0, (worksheet.costpercapita_cn5||0), 0.002); end
  def test_costpercapita_cp5; assert_in_delta(0.0, (worksheet.costpercapita_cp5||0), 0.002); end
  def test_costpercapita_cq5; assert_in_delta(0.0, (worksheet.costpercapita_cq5||0), 0.002); end
  def test_costpercapita_cr5; assert_equal("ok", worksheet.costpercapita_cr5); end
  def test_costpercapita_a6; assert_equal("RE.a", worksheet.costpercapita_a6); end
  def test_costpercapita_b6; assert_equal("Onshore wind", worksheet.costpercapita_b6); end
  def test_costpercapita_c6; assert_equal("Electricity", worksheet.costpercapita_c6); end
  def test_costpercapita_e6; assert_in_delta(0.033775440829615526, worksheet.costpercapita_e6, 0.002); end
  def test_costpercapita_f6; assert_in_epsilon(4.727932764363259, worksheet.costpercapita_f6, 0.002); end
  def test_costpercapita_g6; assert_in_epsilon(41.95439593156724, worksheet.costpercapita_g6, 0.002); end
  def test_costpercapita_h6; assert_in_epsilon(68.33844024893847, worksheet.costpercapita_h6, 0.002); end
  def test_costpercapita_i6; assert_in_epsilon(98.98514807489359, worksheet.costpercapita_i6, 0.002); end
  def test_costpercapita_j6; assert_in_epsilon(103.10952924468083, worksheet.costpercapita_j6, 0.002); end
  def test_costpercapita_k6; assert_in_epsilon(123.73143509361698, worksheet.costpercapita_k6, 0.002); end
  def test_costpercapita_l6; assert_in_epsilon(144.35334094255313, worksheet.costpercapita_l6, 0.002); end
  def test_costpercapita_m6; assert_in_epsilon(164.9752467914893, worksheet.costpercapita_m6, 0.002); end
  def test_costpercapita_o6; assert_in_delta(0.012097706026837164, worksheet.costpercapita_o6, 0.002); end
  def test_costpercapita_p6; assert_in_epsilon(1.8948786620702502, worksheet.costpercapita_p6, 0.002); end
  def test_costpercapita_q6; assert_in_epsilon(17.663651361334857, worksheet.costpercapita_q6, 0.002); end
  def test_costpercapita_r6; assert_in_epsilon(29.499197700528928, worksheet.costpercapita_r6, 0.002); end
  def test_costpercapita_s6; assert_in_epsilon(43.412820670468285, worksheet.costpercapita_s6, 0.002); end
  def test_costpercapita_t6; assert_in_epsilon(45.221688198404465, worksheet.costpercapita_t6, 0.002); end
  def test_costpercapita_u6; assert_in_epsilon(54.266025838085355, worksheet.costpercapita_u6, 0.002); end
  def test_costpercapita_v6; assert_in_epsilon(63.31036347776625, worksheet.costpercapita_v6, 0.002); end
  def test_costpercapita_w6; assert_in_epsilon(72.35470111744714, worksheet.costpercapita_w6, 0.002); end
  def test_costpercapita_y6; assert_in_delta(0.0, (worksheet.costpercapita_y6||0), 0.002); end
  def test_costpercapita_z6; assert_in_delta(0.0, (worksheet.costpercapita_z6||0), 0.002); end
  def test_costpercapita_aa6; assert_in_delta(0.0, (worksheet.costpercapita_aa6||0), 0.002); end
  def test_costpercapita_ab6; assert_in_delta(0.0, (worksheet.costpercapita_ab6||0), 0.002); end
  def test_costpercapita_ac6; assert_in_delta(0.0, (worksheet.costpercapita_ac6||0), 0.002); end
  def test_costpercapita_ad6; assert_in_delta(0.0, (worksheet.costpercapita_ad6||0), 0.002); end
  def test_costpercapita_ae6; assert_in_delta(0.0, (worksheet.costpercapita_ae6||0), 0.002); end
  def test_costpercapita_af6; assert_in_delta(0.0, (worksheet.costpercapita_af6||0), 0.002); end
  def test_costpercapita_ag6; assert_in_delta(0.0, (worksheet.costpercapita_ag6||0), 0.002); end
  def test_costpercapita_ai6; assert_in_delta(0.04587314685645268, worksheet.costpercapita_ai6, 0.002); end
  def test_costpercapita_aj6; assert_in_epsilon(6.622811426433509, worksheet.costpercapita_aj6, 0.002); end
  def test_costpercapita_ak6; assert_in_epsilon(59.61804729290209, worksheet.costpercapita_ak6, 0.002); end
  def test_costpercapita_al6; assert_in_epsilon(97.83763794946739, worksheet.costpercapita_al6, 0.002); end
  def test_costpercapita_am6; assert_in_epsilon(142.39796874536185, worksheet.costpercapita_am6, 0.002); end
  def test_costpercapita_an6; assert_in_epsilon(148.33121744308528, worksheet.costpercapita_an6, 0.002); end
  def test_costpercapita_ao6; assert_in_epsilon(177.99746093170234, worksheet.costpercapita_ao6, 0.002); end
  def test_costpercapita_ap6; assert_in_epsilon(207.6637044203194, worksheet.costpercapita_ap6, 0.002); end
  def test_costpercapita_aq6; assert_in_epsilon(237.32994790893645, worksheet.costpercapita_aq6, 0.002); end
  def test_costpercapita_as6; assert_in_epsilon(119.76051880722942, worksheet.costpercapita_as6, 0.002); end
  def test_costpercapita_at6; assert_in_epsilon(2153.6668237628505, worksheet.costpercapita_at6, 0.002); end
  def test_costpercapita_av6; assert_in_delta(0.0, (worksheet.costpercapita_av6||0), 0.002); end
  def test_costpercapita_aw6; assert_in_epsilon(5.0, worksheet.costpercapita_aw6, 0.002); end
  def test_costpercapita_ay6; assert_in_delta(0.03740461194675772, worksheet.costpercapita_ay6, 0.002); end
  def test_costpercapita_az6; assert_in_epsilon(5.235949139894092, worksheet.costpercapita_az6, 0.002); end
  def test_costpercapita_ba6; assert_in_epsilon(46.46239577441414, worksheet.costpercapita_ba6, 0.002); end
  def test_costpercapita_bb6; assert_in_epsilon(75.68140565368692, worksheet.costpercapita_bb6, 0.002); end
  def test_costpercapita_bc6; assert_in_epsilon(109.6211022355409, worksheet.costpercapita_bc6, 0.002); end
  def test_costpercapita_bd6; assert_in_epsilon(114.18864816202179, worksheet.costpercapita_bd6, 0.002); end
  def test_costpercapita_be6; assert_in_epsilon(137.02637779442614, worksheet.costpercapita_be6, 0.002); end
  def test_costpercapita_bf6; assert_in_epsilon(159.8641074268305, worksheet.costpercapita_bf6, 0.002); end
  def test_costpercapita_bg6; assert_in_epsilon(182.70183705923483, worksheet.costpercapita_bg6, 0.002); end
  def test_costpercapita_bi6; assert_in_delta(0.0, (worksheet.costpercapita_bi6||0), 0.002); end
  def test_costpercapita_bj6; assert_in_delta(0.0, (worksheet.costpercapita_bj6||0), 0.002); end
  def test_costpercapita_bk6; assert_in_delta(0.0, (worksheet.costpercapita_bk6||0), 0.002); end
  def test_costpercapita_bl6; assert_in_delta(0.0, (worksheet.costpercapita_bl6||0), 0.002); end
  def test_costpercapita_bm6; assert_in_delta(0.0, (worksheet.costpercapita_bm6||0), 0.002); end
  def test_costpercapita_bn6; assert_in_delta(0.0, (worksheet.costpercapita_bn6||0), 0.002); end
  def test_costpercapita_bo6; assert_in_delta(0.0, (worksheet.costpercapita_bo6||0), 0.002); end
  def test_costpercapita_bp6; assert_in_delta(0.0, (worksheet.costpercapita_bp6||0), 0.002); end
  def test_costpercapita_bq6; assert_in_delta(0.0, (worksheet.costpercapita_bq6||0), 0.002); end
  def test_costpercapita_bs6; assert_in_delta(0.049502317973594875, worksheet.costpercapita_bs6, 0.002); end
  def test_costpercapita_bt6; assert_in_epsilon(7.130827801964341, worksheet.costpercapita_bt6, 0.002); end
  def test_costpercapita_bu6; assert_in_epsilon(64.12604713574899, worksheet.costpercapita_bu6, 0.002); end
  def test_costpercapita_bv6; assert_in_epsilon(105.18060335421586, worksheet.costpercapita_bv6, 0.002); end
  def test_costpercapita_bw6; assert_in_epsilon(153.0339229060092, worksheet.costpercapita_bw6, 0.002); end
  def test_costpercapita_bx6; assert_in_epsilon(159.41033636042627, worksheet.costpercapita_bx6, 0.002); end
  def test_costpercapita_by6; assert_in_epsilon(191.2924036325115, worksheet.costpercapita_by6, 0.002); end
  def test_costpercapita_bz6; assert_in_epsilon(223.17447090459675, worksheet.costpercapita_bz6, 0.002); end
  def test_costpercapita_ca6; assert_in_epsilon(255.05653817668198, worksheet.costpercapita_ca6, 0.002); end
  def test_costpercapita_cc6; assert_in_epsilon(128.7171836211254, worksheet.costpercapita_cc6, 0.002); end
  def test_costpercapita_cd6; assert_in_epsilon(2314.8847577744705, worksheet.costpercapita_cd6, 0.002); end
  def test_costpercapita_cf6; assert_in_delta(0.003629171117142193, worksheet.costpercapita_cf6, 0.002); end
  def test_costpercapita_cg6; assert_in_delta(0.5080163755308325, worksheet.costpercapita_cg6, 0.002); end
  def test_costpercapita_ch6; assert_in_epsilon(4.5079998428469, worksheet.costpercapita_ch6, 0.002); end
  def test_costpercapita_ci6; assert_in_epsilon(7.342965404748451, worksheet.costpercapita_ci6, 0.002); end
  def test_costpercapita_cj6; assert_in_epsilon(10.635954160647323, worksheet.costpercapita_cj6, 0.002); end
  def test_costpercapita_ck6; assert_in_epsilon(11.079118917340962, worksheet.costpercapita_ck6, 0.002); end
  def test_costpercapita_cl6; assert_in_epsilon(13.29494270080915, worksheet.costpercapita_cl6, 0.002); end
  def test_costpercapita_cm6; assert_in_epsilon(15.510766484277356, worksheet.costpercapita_cm6, 0.002); end
  def test_costpercapita_cn6; assert_in_epsilon(17.726590267745543, worksheet.costpercapita_cn6, 0.002); end
  def test_costpercapita_cp6; assert_in_epsilon(8.956664813895962, worksheet.costpercapita_cp6, 0.002); end
  def test_costpercapita_cq6; assert_in_epsilon(161.21793401161992, worksheet.costpercapita_cq6, 0.002); end
  def test_costpercapita_cr6; assert_equal("ok", worksheet.costpercapita_cr6); end
  def test_costpercapita_a7; assert_equal("RE.b", worksheet.costpercapita_a7); end
  def test_costpercapita_b7; assert_equal("Hydroelectric", worksheet.costpercapita_b7); end
  def test_costpercapita_c7; assert_equal("Electricity", worksheet.costpercapita_c7); end
  def test_costpercapita_e7; assert_in_delta(0.0, (worksheet.costpercapita_e7||0), 0.002); end
  def test_costpercapita_f7; assert_in_delta(0.0, (worksheet.costpercapita_f7||0), 0.002); end
  def test_costpercapita_g7; assert_in_delta(0.0, (worksheet.costpercapita_g7||0), 0.002); end
  def test_costpercapita_h7; assert_in_epsilon(3.3855021702449584, worksheet.costpercapita_h7, 0.002); end
  def test_costpercapita_i7; assert_in_epsilon(6.314759586538929, worksheet.costpercapita_i7, 0.002); end
  def test_costpercapita_j7; assert_in_epsilon(9.244017002832898, worksheet.costpercapita_j7, 0.002); end
  def test_costpercapita_k7; assert_in_epsilon(12.17327441912687, worksheet.costpercapita_k7, 0.002); end
  def test_costpercapita_l7; assert_in_epsilon(15.102531835420839, worksheet.costpercapita_l7, 0.002); end
  def test_costpercapita_m7; assert_in_epsilon(18.031789251714812, worksheet.costpercapita_m7, 0.002); end
  def test_costpercapita_o7; assert_in_delta(0.0, (worksheet.costpercapita_o7||0), 0.002); end
  def test_costpercapita_p7; assert_in_delta(0.0, (worksheet.costpercapita_p7||0), 0.002); end
  def test_costpercapita_q7; assert_in_delta(0.0, (worksheet.costpercapita_q7||0), 0.002); end
  def test_costpercapita_r7; assert_in_epsilon(3.5382342594082394, worksheet.costpercapita_r7, 0.002); end
  def test_costpercapita_s7; assert_in_epsilon(6.59964093521819, worksheet.costpercapita_s7, 0.002); end
  def test_costpercapita_t7; assert_in_epsilon(9.66104761102814, worksheet.costpercapita_t7, 0.002); end
  def test_costpercapita_u7; assert_in_epsilon(12.72245428683809, worksheet.costpercapita_u7, 0.002); end
  def test_costpercapita_v7; assert_in_epsilon(15.78386096264804, worksheet.costpercapita_v7, 0.002); end
  def test_costpercapita_w7; assert_in_epsilon(18.845267638457994, worksheet.costpercapita_w7, 0.002); end
  def test_costpercapita_y7; assert_in_delta(0.0, (worksheet.costpercapita_y7||0), 0.002); end
  def test_costpercapita_z7; assert_in_delta(0.0, (worksheet.costpercapita_z7||0), 0.002); end
  def test_costpercapita_aa7; assert_in_delta(0.0, (worksheet.costpercapita_aa7||0), 0.002); end
  def test_costpercapita_ab7; assert_in_delta(0.0, (worksheet.costpercapita_ab7||0), 0.002); end
  def test_costpercapita_ac7; assert_in_delta(0.0, (worksheet.costpercapita_ac7||0), 0.002); end
  def test_costpercapita_ad7; assert_in_delta(0.0, (worksheet.costpercapita_ad7||0), 0.002); end
  def test_costpercapita_ae7; assert_in_delta(0.0, (worksheet.costpercapita_ae7||0), 0.002); end
  def test_costpercapita_af7; assert_in_delta(0.0, (worksheet.costpercapita_af7||0), 0.002); end
  def test_costpercapita_ag7; assert_in_delta(0.0, (worksheet.costpercapita_ag7||0), 0.002); end
  def test_costpercapita_ai7; assert_in_delta(0.0, (worksheet.costpercapita_ai7||0), 0.002); end
  def test_costpercapita_aj7; assert_in_delta(0.0, (worksheet.costpercapita_aj7||0), 0.002); end
  def test_costpercapita_ak7; assert_in_delta(0.0, (worksheet.costpercapita_ak7||0), 0.002); end
  def test_costpercapita_al7; assert_in_epsilon(6.923736429653198, worksheet.costpercapita_al7, 0.002); end
  def test_costpercapita_am7; assert_in_epsilon(12.91440052175712, worksheet.costpercapita_am7, 0.002); end
  def test_costpercapita_an7; assert_in_epsilon(18.905064613861036, worksheet.costpercapita_an7, 0.002); end
  def test_costpercapita_ao7; assert_in_epsilon(24.89572870596496, worksheet.costpercapita_ao7, 0.002); end
  def test_costpercapita_ap7; assert_in_epsilon(30.88639279806888, worksheet.costpercapita_ap7, 0.002); end
  def test_costpercapita_aq7; assert_in_epsilon(36.8770568901728, worksheet.costpercapita_aq7, 0.002); end
  def test_costpercapita_as7; assert_in_epsilon(14.600264439942, worksheet.costpercapita_as7, 0.002); end
  def test_costpercapita_at7; assert_in_epsilon(233.8052014905125, worksheet.costpercapita_at7, 0.002); end
  def test_costpercapita_av7; assert_in_delta(0.0, (worksheet.costpercapita_av7||0), 0.002); end
  def test_costpercapita_aw7; assert_in_epsilon(5.0, worksheet.costpercapita_aw7, 0.002); end
  def test_costpercapita_ay7; assert_in_delta(0.0, (worksheet.costpercapita_ay7||0), 0.002); end
  def test_costpercapita_az7; assert_in_delta(0.0, (worksheet.costpercapita_az7||0), 0.002); end
  def test_costpercapita_ba7; assert_in_delta(0.0, (worksheet.costpercapita_ba7||0), 0.002); end
  def test_costpercapita_bb7; assert_in_epsilon(3.881978164006318, worksheet.costpercapita_bb7, 0.002); end
  def test_costpercapita_bc7; assert_in_epsilon(7.240804345465828, worksheet.costpercapita_bc7, 0.002); end
  def test_costpercapita_bd7; assert_in_epsilon(10.599630526925337, worksheet.costpercapita_bd7, 0.002); end
  def test_costpercapita_be7; assert_in_epsilon(13.958456708384848, worksheet.costpercapita_be7, 0.002); end
  def test_costpercapita_bf7; assert_in_epsilon(17.317282889844357, worksheet.costpercapita_bf7, 0.002); end
  def test_costpercapita_bg7; assert_in_epsilon(20.67610907130387, worksheet.costpercapita_bg7, 0.002); end
  def test_costpercapita_bi7; assert_in_delta(0.0, (worksheet.costpercapita_bi7||0), 0.002); end
  def test_costpercapita_bj7; assert_in_delta(0.0, (worksheet.costpercapita_bj7||0), 0.002); end
  def test_costpercapita_bk7; assert_in_delta(0.0, (worksheet.costpercapita_bk7||0), 0.002); end
  def test_costpercapita_bl7; assert_in_delta(0.0, (worksheet.costpercapita_bl7||0), 0.002); end
  def test_costpercapita_bm7; assert_in_delta(0.0, (worksheet.costpercapita_bm7||0), 0.002); end
  def test_costpercapita_bn7; assert_in_delta(0.0, (worksheet.costpercapita_bn7||0), 0.002); end
  def test_costpercapita_bo7; assert_in_delta(0.0, (worksheet.costpercapita_bo7||0), 0.002); end
  def test_costpercapita_bp7; assert_in_delta(0.0, (worksheet.costpercapita_bp7||0), 0.002); end
  def test_costpercapita_bq7; assert_in_delta(0.0, (worksheet.costpercapita_bq7||0), 0.002); end
  def test_costpercapita_bs7; assert_in_delta(0.0, (worksheet.costpercapita_bs7||0), 0.002); end
  def test_costpercapita_bt7; assert_in_delta(0.0, (worksheet.costpercapita_bt7||0), 0.002); end
  def test_costpercapita_bu7; assert_in_delta(0.0, (worksheet.costpercapita_bu7||0), 0.002); end
  def test_costpercapita_bv7; assert_in_epsilon(7.420212423414558, worksheet.costpercapita_bv7, 0.002); end
  def test_costpercapita_bw7; assert_in_epsilon(13.840445280684017, worksheet.costpercapita_bw7, 0.002); end
  def test_costpercapita_bx7; assert_in_epsilon(20.260678137953473, worksheet.costpercapita_bx7, 0.002); end
  def test_costpercapita_by7; assert_in_epsilon(26.680910995222938, worksheet.costpercapita_by7, 0.002); end
  def test_costpercapita_bz7; assert_in_epsilon(33.10114385249239, worksheet.costpercapita_bz7, 0.002); end
  def test_costpercapita_ca7; assert_in_epsilon(39.52137670976186, worksheet.costpercapita_ca7, 0.002); end
  def test_costpercapita_cc7; assert_in_epsilon(15.647196377725471, worksheet.costpercapita_cc7, 0.002); end
  def test_costpercapita_cd7; assert_in_epsilon(250.57052335623683, worksheet.costpercapita_cd7, 0.002); end
  def test_costpercapita_cf7; assert_in_delta(0.0, (worksheet.costpercapita_cf7||0), 0.002); end
  def test_costpercapita_cg7; assert_in_delta(0.0, (worksheet.costpercapita_cg7||0), 0.002); end
  def test_costpercapita_ch7; assert_in_delta(0.0, (worksheet.costpercapita_ch7||0), 0.002); end
  def test_costpercapita_ci7; assert_in_delta(0.4964759937613596, worksheet.costpercapita_ci7, 0.002); end
  def test_costpercapita_cj7; assert_in_delta(0.9260447589268994, worksheet.costpercapita_cj7, 0.002); end
  def test_costpercapita_ck7; assert_in_epsilon(1.3556135240924376, worksheet.costpercapita_ck7, 0.002); end
  def test_costpercapita_cl7; assert_in_epsilon(1.785182289257978, worksheet.costpercapita_cl7, 0.002); end
  def test_costpercapita_cm7; assert_in_epsilon(2.214751054423516, worksheet.costpercapita_cm7, 0.002); end
  def test_costpercapita_cn7; assert_in_epsilon(2.6443198195890565, worksheet.costpercapita_cn7, 0.002); end
  def test_costpercapita_cp7; assert_in_epsilon(1.046931937783472, worksheet.costpercapita_cp7, 0.002); end
  def test_costpercapita_cq7; assert_in_epsilon(16.765321865724353, worksheet.costpercapita_cq7, 0.002); end
  def test_costpercapita_cr7; assert_equal("ok", worksheet.costpercapita_cr7); end
  def test_costpercapita_a8; assert_equal("RE.c", worksheet.costpercapita_a8); end
  def test_costpercapita_b8; assert_equal("CSP", worksheet.costpercapita_b8); end
  def test_costpercapita_c8; assert_equal("Electricity", worksheet.costpercapita_c8); end
  def test_costpercapita_e8; assert_in_delta(0.0, (worksheet.costpercapita_e8||0), 0.002); end
  def test_costpercapita_f8; assert_in_epsilon(1.244601054160529, worksheet.costpercapita_f8, 0.002); end
  def test_costpercapita_g8; assert_in_epsilon(285.3820577544699, worksheet.costpercapita_g8, 0.002); end
  def test_costpercapita_h8; assert_in_epsilon(527.7664500830182, worksheet.costpercapita_h8, 0.002); end
  def test_costpercapita_i8; assert_in_epsilon(753.8339092091215, worksheet.costpercapita_i8, 0.002); end
  def test_costpercapita_j8; assert_in_epsilon(942.292386511402, worksheet.costpercapita_j8, 0.002); end
  def test_costpercapita_k8; assert_in_epsilon(1130.7508638136824, worksheet.costpercapita_k8, 0.002); end
  def test_costpercapita_l8; assert_in_epsilon(1319.2093411159628, worksheet.costpercapita_l8, 0.002); end
  def test_costpercapita_m8; assert_in_epsilon(1507.667818418243, worksheet.costpercapita_m8, 0.002); end
  def test_costpercapita_o8; assert_in_delta(0.0, (worksheet.costpercapita_o8||0), 0.002); end
  def test_costpercapita_p8; assert_in_delta(0.6579245613828018, worksheet.costpercapita_p8, 0.002); end
  def test_costpercapita_q8; assert_in_epsilon(200.59388849271198, worksheet.costpercapita_q8, 0.002); end
  def test_costpercapita_r8; assert_in_epsilon(400.5298524240412, worksheet.costpercapita_r8, 0.002); end
  def test_costpercapita_s8; assert_in_epsilon(600.4658163553704, worksheet.costpercapita_s8, 0.002); end
  def test_costpercapita_t8; assert_in_epsilon(750.582270444213, worksheet.costpercapita_t8, 0.002); end
  def test_costpercapita_u8; assert_in_epsilon(900.6987245330556, worksheet.costpercapita_u8, 0.002); end
  def test_costpercapita_v8; assert_in_epsilon(1050.8151786218982, worksheet.costpercapita_v8, 0.002); end
  def test_costpercapita_w8; assert_in_epsilon(1200.9316327107408, worksheet.costpercapita_w8, 0.002); end
  def test_costpercapita_y8; assert_in_delta(0.0, (worksheet.costpercapita_y8||0), 0.002); end
  def test_costpercapita_z8; assert_in_delta(0.0, (worksheet.costpercapita_z8||0), 0.002); end
  def test_costpercapita_aa8; assert_in_delta(0.0, (worksheet.costpercapita_aa8||0), 0.002); end
  def test_costpercapita_ab8; assert_in_delta(0.0, (worksheet.costpercapita_ab8||0), 0.002); end
  def test_costpercapita_ac8; assert_in_delta(0.0, (worksheet.costpercapita_ac8||0), 0.002); end
  def test_costpercapita_ad8; assert_in_delta(0.0, (worksheet.costpercapita_ad8||0), 0.002); end
  def test_costpercapita_ae8; assert_in_delta(0.0, (worksheet.costpercapita_ae8||0), 0.002); end
  def test_costpercapita_af8; assert_in_delta(0.0, (worksheet.costpercapita_af8||0), 0.002); end
  def test_costpercapita_ag8; assert_in_delta(0.0, (worksheet.costpercapita_ag8||0), 0.002); end
  def test_costpercapita_ai8; assert_in_delta(0.0, (worksheet.costpercapita_ai8||0), 0.002); end
  def test_costpercapita_aj8; assert_in_epsilon(1.9025256155433308, worksheet.costpercapita_aj8, 0.002); end
  def test_costpercapita_ak8; assert_in_epsilon(485.9759462471819, worksheet.costpercapita_ak8, 0.002); end
  def test_costpercapita_al8; assert_in_epsilon(928.2963025070594, worksheet.costpercapita_al8, 0.002); end
  def test_costpercapita_am8; assert_in_epsilon(1354.2997255644918, worksheet.costpercapita_am8, 0.002); end
  def test_costpercapita_an8; assert_in_epsilon(1692.874656955615, worksheet.costpercapita_an8, 0.002); end
  def test_costpercapita_ao8; assert_in_epsilon(2031.449588346738, worksheet.costpercapita_ao8, 0.002); end
  def test_costpercapita_ap8; assert_in_epsilon(2370.024519737861, worksheet.costpercapita_ap8, 0.002); end
  def test_costpercapita_aq8; assert_in_epsilon(2708.5994511289837, worksheet.costpercapita_aq8, 0.002); end
  def test_costpercapita_as8; assert_in_epsilon(1285.9358573448303, worksheet.costpercapita_as8, 0.002); end
  def test_costpercapita_at8; assert_in_epsilon(22336.855845963066, worksheet.costpercapita_at8, 0.002); end
  def test_costpercapita_av8; assert_in_delta(0.0, (worksheet.costpercapita_av8||0), 0.002); end
  def test_costpercapita_aw8; assert_in_epsilon(5.0, worksheet.costpercapita_aw8, 0.002); end
  def test_costpercapita_ay8; assert_in_delta(0.0, (worksheet.costpercapita_ay8||0), 0.002); end
  def test_costpercapita_az8; assert_in_epsilon(1.4271188946840445, worksheet.costpercapita_az8, 0.002); end
  def test_costpercapita_ba8; assert_in_epsilon(327.23267063269486, worksheet.costpercapita_ba8, 0.002); end
  def test_costpercapita_bb8; assert_in_epsilon(605.1621685326427, worksheet.costpercapita_bb8, 0.002); end
  def test_costpercapita_bc8; assert_in_epsilon(864.381893048851, worksheet.costpercapita_bc8, 0.002); end
  def test_costpercapita_bd8; assert_in_epsilon(1080.4773663110639, worksheet.costpercapita_bd8, 0.002); end
  def test_costpercapita_be8; assert_in_epsilon(1296.5728395732767, worksheet.costpercapita_be8, 0.002); end
  def test_costpercapita_bf8; assert_in_epsilon(1512.6683128354896, worksheet.costpercapita_bf8, 0.002); end
  def test_costpercapita_bg8; assert_in_epsilon(1728.763786097702, worksheet.costpercapita_bg8, 0.002); end
  def test_costpercapita_bi8; assert_in_delta(0.0, (worksheet.costpercapita_bi8||0), 0.002); end
  def test_costpercapita_bj8; assert_in_delta(0.0, (worksheet.costpercapita_bj8||0), 0.002); end
  def test_costpercapita_bk8; assert_in_delta(0.0, (worksheet.costpercapita_bk8||0), 0.002); end
  def test_costpercapita_bl8; assert_in_delta(0.0, (worksheet.costpercapita_bl8||0), 0.002); end
  def test_costpercapita_bm8; assert_in_delta(0.0, (worksheet.costpercapita_bm8||0), 0.002); end
  def test_costpercapita_bn8; assert_in_delta(0.0, (worksheet.costpercapita_bn8||0), 0.002); end
  def test_costpercapita_bo8; assert_in_delta(0.0, (worksheet.costpercapita_bo8||0), 0.002); end
  def test_costpercapita_bp8; assert_in_delta(0.0, (worksheet.costpercapita_bp8||0), 0.002); end
  def test_costpercapita_bq8; assert_in_delta(0.0, (worksheet.costpercapita_bq8||0), 0.002); end
  def test_costpercapita_bs8; assert_in_delta(0.0, (worksheet.costpercapita_bs8||0), 0.002); end
  def test_costpercapita_bt8; assert_in_epsilon(2.0850434560668463, worksheet.costpercapita_bt8, 0.002); end
  def test_costpercapita_bu8; assert_in_epsilon(527.8265591254069, worksheet.costpercapita_bu8, 0.002); end
  def test_costpercapita_bv8; assert_in_epsilon(1005.6920209566838, worksheet.costpercapita_bv8, 0.002); end
  def test_costpercapita_bw8; assert_in_epsilon(1464.8477094042214, worksheet.costpercapita_bw8, 0.002); end
  def test_costpercapita_bx8; assert_in_epsilon(1831.059636755277, worksheet.costpercapita_bx8, 0.002); end
  def test_costpercapita_by8; assert_in_epsilon(2197.2715641063323, worksheet.costpercapita_by8, 0.002); end
  def test_costpercapita_bz8; assert_in_epsilon(2563.4834914573876, worksheet.costpercapita_bz8, 0.002); end
  def test_costpercapita_ca8; assert_in_epsilon(2929.695418808443, worksheet.costpercapita_ca8, 0.002); end
  def test_costpercapita_cc8; assert_in_epsilon(1391.3290493410907, worksheet.costpercapita_cc8, 0.002); end
  def test_costpercapita_cd8; assert_in_epsilon(24172.84195348744, worksheet.costpercapita_cd8, 0.002); end
  def test_costpercapita_cf8; assert_in_delta(0.0, (worksheet.costpercapita_cf8||0), 0.002); end
  def test_costpercapita_cg8; assert_in_delta(0.1825178405235153, worksheet.costpercapita_cg8, 0.002); end
  def test_costpercapita_ch8; assert_in_epsilon(41.85061287822495, worksheet.costpercapita_ch8, 0.002); end
  def test_costpercapita_ci8; assert_in_epsilon(77.39571844962444, worksheet.costpercapita_ci8, 0.002); end
  def test_costpercapita_cj8; assert_in_epsilon(110.5479838397295, worksheet.costpercapita_cj8, 0.002); end
  def test_costpercapita_ck8; assert_in_epsilon(138.1849797996619, worksheet.costpercapita_ck8, 0.002); end
  def test_costpercapita_cl8; assert_in_epsilon(165.82197575959447, worksheet.costpercapita_cl8, 0.002); end
  def test_costpercapita_cm8; assert_in_epsilon(193.45897171952672, worksheet.costpercapita_cm8, 0.002); end
  def test_costpercapita_cn8; assert_in_epsilon(221.095967679459, worksheet.costpercapita_cn8, 0.002); end
  def test_costpercapita_cp8; assert_in_epsilon(105.3931919962605, worksheet.costpercapita_cp8, 0.002); end
  def test_costpercapita_cq8; assert_in_epsilon(1835.9861075243748, worksheet.costpercapita_cq8, 0.002); end
  def test_costpercapita_cr8; assert_equal("ok", worksheet.costpercapita_cr8); end
  def test_costpercapita_a9; assert_equal("RE.d", worksheet.costpercapita_a9); end
  def test_costpercapita_b9; assert_equal("Decentralized PV", worksheet.costpercapita_b9); end
  def test_costpercapita_c9; assert_equal("Electricity", worksheet.costpercapita_c9); end
  def test_costpercapita_e9; assert_in_delta(0.3382177619391267, worksheet.costpercapita_e9, 0.002); end
  def test_costpercapita_f9; assert_in_epsilon(3.114168066183661, worksheet.costpercapita_f9, 0.002); end
  def test_costpercapita_g9; assert_in_epsilon(11.571272734082337, worksheet.costpercapita_g9, 0.002); end
  def test_costpercapita_h9; assert_in_epsilon(27.15910683429991, worksheet.costpercapita_h9, 0.002); end
  def test_costpercapita_i9; assert_in_epsilon(43.009907735244276, worksheet.costpercapita_i9, 0.002); end
  def test_costpercapita_j9; assert_in_epsilon(62.43852632362113, worksheet.costpercapita_j9, 0.002); end
  def test_costpercapita_k9; assert_in_epsilon(78.27811059046594, worksheet.costpercapita_k9, 0.002); end
  def test_costpercapita_l9; assert_in_epsilon(89.7830136910372, worksheet.costpercapita_l9, 0.002); end
  def test_costpercapita_m9; assert_in_epsilon(97.56979929047404, worksheet.costpercapita_m9, 0.002); end
  def test_costpercapita_o9; assert_in_delta(0.06466069960227284, worksheet.costpercapita_o9, 0.002); end
  def test_costpercapita_p9; assert_in_delta(0.9002156382932025, worksheet.costpercapita_p9, 0.002); end
  def test_costpercapita_q9; assert_in_epsilon(4.784768213659149, worksheet.costpercapita_q9, 0.002); end
  def test_costpercapita_r9; assert_in_epsilon(13.17976304710475, worksheet.costpercapita_r9, 0.002); end
  def test_costpercapita_s9; assert_in_epsilon(24.367412565902182, worksheet.costpercapita_s9, 0.002); end
  def test_costpercapita_t9; assert_in_epsilon(35.37476388696974, worksheet.costpercapita_t9, 0.002); end
  def test_costpercapita_u9; assert_in_epsilon(44.34873535137025, worksheet.costpercapita_u9, 0.002); end
  def test_costpercapita_v9; assert_in_epsilon(50.86687815018914, worksheet.costpercapita_v9, 0.002); end
  def test_costpercapita_w9; assert_in_epsilon(55.27850856873613, worksheet.costpercapita_w9, 0.002); end
  def test_costpercapita_y9; assert_in_delta(0.0, (worksheet.costpercapita_y9||0), 0.002); end
  def test_costpercapita_z9; assert_in_delta(0.0, (worksheet.costpercapita_z9||0), 0.002); end
  def test_costpercapita_aa9; assert_in_delta(0.0, (worksheet.costpercapita_aa9||0), 0.002); end
  def test_costpercapita_ab9; assert_in_delta(0.0, (worksheet.costpercapita_ab9||0), 0.002); end
  def test_costpercapita_ac9; assert_in_delta(0.0, (worksheet.costpercapita_ac9||0), 0.002); end
  def test_costpercapita_ad9; assert_in_delta(0.0, (worksheet.costpercapita_ad9||0), 0.002); end
  def test_costpercapita_ae9; assert_in_delta(0.0, (worksheet.costpercapita_ae9||0), 0.002); end
  def test_costpercapita_af9; assert_in_delta(0.0, (worksheet.costpercapita_af9||0), 0.002); end
  def test_costpercapita_ag9; assert_in_delta(0.0, (worksheet.costpercapita_ag9||0), 0.002); end
  def test_costpercapita_ai9; assert_in_delta(0.40287846154139956, worksheet.costpercapita_ai9, 0.002); end
  def test_costpercapita_aj9; assert_in_epsilon(4.014383704476864, worksheet.costpercapita_aj9, 0.002); end
  def test_costpercapita_ak9; assert_in_epsilon(16.356040947741484, worksheet.costpercapita_ak9, 0.002); end
  def test_costpercapita_al9; assert_in_epsilon(40.33886988140466, worksheet.costpercapita_al9, 0.002); end
  def test_costpercapita_am9; assert_in_epsilon(67.37732030114645, worksheet.costpercapita_am9, 0.002); end
  def test_costpercapita_an9; assert_in_epsilon(97.81329021059088, worksheet.costpercapita_an9, 0.002); end
  def test_costpercapita_ao9; assert_in_epsilon(122.6268459418362, worksheet.costpercapita_ao9, 0.002); end
  def test_costpercapita_ap9; assert_in_epsilon(140.64989184122635, worksheet.costpercapita_ap9, 0.002); end
  def test_costpercapita_aq9; assert_in_epsilon(152.84830785921017, worksheet.costpercapita_aq9, 0.002); end
  def test_costpercapita_as9; assert_in_epsilon(71.38086990546384, worksheet.costpercapita_as9, 0.002); end
  def test_costpercapita_at9; assert_in_epsilon(1209.1019028800627, worksheet.costpercapita_at9, 0.002); end
  def test_costpercapita_av9; assert_in_delta(0.0, (worksheet.costpercapita_av9||0), 0.002); end
  def test_costpercapita_aw9; assert_in_epsilon(5.0, worksheet.costpercapita_aw9, 0.002); end
  def test_costpercapita_ay9; assert_in_delta(0.3382177619391267, worksheet.costpercapita_ay9, 0.002); end
  def test_costpercapita_az9; assert_in_epsilon(3.114168066183661, worksheet.costpercapita_az9, 0.002); end
  def test_costpercapita_ba9; assert_in_epsilon(11.571272734082337, worksheet.costpercapita_ba9, 0.002); end
  def test_costpercapita_bb9; assert_in_epsilon(27.15910683429991, worksheet.costpercapita_bb9, 0.002); end
  def test_costpercapita_bc9; assert_in_epsilon(43.009907735244276, worksheet.costpercapita_bc9, 0.002); end
  def test_costpercapita_bd9; assert_in_epsilon(62.43852632362113, worksheet.costpercapita_bd9, 0.002); end
  def test_costpercapita_be9; assert_in_epsilon(78.27811059046594, worksheet.costpercapita_be9, 0.002); end
  def test_costpercapita_bf9; assert_in_epsilon(89.7830136910372, worksheet.costpercapita_bf9, 0.002); end
  def test_costpercapita_bg9; assert_in_epsilon(97.56979929047404, worksheet.costpercapita_bg9, 0.002); end
  def test_costpercapita_bi9; assert_in_delta(0.0, (worksheet.costpercapita_bi9||0), 0.002); end
  def test_costpercapita_bj9; assert_in_delta(0.0, (worksheet.costpercapita_bj9||0), 0.002); end
  def test_costpercapita_bk9; assert_in_delta(0.0, (worksheet.costpercapita_bk9||0), 0.002); end
  def test_costpercapita_bl9; assert_in_delta(0.0, (worksheet.costpercapita_bl9||0), 0.002); end
  def test_costpercapita_bm9; assert_in_delta(0.0, (worksheet.costpercapita_bm9||0), 0.002); end
  def test_costpercapita_bn9; assert_in_delta(0.0, (worksheet.costpercapita_bn9||0), 0.002); end
  def test_costpercapita_bo9; assert_in_delta(0.0, (worksheet.costpercapita_bo9||0), 0.002); end
  def test_costpercapita_bp9; assert_in_delta(0.0, (worksheet.costpercapita_bp9||0), 0.002); end
  def test_costpercapita_bq9; assert_in_delta(0.0, (worksheet.costpercapita_bq9||0), 0.002); end
  def test_costpercapita_bs9; assert_in_delta(0.40287846154139956, worksheet.costpercapita_bs9, 0.002); end
  def test_costpercapita_bt9; assert_in_epsilon(4.014383704476864, worksheet.costpercapita_bt9, 0.002); end
  def test_costpercapita_bu9; assert_in_epsilon(16.356040947741484, worksheet.costpercapita_bu9, 0.002); end
  def test_costpercapita_bv9; assert_in_epsilon(40.33886988140466, worksheet.costpercapita_bv9, 0.002); end
  def test_costpercapita_bw9; assert_in_epsilon(67.37732030114645, worksheet.costpercapita_bw9, 0.002); end
  def test_costpercapita_bx9; assert_in_epsilon(97.81329021059088, worksheet.costpercapita_bx9, 0.002); end
  def test_costpercapita_by9; assert_in_epsilon(122.6268459418362, worksheet.costpercapita_by9, 0.002); end
  def test_costpercapita_bz9; assert_in_epsilon(140.64989184122635, worksheet.costpercapita_bz9, 0.002); end
  def test_costpercapita_ca9; assert_in_epsilon(152.84830785921017, worksheet.costpercapita_ca9, 0.002); end
  def test_costpercapita_cc9; assert_in_epsilon(71.38086990546384, worksheet.costpercapita_cc9, 0.002); end
  def test_costpercapita_cd9; assert_in_epsilon(1209.1019028800627, worksheet.costpercapita_cd9, 0.002); end
  def test_costpercapita_cf9; assert_in_delta(0.0, (worksheet.costpercapita_cf9||0), 0.002); end
  def test_costpercapita_cg9; assert_in_delta(0.0, (worksheet.costpercapita_cg9||0), 0.002); end
  def test_costpercapita_ch9; assert_in_delta(0.0, (worksheet.costpercapita_ch9||0), 0.002); end
  def test_costpercapita_ci9; assert_in_delta(0.0, (worksheet.costpercapita_ci9||0), 0.002); end
  def test_costpercapita_cj9; assert_in_delta(0.0, (worksheet.costpercapita_cj9||0), 0.002); end
  def test_costpercapita_ck9; assert_in_delta(0.0, (worksheet.costpercapita_ck9||0), 0.002); end
  def test_costpercapita_cl9; assert_in_delta(0.0, (worksheet.costpercapita_cl9||0), 0.002); end
  def test_costpercapita_cm9; assert_in_delta(0.0, (worksheet.costpercapita_cm9||0), 0.002); end
  def test_costpercapita_cn9; assert_in_delta(0.0, (worksheet.costpercapita_cn9||0), 0.002); end
  def test_costpercapita_cp9; assert_in_delta(0.0, (worksheet.costpercapita_cp9||0), 0.002); end
  def test_costpercapita_cq9; assert_in_delta(0.0, (worksheet.costpercapita_cq9||0), 0.002); end
  def test_costpercapita_cr9; assert_equal("ok", worksheet.costpercapita_cr9); end
  def test_costpercapita_a10; assert_equal("RE.e", worksheet.costpercapita_a10); end
  def test_costpercapita_b10; assert_equal("Centralized PV", worksheet.costpercapita_b10); end
  def test_costpercapita_c10; assert_equal("Electricity", worksheet.costpercapita_c10); end
  def test_costpercapita_e10; assert_in_delta(0.0, (worksheet.costpercapita_e10||0), 0.002); end
  def test_costpercapita_f10; assert_in_epsilon(3.7503718980047513, worksheet.costpercapita_f10, 0.002); end
  def test_costpercapita_g10; assert_in_epsilon(83.69373962449272, worksheet.costpercapita_g10, 0.002); end
  def test_costpercapita_h10; assert_in_epsilon(140.39589689190612, worksheet.costpercapita_h10, 0.002); end
  def test_costpercapita_i10; assert_in_epsilon(179.42677082017522, worksheet.costpercapita_i10, 0.002); end
  def test_costpercapita_j10; assert_in_epsilon(224.28346352521908, worksheet.costpercapita_j10, 0.002); end
  def test_costpercapita_k10; assert_in_epsilon(269.14015623026285, worksheet.costpercapita_k10, 0.002); end
  def test_costpercapita_l10; assert_in_epsilon(313.9968489353067, worksheet.costpercapita_l10, 0.002); end
  def test_costpercapita_m10; assert_in_epsilon(358.85354164035044, worksheet.costpercapita_m10, 0.002); end
  def test_costpercapita_o10; assert_in_delta(0.0, (worksheet.costpercapita_o10||0), 0.002); end
  def test_costpercapita_p10; assert_in_epsilon(1.4093607737060392, worksheet.costpercapita_p10, 0.002); end
  def test_costpercapita_q10; assert_in_epsilon(44.990012227662824, worksheet.costpercapita_q10, 0.002); end
  def test_costpercapita_r10; assert_in_epsilon(88.5706636816196, worksheet.costpercapita_r10, 0.002); end
  def test_costpercapita_s10; assert_in_epsilon(132.1513151355764, worksheet.costpercapita_s10, 0.002); end
  def test_costpercapita_t10; assert_in_epsilon(165.18914391947052, worksheet.costpercapita_t10, 0.002); end
  def test_costpercapita_u10; assert_in_epsilon(198.22697270336462, worksheet.costpercapita_u10, 0.002); end
  def test_costpercapita_v10; assert_in_epsilon(231.26480148725872, worksheet.costpercapita_v10, 0.002); end
  def test_costpercapita_w10; assert_in_epsilon(264.3026302711528, worksheet.costpercapita_w10, 0.002); end
  def test_costpercapita_y10; assert_in_delta(0.0, (worksheet.costpercapita_y10||0), 0.002); end
  def test_costpercapita_z10; assert_in_delta(0.0, (worksheet.costpercapita_z10||0), 0.002); end
  def test_costpercapita_aa10; assert_in_delta(0.0, (worksheet.costpercapita_aa10||0), 0.002); end
  def test_costpercapita_ab10; assert_in_delta(0.0, (worksheet.costpercapita_ab10||0), 0.002); end
  def test_costpercapita_ac10; assert_in_delta(0.0, (worksheet.costpercapita_ac10||0), 0.002); end
  def test_costpercapita_ad10; assert_in_delta(0.0, (worksheet.costpercapita_ad10||0), 0.002); end
  def test_costpercapita_ae10; assert_in_delta(0.0, (worksheet.costpercapita_ae10||0), 0.002); end
  def test_costpercapita_af10; assert_in_delta(0.0, (worksheet.costpercapita_af10||0), 0.002); end
  def test_costpercapita_ag10; assert_in_delta(0.0, (worksheet.costpercapita_ag10||0), 0.002); end
  def test_costpercapita_ai10; assert_in_delta(0.0, (worksheet.costpercapita_ai10||0), 0.002); end
  def test_costpercapita_aj10; assert_in_epsilon(5.15973267171079, worksheet.costpercapita_aj10, 0.002); end
  def test_costpercapita_ak10; assert_in_epsilon(128.68375185215555, worksheet.costpercapita_ak10, 0.002); end
  def test_costpercapita_al10; assert_in_epsilon(228.96656057352573, worksheet.costpercapita_al10, 0.002); end
  def test_costpercapita_am10; assert_in_epsilon(311.57808595575165, worksheet.costpercapita_am10, 0.002); end
  def test_costpercapita_an10; assert_in_epsilon(389.47260744468963, worksheet.costpercapita_an10, 0.002); end
  def test_costpercapita_ao10; assert_in_epsilon(467.36712893362744, worksheet.costpercapita_ao10, 0.002); end
  def test_costpercapita_ap10; assert_in_epsilon(545.2616504225654, worksheet.costpercapita_ap10, 0.002); end
  def test_costpercapita_aq10; assert_in_epsilon(623.1561719115033, worksheet.costpercapita_aq10, 0.002); end
  def test_costpercapita_as10; assert_in_epsilon(299.9606321961699, worksheet.costpercapita_as10, 0.002); end
  def test_costpercapita_at10; assert_in_epsilon(5264.6019929891145, worksheet.costpercapita_at10, 0.002); end
  def test_costpercapita_av10; assert_in_delta(0.0, (worksheet.costpercapita_av10||0), 0.002); end
  def test_costpercapita_aw10; assert_in_epsilon(5.0, worksheet.costpercapita_aw10, 0.002); end
  def test_costpercapita_ay10; assert_in_delta(0.0, (worksheet.costpercapita_ay10||0), 0.002); end
  def test_costpercapita_az10; assert_in_epsilon(3.7503718980047513, worksheet.costpercapita_az10, 0.002); end
  def test_costpercapita_ba10; assert_in_epsilon(83.69373962449272, worksheet.costpercapita_ba10, 0.002); end
  def test_costpercapita_bb10; assert_in_epsilon(140.39589689190612, worksheet.costpercapita_bb10, 0.002); end
  def test_costpercapita_bc10; assert_in_epsilon(179.42677082017522, worksheet.costpercapita_bc10, 0.002); end
  def test_costpercapita_bd10; assert_in_epsilon(224.28346352521908, worksheet.costpercapita_bd10, 0.002); end
  def test_costpercapita_be10; assert_in_epsilon(269.14015623026285, worksheet.costpercapita_be10, 0.002); end
  def test_costpercapita_bf10; assert_in_epsilon(313.9968489353067, worksheet.costpercapita_bf10, 0.002); end
  def test_costpercapita_bg10; assert_in_epsilon(358.85354164035044, worksheet.costpercapita_bg10, 0.002); end
  def test_costpercapita_bi10; assert_in_delta(0.0, (worksheet.costpercapita_bi10||0), 0.002); end
  def test_costpercapita_bj10; assert_in_delta(0.0, (worksheet.costpercapita_bj10||0), 0.002); end
  def test_costpercapita_bk10; assert_in_delta(0.0, (worksheet.costpercapita_bk10||0), 0.002); end
  def test_costpercapita_bl10; assert_in_delta(0.0, (worksheet.costpercapita_bl10||0), 0.002); end
  def test_costpercapita_bm10; assert_in_delta(0.0, (worksheet.costpercapita_bm10||0), 0.002); end
  def test_costpercapita_bn10; assert_in_delta(0.0, (worksheet.costpercapita_bn10||0), 0.002); end
  def test_costpercapita_bo10; assert_in_delta(0.0, (worksheet.costpercapita_bo10||0), 0.002); end
  def test_costpercapita_bp10; assert_in_delta(0.0, (worksheet.costpercapita_bp10||0), 0.002); end
  def test_costpercapita_bq10; assert_in_delta(0.0, (worksheet.costpercapita_bq10||0), 0.002); end
  def test_costpercapita_bs10; assert_in_delta(0.0, (worksheet.costpercapita_bs10||0), 0.002); end
  def test_costpercapita_bt10; assert_in_epsilon(5.15973267171079, worksheet.costpercapita_bt10, 0.002); end
  def test_costpercapita_bu10; assert_in_epsilon(128.68375185215555, worksheet.costpercapita_bu10, 0.002); end
  def test_costpercapita_bv10; assert_in_epsilon(228.96656057352573, worksheet.costpercapita_bv10, 0.002); end
  def test_costpercapita_bw10; assert_in_epsilon(311.57808595575165, worksheet.costpercapita_bw10, 0.002); end
  def test_costpercapita_bx10; assert_in_epsilon(389.47260744468963, worksheet.costpercapita_bx10, 0.002); end
  def test_costpercapita_by10; assert_in_epsilon(467.36712893362744, worksheet.costpercapita_by10, 0.002); end
  def test_costpercapita_bz10; assert_in_epsilon(545.2616504225654, worksheet.costpercapita_bz10, 0.002); end
  def test_costpercapita_ca10; assert_in_epsilon(623.1561719115033, worksheet.costpercapita_ca10, 0.002); end
  def test_costpercapita_cc10; assert_in_epsilon(299.9606321961699, worksheet.costpercapita_cc10, 0.002); end
  def test_costpercapita_cd10; assert_in_epsilon(5264.6019929891145, worksheet.costpercapita_cd10, 0.002); end
  def test_costpercapita_cf10; assert_in_delta(0.0, (worksheet.costpercapita_cf10||0), 0.002); end
  def test_costpercapita_cg10; assert_in_delta(0.0, (worksheet.costpercapita_cg10||0), 0.002); end
  def test_costpercapita_ch10; assert_in_delta(0.0, (worksheet.costpercapita_ch10||0), 0.002); end
  def test_costpercapita_ci10; assert_in_delta(0.0, (worksheet.costpercapita_ci10||0), 0.002); end
  def test_costpercapita_cj10; assert_in_delta(0.0, (worksheet.costpercapita_cj10||0), 0.002); end
  def test_costpercapita_ck10; assert_in_delta(0.0, (worksheet.costpercapita_ck10||0), 0.002); end
  def test_costpercapita_cl10; assert_in_delta(0.0, (worksheet.costpercapita_cl10||0), 0.002); end
  def test_costpercapita_cm10; assert_in_delta(0.0, (worksheet.costpercapita_cm10||0), 0.002); end
  def test_costpercapita_cn10; assert_in_delta(0.0, (worksheet.costpercapita_cn10||0), 0.002); end
  def test_costpercapita_cp10; assert_in_delta(0.0, (worksheet.costpercapita_cp10||0), 0.002); end
  def test_costpercapita_cq10; assert_in_delta(0.0, (worksheet.costpercapita_cq10||0), 0.002); end
  def test_costpercapita_cr10; assert_equal("ok", worksheet.costpercapita_cr10); end
  def test_costpercapita_a11; assert_equal("ElcDSB.s", worksheet.costpercapita_a11); end
  def test_costpercapita_b11; assert_equal("Pumped Storage", worksheet.costpercapita_b11); end
  def test_costpercapita_c11; assert_equal("Electricity", worksheet.costpercapita_c11); end
  def test_costpercapita_e11; assert_in_delta(0.0, (worksheet.costpercapita_e11||0), 0.002); end
  def test_costpercapita_f11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_f11, 0.002); end
  def test_costpercapita_g11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_g11, 0.002); end
  def test_costpercapita_h11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_h11, 0.002); end
  def test_costpercapita_i11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_i11, 0.002); end
  def test_costpercapita_j11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_j11, 0.002); end
  def test_costpercapita_k11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_k11, 0.002); end
  def test_costpercapita_l11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_l11, 0.002); end
  def test_costpercapita_m11; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_m11, 0.002); end
  def test_costpercapita_o11; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_o11, 0.002); end
  def test_costpercapita_p11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_p11, 0.002); end
  def test_costpercapita_q11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_q11, 0.002); end
  def test_costpercapita_r11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_r11, 0.002); end
  def test_costpercapita_s11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_s11, 0.002); end
  def test_costpercapita_t11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_t11, 0.002); end
  def test_costpercapita_u11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_u11, 0.002); end
  def test_costpercapita_v11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_v11, 0.002); end
  def test_costpercapita_w11; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_w11, 0.002); end
  def test_costpercapita_y11; assert_in_delta(0.0, (worksheet.costpercapita_y11||0), 0.002); end
  def test_costpercapita_z11; assert_in_delta(0.0, (worksheet.costpercapita_z11||0), 0.002); end
  def test_costpercapita_aa11; assert_in_delta(0.0, (worksheet.costpercapita_aa11||0), 0.002); end
  def test_costpercapita_ab11; assert_in_delta(0.0, (worksheet.costpercapita_ab11||0), 0.002); end
  def test_costpercapita_ac11; assert_in_delta(0.0, (worksheet.costpercapita_ac11||0), 0.002); end
  def test_costpercapita_ad11; assert_in_delta(0.0, (worksheet.costpercapita_ad11||0), 0.002); end
  def test_costpercapita_ae11; assert_in_delta(0.0, (worksheet.costpercapita_ae11||0), 0.002); end
  def test_costpercapita_af11; assert_in_delta(0.0, (worksheet.costpercapita_af11||0), 0.002); end
  def test_costpercapita_ag11; assert_in_delta(0.0, (worksheet.costpercapita_ag11||0), 0.002); end
  def test_costpercapita_ai11; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_ai11, 0.002); end
  def test_costpercapita_aj11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_aj11, 0.002); end
  def test_costpercapita_ak11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ak11, 0.002); end
  def test_costpercapita_al11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_al11, 0.002); end
  def test_costpercapita_am11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_am11, 0.002); end
  def test_costpercapita_an11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_an11, 0.002); end
  def test_costpercapita_ao11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ao11, 0.002); end
  def test_costpercapita_ap11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ap11, 0.002); end
  def test_costpercapita_aq11; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_aq11, 0.002); end
  def test_costpercapita_as11; assert_in_epsilon(11.90548499948826, worksheet.costpercapita_as11, 0.002); end
  def test_costpercapita_at11; assert_in_epsilon(260.9280183723279, worksheet.costpercapita_at11, 0.002); end
  def test_costpercapita_av11; assert_in_delta(0.0, (worksheet.costpercapita_av11||0), 0.002); end
  def test_costpercapita_aw11; assert_in_epsilon(5.0, worksheet.costpercapita_aw11, 0.002); end
  def test_costpercapita_ay11; assert_in_delta(0.0, (worksheet.costpercapita_ay11||0), 0.002); end
  def test_costpercapita_az11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_az11, 0.002); end
  def test_costpercapita_ba11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_ba11, 0.002); end
  def test_costpercapita_bb11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_bb11, 0.002); end
  def test_costpercapita_bc11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_bc11, 0.002); end
  def test_costpercapita_bd11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_bd11, 0.002); end
  def test_costpercapita_be11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_be11, 0.002); end
  def test_costpercapita_bf11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_bf11, 0.002); end
  def test_costpercapita_bg11; assert_in_epsilon(4.696371668313889, worksheet.costpercapita_bg11, 0.002); end
  def test_costpercapita_bi11; assert_in_delta(0.0, (worksheet.costpercapita_bi11||0), 0.002); end
  def test_costpercapita_bj11; assert_in_delta(0.0, (worksheet.costpercapita_bj11||0), 0.002); end
  def test_costpercapita_bk11; assert_in_delta(0.0, (worksheet.costpercapita_bk11||0), 0.002); end
  def test_costpercapita_bl11; assert_in_delta(0.0, (worksheet.costpercapita_bl11||0), 0.002); end
  def test_costpercapita_bm11; assert_in_delta(0.0, (worksheet.costpercapita_bm11||0), 0.002); end
  def test_costpercapita_bn11; assert_in_delta(0.0, (worksheet.costpercapita_bn11||0), 0.002); end
  def test_costpercapita_bo11; assert_in_delta(0.0, (worksheet.costpercapita_bo11||0), 0.002); end
  def test_costpercapita_bp11; assert_in_delta(0.0, (worksheet.costpercapita_bp11||0), 0.002); end
  def test_costpercapita_bq11; assert_in_delta(0.0, (worksheet.costpercapita_bq11||0), 0.002); end
  def test_costpercapita_bs11; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_bs11, 0.002); end
  def test_costpercapita_bt11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_bt11, 0.002); end
  def test_costpercapita_bu11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_bu11, 0.002); end
  def test_costpercapita_bv11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_bv11, 0.002); end
  def test_costpercapita_bw11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_bw11, 0.002); end
  def test_costpercapita_bx11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_bx11, 0.002); end
  def test_costpercapita_by11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_by11, 0.002); end
  def test_costpercapita_bz11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_bz11, 0.002); end
  def test_costpercapita_ca11; assert_in_epsilon(13.403743128504956, worksheet.costpercapita_ca11, 0.002); end
  def test_costpercapita_cc11; assert_in_epsilon(12.439379076188697, worksheet.costpercapita_cc11, 0.002); end
  def test_costpercapita_cd11; assert_in_epsilon(272.94726416304724, worksheet.costpercapita_cd11, 0.002); end
  def test_costpercapita_cf11; assert_in_delta(0.0, (worksheet.costpercapita_cf11||0), 0.002); end
  def test_costpercapita_cg11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_cg11, 0.002); end
  def test_costpercapita_ch11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_ch11, 0.002); end
  def test_costpercapita_ci11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_ci11, 0.002); end
  def test_costpercapita_cj11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_cj11, 0.002); end
  def test_costpercapita_ck11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_ck11, 0.002); end
  def test_costpercapita_cl11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_cl11, 0.002); end
  def test_costpercapita_cm11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_cm11, 0.002); end
  def test_costpercapita_cn11; assert_in_delta(0.6006308362879897, worksheet.costpercapita_cn11, 0.002); end
  def test_costpercapita_cp11; assert_in_delta(0.5338940767004353, worksheet.costpercapita_cp11, 0.002); end
  def test_costpercapita_cq11; assert_in_epsilon(12.01924579071928, worksheet.costpercapita_cq11, 0.002); end
  def test_costpercapita_cr11; assert_equal("ok", worksheet.costpercapita_cr11); end
  def test_costpercapita_a12; assert_equal("ElcDSB.i", worksheet.costpercapita_a12); end
  def test_costpercapita_b12; assert_equal("place holder", worksheet.costpercapita_b12); end
  def test_costpercapita_c12; assert_equal("Electricity", worksheet.costpercapita_c12); end
  def test_costpercapita_e12; assert_in_delta(0.0, (worksheet.costpercapita_e12||0), 0.002); end
  def test_costpercapita_f12; assert_in_delta(0.0, (worksheet.costpercapita_f12||0), 0.002); end
  def test_costpercapita_g12; assert_in_delta(0.0, (worksheet.costpercapita_g12||0), 0.002); end
  def test_costpercapita_h12; assert_in_delta(0.0, (worksheet.costpercapita_h12||0), 0.002); end
  def test_costpercapita_i12; assert_in_delta(0.0, (worksheet.costpercapita_i12||0), 0.002); end
  def test_costpercapita_j12; assert_in_delta(0.0, (worksheet.costpercapita_j12||0), 0.002); end
  def test_costpercapita_k12; assert_in_delta(0.0, (worksheet.costpercapita_k12||0), 0.002); end
  def test_costpercapita_l12; assert_in_delta(0.0, (worksheet.costpercapita_l12||0), 0.002); end
  def test_costpercapita_m12; assert_in_delta(0.0, (worksheet.costpercapita_m12||0), 0.002); end
  def test_costpercapita_o12; assert_in_delta(0.0, (worksheet.costpercapita_o12||0), 0.002); end
  def test_costpercapita_p12; assert_in_delta(0.0, (worksheet.costpercapita_p12||0), 0.002); end
  def test_costpercapita_q12; assert_in_delta(0.0, (worksheet.costpercapita_q12||0), 0.002); end
  def test_costpercapita_r12; assert_in_delta(0.0, (worksheet.costpercapita_r12||0), 0.002); end
  def test_costpercapita_s12; assert_in_delta(0.0, (worksheet.costpercapita_s12||0), 0.002); end
  def test_costpercapita_t12; assert_in_delta(0.0, (worksheet.costpercapita_t12||0), 0.002); end
  def test_costpercapita_u12; assert_in_delta(0.0, (worksheet.costpercapita_u12||0), 0.002); end
  def test_costpercapita_v12; assert_in_delta(0.0, (worksheet.costpercapita_v12||0), 0.002); end
  def test_costpercapita_w12; assert_in_delta(0.0, (worksheet.costpercapita_w12||0), 0.002); end
  def test_costpercapita_y12; assert_in_delta(0.0, (worksheet.costpercapita_y12||0), 0.002); end
  def test_costpercapita_z12; assert_in_delta(0.0, (worksheet.costpercapita_z12||0), 0.002); end
  def test_costpercapita_aa12; assert_in_delta(0.0, (worksheet.costpercapita_aa12||0), 0.002); end
  def test_costpercapita_ab12; assert_in_delta(0.0, (worksheet.costpercapita_ab12||0), 0.002); end
  def test_costpercapita_ac12; assert_in_delta(0.0, (worksheet.costpercapita_ac12||0), 0.002); end
  def test_costpercapita_ad12; assert_in_delta(0.0, (worksheet.costpercapita_ad12||0), 0.002); end
  def test_costpercapita_ae12; assert_in_delta(0.0, (worksheet.costpercapita_ae12||0), 0.002); end
  def test_costpercapita_af12; assert_in_delta(0.0, (worksheet.costpercapita_af12||0), 0.002); end
  def test_costpercapita_ag12; assert_in_delta(0.0, (worksheet.costpercapita_ag12||0), 0.002); end
  def test_costpercapita_ai12; assert_in_delta(0.0, (worksheet.costpercapita_ai12||0), 0.002); end
  def test_costpercapita_aj12; assert_in_delta(0.0, (worksheet.costpercapita_aj12||0), 0.002); end
  def test_costpercapita_ak12; assert_in_delta(0.0, (worksheet.costpercapita_ak12||0), 0.002); end
  def test_costpercapita_al12; assert_in_delta(0.0, (worksheet.costpercapita_al12||0), 0.002); end
  def test_costpercapita_am12; assert_in_delta(0.0, (worksheet.costpercapita_am12||0), 0.002); end
  def test_costpercapita_an12; assert_in_delta(0.0, (worksheet.costpercapita_an12||0), 0.002); end
  def test_costpercapita_ao12; assert_in_delta(0.0, (worksheet.costpercapita_ao12||0), 0.002); end
  def test_costpercapita_ap12; assert_in_delta(0.0, (worksheet.costpercapita_ap12||0), 0.002); end
  def test_costpercapita_aq12; assert_in_delta(0.0, (worksheet.costpercapita_aq12||0), 0.002); end
  def test_costpercapita_as12; assert_in_delta(0.0, (worksheet.costpercapita_as12||0), 0.002); end
  def test_costpercapita_at12; assert_in_delta(0.0, (worksheet.costpercapita_at12||0), 0.002); end
  def test_costpercapita_av12; assert_in_delta(0.0, (worksheet.costpercapita_av12||0), 0.002); end
  def test_costpercapita_aw12; assert_in_epsilon(5.0, worksheet.costpercapita_aw12, 0.002); end
  def test_costpercapita_ay12; assert_in_delta(0.0, (worksheet.costpercapita_ay12||0), 0.002); end
  def test_costpercapita_az12; assert_in_delta(0.0, (worksheet.costpercapita_az12||0), 0.002); end
  def test_costpercapita_ba12; assert_in_delta(0.0, (worksheet.costpercapita_ba12||0), 0.002); end
  def test_costpercapita_bb12; assert_in_delta(0.0, (worksheet.costpercapita_bb12||0), 0.002); end
  def test_costpercapita_bc12; assert_in_delta(0.0, (worksheet.costpercapita_bc12||0), 0.002); end
  def test_costpercapita_bd12; assert_in_delta(0.0, (worksheet.costpercapita_bd12||0), 0.002); end
  def test_costpercapita_be12; assert_in_delta(0.0, (worksheet.costpercapita_be12||0), 0.002); end
  def test_costpercapita_bf12; assert_in_delta(0.0, (worksheet.costpercapita_bf12||0), 0.002); end
  def test_costpercapita_bg12; assert_in_delta(0.0, (worksheet.costpercapita_bg12||0), 0.002); end
  def test_costpercapita_bi12; assert_in_delta(0.0, (worksheet.costpercapita_bi12||0), 0.002); end
  def test_costpercapita_bj12; assert_in_delta(0.0, (worksheet.costpercapita_bj12||0), 0.002); end
  def test_costpercapita_bk12; assert_in_delta(0.0, (worksheet.costpercapita_bk12||0), 0.002); end
  def test_costpercapita_bl12; assert_in_delta(0.0, (worksheet.costpercapita_bl12||0), 0.002); end
  def test_costpercapita_bm12; assert_in_delta(0.0, (worksheet.costpercapita_bm12||0), 0.002); end
  def test_costpercapita_bn12; assert_in_delta(0.0, (worksheet.costpercapita_bn12||0), 0.002); end
  def test_costpercapita_bo12; assert_in_delta(0.0, (worksheet.costpercapita_bo12||0), 0.002); end
  def test_costpercapita_bp12; assert_in_delta(0.0, (worksheet.costpercapita_bp12||0), 0.002); end
  def test_costpercapita_bq12; assert_in_delta(0.0, (worksheet.costpercapita_bq12||0), 0.002); end
  def test_costpercapita_bs12; assert_in_delta(0.0, (worksheet.costpercapita_bs12||0), 0.002); end
  def test_costpercapita_bt12; assert_in_delta(0.0, (worksheet.costpercapita_bt12||0), 0.002); end
  def test_costpercapita_bu12; assert_in_delta(0.0, (worksheet.costpercapita_bu12||0), 0.002); end
  def test_costpercapita_bv12; assert_in_delta(0.0, (worksheet.costpercapita_bv12||0), 0.002); end
  def test_costpercapita_bw12; assert_in_delta(0.0, (worksheet.costpercapita_bw12||0), 0.002); end
  def test_costpercapita_bx12; assert_in_delta(0.0, (worksheet.costpercapita_bx12||0), 0.002); end
  def test_costpercapita_by12; assert_in_delta(0.0, (worksheet.costpercapita_by12||0), 0.002); end
  def test_costpercapita_bz12; assert_in_delta(0.0, (worksheet.costpercapita_bz12||0), 0.002); end
  def test_costpercapita_ca12; assert_in_delta(0.0, (worksheet.costpercapita_ca12||0), 0.002); end
  def test_costpercapita_cc12; assert_in_delta(0.0, (worksheet.costpercapita_cc12||0), 0.002); end
  def test_costpercapita_cd12; assert_in_delta(0.0, (worksheet.costpercapita_cd12||0), 0.002); end
  def test_costpercapita_cf12; assert_in_delta(0.0, (worksheet.costpercapita_cf12||0), 0.002); end
  def test_costpercapita_cg12; assert_in_delta(0.0, (worksheet.costpercapita_cg12||0), 0.002); end
  def test_costpercapita_ch12; assert_in_delta(0.0, (worksheet.costpercapita_ch12||0), 0.002); end
  def test_costpercapita_ci12; assert_in_delta(0.0, (worksheet.costpercapita_ci12||0), 0.002); end
  def test_costpercapita_cj12; assert_in_delta(0.0, (worksheet.costpercapita_cj12||0), 0.002); end
  def test_costpercapita_ck12; assert_in_delta(0.0, (worksheet.costpercapita_ck12||0), 0.002); end
  def test_costpercapita_cl12; assert_in_delta(0.0, (worksheet.costpercapita_cl12||0), 0.002); end
  def test_costpercapita_cm12; assert_in_delta(0.0, (worksheet.costpercapita_cm12||0), 0.002); end
  def test_costpercapita_cn12; assert_in_delta(0.0, (worksheet.costpercapita_cn12||0), 0.002); end
  def test_costpercapita_cp12; assert_in_delta(0.0, (worksheet.costpercapita_cp12||0), 0.002); end
  def test_costpercapita_cq12; assert_in_delta(0.0, (worksheet.costpercapita_cq12||0), 0.002); end
  def test_costpercapita_cr12; assert_equal("ok", worksheet.costpercapita_cr12); end
  def test_costpercapita_a13; assert_equal("ElcDSB.d", worksheet.costpercapita_a13); end
  def test_costpercapita_b13; assert_equal("Electricity Transmission and Distribution", worksheet.costpercapita_b13); end
  def test_costpercapita_c13; assert_equal("Electricity", worksheet.costpercapita_c13); end
  def test_costpercapita_e13; assert_in_epsilon(137.52648211262394, worksheet.costpercapita_e13, 0.002); end
  def test_costpercapita_f13; assert_in_epsilon(152.4781455409396, worksheet.costpercapita_f13, 0.002); end
  def test_costpercapita_g13; assert_in_epsilon(172.0437943020852, worksheet.costpercapita_g13, 0.002); end
  def test_costpercapita_h13; assert_in_epsilon(196.79255241972533, worksheet.costpercapita_h13, 0.002); end
  def test_costpercapita_i13; assert_in_epsilon(184.4007412790622, worksheet.costpercapita_i13, 0.002); end
  def test_costpercapita_j13; assert_in_epsilon(195.7650668569259, worksheet.costpercapita_j13, 0.002); end
  def test_costpercapita_k13; assert_in_epsilon(204.89689664483015, worksheet.costpercapita_k13, 0.002); end
  def test_costpercapita_l13; assert_in_epsilon(216.14166596922226, worksheet.costpercapita_l13, 0.002); end
  def test_costpercapita_m13; assert_in_epsilon(225.45634598792057, worksheet.costpercapita_m13, 0.002); end
  def test_costpercapita_o13; assert_in_delta(0.0, (worksheet.costpercapita_o13||0), 0.002); end
  def test_costpercapita_p13; assert_in_delta(0.0, (worksheet.costpercapita_p13||0), 0.002); end
  def test_costpercapita_q13; assert_in_delta(0.0, (worksheet.costpercapita_q13||0), 0.002); end
  def test_costpercapita_r13; assert_in_delta(0.0, (worksheet.costpercapita_r13||0), 0.002); end
  def test_costpercapita_s13; assert_in_delta(0.0, (worksheet.costpercapita_s13||0), 0.002); end
  def test_costpercapita_t13; assert_in_delta(0.0, (worksheet.costpercapita_t13||0), 0.002); end
  def test_costpercapita_u13; assert_in_delta(0.0, (worksheet.costpercapita_u13||0), 0.002); end
  def test_costpercapita_v13; assert_in_delta(0.0, (worksheet.costpercapita_v13||0), 0.002); end
  def test_costpercapita_w13; assert_in_delta(0.0, (worksheet.costpercapita_w13||0), 0.002); end
  def test_costpercapita_y13; assert_in_delta(0.0, (worksheet.costpercapita_y13||0), 0.002); end
  def test_costpercapita_z13; assert_in_delta(0.0, (worksheet.costpercapita_z13||0), 0.002); end
  def test_costpercapita_aa13; assert_in_delta(0.0, (worksheet.costpercapita_aa13||0), 0.002); end
  def test_costpercapita_ab13; assert_in_delta(0.0, (worksheet.costpercapita_ab13||0), 0.002); end
  def test_costpercapita_ac13; assert_in_delta(0.0, (worksheet.costpercapita_ac13||0), 0.002); end
  def test_costpercapita_ad13; assert_in_delta(0.0, (worksheet.costpercapita_ad13||0), 0.002); end
  def test_costpercapita_ae13; assert_in_delta(0.0, (worksheet.costpercapita_ae13||0), 0.002); end
  def test_costpercapita_af13; assert_in_delta(0.0, (worksheet.costpercapita_af13||0), 0.002); end
  def test_costpercapita_ag13; assert_in_delta(0.0, (worksheet.costpercapita_ag13||0), 0.002); end
  def test_costpercapita_ai13; assert_in_epsilon(137.52648211262394, worksheet.costpercapita_ai13, 0.002); end
  def test_costpercapita_aj13; assert_in_epsilon(152.4781455409396, worksheet.costpercapita_aj13, 0.002); end
  def test_costpercapita_ak13; assert_in_epsilon(172.0437943020852, worksheet.costpercapita_ak13, 0.002); end
  def test_costpercapita_al13; assert_in_epsilon(196.79255241972533, worksheet.costpercapita_al13, 0.002); end
  def test_costpercapita_am13; assert_in_epsilon(184.4007412790622, worksheet.costpercapita_am13, 0.002); end
  def test_costpercapita_an13; assert_in_epsilon(195.7650668569259, worksheet.costpercapita_an13, 0.002); end
  def test_costpercapita_ao13; assert_in_epsilon(204.89689664483015, worksheet.costpercapita_ao13, 0.002); end
  def test_costpercapita_ap13; assert_in_epsilon(216.14166596922226, worksheet.costpercapita_ap13, 0.002); end
  def test_costpercapita_aq13; assert_in_epsilon(225.45634598792057, worksheet.costpercapita_aq13, 0.002); end
  def test_costpercapita_as13; assert_in_epsilon(187.27796567925944, worksheet.costpercapita_as13, 0.002); end
  def test_costpercapita_at13; assert_in_epsilon(3850.1193337668847, worksheet.costpercapita_at13, 0.002); end
  def test_costpercapita_av13; assert_in_delta(0.0, (worksheet.costpercapita_av13||0), 0.002); end
  def test_costpercapita_aw13; assert_in_epsilon(5.0, worksheet.costpercapita_aw13, 0.002); end
  def test_costpercapita_ay13; assert_in_epsilon(137.52648211262394, worksheet.costpercapita_ay13, 0.002); end
  def test_costpercapita_az13; assert_in_epsilon(152.4781455409396, worksheet.costpercapita_az13, 0.002); end
  def test_costpercapita_ba13; assert_in_epsilon(172.0437943020852, worksheet.costpercapita_ba13, 0.002); end
  def test_costpercapita_bb13; assert_in_epsilon(196.79255241972533, worksheet.costpercapita_bb13, 0.002); end
  def test_costpercapita_bc13; assert_in_epsilon(184.4007412790622, worksheet.costpercapita_bc13, 0.002); end
  def test_costpercapita_bd13; assert_in_epsilon(195.7650668569259, worksheet.costpercapita_bd13, 0.002); end
  def test_costpercapita_be13; assert_in_epsilon(204.89689664483015, worksheet.costpercapita_be13, 0.002); end
  def test_costpercapita_bf13; assert_in_epsilon(216.14166596922226, worksheet.costpercapita_bf13, 0.002); end
  def test_costpercapita_bg13; assert_in_epsilon(225.45634598792057, worksheet.costpercapita_bg13, 0.002); end
  def test_costpercapita_bi13; assert_in_delta(0.0, (worksheet.costpercapita_bi13||0), 0.002); end
  def test_costpercapita_bj13; assert_in_delta(0.0, (worksheet.costpercapita_bj13||0), 0.002); end
  def test_costpercapita_bk13; assert_in_delta(0.0, (worksheet.costpercapita_bk13||0), 0.002); end
  def test_costpercapita_bl13; assert_in_delta(0.0, (worksheet.costpercapita_bl13||0), 0.002); end
  def test_costpercapita_bm13; assert_in_delta(0.0, (worksheet.costpercapita_bm13||0), 0.002); end
  def test_costpercapita_bn13; assert_in_delta(0.0, (worksheet.costpercapita_bn13||0), 0.002); end
  def test_costpercapita_bo13; assert_in_delta(0.0, (worksheet.costpercapita_bo13||0), 0.002); end
  def test_costpercapita_bp13; assert_in_delta(0.0, (worksheet.costpercapita_bp13||0), 0.002); end
  def test_costpercapita_bq13; assert_in_delta(0.0, (worksheet.costpercapita_bq13||0), 0.002); end
  def test_costpercapita_bs13; assert_in_epsilon(137.52648211262394, worksheet.costpercapita_bs13, 0.002); end
  def test_costpercapita_bt13; assert_in_epsilon(152.4781455409396, worksheet.costpercapita_bt13, 0.002); end
  def test_costpercapita_bu13; assert_in_epsilon(172.0437943020852, worksheet.costpercapita_bu13, 0.002); end
  def test_costpercapita_bv13; assert_in_epsilon(196.79255241972533, worksheet.costpercapita_bv13, 0.002); end
  def test_costpercapita_bw13; assert_in_epsilon(184.4007412790622, worksheet.costpercapita_bw13, 0.002); end
  def test_costpercapita_bx13; assert_in_epsilon(195.7650668569259, worksheet.costpercapita_bx13, 0.002); end
  def test_costpercapita_by13; assert_in_epsilon(204.89689664483015, worksheet.costpercapita_by13, 0.002); end
  def test_costpercapita_bz13; assert_in_epsilon(216.14166596922226, worksheet.costpercapita_bz13, 0.002); end
  def test_costpercapita_ca13; assert_in_epsilon(225.45634598792057, worksheet.costpercapita_ca13, 0.002); end
  def test_costpercapita_cc13; assert_in_epsilon(187.27796567925944, worksheet.costpercapita_cc13, 0.002); end
  def test_costpercapita_cd13; assert_in_epsilon(3850.1193337668847, worksheet.costpercapita_cd13, 0.002); end
  def test_costpercapita_cf13; assert_in_delta(0.0, (worksheet.costpercapita_cf13||0), 0.002); end
  def test_costpercapita_cg13; assert_in_delta(0.0, (worksheet.costpercapita_cg13||0), 0.002); end
  def test_costpercapita_ch13; assert_in_delta(0.0, (worksheet.costpercapita_ch13||0), 0.002); end
  def test_costpercapita_ci13; assert_in_delta(0.0, (worksheet.costpercapita_ci13||0), 0.002); end
  def test_costpercapita_cj13; assert_in_delta(0.0, (worksheet.costpercapita_cj13||0), 0.002); end
  def test_costpercapita_ck13; assert_in_delta(0.0, (worksheet.costpercapita_ck13||0), 0.002); end
  def test_costpercapita_cl13; assert_in_delta(0.0, (worksheet.costpercapita_cl13||0), 0.002); end
  def test_costpercapita_cm13; assert_in_delta(0.0, (worksheet.costpercapita_cm13||0), 0.002); end
  def test_costpercapita_cn13; assert_in_delta(0.0, (worksheet.costpercapita_cn13||0), 0.002); end
  def test_costpercapita_cp13; assert_in_delta(0.0, (worksheet.costpercapita_cp13||0), 0.002); end
  def test_costpercapita_cq13; assert_in_delta(0.0, (worksheet.costpercapita_cq13||0), 0.002); end
  def test_costpercapita_cr13; assert_equal("ok", worksheet.costpercapita_cr13); end
  def test_costpercapita_a14; assert_equal("H2Prod", worksheet.costpercapita_a14); end
  def test_costpercapita_b14; assert_equal("H2 Production", worksheet.costpercapita_b14); end
  def test_costpercapita_c14; assert_equal("Transport", worksheet.costpercapita_c14); end
  def test_costpercapita_e14; assert_in_delta(0.0, (worksheet.costpercapita_e14||0), 0.002); end
  def test_costpercapita_f14; assert_in_delta(0.14549812535125395, worksheet.costpercapita_f14, 0.002); end
  def test_costpercapita_g14; assert_in_delta(0.43616109303136763, worksheet.costpercapita_g14, 0.002); end
  def test_costpercapita_h14; assert_in_delta(0.7444958000862856, worksheet.costpercapita_h14, 0.002); end
  def test_costpercapita_i14; assert_in_epsilon(1.1367497432387064, worksheet.costpercapita_i14, 0.002); end
  def test_costpercapita_j14; assert_in_epsilon(1.5755911460415797, worksheet.costpercapita_j14, 0.002); end
  def test_costpercapita_k14; assert_in_epsilon(2.112822788555999, worksheet.costpercapita_k14, 0.002); end
  def test_costpercapita_l14; assert_in_epsilon(2.7434233854068357, worksheet.costpercapita_l14, 0.002); end
  def test_costpercapita_m14; assert_in_epsilon(3.5375945630775276, worksheet.costpercapita_m14, 0.002); end
  def test_costpercapita_o14; assert_in_delta(0.0, (worksheet.costpercapita_o14||0), 0.002); end
  def test_costpercapita_p14; assert_in_delta(0.22006447988966943, worksheet.costpercapita_p14, 0.002); end
  def test_costpercapita_q14; assert_in_delta(0.7381187728223145, worksheet.costpercapita_q14, 0.002); end
  def test_costpercapita_r14; assert_in_epsilon(1.2912062733512515, worksheet.costpercapita_r14, 0.002); end
  def test_costpercapita_s14; assert_in_epsilon(2.019787030059576, worksheet.costpercapita_s14, 0.002); end
  def test_costpercapita_t14; assert_in_epsilon(2.865849450614525, worksheet.costpercapita_t14, 0.002); end
  def test_costpercapita_u14; assert_in_epsilon(3.9294141652896273, worksheet.costpercapita_u14, 0.002); end
  def test_costpercapita_v14; assert_in_epsilon(5.209112066375189, worksheet.costpercapita_v14, 0.002); end
  def test_costpercapita_w14; assert_in_epsilon(6.84695721885973, worksheet.costpercapita_w14, 0.002); end
  def test_costpercapita_y14; assert_in_delta(0.0, (worksheet.costpercapita_y14||0), 0.002); end
  def test_costpercapita_z14; assert_in_delta(0.0, (worksheet.costpercapita_z14||0), 0.002); end
  def test_costpercapita_aa14; assert_in_delta(0.0, (worksheet.costpercapita_aa14||0), 0.002); end
  def test_costpercapita_ab14; assert_in_delta(0.0, (worksheet.costpercapita_ab14||0), 0.002); end
  def test_costpercapita_ac14; assert_in_delta(0.0, (worksheet.costpercapita_ac14||0), 0.002); end
  def test_costpercapita_ad14; assert_in_delta(0.0, (worksheet.costpercapita_ad14||0), 0.002); end
  def test_costpercapita_ae14; assert_in_delta(0.0, (worksheet.costpercapita_ae14||0), 0.002); end
  def test_costpercapita_af14; assert_in_delta(0.0, (worksheet.costpercapita_af14||0), 0.002); end
  def test_costpercapita_ag14; assert_in_delta(0.0, (worksheet.costpercapita_ag14||0), 0.002); end
  def test_costpercapita_ai14; assert_in_delta(0.0, (worksheet.costpercapita_ai14||0), 0.002); end
  def test_costpercapita_aj14; assert_in_delta(0.3655626052409233, worksheet.costpercapita_aj14, 0.002); end
  def test_costpercapita_ak14; assert_in_epsilon(1.1742798658536822, worksheet.costpercapita_ak14, 0.002); end
  def test_costpercapita_al14; assert_in_epsilon(2.035702073437537, worksheet.costpercapita_al14, 0.002); end
  def test_costpercapita_am14; assert_in_epsilon(3.1565367732982827, worksheet.costpercapita_am14, 0.002); end
  def test_costpercapita_an14; assert_in_epsilon(4.441440596656105, worksheet.costpercapita_an14, 0.002); end
  def test_costpercapita_ao14; assert_in_epsilon(6.042236953845626, worksheet.costpercapita_ao14, 0.002); end
  def test_costpercapita_ap14; assert_in_epsilon(7.952535451782024, worksheet.costpercapita_ap14, 0.002); end
  def test_costpercapita_aq14; assert_in_epsilon(10.384551781937256, worksheet.costpercapita_aq14, 0.002); end
  def test_costpercapita_as14; assert_in_epsilon(3.950316233561271, worksheet.costpercapita_as14, 0.002); end
  def test_costpercapita_at14; assert_in_epsilon(65.85429619623548, worksheet.costpercapita_at14, 0.002); end
  def test_costpercapita_av14; assert_in_delta(0.0, (worksheet.costpercapita_av14||0), 0.002); end
  def test_costpercapita_aw14; assert_in_epsilon(5.0, worksheet.costpercapita_aw14, 0.002); end
  def test_costpercapita_ay14; assert_in_delta(0.0, (worksheet.costpercapita_ay14||0), 0.002); end
  def test_costpercapita_az14; assert_in_delta(0.14549812535125395, worksheet.costpercapita_az14, 0.002); end
  def test_costpercapita_ba14; assert_in_delta(0.43616109303136763, worksheet.costpercapita_ba14, 0.002); end
  def test_costpercapita_bb14; assert_in_delta(0.7444958000862856, worksheet.costpercapita_bb14, 0.002); end
  def test_costpercapita_bc14; assert_in_epsilon(1.1367497432387064, worksheet.costpercapita_bc14, 0.002); end
  def test_costpercapita_bd14; assert_in_epsilon(1.5755911460415797, worksheet.costpercapita_bd14, 0.002); end
  def test_costpercapita_be14; assert_in_epsilon(2.1128227885559996, worksheet.costpercapita_be14, 0.002); end
  def test_costpercapita_bf14; assert_in_epsilon(2.7434233854068357, worksheet.costpercapita_bf14, 0.002); end
  def test_costpercapita_bg14; assert_in_epsilon(3.5375945630775276, worksheet.costpercapita_bg14, 0.002); end
  def test_costpercapita_bi14; assert_in_delta(0.0, (worksheet.costpercapita_bi14||0), 0.002); end
  def test_costpercapita_bj14; assert_in_delta(0.0, (worksheet.costpercapita_bj14||0), 0.002); end
  def test_costpercapita_bk14; assert_in_delta(0.0, (worksheet.costpercapita_bk14||0), 0.002); end
  def test_costpercapita_bl14; assert_in_delta(0.0, (worksheet.costpercapita_bl14||0), 0.002); end
  def test_costpercapita_bm14; assert_in_delta(0.0, (worksheet.costpercapita_bm14||0), 0.002); end
  def test_costpercapita_bn14; assert_in_delta(0.0, (worksheet.costpercapita_bn14||0), 0.002); end
  def test_costpercapita_bo14; assert_in_delta(0.0, (worksheet.costpercapita_bo14||0), 0.002); end
  def test_costpercapita_bp14; assert_in_delta(0.0, (worksheet.costpercapita_bp14||0), 0.002); end
  def test_costpercapita_bq14; assert_in_delta(0.0, (worksheet.costpercapita_bq14||0), 0.002); end
  def test_costpercapita_bs14; assert_in_delta(0.0, (worksheet.costpercapita_bs14||0), 0.002); end
  def test_costpercapita_bt14; assert_in_delta(0.3655626052409233, worksheet.costpercapita_bt14, 0.002); end
  def test_costpercapita_bu14; assert_in_epsilon(1.1742798658536822, worksheet.costpercapita_bu14, 0.002); end
  def test_costpercapita_bv14; assert_in_epsilon(2.035702073437537, worksheet.costpercapita_bv14, 0.002); end
  def test_costpercapita_bw14; assert_in_epsilon(3.1565367732982827, worksheet.costpercapita_bw14, 0.002); end
  def test_costpercapita_bx14; assert_in_epsilon(4.441440596656105, worksheet.costpercapita_bx14, 0.002); end
  def test_costpercapita_by14; assert_in_epsilon(6.042236953845627, worksheet.costpercapita_by14, 0.002); end
  def test_costpercapita_bz14; assert_in_epsilon(7.952535451782024, worksheet.costpercapita_bz14, 0.002); end
  def test_costpercapita_ca14; assert_in_epsilon(10.384551781937256, worksheet.costpercapita_ca14, 0.002); end
  def test_costpercapita_cc14; assert_in_epsilon(3.950316233561271, worksheet.costpercapita_cc14, 0.002); end
  def test_costpercapita_cd14; assert_in_epsilon(65.8542961962355, worksheet.costpercapita_cd14, 0.002); end
  def test_costpercapita_cf14; assert_in_delta(0.0, (worksheet.costpercapita_cf14||0), 0.002); end
  def test_costpercapita_cg14; assert_in_delta(0.0, (worksheet.costpercapita_cg14||0), 0.002); end
  def test_costpercapita_ch14; assert_in_delta(0.0, (worksheet.costpercapita_ch14||0), 0.002); end
  def test_costpercapita_ci14; assert_in_delta(0.0, (worksheet.costpercapita_ci14||0), 0.002); end
  def test_costpercapita_cj14; assert_in_delta(0.0, (worksheet.costpercapita_cj14||0), 0.002); end
  def test_costpercapita_ck14; assert_in_delta(0.0, (worksheet.costpercapita_ck14||0), 0.002); end
  def test_costpercapita_cl14; assert_in_delta(0.0, (worksheet.costpercapita_cl14||0), 0.002); end
  def test_costpercapita_cm14; assert_in_delta(0.0, (worksheet.costpercapita_cm14||0), 0.002); end
  def test_costpercapita_cn14; assert_in_delta(0.0, (worksheet.costpercapita_cn14||0), 0.002); end
  def test_costpercapita_cp14; assert_in_delta(0.0, (worksheet.costpercapita_cp14||0), 0.002); end
  def test_costpercapita_cq14; assert_in_delta(0.0, (worksheet.costpercapita_cq14||0), 0.002); end
  def test_costpercapita_cr14; assert_equal("ok", worksheet.costpercapita_cr14); end
  def test_costpercapita_a15; assert_equal("COM.A", worksheet.costpercapita_a15); end
  def test_costpercapita_b15; assert_equal("Commercial", worksheet.costpercapita_b15); end
  def test_costpercapita_c15; assert_equal("Buildings", worksheet.costpercapita_c15); end
  def test_costpercapita_e15; assert_in_epsilon(857.6604310181716, worksheet.costpercapita_e15, 0.002); end
  def test_costpercapita_f15; assert_in_epsilon(857.4966519182893, worksheet.costpercapita_f15, 0.002); end
  def test_costpercapita_g15; assert_in_epsilon(870.7382730196879, worksheet.costpercapita_g15, 0.002); end
  def test_costpercapita_h15; assert_in_epsilon(885.0066207862797, worksheet.costpercapita_h15, 0.002); end
  def test_costpercapita_i15; assert_in_epsilon(893.721591381448, worksheet.costpercapita_i15, 0.002); end
  def test_costpercapita_j15; assert_in_epsilon(982.5797687838922, worksheet.costpercapita_j15, 0.002); end
  def test_costpercapita_k15; assert_in_epsilon(1083.012034170107, worksheet.costpercapita_k15, 0.002); end
  def test_costpercapita_l15; assert_in_epsilon(1196.3285903807239, worksheet.costpercapita_l15, 0.002); end
  def test_costpercapita_m15; assert_in_epsilon(1323.9919093808676, worksheet.costpercapita_m15, 0.002); end
  def test_costpercapita_o15; assert_in_epsilon(46.54657360200807, worksheet.costpercapita_o15, 0.002); end
  def test_costpercapita_p15; assert_in_epsilon(46.117214768146944, worksheet.costpercapita_p15, 0.002); end
  def test_costpercapita_q15; assert_in_epsilon(46.41939691381574, worksheet.costpercapita_q15, 0.002); end
  def test_costpercapita_r15; assert_in_epsilon(46.64782458371983, worksheet.costpercapita_r15, 0.002); end
  def test_costpercapita_s15; assert_in_epsilon(46.54315027832568, worksheet.costpercapita_s15, 0.002); end
  def test_costpercapita_t15; assert_in_epsilon(51.56177325102984, worksheet.costpercapita_t15, 0.002); end
  def test_costpercapita_u15; assert_in_epsilon(57.21889391427636, worksheet.costpercapita_u15, 0.002); end
  def test_costpercapita_v15; assert_in_epsilon(63.58933000306782, worksheet.costpercapita_v15, 0.002); end
  def test_costpercapita_w15; assert_in_epsilon(70.75680207470772, worksheet.costpercapita_w15, 0.002); end
  def test_costpercapita_y15; assert_in_delta(0.0, (worksheet.costpercapita_y15||0), 0.002); end
  def test_costpercapita_z15; assert_in_delta(0.0, (worksheet.costpercapita_z15||0), 0.002); end
  def test_costpercapita_aa15; assert_in_delta(0.0, (worksheet.costpercapita_aa15||0), 0.002); end
  def test_costpercapita_ab15; assert_in_delta(0.0, (worksheet.costpercapita_ab15||0), 0.002); end
  def test_costpercapita_ac15; assert_in_delta(0.0, (worksheet.costpercapita_ac15||0), 0.002); end
  def test_costpercapita_ad15; assert_in_delta(0.0, (worksheet.costpercapita_ad15||0), 0.002); end
  def test_costpercapita_ae15; assert_in_delta(0.0, (worksheet.costpercapita_ae15||0), 0.002); end
  def test_costpercapita_af15; assert_in_delta(0.0, (worksheet.costpercapita_af15||0), 0.002); end
  def test_costpercapita_ag15; assert_in_delta(0.0, (worksheet.costpercapita_ag15||0), 0.002); end
  def test_costpercapita_ai15; assert_in_epsilon(904.2070046201796, worksheet.costpercapita_ai15, 0.002); end
  def test_costpercapita_aj15; assert_in_epsilon(903.6138666864363, worksheet.costpercapita_aj15, 0.002); end
  def test_costpercapita_ak15; assert_in_epsilon(917.1576699335037, worksheet.costpercapita_ak15, 0.002); end
  def test_costpercapita_al15; assert_in_epsilon(931.6544453699995, worksheet.costpercapita_al15, 0.002); end
  def test_costpercapita_am15; assert_in_epsilon(940.2647416597736, worksheet.costpercapita_am15, 0.002); end
  def test_costpercapita_an15; assert_in_epsilon(1034.1415420349222, worksheet.costpercapita_an15, 0.002); end
  def test_costpercapita_ao15; assert_in_epsilon(1140.2309280843833, worksheet.costpercapita_ao15, 0.002); end
  def test_costpercapita_ap15; assert_in_epsilon(1259.9179203837919, worksheet.costpercapita_ap15, 0.002); end
  def test_costpercapita_aq15; assert_in_epsilon(1394.7487114555754, worksheet.costpercapita_aq15, 0.002); end
  def test_costpercapita_as15; assert_in_epsilon(1047.3263144698406, worksheet.costpercapita_as15, 0.002); end
  def test_costpercapita_at15; assert_in_epsilon(21106.44073519833, worksheet.costpercapita_at15, 0.002); end
  def test_costpercapita_av15; assert_in_delta(0.0, (worksheet.costpercapita_av15||0), 0.002); end
  def test_costpercapita_aw15; assert_in_epsilon(5.0, worksheet.costpercapita_aw15, 0.002); end
  def test_costpercapita_ay15; assert_in_epsilon(857.6604310181716, worksheet.costpercapita_ay15, 0.002); end
  def test_costpercapita_az15; assert_in_epsilon(857.4966519182893, worksheet.costpercapita_az15, 0.002); end
  def test_costpercapita_ba15; assert_in_epsilon(870.7382730196879, worksheet.costpercapita_ba15, 0.002); end
  def test_costpercapita_bb15; assert_in_epsilon(885.0066207862797, worksheet.costpercapita_bb15, 0.002); end
  def test_costpercapita_bc15; assert_in_epsilon(893.721591381448, worksheet.costpercapita_bc15, 0.002); end
  def test_costpercapita_bd15; assert_in_epsilon(982.5797687838922, worksheet.costpercapita_bd15, 0.002); end
  def test_costpercapita_be15; assert_in_epsilon(1083.012034170107, worksheet.costpercapita_be15, 0.002); end
  def test_costpercapita_bf15; assert_in_epsilon(1196.3285903807239, worksheet.costpercapita_bf15, 0.002); end
  def test_costpercapita_bg15; assert_in_epsilon(1323.9919093808676, worksheet.costpercapita_bg15, 0.002); end
  def test_costpercapita_bi15; assert_in_delta(0.0, (worksheet.costpercapita_bi15||0), 0.002); end
  def test_costpercapita_bj15; assert_in_delta(0.0, (worksheet.costpercapita_bj15||0), 0.002); end
  def test_costpercapita_bk15; assert_in_delta(0.0, (worksheet.costpercapita_bk15||0), 0.002); end
  def test_costpercapita_bl15; assert_in_delta(0.0, (worksheet.costpercapita_bl15||0), 0.002); end
  def test_costpercapita_bm15; assert_in_delta(0.0, (worksheet.costpercapita_bm15||0), 0.002); end
  def test_costpercapita_bn15; assert_in_delta(0.0, (worksheet.costpercapita_bn15||0), 0.002); end
  def test_costpercapita_bo15; assert_in_delta(0.0, (worksheet.costpercapita_bo15||0), 0.002); end
  def test_costpercapita_bp15; assert_in_delta(0.0, (worksheet.costpercapita_bp15||0), 0.002); end
  def test_costpercapita_bq15; assert_in_delta(0.0, (worksheet.costpercapita_bq15||0), 0.002); end
  def test_costpercapita_bs15; assert_in_epsilon(904.2070046201796, worksheet.costpercapita_bs15, 0.002); end
  def test_costpercapita_bt15; assert_in_epsilon(903.6138666864363, worksheet.costpercapita_bt15, 0.002); end
  def test_costpercapita_bu15; assert_in_epsilon(917.1576699335037, worksheet.costpercapita_bu15, 0.002); end
  def test_costpercapita_bv15; assert_in_epsilon(931.6544453699995, worksheet.costpercapita_bv15, 0.002); end
  def test_costpercapita_bw15; assert_in_epsilon(940.2647416597736, worksheet.costpercapita_bw15, 0.002); end
  def test_costpercapita_bx15; assert_in_epsilon(1034.1415420349222, worksheet.costpercapita_bx15, 0.002); end
  def test_costpercapita_by15; assert_in_epsilon(1140.2309280843833, worksheet.costpercapita_by15, 0.002); end
  def test_costpercapita_bz15; assert_in_epsilon(1259.9179203837919, worksheet.costpercapita_bz15, 0.002); end
  def test_costpercapita_ca15; assert_in_epsilon(1394.7487114555754, worksheet.costpercapita_ca15, 0.002); end
  def test_costpercapita_cc15; assert_in_epsilon(1047.3263144698406, worksheet.costpercapita_cc15, 0.002); end
  def test_costpercapita_cd15; assert_in_epsilon(21106.44073519833, worksheet.costpercapita_cd15, 0.002); end
  def test_costpercapita_cf15; assert_in_delta(0.0, (worksheet.costpercapita_cf15||0), 0.002); end
  def test_costpercapita_cg15; assert_in_delta(0.0, (worksheet.costpercapita_cg15||0), 0.002); end
  def test_costpercapita_ch15; assert_in_delta(0.0, (worksheet.costpercapita_ch15||0), 0.002); end
  def test_costpercapita_ci15; assert_in_delta(0.0, (worksheet.costpercapita_ci15||0), 0.002); end
  def test_costpercapita_cj15; assert_in_delta(0.0, (worksheet.costpercapita_cj15||0), 0.002); end
  def test_costpercapita_ck15; assert_in_delta(0.0, (worksheet.costpercapita_ck15||0), 0.002); end
  def test_costpercapita_cl15; assert_in_delta(0.0, (worksheet.costpercapita_cl15||0), 0.002); end
  def test_costpercapita_cm15; assert_in_delta(0.0, (worksheet.costpercapita_cm15||0), 0.002); end
  def test_costpercapita_cn15; assert_in_delta(0.0, (worksheet.costpercapita_cn15||0), 0.002); end
  def test_costpercapita_cp15; assert_in_delta(0.0, (worksheet.costpercapita_cp15||0), 0.002); end
  def test_costpercapita_cq15; assert_in_delta(0.0, (worksheet.costpercapita_cq15||0), 0.002); end
  def test_costpercapita_cr15; assert_equal("ok", worksheet.costpercapita_cr15); end
  def test_costpercapita_a16; assert_equal("RES.L", worksheet.costpercapita_a16); end
  def test_costpercapita_b16; assert_equal("Residential lighting", worksheet.costpercapita_b16); end
  def test_costpercapita_c16; assert_equal("Buildings", worksheet.costpercapita_c16); end
  def test_costpercapita_e16; assert_in_epsilon(262.62744206283196, worksheet.costpercapita_e16, 0.002); end
  def test_costpercapita_f16; assert_in_epsilon(305.4382409397228, worksheet.costpercapita_f16, 0.002); end
  def test_costpercapita_g16; assert_in_epsilon(354.34155146986313, worksheet.costpercapita_g16, 0.002); end
  def test_costpercapita_h16; assert_in_epsilon(387.129721765555, worksheet.costpercapita_h16, 0.002); end
  def test_costpercapita_i16; assert_in_epsilon(415.94550596545486, worksheet.costpercapita_i16, 0.002); end
  def test_costpercapita_j16; assert_in_epsilon(441.2666917246297, worksheet.costpercapita_j16, 0.002); end
  def test_costpercapita_k16; assert_in_epsilon(463.6947979246972, worksheet.costpercapita_k16, 0.002); end
  def test_costpercapita_l16; assert_in_epsilon(482.90544350910625, worksheet.costpercapita_l16, 0.002); end
  def test_costpercapita_m16; assert_in_epsilon(499.06767170846143, worksheet.costpercapita_m16, 0.002); end
  def test_costpercapita_o16; assert_in_epsilon(9.758499483925076, worksheet.costpercapita_o16, 0.002); end
  def test_costpercapita_p16; assert_in_epsilon(11.37316804623799, worksheet.costpercapita_p16, 0.002); end
  def test_costpercapita_q16; assert_in_epsilon(13.228170921813659, worksheet.costpercapita_q16, 0.002); end
  def test_costpercapita_r16; assert_in_epsilon(14.495514834861215, worksheet.costpercapita_r16, 0.002); end
  def test_costpercapita_s16; assert_in_epsilon(15.609869584603153, worksheet.costpercapita_s16, 0.002); end
  def test_costpercapita_t16; assert_in_epsilon(16.58876447077367, worksheet.costpercapita_t16, 0.002); end
  def test_costpercapita_u16; assert_in_epsilon(17.454738148704568, worksheet.costpercapita_u16, 0.002); end
  def test_costpercapita_v16; assert_in_epsilon(18.195662832593502, worksheet.costpercapita_v16, 0.002); end
  def test_costpercapita_w16; assert_in_epsilon(18.81803503908738, worksheet.costpercapita_w16, 0.002); end
  def test_costpercapita_y16; assert_in_delta(0.0, (worksheet.costpercapita_y16||0), 0.002); end
  def test_costpercapita_z16; assert_in_delta(0.0, (worksheet.costpercapita_z16||0), 0.002); end
  def test_costpercapita_aa16; assert_in_delta(0.0, (worksheet.costpercapita_aa16||0), 0.002); end
  def test_costpercapita_ab16; assert_in_delta(0.0, (worksheet.costpercapita_ab16||0), 0.002); end
  def test_costpercapita_ac16; assert_in_delta(0.0, (worksheet.costpercapita_ac16||0), 0.002); end
  def test_costpercapita_ad16; assert_in_delta(0.0, (worksheet.costpercapita_ad16||0), 0.002); end
  def test_costpercapita_ae16; assert_in_delta(0.0, (worksheet.costpercapita_ae16||0), 0.002); end
  def test_costpercapita_af16; assert_in_delta(0.0, (worksheet.costpercapita_af16||0), 0.002); end
  def test_costpercapita_ag16; assert_in_delta(0.0, (worksheet.costpercapita_ag16||0), 0.002); end
  def test_costpercapita_ai16; assert_in_epsilon(272.385941546757, worksheet.costpercapita_ai16, 0.002); end
  def test_costpercapita_aj16; assert_in_epsilon(316.8114089859607, worksheet.costpercapita_aj16, 0.002); end
  def test_costpercapita_ak16; assert_in_epsilon(367.5697223916768, worksheet.costpercapita_ak16, 0.002); end
  def test_costpercapita_al16; assert_in_epsilon(401.62523660041626, worksheet.costpercapita_al16, 0.002); end
  def test_costpercapita_am16; assert_in_epsilon(431.55537555005805, worksheet.costpercapita_am16, 0.002); end
  def test_costpercapita_an16; assert_in_epsilon(457.85545619540335, worksheet.costpercapita_an16, 0.002); end
  def test_costpercapita_ao16; assert_in_epsilon(481.14953607340175, worksheet.costpercapita_ao16, 0.002); end
  def test_costpercapita_ap16; assert_in_epsilon(501.10110634169973, worksheet.costpercapita_ap16, 0.002); end
  def test_costpercapita_aq16; assert_in_epsilon(517.8857067475487, worksheet.costpercapita_aq16, 0.002); end
  def test_costpercapita_as16; assert_in_epsilon(416.4377211592136, worksheet.costpercapita_as16, 0.002); end
  def test_costpercapita_at16; assert_in_epsilon(8474.362033844223, worksheet.costpercapita_at16, 0.002); end
  def test_costpercapita_av16; assert_in_delta(0.0, (worksheet.costpercapita_av16||0), 0.002); end
  def test_costpercapita_aw16; assert_in_epsilon(5.0, worksheet.costpercapita_aw16, 0.002); end
  def test_costpercapita_ay16; assert_in_epsilon(262.62744206283196, worksheet.costpercapita_ay16, 0.002); end
  def test_costpercapita_az16; assert_in_epsilon(305.4382409397228, worksheet.costpercapita_az16, 0.002); end
  def test_costpercapita_ba16; assert_in_epsilon(354.34155146986313, worksheet.costpercapita_ba16, 0.002); end
  def test_costpercapita_bb16; assert_in_epsilon(387.129721765555, worksheet.costpercapita_bb16, 0.002); end
  def test_costpercapita_bc16; assert_in_epsilon(415.94550596545486, worksheet.costpercapita_bc16, 0.002); end
  def test_costpercapita_bd16; assert_in_epsilon(441.2666917246297, worksheet.costpercapita_bd16, 0.002); end
  def test_costpercapita_be16; assert_in_epsilon(463.6947979246972, worksheet.costpercapita_be16, 0.002); end
  def test_costpercapita_bf16; assert_in_epsilon(482.90544350910625, worksheet.costpercapita_bf16, 0.002); end
  def test_costpercapita_bg16; assert_in_epsilon(499.06767170846143, worksheet.costpercapita_bg16, 0.002); end
  def test_costpercapita_bi16; assert_in_delta(0.0, (worksheet.costpercapita_bi16||0), 0.002); end
  def test_costpercapita_bj16; assert_in_delta(0.0, (worksheet.costpercapita_bj16||0), 0.002); end
  def test_costpercapita_bk16; assert_in_delta(0.0, (worksheet.costpercapita_bk16||0), 0.002); end
  def test_costpercapita_bl16; assert_in_delta(0.0, (worksheet.costpercapita_bl16||0), 0.002); end
  def test_costpercapita_bm16; assert_in_delta(0.0, (worksheet.costpercapita_bm16||0), 0.002); end
  def test_costpercapita_bn16; assert_in_delta(0.0, (worksheet.costpercapita_bn16||0), 0.002); end
  def test_costpercapita_bo16; assert_in_delta(0.0, (worksheet.costpercapita_bo16||0), 0.002); end
  def test_costpercapita_bp16; assert_in_delta(0.0, (worksheet.costpercapita_bp16||0), 0.002); end
  def test_costpercapita_bq16; assert_in_delta(0.0, (worksheet.costpercapita_bq16||0), 0.002); end
  def test_costpercapita_bs16; assert_in_epsilon(272.38594154675707, worksheet.costpercapita_bs16, 0.002); end
  def test_costpercapita_bt16; assert_in_epsilon(316.8114089859608, worksheet.costpercapita_bt16, 0.002); end
  def test_costpercapita_bu16; assert_in_epsilon(367.5697223916768, worksheet.costpercapita_bu16, 0.002); end
  def test_costpercapita_bv16; assert_in_epsilon(401.62523660041626, worksheet.costpercapita_bv16, 0.002); end
  def test_costpercapita_bw16; assert_in_epsilon(431.55537555005805, worksheet.costpercapita_bw16, 0.002); end
  def test_costpercapita_bx16; assert_in_epsilon(457.85545619540335, worksheet.costpercapita_bx16, 0.002); end
  def test_costpercapita_by16; assert_in_epsilon(481.14953607340175, worksheet.costpercapita_by16, 0.002); end
  def test_costpercapita_bz16; assert_in_epsilon(501.10110634169973, worksheet.costpercapita_bz16, 0.002); end
  def test_costpercapita_ca16; assert_in_epsilon(517.8857067475487, worksheet.costpercapita_ca16, 0.002); end
  def test_costpercapita_cc16; assert_in_epsilon(416.4377211592136, worksheet.costpercapita_cc16, 0.002); end
  def test_costpercapita_cd16; assert_in_epsilon(8474.362033844223, worksheet.costpercapita_cd16, 0.002); end
  def test_costpercapita_cf16; assert_in_delta(0.0, (worksheet.costpercapita_cf16||0), 0.002); end
  def test_costpercapita_cg16; assert_in_delta(0.0, (worksheet.costpercapita_cg16||0), 0.002); end
  def test_costpercapita_ch16; assert_in_delta(0.0, (worksheet.costpercapita_ch16||0), 0.002); end
  def test_costpercapita_ci16; assert_in_delta(0.0, (worksheet.costpercapita_ci16||0), 0.002); end
  def test_costpercapita_cj16; assert_in_delta(0.0, (worksheet.costpercapita_cj16||0), 0.002); end
  def test_costpercapita_ck16; assert_in_delta(0.0, (worksheet.costpercapita_ck16||0), 0.002); end
  def test_costpercapita_cl16; assert_in_delta(0.0, (worksheet.costpercapita_cl16||0), 0.002); end
  def test_costpercapita_cm16; assert_in_delta(0.0, (worksheet.costpercapita_cm16||0), 0.002); end
  def test_costpercapita_cn16; assert_in_delta(0.0, (worksheet.costpercapita_cn16||0), 0.002); end
  def test_costpercapita_cp16; assert_in_delta(0.0, (worksheet.costpercapita_cp16||0), 0.002); end
  def test_costpercapita_cq16; assert_in_delta(0.0, (worksheet.costpercapita_cq16||0), 0.002); end
  def test_costpercapita_cr16; assert_equal("ok", worksheet.costpercapita_cr16); end
  def test_costpercapita_a17; assert_equal("RES.W", worksheet.costpercapita_a17); end
  def test_costpercapita_b17; assert_equal("Residential water heating", worksheet.costpercapita_b17); end
  def test_costpercapita_c17; assert_equal("Buildings", worksheet.costpercapita_c17); end
  def test_costpercapita_e17; assert_in_epsilon(118.88436375507493, worksheet.costpercapita_e17, 0.002); end
  def test_costpercapita_f17; assert_in_epsilon(140.9310413163563, worksheet.costpercapita_f17, 0.002); end
  def test_costpercapita_g17; assert_in_epsilon(167.52402259151384, worksheet.costpercapita_g17, 0.002); end
  def test_costpercapita_h17; assert_in_epsilon(188.16239642017948, worksheet.costpercapita_h17, 0.002); end
  def test_costpercapita_i17; assert_in_epsilon(206.1169884619946, worksheet.costpercapita_i17, 0.002); end
  def test_costpercapita_j17; assert_in_epsilon(221.61867252103033, worksheet.costpercapita_j17, 0.002); end
  def test_costpercapita_k17; assert_in_epsilon(235.0033062228893, worksheet.costpercapita_k17, 0.002); end
  def test_costpercapita_l17; assert_in_epsilon(246.15736663672854, worksheet.costpercapita_l17, 0.002); end
  def test_costpercapita_m17; assert_in_epsilon(255.22211873250848, worksheet.costpercapita_m17, 0.002); end
  def test_costpercapita_o17; assert_in_epsilon(6.848639346150583, worksheet.costpercapita_o17, 0.002); end
  def test_costpercapita_p17; assert_in_epsilon(8.106693910201356, worksheet.costpercapita_p17, 0.002); end
  def test_costpercapita_q17; assert_in_epsilon(9.622106787753115, worksheet.costpercapita_q17, 0.002); end
  def test_costpercapita_r17; assert_in_epsilon(10.794479320754432, worksheet.costpercapita_r17, 0.002); end
  def test_costpercapita_s17; assert_in_epsilon(11.814623659937636, worksheet.costpercapita_s17, 0.002); end
  def test_costpercapita_t17; assert_in_epsilon(12.695844604482852, worksheet.costpercapita_t17, 0.002); end
  def test_costpercapita_u17; assert_in_epsilon(13.457355103006078, worksheet.costpercapita_u17, 0.002); end
  def test_costpercapita_v17; assert_in_epsilon(14.092581974917119, worksheet.costpercapita_v17, 0.002); end
  def test_costpercapita_w17; assert_in_epsilon(14.60952548726643, worksheet.costpercapita_w17, 0.002); end
  def test_costpercapita_y17; assert_in_delta(0.0, (worksheet.costpercapita_y17||0), 0.002); end
  def test_costpercapita_z17; assert_in_delta(0.0, (worksheet.costpercapita_z17||0), 0.002); end
  def test_costpercapita_aa17; assert_in_delta(0.0, (worksheet.costpercapita_aa17||0), 0.002); end
  def test_costpercapita_ab17; assert_in_delta(0.0, (worksheet.costpercapita_ab17||0), 0.002); end
  def test_costpercapita_ac17; assert_in_delta(0.0, (worksheet.costpercapita_ac17||0), 0.002); end
  def test_costpercapita_ad17; assert_in_delta(0.0, (worksheet.costpercapita_ad17||0), 0.002); end
  def test_costpercapita_ae17; assert_in_delta(0.0, (worksheet.costpercapita_ae17||0), 0.002); end
  def test_costpercapita_af17; assert_in_delta(0.0, (worksheet.costpercapita_af17||0), 0.002); end
  def test_costpercapita_ag17; assert_in_delta(0.0, (worksheet.costpercapita_ag17||0), 0.002); end
  def test_costpercapita_ai17; assert_in_epsilon(125.7330031012255, worksheet.costpercapita_ai17, 0.002); end
  def test_costpercapita_aj17; assert_in_epsilon(149.03773522655766, worksheet.costpercapita_aj17, 0.002); end
  def test_costpercapita_ak17; assert_in_epsilon(177.14612937926697, worksheet.costpercapita_ak17, 0.002); end
  def test_costpercapita_al17; assert_in_epsilon(198.9568757409339, worksheet.costpercapita_al17, 0.002); end
  def test_costpercapita_am17; assert_in_epsilon(217.93161212193223, worksheet.costpercapita_am17, 0.002); end
  def test_costpercapita_an17; assert_in_epsilon(234.3145171255132, worksheet.costpercapita_an17, 0.002); end
  def test_costpercapita_ao17; assert_in_epsilon(248.4606613258954, worksheet.costpercapita_ao17, 0.002); end
  def test_costpercapita_ap17; assert_in_epsilon(260.24994861164566, worksheet.costpercapita_ap17, 0.002); end
  def test_costpercapita_aq17; assert_in_epsilon(269.8316442197749, worksheet.costpercapita_aq17, 0.002); end
  def test_costpercapita_as17; assert_in_epsilon(209.0735696503051, worksheet.costpercapita_as17, 0.002); end
  def test_costpercapita_at17; assert_in_epsilon(4218.408363935495, worksheet.costpercapita_at17, 0.002); end
  def test_costpercapita_av17; assert_in_delta(0.0, (worksheet.costpercapita_av17||0), 0.002); end
  def test_costpercapita_aw17; assert_in_epsilon(5.0, worksheet.costpercapita_aw17, 0.002); end
  def test_costpercapita_ay17; assert_in_epsilon(118.88436375507493, worksheet.costpercapita_ay17, 0.002); end
  def test_costpercapita_az17; assert_in_epsilon(140.9310413163563, worksheet.costpercapita_az17, 0.002); end
  def test_costpercapita_ba17; assert_in_epsilon(167.52402259151384, worksheet.costpercapita_ba17, 0.002); end
  def test_costpercapita_bb17; assert_in_epsilon(188.16239642017948, worksheet.costpercapita_bb17, 0.002); end
  def test_costpercapita_bc17; assert_in_epsilon(206.1169884619946, worksheet.costpercapita_bc17, 0.002); end
  def test_costpercapita_bd17; assert_in_epsilon(221.61867252103033, worksheet.costpercapita_bd17, 0.002); end
  def test_costpercapita_be17; assert_in_epsilon(235.0033062228893, worksheet.costpercapita_be17, 0.002); end
  def test_costpercapita_bf17; assert_in_epsilon(246.15736663672854, worksheet.costpercapita_bf17, 0.002); end
  def test_costpercapita_bg17; assert_in_epsilon(255.22211873250848, worksheet.costpercapita_bg17, 0.002); end
  def test_costpercapita_bi17; assert_in_delta(0.0, (worksheet.costpercapita_bi17||0), 0.002); end
  def test_costpercapita_bj17; assert_in_delta(0.0, (worksheet.costpercapita_bj17||0), 0.002); end
  def test_costpercapita_bk17; assert_in_delta(0.0, (worksheet.costpercapita_bk17||0), 0.002); end
  def test_costpercapita_bl17; assert_in_delta(0.0, (worksheet.costpercapita_bl17||0), 0.002); end
  def test_costpercapita_bm17; assert_in_delta(0.0, (worksheet.costpercapita_bm17||0), 0.002); end
  def test_costpercapita_bn17; assert_in_delta(0.0, (worksheet.costpercapita_bn17||0), 0.002); end
  def test_costpercapita_bo17; assert_in_delta(0.0, (worksheet.costpercapita_bo17||0), 0.002); end
  def test_costpercapita_bp17; assert_in_delta(0.0, (worksheet.costpercapita_bp17||0), 0.002); end
  def test_costpercapita_bq17; assert_in_delta(0.0, (worksheet.costpercapita_bq17||0), 0.002); end
  def test_costpercapita_bs17; assert_in_epsilon(125.7330031012255, worksheet.costpercapita_bs17, 0.002); end
  def test_costpercapita_bt17; assert_in_epsilon(149.03773522655766, worksheet.costpercapita_bt17, 0.002); end
  def test_costpercapita_bu17; assert_in_epsilon(177.14612937926697, worksheet.costpercapita_bu17, 0.002); end
  def test_costpercapita_bv17; assert_in_epsilon(198.9568757409339, worksheet.costpercapita_bv17, 0.002); end
  def test_costpercapita_bw17; assert_in_epsilon(217.93161212193223, worksheet.costpercapita_bw17, 0.002); end
  def test_costpercapita_bx17; assert_in_epsilon(234.3145171255132, worksheet.costpercapita_bx17, 0.002); end
  def test_costpercapita_by17; assert_in_epsilon(248.4606613258954, worksheet.costpercapita_by17, 0.002); end
  def test_costpercapita_bz17; assert_in_epsilon(260.24994861164566, worksheet.costpercapita_bz17, 0.002); end
  def test_costpercapita_ca17; assert_in_epsilon(269.8316442197749, worksheet.costpercapita_ca17, 0.002); end
  def test_costpercapita_cc17; assert_in_epsilon(209.0735696503051, worksheet.costpercapita_cc17, 0.002); end
  def test_costpercapita_cd17; assert_in_epsilon(4218.408363935495, worksheet.costpercapita_cd17, 0.002); end
  def test_costpercapita_cf17; assert_in_delta(0.0, (worksheet.costpercapita_cf17||0), 0.002); end
  def test_costpercapita_cg17; assert_in_delta(0.0, (worksheet.costpercapita_cg17||0), 0.002); end
  def test_costpercapita_ch17; assert_in_delta(0.0, (worksheet.costpercapita_ch17||0), 0.002); end
  def test_costpercapita_ci17; assert_in_delta(0.0, (worksheet.costpercapita_ci17||0), 0.002); end
  def test_costpercapita_cj17; assert_in_delta(0.0, (worksheet.costpercapita_cj17||0), 0.002); end
  def test_costpercapita_ck17; assert_in_delta(0.0, (worksheet.costpercapita_ck17||0), 0.002); end
  def test_costpercapita_cl17; assert_in_delta(0.0, (worksheet.costpercapita_cl17||0), 0.002); end
  def test_costpercapita_cm17; assert_in_delta(0.0, (worksheet.costpercapita_cm17||0), 0.002); end
  def test_costpercapita_cn17; assert_in_delta(0.0, (worksheet.costpercapita_cn17||0), 0.002); end
  def test_costpercapita_cp17; assert_in_delta(0.0, (worksheet.costpercapita_cp17||0), 0.002); end
  def test_costpercapita_cq17; assert_in_delta(0.0, (worksheet.costpercapita_cq17||0), 0.002); end
  def test_costpercapita_cr17; assert_equal("ok", worksheet.costpercapita_cr17); end
  def test_costpercapita_a18; assert_equal("RES.H", worksheet.costpercapita_a18); end
  def test_costpercapita_b18; assert_equal("Residential space heating", worksheet.costpercapita_b18); end
  def test_costpercapita_c18; assert_equal("Buildings", worksheet.costpercapita_c18); end
  def test_costpercapita_e18; assert_in_epsilon(28.264831825778113, worksheet.costpercapita_e18, 0.002); end
  def test_costpercapita_f18; assert_in_epsilon(39.57600689110642, worksheet.costpercapita_f18, 0.002); end
  def test_costpercapita_g18; assert_in_epsilon(54.657546297164984, worksheet.costpercapita_g18, 0.002); end
  def test_costpercapita_h18; assert_in_epsilon(70.59227297901715, worksheet.costpercapita_h18, 0.002); end
  def test_costpercapita_i18; assert_in_epsilon(88.44474321777508, worksheet.costpercapita_i18, 0.002); end
  def test_costpercapita_j18; assert_in_epsilon(94.96267728996338, worksheet.costpercapita_j18, 0.002); end
  def test_costpercapita_k18; assert_in_epsilon(100.69078755199942, worksheet.costpercapita_k18, 0.002); end
  def test_costpercapita_l18; assert_in_epsilon(105.56202342264059, worksheet.costpercapita_l18, 0.002); end
  def test_costpercapita_m18; assert_in_epsilon(109.61851772324253, worksheet.costpercapita_m18, 0.002); end
  def test_costpercapita_o18; assert_in_delta(0.916556659549684, worksheet.costpercapita_o18, 0.002); end
  def test_costpercapita_p18; assert_in_epsilon(1.3294941845073651, worksheet.costpercapita_p18, 0.002); end
  def test_costpercapita_q18; assert_in_epsilon(1.8870637891872326, worksheet.costpercapita_q18, 0.002); end
  def test_costpercapita_r18; assert_in_epsilon(2.500660775404457, worksheet.costpercapita_r18, 0.002); end
  def test_costpercapita_s18; assert_in_epsilon(3.192821078158511, worksheet.costpercapita_s18, 0.002); end
  def test_costpercapita_t18; assert_in_epsilon(3.4423693929257095, worksheet.costpercapita_t18, 0.002); end
  def test_costpercapita_u18; assert_in_epsilon(3.661246165873113, worksheet.costpercapita_u18, 0.002); end
  def test_costpercapita_v18; assert_in_epsilon(3.847053440409069, worksheet.costpercapita_v18, 0.002); end
  def test_costpercapita_w18; assert_in_epsilon(4.001387814393492, worksheet.costpercapita_w18, 0.002); end
  def test_costpercapita_y18; assert_in_delta(0.0, (worksheet.costpercapita_y18||0), 0.002); end
  def test_costpercapita_z18; assert_in_delta(0.0, (worksheet.costpercapita_z18||0), 0.002); end
  def test_costpercapita_aa18; assert_in_delta(0.0, (worksheet.costpercapita_aa18||0), 0.002); end
  def test_costpercapita_ab18; assert_in_delta(0.0, (worksheet.costpercapita_ab18||0), 0.002); end
  def test_costpercapita_ac18; assert_in_delta(0.0, (worksheet.costpercapita_ac18||0), 0.002); end
  def test_costpercapita_ad18; assert_in_delta(0.0, (worksheet.costpercapita_ad18||0), 0.002); end
  def test_costpercapita_ae18; assert_in_delta(0.0, (worksheet.costpercapita_ae18||0), 0.002); end
  def test_costpercapita_af18; assert_in_delta(0.0, (worksheet.costpercapita_af18||0), 0.002); end
  def test_costpercapita_ag18; assert_in_delta(0.0, (worksheet.costpercapita_ag18||0), 0.002); end
  def test_costpercapita_ai18; assert_in_epsilon(29.181388485327794, worksheet.costpercapita_ai18, 0.002); end
  def test_costpercapita_aj18; assert_in_epsilon(40.905501075613785, worksheet.costpercapita_aj18, 0.002); end
  def test_costpercapita_ak18; assert_in_epsilon(56.544610086352215, worksheet.costpercapita_ak18, 0.002); end
  def test_costpercapita_al18; assert_in_epsilon(73.09293375442161, worksheet.costpercapita_al18, 0.002); end
  def test_costpercapita_am18; assert_in_epsilon(91.6375642959336, worksheet.costpercapita_am18, 0.002); end
  def test_costpercapita_an18; assert_in_epsilon(98.4050466828891, worksheet.costpercapita_an18, 0.002); end
  def test_costpercapita_ao18; assert_in_epsilon(104.35203371787254, worksheet.costpercapita_ao18, 0.002); end
  def test_costpercapita_ap18; assert_in_epsilon(109.40907686304965, worksheet.costpercapita_ap18, 0.002); end
  def test_costpercapita_aq18; assert_in_epsilon(113.61990553763603, worksheet.costpercapita_aq18, 0.002); end
  def test_costpercapita_as18; assert_in_epsilon(79.68311783323291, worksheet.costpercapita_as18, 0.002); end
  def test_costpercapita_at18; assert_in_epsilon(1563.0472745865754, worksheet.costpercapita_at18, 0.002); end
  def test_costpercapita_av18; assert_in_delta(0.0, (worksheet.costpercapita_av18||0), 0.002); end
  def test_costpercapita_aw18; assert_in_epsilon(5.0, worksheet.costpercapita_aw18, 0.002); end
  def test_costpercapita_ay18; assert_in_epsilon(28.264831825778113, worksheet.costpercapita_ay18, 0.002); end
  def test_costpercapita_az18; assert_in_epsilon(39.57600689110642, worksheet.costpercapita_az18, 0.002); end
  def test_costpercapita_ba18; assert_in_epsilon(54.657546297164984, worksheet.costpercapita_ba18, 0.002); end
  def test_costpercapita_bb18; assert_in_epsilon(70.59227297901717, worksheet.costpercapita_bb18, 0.002); end
  def test_costpercapita_bc18; assert_in_epsilon(88.44474321777508, worksheet.costpercapita_bc18, 0.002); end
  def test_costpercapita_bd18; assert_in_epsilon(94.96267728996338, worksheet.costpercapita_bd18, 0.002); end
  def test_costpercapita_be18; assert_in_epsilon(100.69078755199942, worksheet.costpercapita_be18, 0.002); end
  def test_costpercapita_bf18; assert_in_epsilon(105.56202342264059, worksheet.costpercapita_bf18, 0.002); end
  def test_costpercapita_bg18; assert_in_epsilon(109.61851772324253, worksheet.costpercapita_bg18, 0.002); end
  def test_costpercapita_bi18; assert_in_delta(0.0, (worksheet.costpercapita_bi18||0), 0.002); end
  def test_costpercapita_bj18; assert_in_delta(0.0, (worksheet.costpercapita_bj18||0), 0.002); end
  def test_costpercapita_bk18; assert_in_delta(0.0, (worksheet.costpercapita_bk18||0), 0.002); end
  def test_costpercapita_bl18; assert_in_delta(0.0, (worksheet.costpercapita_bl18||0), 0.002); end
  def test_costpercapita_bm18; assert_in_delta(0.0, (worksheet.costpercapita_bm18||0), 0.002); end
  def test_costpercapita_bn18; assert_in_delta(0.0, (worksheet.costpercapita_bn18||0), 0.002); end
  def test_costpercapita_bo18; assert_in_delta(0.0, (worksheet.costpercapita_bo18||0), 0.002); end
  def test_costpercapita_bp18; assert_in_delta(0.0, (worksheet.costpercapita_bp18||0), 0.002); end
  def test_costpercapita_bq18; assert_in_delta(0.0, (worksheet.costpercapita_bq18||0), 0.002); end
  def test_costpercapita_bs18; assert_in_epsilon(29.181388485327794, worksheet.costpercapita_bs18, 0.002); end
  def test_costpercapita_bt18; assert_in_epsilon(40.905501075613785, worksheet.costpercapita_bt18, 0.002); end
  def test_costpercapita_bu18; assert_in_epsilon(56.544610086352215, worksheet.costpercapita_bu18, 0.002); end
  def test_costpercapita_bv18; assert_in_epsilon(73.09293375442162, worksheet.costpercapita_bv18, 0.002); end
  def test_costpercapita_bw18; assert_in_epsilon(91.6375642959336, worksheet.costpercapita_bw18, 0.002); end
  def test_costpercapita_bx18; assert_in_epsilon(98.4050466828891, worksheet.costpercapita_bx18, 0.002); end
  def test_costpercapita_by18; assert_in_epsilon(104.35203371787254, worksheet.costpercapita_by18, 0.002); end
  def test_costpercapita_bz18; assert_in_epsilon(109.40907686304965, worksheet.costpercapita_bz18, 0.002); end
  def test_costpercapita_ca18; assert_in_epsilon(113.61990553763603, worksheet.costpercapita_ca18, 0.002); end
  def test_costpercapita_cc18; assert_in_epsilon(79.68311783323291, worksheet.costpercapita_cc18, 0.002); end
  def test_costpercapita_cd18; assert_in_epsilon(1563.0472745865754, worksheet.costpercapita_cd18, 0.002); end
  def test_costpercapita_cf18; assert_in_delta(0.0, (worksheet.costpercapita_cf18||0), 0.002); end
  def test_costpercapita_cg18; assert_in_delta(0.0, (worksheet.costpercapita_cg18||0), 0.002); end
  def test_costpercapita_ch18; assert_in_delta(0.0, (worksheet.costpercapita_ch18||0), 0.002); end
  def test_costpercapita_ci18; assert_in_delta(0.0, (worksheet.costpercapita_ci18||0), 0.002); end
  def test_costpercapita_cj18; assert_in_delta(0.0, (worksheet.costpercapita_cj18||0), 0.002); end
  def test_costpercapita_ck18; assert_in_delta(0.0, (worksheet.costpercapita_ck18||0), 0.002); end
  def test_costpercapita_cl18; assert_in_delta(0.0, (worksheet.costpercapita_cl18||0), 0.002); end
  def test_costpercapita_cm18; assert_in_delta(0.0, (worksheet.costpercapita_cm18||0), 0.002); end
  def test_costpercapita_cn18; assert_in_delta(0.0, (worksheet.costpercapita_cn18||0), 0.002); end
  def test_costpercapita_cp18; assert_in_delta(0.0, (worksheet.costpercapita_cp18||0), 0.002); end
  def test_costpercapita_cq18; assert_in_delta(0.0, (worksheet.costpercapita_cq18||0), 0.002); end
  def test_costpercapita_cr18; assert_equal("ok", worksheet.costpercapita_cr18); end
  def test_costpercapita_a19; assert_equal("RES.O", worksheet.costpercapita_a19); end
  def test_costpercapita_b19; assert_equal("Residential other", worksheet.costpercapita_b19); end
  def test_costpercapita_c19; assert_equal("Buildings", worksheet.costpercapita_c19); end
  def test_costpercapita_e19; assert_in_epsilon(12.552807130724762, worksheet.costpercapita_e19, 0.002); end
  def test_costpercapita_f19; assert_in_epsilon(14.772776589680026, worksheet.costpercapita_f19, 0.002); end
  def test_costpercapita_g19; assert_in_epsilon(17.36748191586622, worksheet.costpercapita_g19, 0.002); end
  def test_costpercapita_h19; assert_in_epsilon(19.267243474582706, worksheet.costpercapita_h19, 0.002); end
  def test_costpercapita_i19; assert_in_epsilon(20.936512295803436, worksheet.costpercapita_i19, 0.002); end
  def test_costpercapita_j19; assert_in_epsilon(22.396694188121756, worksheet.costpercapita_j19, 0.002); end
  def test_costpercapita_k19; assert_in_epsilon(23.67796733084228, worksheet.costpercapita_k19, 0.002); end
  def test_costpercapita_l19; assert_in_epsilon(24.764530913921114, worksheet.costpercapita_l19, 0.002); end
  def test_costpercapita_m19; assert_in_epsilon(25.666186746177825, worksheet.costpercapita_m19, 0.002); end
  def test_costpercapita_o19; assert_in_delta(0.5899688045569094, worksheet.costpercapita_o19, 0.002); end
  def test_costpercapita_p19; assert_in_delta(0.7016248894078135, worksheet.costpercapita_p19, 0.002); end
  def test_costpercapita_q19; assert_in_delta(0.8352661899378844, worksheet.costpercapita_q19, 0.002); end
  def test_costpercapita_r19; assert_in_delta(0.939585461118577, worksheet.costpercapita_r19, 0.002); end
  def test_costpercapita_s19; assert_in_epsilon(1.0314570028869248, worksheet.costpercapita_s19, 0.002); end
  def test_costpercapita_t19; assert_in_epsilon(1.111817720689116, worksheet.costpercapita_t19, 0.002); end
  def test_costpercapita_u19; assert_in_epsilon(1.1821424306115114, worksheet.costpercapita_u19, 0.002); end
  def test_costpercapita_v19; assert_in_epsilon(1.2416635679354784, worksheet.costpercapita_v19, 0.002); end
  def test_costpercapita_w19; assert_in_epsilon(1.2909054859393276, worksheet.costpercapita_w19, 0.002); end
  def test_costpercapita_y19; assert_in_delta(0.0, (worksheet.costpercapita_y19||0), 0.002); end
  def test_costpercapita_z19; assert_in_delta(0.0, (worksheet.costpercapita_z19||0), 0.002); end
  def test_costpercapita_aa19; assert_in_delta(0.0, (worksheet.costpercapita_aa19||0), 0.002); end
  def test_costpercapita_ab19; assert_in_delta(0.0, (worksheet.costpercapita_ab19||0), 0.002); end
  def test_costpercapita_ac19; assert_in_delta(0.0, (worksheet.costpercapita_ac19||0), 0.002); end
  def test_costpercapita_ad19; assert_in_delta(0.0, (worksheet.costpercapita_ad19||0), 0.002); end
  def test_costpercapita_ae19; assert_in_delta(0.0, (worksheet.costpercapita_ae19||0), 0.002); end
  def test_costpercapita_af19; assert_in_delta(0.0, (worksheet.costpercapita_af19||0), 0.002); end
  def test_costpercapita_ag19; assert_in_delta(0.0, (worksheet.costpercapita_ag19||0), 0.002); end
  def test_costpercapita_ai19; assert_in_epsilon(13.14277593528167, worksheet.costpercapita_ai19, 0.002); end
  def test_costpercapita_aj19; assert_in_epsilon(15.47440147908784, worksheet.costpercapita_aj19, 0.002); end
  def test_costpercapita_ak19; assert_in_epsilon(18.202748105804105, worksheet.costpercapita_ak19, 0.002); end
  def test_costpercapita_al19; assert_in_epsilon(20.20682893570128, worksheet.costpercapita_al19, 0.002); end
  def test_costpercapita_am19; assert_in_epsilon(21.96796929869036, worksheet.costpercapita_am19, 0.002); end
  def test_costpercapita_an19; assert_in_epsilon(23.508511908810874, worksheet.costpercapita_an19, 0.002); end
  def test_costpercapita_ao19; assert_in_epsilon(24.860109761453792, worksheet.costpercapita_ao19, 0.002); end
  def test_costpercapita_ap19; assert_in_epsilon(26.006194481856593, worksheet.costpercapita_ap19, 0.002); end
  def test_costpercapita_aq19; assert_in_epsilon(26.95709223211715, worksheet.costpercapita_aq19, 0.002); end
  def test_costpercapita_as19; assert_in_epsilon(21.147403570978188, worksheet.costpercapita_as19, 0.002); end
  def test_costpercapita_at19; assert_in_epsilon(428.0352772531946, worksheet.costpercapita_at19, 0.002); end
  def test_costpercapita_av19; assert_in_delta(0.0, (worksheet.costpercapita_av19||0), 0.002); end
  def test_costpercapita_aw19; assert_in_epsilon(5.0, worksheet.costpercapita_aw19, 0.002); end
  def test_costpercapita_ay19; assert_in_epsilon(12.552807130724762, worksheet.costpercapita_ay19, 0.002); end
  def test_costpercapita_az19; assert_in_epsilon(14.772776589680026, worksheet.costpercapita_az19, 0.002); end
  def test_costpercapita_ba19; assert_in_epsilon(17.36748191586622, worksheet.costpercapita_ba19, 0.002); end
  def test_costpercapita_bb19; assert_in_epsilon(19.267243474582706, worksheet.costpercapita_bb19, 0.002); end
  def test_costpercapita_bc19; assert_in_epsilon(20.936512295803436, worksheet.costpercapita_bc19, 0.002); end
  def test_costpercapita_bd19; assert_in_epsilon(22.396694188121756, worksheet.costpercapita_bd19, 0.002); end
  def test_costpercapita_be19; assert_in_epsilon(23.67796733084228, worksheet.costpercapita_be19, 0.002); end
  def test_costpercapita_bf19; assert_in_epsilon(24.764530913921114, worksheet.costpercapita_bf19, 0.002); end
  def test_costpercapita_bg19; assert_in_epsilon(25.666186746177825, worksheet.costpercapita_bg19, 0.002); end
  def test_costpercapita_bi19; assert_in_delta(0.0, (worksheet.costpercapita_bi19||0), 0.002); end
  def test_costpercapita_bj19; assert_in_delta(0.0, (worksheet.costpercapita_bj19||0), 0.002); end
  def test_costpercapita_bk19; assert_in_delta(0.0, (worksheet.costpercapita_bk19||0), 0.002); end
  def test_costpercapita_bl19; assert_in_delta(0.0, (worksheet.costpercapita_bl19||0), 0.002); end
  def test_costpercapita_bm19; assert_in_delta(0.0, (worksheet.costpercapita_bm19||0), 0.002); end
  def test_costpercapita_bn19; assert_in_delta(0.0, (worksheet.costpercapita_bn19||0), 0.002); end
  def test_costpercapita_bo19; assert_in_delta(0.0, (worksheet.costpercapita_bo19||0), 0.002); end
  def test_costpercapita_bp19; assert_in_delta(0.0, (worksheet.costpercapita_bp19||0), 0.002); end
  def test_costpercapita_bq19; assert_in_delta(0.0, (worksheet.costpercapita_bq19||0), 0.002); end
  def test_costpercapita_bs19; assert_in_epsilon(13.14277593528167, worksheet.costpercapita_bs19, 0.002); end
  def test_costpercapita_bt19; assert_in_epsilon(15.47440147908784, worksheet.costpercapita_bt19, 0.002); end
  def test_costpercapita_bu19; assert_in_epsilon(18.202748105804105, worksheet.costpercapita_bu19, 0.002); end
  def test_costpercapita_bv19; assert_in_epsilon(20.20682893570128, worksheet.costpercapita_bv19, 0.002); end
  def test_costpercapita_bw19; assert_in_epsilon(21.96796929869036, worksheet.costpercapita_bw19, 0.002); end
  def test_costpercapita_bx19; assert_in_epsilon(23.508511908810874, worksheet.costpercapita_bx19, 0.002); end
  def test_costpercapita_by19; assert_in_epsilon(24.860109761453792, worksheet.costpercapita_by19, 0.002); end
  def test_costpercapita_bz19; assert_in_epsilon(26.006194481856593, worksheet.costpercapita_bz19, 0.002); end
  def test_costpercapita_ca19; assert_in_epsilon(26.95709223211715, worksheet.costpercapita_ca19, 0.002); end
  def test_costpercapita_cc19; assert_in_epsilon(21.147403570978188, worksheet.costpercapita_cc19, 0.002); end
  def test_costpercapita_cd19; assert_in_epsilon(428.0352772531946, worksheet.costpercapita_cd19, 0.002); end
  def test_costpercapita_cf19; assert_in_delta(0.0, (worksheet.costpercapita_cf19||0), 0.002); end
  def test_costpercapita_cg19; assert_in_delta(0.0, (worksheet.costpercapita_cg19||0), 0.002); end
  def test_costpercapita_ch19; assert_in_delta(0.0, (worksheet.costpercapita_ch19||0), 0.002); end
  def test_costpercapita_ci19; assert_in_delta(0.0, (worksheet.costpercapita_ci19||0), 0.002); end
  def test_costpercapita_cj19; assert_in_delta(0.0, (worksheet.costpercapita_cj19||0), 0.002); end
  def test_costpercapita_ck19; assert_in_delta(0.0, (worksheet.costpercapita_ck19||0), 0.002); end
  def test_costpercapita_cl19; assert_in_delta(0.0, (worksheet.costpercapita_cl19||0), 0.002); end
  def test_costpercapita_cm19; assert_in_delta(0.0, (worksheet.costpercapita_cm19||0), 0.002); end
  def test_costpercapita_cn19; assert_in_delta(0.0, (worksheet.costpercapita_cn19||0), 0.002); end
  def test_costpercapita_cp19; assert_in_delta(0.0, (worksheet.costpercapita_cp19||0), 0.002); end
  def test_costpercapita_cq19; assert_in_delta(0.0, (worksheet.costpercapita_cq19||0), 0.002); end
  def test_costpercapita_cr19; assert_equal("ok", worksheet.costpercapita_cr19); end
  def test_costpercapita_a20; assert_equal("RES.K", worksheet.costpercapita_a20); end
  def test_costpercapita_b20; assert_equal("Residential cooking", worksheet.costpercapita_b20); end
  def test_costpercapita_c20; assert_equal("Buildings", worksheet.costpercapita_c20); end
  def test_costpercapita_e20; assert_in_epsilon(44.95138183798773, worksheet.costpercapita_e20, 0.002); end
  def test_costpercapita_f20; assert_in_epsilon(48.57133395471441, worksheet.costpercapita_f20, 0.002); end
  def test_costpercapita_g20; assert_in_epsilon(51.972600753116104, worksheet.costpercapita_g20, 0.002); end
  def test_costpercapita_h20; assert_in_epsilon(52.04802458970166, worksheet.costpercapita_h20, 0.002); end
  def test_costpercapita_i20; assert_in_epsilon(50.924874327003145, worksheet.costpercapita_i20, 0.002); end
  def test_costpercapita_j20; assert_in_epsilon(53.59514599618372, worksheet.costpercapita_j20, 0.002); end
  def test_costpercapita_k20; assert_in_epsilon(55.903646921605564, worksheet.costpercapita_k20, 0.002); end
  def test_costpercapita_l20; assert_in_epsilon(57.819034851287626, worksheet.costpercapita_l20, 0.002); end
  def test_costpercapita_m20; assert_in_epsilon(59.36908234113379, worksheet.costpercapita_m20, 0.002); end
  def test_costpercapita_o20; assert_in_epsilon(2.2095793940035633, worksheet.costpercapita_o20, 0.002); end
  def test_costpercapita_p20; assert_in_epsilon(2.4663362909093585, worksheet.costpercapita_p20, 0.002); end
  def test_costpercapita_q20; assert_in_epsilon(2.728960338123636, worksheet.costpercapita_q20, 0.002); end
  def test_costpercapita_r20; assert_in_epsilon(2.8360657288725633, worksheet.costpercapita_r20, 0.002); end
  def test_costpercapita_s20; assert_in_epsilon(2.891261619810362, worksheet.costpercapita_s20, 0.002); end
  def test_costpercapita_t20; assert_in_epsilon(3.035524038616009, worksheet.costpercapita_t20, 0.002); end
  def test_costpercapita_u20; assert_in_epsilon(3.1605672019775697, worksheet.costpercapita_u20, 0.002); end
  def test_costpercapita_v20; assert_in_epsilon(3.264568934400513, worksheet.costpercapita_v20, 0.002); end
  def test_costpercapita_w20; assert_in_epsilon(3.3490357686236623, worksheet.costpercapita_w20, 0.002); end
  def test_costpercapita_y20; assert_in_delta(0.0, (worksheet.costpercapita_y20||0), 0.002); end
  def test_costpercapita_z20; assert_in_delta(0.0, (worksheet.costpercapita_z20||0), 0.002); end
  def test_costpercapita_aa20; assert_in_delta(0.0, (worksheet.costpercapita_aa20||0), 0.002); end
  def test_costpercapita_ab20; assert_in_delta(0.0, (worksheet.costpercapita_ab20||0), 0.002); end
  def test_costpercapita_ac20; assert_in_delta(0.0, (worksheet.costpercapita_ac20||0), 0.002); end
  def test_costpercapita_ad20; assert_in_delta(0.0, (worksheet.costpercapita_ad20||0), 0.002); end
  def test_costpercapita_ae20; assert_in_delta(0.0, (worksheet.costpercapita_ae20||0), 0.002); end
  def test_costpercapita_af20; assert_in_delta(0.0, (worksheet.costpercapita_af20||0), 0.002); end
  def test_costpercapita_ag20; assert_in_delta(0.0, (worksheet.costpercapita_ag20||0), 0.002); end
  def test_costpercapita_ai20; assert_in_epsilon(47.1609612319913, worksheet.costpercapita_ai20, 0.002); end
  def test_costpercapita_aj20; assert_in_epsilon(51.03767024562377, worksheet.costpercapita_aj20, 0.002); end
  def test_costpercapita_ak20; assert_in_epsilon(54.70156109123974, worksheet.costpercapita_ak20, 0.002); end
  def test_costpercapita_al20; assert_in_epsilon(54.88409031857422, worksheet.costpercapita_al20, 0.002); end
  def test_costpercapita_am20; assert_in_epsilon(53.8161359468135, worksheet.costpercapita_am20, 0.002); end
  def test_costpercapita_an20; assert_in_epsilon(56.63067003479973, worksheet.costpercapita_an20, 0.002); end
  def test_costpercapita_ao20; assert_in_epsilon(59.064214123583135, worksheet.costpercapita_ao20, 0.002); end
  def test_costpercapita_ap20; assert_in_epsilon(61.08360378568814, worksheet.costpercapita_ap20, 0.002); end
  def test_costpercapita_aq20; assert_in_epsilon(62.71811810975745, worksheet.costpercapita_aq20, 0.002); end
  def test_costpercapita_as20; assert_in_epsilon(55.67744720978566, worksheet.costpercapita_as20, 0.002); end
  def test_costpercapita_at20; assert_in_epsilon(1156.9773936021988, worksheet.costpercapita_at20, 0.002); end
  def test_costpercapita_av20; assert_in_delta(0.0, (worksheet.costpercapita_av20||0), 0.002); end
  def test_costpercapita_aw20; assert_in_epsilon(5.0, worksheet.costpercapita_aw20, 0.002); end
  def test_costpercapita_ay20; assert_in_epsilon(44.95138183798773, worksheet.costpercapita_ay20, 0.002); end
  def test_costpercapita_az20; assert_in_epsilon(48.57133395471441, worksheet.costpercapita_az20, 0.002); end
  def test_costpercapita_ba20; assert_in_epsilon(51.972600753116104, worksheet.costpercapita_ba20, 0.002); end
  def test_costpercapita_bb20; assert_in_epsilon(52.04802458970166, worksheet.costpercapita_bb20, 0.002); end
  def test_costpercapita_bc20; assert_in_epsilon(50.924874327003145, worksheet.costpercapita_bc20, 0.002); end
  def test_costpercapita_bd20; assert_in_epsilon(53.59514599618372, worksheet.costpercapita_bd20, 0.002); end
  def test_costpercapita_be20; assert_in_epsilon(55.903646921605564, worksheet.costpercapita_be20, 0.002); end
  def test_costpercapita_bf20; assert_in_epsilon(57.819034851287626, worksheet.costpercapita_bf20, 0.002); end
  def test_costpercapita_bg20; assert_in_epsilon(59.36908234113379, worksheet.costpercapita_bg20, 0.002); end
  def test_costpercapita_bi20; assert_in_delta(0.0, (worksheet.costpercapita_bi20||0), 0.002); end
  def test_costpercapita_bj20; assert_in_delta(0.0, (worksheet.costpercapita_bj20||0), 0.002); end
  def test_costpercapita_bk20; assert_in_delta(0.0, (worksheet.costpercapita_bk20||0), 0.002); end
  def test_costpercapita_bl20; assert_in_delta(0.0, (worksheet.costpercapita_bl20||0), 0.002); end
  def test_costpercapita_bm20; assert_in_delta(0.0, (worksheet.costpercapita_bm20||0), 0.002); end
  def test_costpercapita_bn20; assert_in_delta(0.0, (worksheet.costpercapita_bn20||0), 0.002); end
  def test_costpercapita_bo20; assert_in_delta(0.0, (worksheet.costpercapita_bo20||0), 0.002); end
  def test_costpercapita_bp20; assert_in_delta(0.0, (worksheet.costpercapita_bp20||0), 0.002); end
  def test_costpercapita_bq20; assert_in_delta(0.0, (worksheet.costpercapita_bq20||0), 0.002); end
  def test_costpercapita_bs20; assert_in_epsilon(47.1609612319913, worksheet.costpercapita_bs20, 0.002); end
  def test_costpercapita_bt20; assert_in_epsilon(51.03767024562377, worksheet.costpercapita_bt20, 0.002); end
  def test_costpercapita_bu20; assert_in_epsilon(54.70156109123974, worksheet.costpercapita_bu20, 0.002); end
  def test_costpercapita_bv20; assert_in_epsilon(54.88409031857422, worksheet.costpercapita_bv20, 0.002); end
  def test_costpercapita_bw20; assert_in_epsilon(53.8161359468135, worksheet.costpercapita_bw20, 0.002); end
  def test_costpercapita_bx20; assert_in_epsilon(56.63067003479973, worksheet.costpercapita_bx20, 0.002); end
  def test_costpercapita_by20; assert_in_epsilon(59.064214123583135, worksheet.costpercapita_by20, 0.002); end
  def test_costpercapita_bz20; assert_in_epsilon(61.08360378568814, worksheet.costpercapita_bz20, 0.002); end
  def test_costpercapita_ca20; assert_in_epsilon(62.71811810975745, worksheet.costpercapita_ca20, 0.002); end
  def test_costpercapita_cc20; assert_in_epsilon(55.67744720978566, worksheet.costpercapita_cc20, 0.002); end
  def test_costpercapita_cd20; assert_in_epsilon(1156.9773936021988, worksheet.costpercapita_cd20, 0.002); end
  def test_costpercapita_cf20; assert_in_delta(0.0, (worksheet.costpercapita_cf20||0), 0.002); end
  def test_costpercapita_cg20; assert_in_delta(0.0, (worksheet.costpercapita_cg20||0), 0.002); end
  def test_costpercapita_ch20; assert_in_delta(0.0, (worksheet.costpercapita_ch20||0), 0.002); end
  def test_costpercapita_ci20; assert_in_delta(0.0, (worksheet.costpercapita_ci20||0), 0.002); end
  def test_costpercapita_cj20; assert_in_delta(0.0, (worksheet.costpercapita_cj20||0), 0.002); end
  def test_costpercapita_ck20; assert_in_delta(0.0, (worksheet.costpercapita_ck20||0), 0.002); end
  def test_costpercapita_cl20; assert_in_delta(0.0, (worksheet.costpercapita_cl20||0), 0.002); end
  def test_costpercapita_cm20; assert_in_delta(0.0, (worksheet.costpercapita_cm20||0), 0.002); end
  def test_costpercapita_cn20; assert_in_delta(0.0, (worksheet.costpercapita_cn20||0), 0.002); end
  def test_costpercapita_cp20; assert_in_delta(0.0, (worksheet.costpercapita_cp20||0), 0.002); end
  def test_costpercapita_cq20; assert_in_delta(0.0, (worksheet.costpercapita_cq20||0), 0.002); end
  def test_costpercapita_cr20; assert_equal("ok", worksheet.costpercapita_cr20); end
  def test_costpercapita_a21; assert_equal("RES.R", worksheet.costpercapita_a21); end
  def test_costpercapita_b21; assert_equal("Residential refrigeration", worksheet.costpercapita_b21); end
  def test_costpercapita_c21; assert_equal("Buildings", worksheet.costpercapita_c21); end
  def test_costpercapita_e21; assert_in_epsilon(95.30933515568631, worksheet.costpercapita_e21, 0.002); end
  def test_costpercapita_f21; assert_in_epsilon(107.40623847807915, worksheet.costpercapita_f21, 0.002); end
  def test_costpercapita_g21; assert_in_epsilon(120.40849836828276, worksheet.costpercapita_g21, 0.002); end
  def test_costpercapita_h21; assert_in_epsilon(127.10783907035055, worksheet.costpercapita_h21, 0.002); end
  def test_costpercapita_i21; assert_in_epsilon(132.05939242904506, worksheet.costpercapita_i21, 0.002); end
  def test_costpercapita_j21; assert_in_epsilon(139.42389743296232, worksheet.costpercapita_j21, 0.002); end
  def test_costpercapita_k21; assert_in_epsilon(145.80724571809455, worksheet.costpercapita_k21, 0.002); end
  def test_costpercapita_l21; assert_in_epsilon(151.1211361438785, worksheet.costpercapita_l21, 0.002); end
  def test_costpercapita_m21; assert_in_epsilon(155.4327604453933, worksheet.costpercapita_m21, 0.002); end
  def test_costpercapita_o21; assert_in_epsilon(7.338803635982227, worksheet.costpercapita_o21, 0.002); end
  def test_costpercapita_p21; assert_in_epsilon(8.270228489707165, worksheet.costpercapita_p21, 0.002); end
  def test_costpercapita_q21; assert_in_epsilon(9.271339084622847, worksheet.costpercapita_q21, 0.002); end
  def test_costpercapita_r21; assert_in_epsilon(9.787097001743128, worksheet.costpercapita_r21, 0.002); end
  def test_costpercapita_s21; assert_in_epsilon(10.16825345581092, worksheet.costpercapita_s21, 0.002); end
  def test_costpercapita_t21; assert_in_epsilon(10.73527610042401, worksheet.costpercapita_t21, 0.002); end
  def test_costpercapita_u21; assert_in_epsilon(11.226755611172228, worksheet.costpercapita_u21, 0.002); end
  def test_costpercapita_v21; assert_in_epsilon(11.635892967843175, worksheet.costpercapita_v21, 0.002); end
  def test_costpercapita_w21; assert_in_epsilon(11.967861636307834, worksheet.costpercapita_w21, 0.002); end
  def test_costpercapita_y21; assert_in_delta(0.0, (worksheet.costpercapita_y21||0), 0.002); end
  def test_costpercapita_z21; assert_in_delta(0.0, (worksheet.costpercapita_z21||0), 0.002); end
  def test_costpercapita_aa21; assert_in_delta(0.0, (worksheet.costpercapita_aa21||0), 0.002); end
  def test_costpercapita_ab21; assert_in_delta(0.0, (worksheet.costpercapita_ab21||0), 0.002); end
  def test_costpercapita_ac21; assert_in_delta(0.0, (worksheet.costpercapita_ac21||0), 0.002); end
  def test_costpercapita_ad21; assert_in_delta(0.0, (worksheet.costpercapita_ad21||0), 0.002); end
  def test_costpercapita_ae21; assert_in_delta(0.0, (worksheet.costpercapita_ae21||0), 0.002); end
  def test_costpercapita_af21; assert_in_delta(0.0, (worksheet.costpercapita_af21||0), 0.002); end
  def test_costpercapita_ag21; assert_in_delta(0.0, (worksheet.costpercapita_ag21||0), 0.002); end
  def test_costpercapita_ai21; assert_in_epsilon(102.64813879166854, worksheet.costpercapita_ai21, 0.002); end
  def test_costpercapita_aj21; assert_in_epsilon(115.67646696778631, worksheet.costpercapita_aj21, 0.002); end
  def test_costpercapita_ak21; assert_in_epsilon(129.67983745290562, worksheet.costpercapita_ak21, 0.002); end
  def test_costpercapita_al21; assert_in_epsilon(136.89493607209369, worksheet.costpercapita_al21, 0.002); end
  def test_costpercapita_am21; assert_in_epsilon(142.22764588485597, worksheet.costpercapita_am21, 0.002); end
  def test_costpercapita_an21; assert_in_epsilon(150.15917353338634, worksheet.costpercapita_an21, 0.002); end
  def test_costpercapita_ao21; assert_in_epsilon(157.03400132926677, worksheet.costpercapita_ao21, 0.002); end
  def test_costpercapita_ap21; assert_in_epsilon(162.75702911172166, worksheet.costpercapita_ap21, 0.002); end
  def test_costpercapita_aq21; assert_in_epsilon(167.40062208170113, worksheet.costpercapita_aq21, 0.002); end
  def test_costpercapita_as21; assert_in_epsilon(140.4975390250429, worksheet.costpercapita_as21, 0.002); end
  def test_costpercapita_at21; assert_in_epsilon(2884.672444484735, worksheet.costpercapita_at21, 0.002); end
  def test_costpercapita_av21; assert_in_delta(0.0, (worksheet.costpercapita_av21||0), 0.002); end
  def test_costpercapita_aw21; assert_in_epsilon(5.0, worksheet.costpercapita_aw21, 0.002); end
  def test_costpercapita_ay21; assert_in_epsilon(95.30933515568631, worksheet.costpercapita_ay21, 0.002); end
  def test_costpercapita_az21; assert_in_epsilon(107.40623847807915, worksheet.costpercapita_az21, 0.002); end
  def test_costpercapita_ba21; assert_in_epsilon(120.40849836828276, worksheet.costpercapita_ba21, 0.002); end
  def test_costpercapita_bb21; assert_in_epsilon(127.10783907035055, worksheet.costpercapita_bb21, 0.002); end
  def test_costpercapita_bc21; assert_in_epsilon(132.05939242904506, worksheet.costpercapita_bc21, 0.002); end
  def test_costpercapita_bd21; assert_in_epsilon(139.42389743296232, worksheet.costpercapita_bd21, 0.002); end
  def test_costpercapita_be21; assert_in_epsilon(145.80724571809455, worksheet.costpercapita_be21, 0.002); end
  def test_costpercapita_bf21; assert_in_epsilon(151.1211361438785, worksheet.costpercapita_bf21, 0.002); end
  def test_costpercapita_bg21; assert_in_epsilon(155.43276044539334, worksheet.costpercapita_bg21, 0.002); end
  def test_costpercapita_bi21; assert_in_delta(0.0, (worksheet.costpercapita_bi21||0), 0.002); end
  def test_costpercapita_bj21; assert_in_delta(0.0, (worksheet.costpercapita_bj21||0), 0.002); end
  def test_costpercapita_bk21; assert_in_delta(0.0, (worksheet.costpercapita_bk21||0), 0.002); end
  def test_costpercapita_bl21; assert_in_delta(0.0, (worksheet.costpercapita_bl21||0), 0.002); end
  def test_costpercapita_bm21; assert_in_delta(0.0, (worksheet.costpercapita_bm21||0), 0.002); end
  def test_costpercapita_bn21; assert_in_delta(0.0, (worksheet.costpercapita_bn21||0), 0.002); end
  def test_costpercapita_bo21; assert_in_delta(0.0, (worksheet.costpercapita_bo21||0), 0.002); end
  def test_costpercapita_bp21; assert_in_delta(0.0, (worksheet.costpercapita_bp21||0), 0.002); end
  def test_costpercapita_bq21; assert_in_delta(0.0, (worksheet.costpercapita_bq21||0), 0.002); end
  def test_costpercapita_bs21; assert_in_epsilon(102.64813879166854, worksheet.costpercapita_bs21, 0.002); end
  def test_costpercapita_bt21; assert_in_epsilon(115.67646696778631, worksheet.costpercapita_bt21, 0.002); end
  def test_costpercapita_bu21; assert_in_epsilon(129.67983745290562, worksheet.costpercapita_bu21, 0.002); end
  def test_costpercapita_bv21; assert_in_epsilon(136.89493607209369, worksheet.costpercapita_bv21, 0.002); end
  def test_costpercapita_bw21; assert_in_epsilon(142.22764588485597, worksheet.costpercapita_bw21, 0.002); end
  def test_costpercapita_bx21; assert_in_epsilon(150.15917353338634, worksheet.costpercapita_bx21, 0.002); end
  def test_costpercapita_by21; assert_in_epsilon(157.03400132926677, worksheet.costpercapita_by21, 0.002); end
  def test_costpercapita_bz21; assert_in_epsilon(162.75702911172166, worksheet.costpercapita_bz21, 0.002); end
  def test_costpercapita_ca21; assert_in_epsilon(167.4006220817012, worksheet.costpercapita_ca21, 0.002); end
  def test_costpercapita_cc21; assert_in_epsilon(140.4975390250429, worksheet.costpercapita_cc21, 0.002); end
  def test_costpercapita_cd21; assert_in_epsilon(2884.672444484735, worksheet.costpercapita_cd21, 0.002); end
  def test_costpercapita_cf21; assert_in_delta(0.0, (worksheet.costpercapita_cf21||0), 0.002); end
  def test_costpercapita_cg21; assert_in_delta(0.0, (worksheet.costpercapita_cg21||0), 0.002); end
  def test_costpercapita_ch21; assert_in_delta(0.0, (worksheet.costpercapita_ch21||0), 0.002); end
  def test_costpercapita_ci21; assert_in_delta(0.0, (worksheet.costpercapita_ci21||0), 0.002); end
  def test_costpercapita_cj21; assert_in_delta(0.0, (worksheet.costpercapita_cj21||0), 0.002); end
  def test_costpercapita_ck21; assert_in_delta(0.0, (worksheet.costpercapita_ck21||0), 0.002); end
  def test_costpercapita_cl21; assert_in_delta(0.0, (worksheet.costpercapita_cl21||0), 0.002); end
  def test_costpercapita_cm21; assert_in_delta(0.0, (worksheet.costpercapita_cm21||0), 0.002); end
  def test_costpercapita_cn21; assert_in_delta(0.0, (worksheet.costpercapita_cn21||0), 0.002); end
  def test_costpercapita_cp21; assert_in_delta(0.0, (worksheet.costpercapita_cp21||0), 0.002); end
  def test_costpercapita_cq21; assert_in_delta(0.0, (worksheet.costpercapita_cq21||0), 0.002); end
  def test_costpercapita_cr21; assert_equal("ok", worksheet.costpercapita_cr21); end
  def test_costpercapita_a22; assert_equal("RES.N", worksheet.costpercapita_a22); end
  def test_costpercapita_b22; assert_equal("Residential non-energy use", worksheet.costpercapita_b22); end
  def test_costpercapita_c22; assert_equal("Buildings", worksheet.costpercapita_c22); end
  def test_costpercapita_e22; assert_in_delta(0.0, (worksheet.costpercapita_e22||0), 0.002); end
  def test_costpercapita_f22; assert_in_delta(0.0, (worksheet.costpercapita_f22||0), 0.002); end
  def test_costpercapita_g22; assert_in_delta(0.0, (worksheet.costpercapita_g22||0), 0.002); end
  def test_costpercapita_h22; assert_in_delta(0.0, (worksheet.costpercapita_h22||0), 0.002); end
  def test_costpercapita_i22; assert_in_delta(0.0, (worksheet.costpercapita_i22||0), 0.002); end
  def test_costpercapita_j22; assert_in_delta(0.0, (worksheet.costpercapita_j22||0), 0.002); end
  def test_costpercapita_k22; assert_in_delta(0.0, (worksheet.costpercapita_k22||0), 0.002); end
  def test_costpercapita_l22; assert_in_delta(0.0, (worksheet.costpercapita_l22||0), 0.002); end
  def test_costpercapita_m22; assert_in_delta(0.0, (worksheet.costpercapita_m22||0), 0.002); end
  def test_costpercapita_o22; assert_in_delta(0.0, (worksheet.costpercapita_o22||0), 0.002); end
  def test_costpercapita_p22; assert_in_delta(0.0, (worksheet.costpercapita_p22||0), 0.002); end
  def test_costpercapita_q22; assert_in_delta(0.0, (worksheet.costpercapita_q22||0), 0.002); end
  def test_costpercapita_r22; assert_in_delta(0.0, (worksheet.costpercapita_r22||0), 0.002); end
  def test_costpercapita_s22; assert_in_delta(0.0, (worksheet.costpercapita_s22||0), 0.002); end
  def test_costpercapita_t22; assert_in_delta(0.0, (worksheet.costpercapita_t22||0), 0.002); end
  def test_costpercapita_u22; assert_in_delta(0.0, (worksheet.costpercapita_u22||0), 0.002); end
  def test_costpercapita_v22; assert_in_delta(0.0, (worksheet.costpercapita_v22||0), 0.002); end
  def test_costpercapita_w22; assert_in_delta(0.0, (worksheet.costpercapita_w22||0), 0.002); end
  def test_costpercapita_y22; assert_in_delta(0.0, (worksheet.costpercapita_y22||0), 0.002); end
  def test_costpercapita_z22; assert_in_delta(0.0, (worksheet.costpercapita_z22||0), 0.002); end
  def test_costpercapita_aa22; assert_in_delta(0.0, (worksheet.costpercapita_aa22||0), 0.002); end
  def test_costpercapita_ab22; assert_in_delta(0.0, (worksheet.costpercapita_ab22||0), 0.002); end
  def test_costpercapita_ac22; assert_in_delta(0.0, (worksheet.costpercapita_ac22||0), 0.002); end
  def test_costpercapita_ad22; assert_in_delta(0.0, (worksheet.costpercapita_ad22||0), 0.002); end
  def test_costpercapita_ae22; assert_in_delta(0.0, (worksheet.costpercapita_ae22||0), 0.002); end
  def test_costpercapita_af22; assert_in_delta(0.0, (worksheet.costpercapita_af22||0), 0.002); end
  def test_costpercapita_ag22; assert_in_delta(0.0, (worksheet.costpercapita_ag22||0), 0.002); end
  def test_costpercapita_ai22; assert_in_delta(0.0, (worksheet.costpercapita_ai22||0), 0.002); end
  def test_costpercapita_aj22; assert_in_delta(0.0, (worksheet.costpercapita_aj22||0), 0.002); end
  def test_costpercapita_ak22; assert_in_delta(0.0, (worksheet.costpercapita_ak22||0), 0.002); end
  def test_costpercapita_al22; assert_in_delta(0.0, (worksheet.costpercapita_al22||0), 0.002); end
  def test_costpercapita_am22; assert_in_delta(0.0, (worksheet.costpercapita_am22||0), 0.002); end
  def test_costpercapita_an22; assert_in_delta(0.0, (worksheet.costpercapita_an22||0), 0.002); end
  def test_costpercapita_ao22; assert_in_delta(0.0, (worksheet.costpercapita_ao22||0), 0.002); end
  def test_costpercapita_ap22; assert_in_delta(0.0, (worksheet.costpercapita_ap22||0), 0.002); end
  def test_costpercapita_aq22; assert_in_delta(0.0, (worksheet.costpercapita_aq22||0), 0.002); end
  def test_costpercapita_as22; assert_in_delta(0.0, (worksheet.costpercapita_as22||0), 0.002); end
  def test_costpercapita_at22; assert_in_delta(0.0, (worksheet.costpercapita_at22||0), 0.002); end
  def test_costpercapita_av22; assert_in_delta(0.0, (worksheet.costpercapita_av22||0), 0.002); end
  def test_costpercapita_aw22; assert_in_epsilon(5.0, worksheet.costpercapita_aw22, 0.002); end
  def test_costpercapita_ay22; assert_in_delta(0.0, (worksheet.costpercapita_ay22||0), 0.002); end
  def test_costpercapita_az22; assert_in_delta(0.0, (worksheet.costpercapita_az22||0), 0.002); end
  def test_costpercapita_ba22; assert_in_delta(0.0, (worksheet.costpercapita_ba22||0), 0.002); end
  def test_costpercapita_bb22; assert_in_delta(0.0, (worksheet.costpercapita_bb22||0), 0.002); end
  def test_costpercapita_bc22; assert_in_delta(0.0, (worksheet.costpercapita_bc22||0), 0.002); end
  def test_costpercapita_bd22; assert_in_delta(0.0, (worksheet.costpercapita_bd22||0), 0.002); end
  def test_costpercapita_be22; assert_in_delta(0.0, (worksheet.costpercapita_be22||0), 0.002); end
  def test_costpercapita_bf22; assert_in_delta(0.0, (worksheet.costpercapita_bf22||0), 0.002); end
  def test_costpercapita_bg22; assert_in_delta(0.0, (worksheet.costpercapita_bg22||0), 0.002); end
  def test_costpercapita_bi22; assert_in_delta(0.0, (worksheet.costpercapita_bi22||0), 0.002); end
  def test_costpercapita_bj22; assert_in_delta(0.0, (worksheet.costpercapita_bj22||0), 0.002); end
  def test_costpercapita_bk22; assert_in_delta(0.0, (worksheet.costpercapita_bk22||0), 0.002); end
  def test_costpercapita_bl22; assert_in_delta(0.0, (worksheet.costpercapita_bl22||0), 0.002); end
  def test_costpercapita_bm22; assert_in_delta(0.0, (worksheet.costpercapita_bm22||0), 0.002); end
  def test_costpercapita_bn22; assert_in_delta(0.0, (worksheet.costpercapita_bn22||0), 0.002); end
  def test_costpercapita_bo22; assert_in_delta(0.0, (worksheet.costpercapita_bo22||0), 0.002); end
  def test_costpercapita_bp22; assert_in_delta(0.0, (worksheet.costpercapita_bp22||0), 0.002); end
  def test_costpercapita_bq22; assert_in_delta(0.0, (worksheet.costpercapita_bq22||0), 0.002); end
  def test_costpercapita_bs22; assert_in_delta(0.0, (worksheet.costpercapita_bs22||0), 0.002); end
  def test_costpercapita_bt22; assert_in_delta(0.0, (worksheet.costpercapita_bt22||0), 0.002); end
  def test_costpercapita_bu22; assert_in_delta(0.0, (worksheet.costpercapita_bu22||0), 0.002); end
  def test_costpercapita_bv22; assert_in_delta(0.0, (worksheet.costpercapita_bv22||0), 0.002); end
  def test_costpercapita_bw22; assert_in_delta(0.0, (worksheet.costpercapita_bw22||0), 0.002); end
  def test_costpercapita_bx22; assert_in_delta(0.0, (worksheet.costpercapita_bx22||0), 0.002); end
  def test_costpercapita_by22; assert_in_delta(0.0, (worksheet.costpercapita_by22||0), 0.002); end
  def test_costpercapita_bz22; assert_in_delta(0.0, (worksheet.costpercapita_bz22||0), 0.002); end
  def test_costpercapita_ca22; assert_in_delta(0.0, (worksheet.costpercapita_ca22||0), 0.002); end
  def test_costpercapita_cc22; assert_in_delta(0.0, (worksheet.costpercapita_cc22||0), 0.002); end
  def test_costpercapita_cd22; assert_in_delta(0.0, (worksheet.costpercapita_cd22||0), 0.002); end
  def test_costpercapita_cf22; assert_in_delta(0.0, (worksheet.costpercapita_cf22||0), 0.002); end
  def test_costpercapita_cg22; assert_in_delta(0.0, (worksheet.costpercapita_cg22||0), 0.002); end
  def test_costpercapita_ch22; assert_in_delta(0.0, (worksheet.costpercapita_ch22||0), 0.002); end
  def test_costpercapita_ci22; assert_in_delta(0.0, (worksheet.costpercapita_ci22||0), 0.002); end
  def test_costpercapita_cj22; assert_in_delta(0.0, (worksheet.costpercapita_cj22||0), 0.002); end
  def test_costpercapita_ck22; assert_in_delta(0.0, (worksheet.costpercapita_ck22||0), 0.002); end
  def test_costpercapita_cl22; assert_in_delta(0.0, (worksheet.costpercapita_cl22||0), 0.002); end
  def test_costpercapita_cm22; assert_in_delta(0.0, (worksheet.costpercapita_cm22||0), 0.002); end
  def test_costpercapita_cn22; assert_in_delta(0.0, (worksheet.costpercapita_cn22||0), 0.002); end
  def test_costpercapita_cp22; assert_in_delta(0.0, (worksheet.costpercapita_cp22||0), 0.002); end
  def test_costpercapita_cq22; assert_in_delta(0.0, (worksheet.costpercapita_cq22||0), 0.002); end
  def test_costpercapita_cr22; assert_equal("ok", worksheet.costpercapita_cr22); end
  def test_costpercapita_a23; assert_equal("BIO.SUP", worksheet.costpercapita_a23); end
  def test_costpercapita_b23; assert_equal("Biomass for fuel", worksheet.costpercapita_b23); end
  def test_costpercapita_c23; assert_equal("Bioenergy", worksheet.costpercapita_c23); end
  def test_costpercapita_e23; assert_in_delta(0.0, (worksheet.costpercapita_e23||0), 0.002); end
  def test_costpercapita_f23; assert_in_delta(0.0, (worksheet.costpercapita_f23||0), 0.002); end
  def test_costpercapita_g23; assert_in_delta(0.0, (worksheet.costpercapita_g23||0), 0.002); end
  def test_costpercapita_h23; assert_in_delta(0.0, (worksheet.costpercapita_h23||0), 0.002); end
  def test_costpercapita_i23; assert_in_delta(0.0, (worksheet.costpercapita_i23||0), 0.002); end
  def test_costpercapita_j23; assert_in_delta(0.0, (worksheet.costpercapita_j23||0), 0.002); end
  def test_costpercapita_k23; assert_in_delta(0.0, (worksheet.costpercapita_k23||0), 0.002); end
  def test_costpercapita_l23; assert_in_delta(0.0, (worksheet.costpercapita_l23||0), 0.002); end
  def test_costpercapita_m23; assert_in_delta(0.0, (worksheet.costpercapita_m23||0), 0.002); end
  def test_costpercapita_o23; assert_in_delta(0.0, (worksheet.costpercapita_o23||0), 0.002); end
  def test_costpercapita_p23; assert_in_delta(0.0, (worksheet.costpercapita_p23||0), 0.002); end
  def test_costpercapita_q23; assert_in_delta(0.0, (worksheet.costpercapita_q23||0), 0.002); end
  def test_costpercapita_r23; assert_in_delta(0.0, (worksheet.costpercapita_r23||0), 0.002); end
  def test_costpercapita_s23; assert_in_delta(0.0, (worksheet.costpercapita_s23||0), 0.002); end
  def test_costpercapita_t23; assert_in_delta(0.0, (worksheet.costpercapita_t23||0), 0.002); end
  def test_costpercapita_u23; assert_in_delta(0.0, (worksheet.costpercapita_u23||0), 0.002); end
  def test_costpercapita_v23; assert_in_delta(0.0, (worksheet.costpercapita_v23||0), 0.002); end
  def test_costpercapita_w23; assert_in_delta(0.0, (worksheet.costpercapita_w23||0), 0.002); end
  def test_costpercapita_y23; assert_in_delta(0.0, (worksheet.costpercapita_y23||0), 0.002); end
  def test_costpercapita_z23; assert_in_delta(0.0385697013093565, worksheet.costpercapita_z23, 0.002); end
  def test_costpercapita_aa23; assert_in_delta(0.08228553517656419, worksheet.costpercapita_aa23, 0.002); end
  def test_costpercapita_ab23; assert_in_delta(0.19749369850207865, worksheet.costpercapita_ab23, 0.002); end
  def test_costpercapita_ac23; assert_in_delta(0.2808918939575386, worksheet.costpercapita_ac23, 0.002); end
  def test_costpercapita_ad23; assert_in_delta(0.3745384822219214, worksheet.costpercapita_ad23, 0.002); end
  def test_costpercapita_ae23; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ae23, 0.002); end
  def test_costpercapita_af23; assert_in_delta(0.5966490253229234, worksheet.costpercapita_af23, 0.002); end
  def test_costpercapita_ag23; assert_in_delta(0.727374563002047, worksheet.costpercapita_ag23, 0.002); end
  def test_costpercapita_ai23; assert_in_delta(0.0, (worksheet.costpercapita_ai23||0), 0.002); end
  def test_costpercapita_aj23; assert_in_delta(0.0385697013093565, worksheet.costpercapita_aj23, 0.002); end
  def test_costpercapita_ak23; assert_in_delta(0.08228553517656419, worksheet.costpercapita_ak23, 0.002); end
  def test_costpercapita_al23; assert_in_delta(0.19749369850207865, worksheet.costpercapita_al23, 0.002); end
  def test_costpercapita_am23; assert_in_delta(0.2808918939575386, worksheet.costpercapita_am23, 0.002); end
  def test_costpercapita_an23; assert_in_delta(0.3745384822219214, worksheet.costpercapita_an23, 0.002); end
  def test_costpercapita_ao23; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ao23, 0.002); end
  def test_costpercapita_ap23; assert_in_delta(0.5966490253229234, worksheet.costpercapita_ap23, 0.002); end
  def test_costpercapita_aq23; assert_in_delta(0.727374563002047, worksheet.costpercapita_aq23, 0.002); end
  def test_costpercapita_as23; assert_in_delta(0.308581398055175, worksheet.costpercapita_as23, 0.002); end
  def test_costpercapita_at23; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_at23, 0.002); end
  def test_costpercapita_av23; assert_in_delta(0.0, (worksheet.costpercapita_av23||0), 0.002); end
  def test_costpercapita_aw23; assert_in_epsilon(5.0, worksheet.costpercapita_aw23, 0.002); end
  def test_costpercapita_ay23; assert_in_delta(0.0, (worksheet.costpercapita_ay23||0), 0.002); end
  def test_costpercapita_az23; assert_in_delta(0.0, (worksheet.costpercapita_az23||0), 0.002); end
  def test_costpercapita_ba23; assert_in_delta(0.0, (worksheet.costpercapita_ba23||0), 0.002); end
  def test_costpercapita_bb23; assert_in_delta(0.0, (worksheet.costpercapita_bb23||0), 0.002); end
  def test_costpercapita_bc23; assert_in_delta(0.0, (worksheet.costpercapita_bc23||0), 0.002); end
  def test_costpercapita_bd23; assert_in_delta(0.0, (worksheet.costpercapita_bd23||0), 0.002); end
  def test_costpercapita_be23; assert_in_delta(0.0, (worksheet.costpercapita_be23||0), 0.002); end
  def test_costpercapita_bf23; assert_in_delta(0.0, (worksheet.costpercapita_bf23||0), 0.002); end
  def test_costpercapita_bg23; assert_in_delta(0.0, (worksheet.costpercapita_bg23||0), 0.002); end
  def test_costpercapita_bi23; assert_in_delta(0.0, (worksheet.costpercapita_bi23||0), 0.002); end
  def test_costpercapita_bj23; assert_in_delta(0.0, (worksheet.costpercapita_bj23||0), 0.002); end
  def test_costpercapita_bk23; assert_in_delta(0.0, (worksheet.costpercapita_bk23||0), 0.002); end
  def test_costpercapita_bl23; assert_in_delta(0.0, (worksheet.costpercapita_bl23||0), 0.002); end
  def test_costpercapita_bm23; assert_in_delta(0.0, (worksheet.costpercapita_bm23||0), 0.002); end
  def test_costpercapita_bn23; assert_in_delta(0.0, (worksheet.costpercapita_bn23||0), 0.002); end
  def test_costpercapita_bo23; assert_in_delta(0.0, (worksheet.costpercapita_bo23||0), 0.002); end
  def test_costpercapita_bp23; assert_in_delta(0.0, (worksheet.costpercapita_bp23||0), 0.002); end
  def test_costpercapita_bq23; assert_in_delta(0.0, (worksheet.costpercapita_bq23||0), 0.002); end
  def test_costpercapita_bs23; assert_in_delta(0.0, (worksheet.costpercapita_bs23||0), 0.002); end
  def test_costpercapita_bt23; assert_in_delta(0.0385697013093565, worksheet.costpercapita_bt23, 0.002); end
  def test_costpercapita_bu23; assert_in_delta(0.08228553517656419, worksheet.costpercapita_bu23, 0.002); end
  def test_costpercapita_bv23; assert_in_delta(0.19749369850207865, worksheet.costpercapita_bv23, 0.002); end
  def test_costpercapita_bw23; assert_in_delta(0.2808918939575386, worksheet.costpercapita_bw23, 0.002); end
  def test_costpercapita_bx23; assert_in_delta(0.3745384822219214, worksheet.costpercapita_bx23, 0.002); end
  def test_costpercapita_by23; assert_in_delta(0.4794296830041448, worksheet.costpercapita_by23, 0.002); end
  def test_costpercapita_bz23; assert_in_delta(0.5966490253229234, worksheet.costpercapita_bz23, 0.002); end
  def test_costpercapita_ca23; assert_in_delta(0.727374563002047, worksheet.costpercapita_ca23, 0.002); end
  def test_costpercapita_cc23; assert_in_delta(0.308581398055175, worksheet.costpercapita_cc23, 0.002); end
  def test_costpercapita_cd23; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_cd23, 0.002); end
  def test_costpercapita_cf23; assert_in_delta(0.0, (worksheet.costpercapita_cf23||0), 0.002); end
  def test_costpercapita_cg23; assert_in_delta(0.0, (worksheet.costpercapita_cg23||0), 0.002); end
  def test_costpercapita_ch23; assert_in_delta(0.0, (worksheet.costpercapita_ch23||0), 0.002); end
  def test_costpercapita_ci23; assert_in_delta(0.0, (worksheet.costpercapita_ci23||0), 0.002); end
  def test_costpercapita_cj23; assert_in_delta(0.0, (worksheet.costpercapita_cj23||0), 0.002); end
  def test_costpercapita_ck23; assert_in_delta(0.0, (worksheet.costpercapita_ck23||0), 0.002); end
  def test_costpercapita_cl23; assert_in_delta(0.0, (worksheet.costpercapita_cl23||0), 0.002); end
  def test_costpercapita_cm23; assert_in_delta(0.0, (worksheet.costpercapita_cm23||0), 0.002); end
  def test_costpercapita_cn23; assert_in_delta(0.0, (worksheet.costpercapita_cn23||0), 0.002); end
  def test_costpercapita_cp23; assert_in_delta(0.0, (worksheet.costpercapita_cp23||0), 0.002); end
  def test_costpercapita_cq23; assert_in_delta(0.0, (worksheet.costpercapita_cq23||0), 0.002); end
  def test_costpercapita_cr23; assert_equal("ok", worksheet.costpercapita_cr23); end
  def test_costpercapita_a24; assert_equal("FOS.SUP.Coal", worksheet.costpercapita_a24); end
  def test_costpercapita_b24; assert_equal("Fossil fuel  coal supply", worksheet.costpercapita_b24); end
  def test_costpercapita_c24; assert_equal("Fossil Fuels", worksheet.costpercapita_c24); end
  def test_costpercapita_e24; assert_in_delta(0.0, (worksheet.costpercapita_e24||0), 0.002); end
  def test_costpercapita_f24; assert_in_delta(0.0, (worksheet.costpercapita_f24||0), 0.002); end
  def test_costpercapita_g24; assert_in_delta(0.0, (worksheet.costpercapita_g24||0), 0.002); end
  def test_costpercapita_h24; assert_in_delta(0.0, (worksheet.costpercapita_h24||0), 0.002); end
  def test_costpercapita_i24; assert_in_delta(0.0, (worksheet.costpercapita_i24||0), 0.002); end
  def test_costpercapita_j24; assert_in_delta(0.0, (worksheet.costpercapita_j24||0), 0.002); end
  def test_costpercapita_k24; assert_in_delta(0.0, (worksheet.costpercapita_k24||0), 0.002); end
  def test_costpercapita_l24; assert_in_delta(0.0, (worksheet.costpercapita_l24||0), 0.002); end
  def test_costpercapita_m24; assert_in_delta(0.0, (worksheet.costpercapita_m24||0), 0.002); end
  def test_costpercapita_o24; assert_in_delta(0.0, (worksheet.costpercapita_o24||0), 0.002); end
  def test_costpercapita_p24; assert_in_delta(0.0, (worksheet.costpercapita_p24||0), 0.002); end
  def test_costpercapita_q24; assert_in_delta(0.0, (worksheet.costpercapita_q24||0), 0.002); end
  def test_costpercapita_r24; assert_in_delta(0.0, (worksheet.costpercapita_r24||0), 0.002); end
  def test_costpercapita_s24; assert_in_delta(0.0, (worksheet.costpercapita_s24||0), 0.002); end
  def test_costpercapita_t24; assert_in_delta(0.0, (worksheet.costpercapita_t24||0), 0.002); end
  def test_costpercapita_u24; assert_in_delta(0.0, (worksheet.costpercapita_u24||0), 0.002); end
  def test_costpercapita_v24; assert_in_delta(0.0, (worksheet.costpercapita_v24||0), 0.002); end
  def test_costpercapita_w24; assert_in_delta(0.0, (worksheet.costpercapita_w24||0), 0.002); end
  def test_costpercapita_y24; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_y24, 0.002); end
  def test_costpercapita_z24; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_z24, 0.002); end
  def test_costpercapita_aa24; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_aa24, 0.002); end
  def test_costpercapita_ab24; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_ab24, 0.002); end
  def test_costpercapita_ac24; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_ac24, 0.002); end
  def test_costpercapita_ad24; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_ad24, 0.002); end
  def test_costpercapita_ae24; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_ae24, 0.002); end
  def test_costpercapita_af24; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_af24, 0.002); end
  def test_costpercapita_ag24; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_ag24, 0.002); end
  def test_costpercapita_ai24; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_ai24, 0.002); end
  def test_costpercapita_aj24; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_aj24, 0.002); end
  def test_costpercapita_ak24; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_ak24, 0.002); end
  def test_costpercapita_al24; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_al24, 0.002); end
  def test_costpercapita_am24; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_am24, 0.002); end
  def test_costpercapita_an24; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_an24, 0.002); end
  def test_costpercapita_ao24; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_ao24, 0.002); end
  def test_costpercapita_ap24; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_ap24, 0.002); end
  def test_costpercapita_aq24; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_aq24, 0.002); end
  def test_costpercapita_as24; assert_in_epsilon(611.8742656818816, worksheet.costpercapita_as24, 0.002); end
  def test_costpercapita_at24; assert_in_epsilon(13493.346325779166, worksheet.costpercapita_at24, 0.002); end
  def test_costpercapita_av24; assert_in_delta(0.0, (worksheet.costpercapita_av24||0), 0.002); end
  def test_costpercapita_aw24; assert_in_epsilon(5.0, worksheet.costpercapita_aw24, 0.002); end
  def test_costpercapita_ay24; assert_in_delta(0.0, (worksheet.costpercapita_ay24||0), 0.002); end
  def test_costpercapita_az24; assert_in_delta(0.0, (worksheet.costpercapita_az24||0), 0.002); end
  def test_costpercapita_ba24; assert_in_delta(0.0, (worksheet.costpercapita_ba24||0), 0.002); end
  def test_costpercapita_bb24; assert_in_delta(0.0, (worksheet.costpercapita_bb24||0), 0.002); end
  def test_costpercapita_bc24; assert_in_delta(0.0, (worksheet.costpercapita_bc24||0), 0.002); end
  def test_costpercapita_bd24; assert_in_delta(0.0, (worksheet.costpercapita_bd24||0), 0.002); end
  def test_costpercapita_be24; assert_in_delta(0.0, (worksheet.costpercapita_be24||0), 0.002); end
  def test_costpercapita_bf24; assert_in_delta(0.0, (worksheet.costpercapita_bf24||0), 0.002); end
  def test_costpercapita_bg24; assert_in_delta(0.0, (worksheet.costpercapita_bg24||0), 0.002); end
  def test_costpercapita_bi24; assert_in_delta(0.0, (worksheet.costpercapita_bi24||0), 0.002); end
  def test_costpercapita_bj24; assert_in_delta(0.0, (worksheet.costpercapita_bj24||0), 0.002); end
  def test_costpercapita_bk24; assert_in_delta(0.0, (worksheet.costpercapita_bk24||0), 0.002); end
  def test_costpercapita_bl24; assert_in_delta(0.0, (worksheet.costpercapita_bl24||0), 0.002); end
  def test_costpercapita_bm24; assert_in_delta(0.0, (worksheet.costpercapita_bm24||0), 0.002); end
  def test_costpercapita_bn24; assert_in_delta(0.0, (worksheet.costpercapita_bn24||0), 0.002); end
  def test_costpercapita_bo24; assert_in_delta(0.0, (worksheet.costpercapita_bo24||0), 0.002); end
  def test_costpercapita_bp24; assert_in_delta(0.0, (worksheet.costpercapita_bp24||0), 0.002); end
  def test_costpercapita_bq24; assert_in_delta(0.0, (worksheet.costpercapita_bq24||0), 0.002); end
  def test_costpercapita_bs24; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_bs24, 0.002); end
  def test_costpercapita_bt24; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_bt24, 0.002); end
  def test_costpercapita_bu24; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_bu24, 0.002); end
  def test_costpercapita_bv24; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_bv24, 0.002); end
  def test_costpercapita_bw24; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_bw24, 0.002); end
  def test_costpercapita_bx24; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_bx24, 0.002); end
  def test_costpercapita_by24; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_by24, 0.002); end
  def test_costpercapita_bz24; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_bz24, 0.002); end
  def test_costpercapita_ca24; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_ca24, 0.002); end
  def test_costpercapita_cc24; assert_in_epsilon(611.8742656818816, worksheet.costpercapita_cc24, 0.002); end
  def test_costpercapita_cd24; assert_in_epsilon(13493.346325779166, worksheet.costpercapita_cd24, 0.002); end
  def test_costpercapita_cf24; assert_in_delta(0.0, (worksheet.costpercapita_cf24||0), 0.002); end
  def test_costpercapita_cg24; assert_in_delta(0.0, (worksheet.costpercapita_cg24||0), 0.002); end
  def test_costpercapita_ch24; assert_in_delta(0.0, (worksheet.costpercapita_ch24||0), 0.002); end
  def test_costpercapita_ci24; assert_in_delta(0.0, (worksheet.costpercapita_ci24||0), 0.002); end
  def test_costpercapita_cj24; assert_in_delta(0.0, (worksheet.costpercapita_cj24||0), 0.002); end
  def test_costpercapita_ck24; assert_in_delta(0.0, (worksheet.costpercapita_ck24||0), 0.002); end
  def test_costpercapita_cl24; assert_in_delta(0.0, (worksheet.costpercapita_cl24||0), 0.002); end
  def test_costpercapita_cm24; assert_in_delta(0.0, (worksheet.costpercapita_cm24||0), 0.002); end
  def test_costpercapita_cn24; assert_in_delta(0.0, (worksheet.costpercapita_cn24||0), 0.002); end
  def test_costpercapita_cp24; assert_in_delta(0.0, (worksheet.costpercapita_cp24||0), 0.002); end
  def test_costpercapita_cq24; assert_in_delta(0.0, (worksheet.costpercapita_cq24||0), 0.002); end
  def test_costpercapita_cr24; assert_equal("ok", worksheet.costpercapita_cr24); end
  def test_costpercapita_a25; assert_equal("FOS.SUP.Gas", worksheet.costpercapita_a25); end
  def test_costpercapita_b25; assert_equal("Fossil fuel gas supply", worksheet.costpercapita_b25); end
  def test_costpercapita_c25; assert_equal("Fossil Fuels", worksheet.costpercapita_c25); end
  def test_costpercapita_e25; assert_in_epsilon(6.273412622814942, worksheet.costpercapita_e25, 0.002); end
  def test_costpercapita_f25; assert_in_epsilon(7.40076507175094, worksheet.costpercapita_f25, 0.002); end
  def test_costpercapita_g25; assert_in_delta(0.0, (worksheet.costpercapita_g25||0), 0.002); end
  def test_costpercapita_h25; assert_in_delta(0.0, (worksheet.costpercapita_h25||0), 0.002); end
  def test_costpercapita_i25; assert_in_delta(0.0, (worksheet.costpercapita_i25||0), 0.002); end
  def test_costpercapita_j25; assert_in_epsilon(3.9354846114428113, worksheet.costpercapita_j25, 0.002); end
  def test_costpercapita_k25; assert_in_epsilon(9.491037054338463, worksheet.costpercapita_k25, 0.002); end
  def test_costpercapita_l25; assert_in_epsilon(9.17075930412597, worksheet.costpercapita_l25, 0.002); end
  def test_costpercapita_m25; assert_in_epsilon(9.23872310480061, worksheet.costpercapita_m25, 0.002); end
  def test_costpercapita_o25; assert_in_delta(0.0, (worksheet.costpercapita_o25||0), 0.002); end
  def test_costpercapita_p25; assert_in_delta(0.0, (worksheet.costpercapita_p25||0), 0.002); end
  def test_costpercapita_q25; assert_in_delta(0.0, (worksheet.costpercapita_q25||0), 0.002); end
  def test_costpercapita_r25; assert_in_delta(0.0, (worksheet.costpercapita_r25||0), 0.002); end
  def test_costpercapita_s25; assert_in_delta(0.0, (worksheet.costpercapita_s25||0), 0.002); end
  def test_costpercapita_t25; assert_in_delta(0.0, (worksheet.costpercapita_t25||0), 0.002); end
  def test_costpercapita_u25; assert_in_delta(0.0, (worksheet.costpercapita_u25||0), 0.002); end
  def test_costpercapita_v25; assert_in_delta(0.0, (worksheet.costpercapita_v25||0), 0.002); end
  def test_costpercapita_w25; assert_in_delta(0.0, (worksheet.costpercapita_w25||0), 0.002); end
  def test_costpercapita_y25; assert_in_epsilon(402.4554336428264, worksheet.costpercapita_y25, 0.002); end
  def test_costpercapita_z25; assert_in_epsilon(498.799008857509, worksheet.costpercapita_z25, 0.002); end
  def test_costpercapita_aa25; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_aa25, 0.002); end
  def test_costpercapita_ab25; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_ab25, 0.002); end
  def test_costpercapita_ac25; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_ac25, 0.002); end
  def test_costpercapita_ad25; assert_in_epsilon(1106.3541515982145, worksheet.costpercapita_ad25, 0.002); end
  def test_costpercapita_ae25; assert_in_epsilon(1301.5020938371151, worksheet.costpercapita_ae25, 0.002); end
  def test_costpercapita_af25; assert_in_epsilon(1673.4941063465744, worksheet.costpercapita_af25, 0.002); end
  def test_costpercapita_ag25; assert_in_epsilon(1976.5705229344449, worksheet.costpercapita_ag25, 0.002); end
  def test_costpercapita_ai25; assert_in_epsilon(408.7288462656413, worksheet.costpercapita_ai25, 0.002); end
  def test_costpercapita_aj25; assert_in_epsilon(506.19977392925995, worksheet.costpercapita_aj25, 0.002); end
  def test_costpercapita_ak25; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_ak25, 0.002); end
  def test_costpercapita_al25; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_al25, 0.002); end
  def test_costpercapita_am25; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_am25, 0.002); end
  def test_costpercapita_an25; assert_in_epsilon(1110.2896362096574, worksheet.costpercapita_an25, 0.002); end
  def test_costpercapita_ao25; assert_in_epsilon(1310.9931308914536, worksheet.costpercapita_ao25, 0.002); end
  def test_costpercapita_ap25; assert_in_epsilon(1682.6648656507004, worksheet.costpercapita_ap25, 0.002); end
  def test_costpercapita_aq25; assert_in_epsilon(1985.8092460392454, worksheet.costpercapita_aq25, 0.002); end
  def test_costpercapita_as25; assert_in_epsilon(1034.882436258811, worksheet.costpercapita_as25, 0.002); end
  def test_costpercapita_at25; assert_in_epsilon(19226.671510019496, worksheet.costpercapita_at25, 0.002); end
  def test_costpercapita_av25; assert_in_delta(0.0, (worksheet.costpercapita_av25||0), 0.002); end
  def test_costpercapita_aw25; assert_in_epsilon(5.0, worksheet.costpercapita_aw25, 0.002); end
  def test_costpercapita_ay25; assert_in_epsilon(6.273412622814942, worksheet.costpercapita_ay25, 0.002); end
  def test_costpercapita_az25; assert_in_epsilon(7.40076507175094, worksheet.costpercapita_az25, 0.002); end
  def test_costpercapita_ba25; assert_in_delta(0.0, (worksheet.costpercapita_ba25||0), 0.002); end
  def test_costpercapita_bb25; assert_in_delta(0.0, (worksheet.costpercapita_bb25||0), 0.002); end
  def test_costpercapita_bc25; assert_in_delta(0.0, (worksheet.costpercapita_bc25||0), 0.002); end
  def test_costpercapita_bd25; assert_in_epsilon(3.9354846114428113, worksheet.costpercapita_bd25, 0.002); end
  def test_costpercapita_be25; assert_in_epsilon(9.491037054338463, worksheet.costpercapita_be25, 0.002); end
  def test_costpercapita_bf25; assert_in_epsilon(9.17075930412597, worksheet.costpercapita_bf25, 0.002); end
  def test_costpercapita_bg25; assert_in_epsilon(9.23872310480061, worksheet.costpercapita_bg25, 0.002); end
  def test_costpercapita_bi25; assert_in_delta(0.0, (worksheet.costpercapita_bi25||0), 0.002); end
  def test_costpercapita_bj25; assert_in_delta(0.0, (worksheet.costpercapita_bj25||0), 0.002); end
  def test_costpercapita_bk25; assert_in_delta(0.0, (worksheet.costpercapita_bk25||0), 0.002); end
  def test_costpercapita_bl25; assert_in_delta(0.0, (worksheet.costpercapita_bl25||0), 0.002); end
  def test_costpercapita_bm25; assert_in_delta(0.0, (worksheet.costpercapita_bm25||0), 0.002); end
  def test_costpercapita_bn25; assert_in_delta(0.0, (worksheet.costpercapita_bn25||0), 0.002); end
  def test_costpercapita_bo25; assert_in_delta(0.0, (worksheet.costpercapita_bo25||0), 0.002); end
  def test_costpercapita_bp25; assert_in_delta(0.0, (worksheet.costpercapita_bp25||0), 0.002); end
  def test_costpercapita_bq25; assert_in_delta(0.0, (worksheet.costpercapita_bq25||0), 0.002); end
  def test_costpercapita_bs25; assert_in_epsilon(408.7288462656413, worksheet.costpercapita_bs25, 0.002); end
  def test_costpercapita_bt25; assert_in_epsilon(506.19977392925995, worksheet.costpercapita_bt25, 0.002); end
  def test_costpercapita_bu25; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_bu25, 0.002); end
  def test_costpercapita_bv25; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_bv25, 0.002); end
  def test_costpercapita_bw25; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_bw25, 0.002); end
  def test_costpercapita_bx25; assert_in_epsilon(1110.2896362096574, worksheet.costpercapita_bx25, 0.002); end
  def test_costpercapita_by25; assert_in_epsilon(1310.9931308914536, worksheet.costpercapita_by25, 0.002); end
  def test_costpercapita_bz25; assert_in_epsilon(1682.6648656507004, worksheet.costpercapita_bz25, 0.002); end
  def test_costpercapita_ca25; assert_in_epsilon(1985.8092460392454, worksheet.costpercapita_ca25, 0.002); end
  def test_costpercapita_cc25; assert_in_epsilon(1034.882436258811, worksheet.costpercapita_cc25, 0.002); end
  def test_costpercapita_cd25; assert_in_epsilon(19226.671510019496, worksheet.costpercapita_cd25, 0.002); end
  def test_costpercapita_cf25; assert_in_delta(0.0, (worksheet.costpercapita_cf25||0), 0.002); end
  def test_costpercapita_cg25; assert_in_delta(0.0, (worksheet.costpercapita_cg25||0), 0.002); end
  def test_costpercapita_ch25; assert_in_delta(0.0, (worksheet.costpercapita_ch25||0), 0.002); end
  def test_costpercapita_ci25; assert_in_delta(0.0, (worksheet.costpercapita_ci25||0), 0.002); end
  def test_costpercapita_cj25; assert_in_delta(0.0, (worksheet.costpercapita_cj25||0), 0.002); end
  def test_costpercapita_ck25; assert_in_delta(0.0, (worksheet.costpercapita_ck25||0), 0.002); end
  def test_costpercapita_cl25; assert_in_delta(0.0, (worksheet.costpercapita_cl25||0), 0.002); end
  def test_costpercapita_cm25; assert_in_delta(0.0, (worksheet.costpercapita_cm25||0), 0.002); end
  def test_costpercapita_cn25; assert_in_delta(0.0, (worksheet.costpercapita_cn25||0), 0.002); end
  def test_costpercapita_cp25; assert_in_delta(0.0, (worksheet.costpercapita_cp25||0), 0.002); end
  def test_costpercapita_cq25; assert_in_delta(0.0, (worksheet.costpercapita_cq25||0), 0.002); end
  def test_costpercapita_cr25; assert_equal("ok", worksheet.costpercapita_cr25); end
  def test_costpercapita_a26; assert_equal("FOS.CTL", worksheet.costpercapita_a26); end
  def test_costpercapita_b26; assert_equal("Petroleum CTL", worksheet.costpercapita_b26); end
  def test_costpercapita_c26; assert_equal("Fossil Fuels", worksheet.costpercapita_c26); end
  def test_costpercapita_e26; assert_in_delta(0.0, (worksheet.costpercapita_e26||0), 0.002); end
  def test_costpercapita_f26; assert_in_delta(0.0, (worksheet.costpercapita_f26||0), 0.002); end
  def test_costpercapita_g26; assert_in_delta(0.0, (worksheet.costpercapita_g26||0), 0.002); end
  def test_costpercapita_h26; assert_in_delta(0.0, (worksheet.costpercapita_h26||0), 0.002); end
  def test_costpercapita_i26; assert_in_delta(0.0, (worksheet.costpercapita_i26||0), 0.002); end
  def test_costpercapita_j26; assert_in_delta(0.0, (worksheet.costpercapita_j26||0), 0.002); end
  def test_costpercapita_k26; assert_in_epsilon(-14.220319855346778, worksheet.costpercapita_k26, 0.002); end
  def test_costpercapita_l26; assert_in_epsilon(-14.220319855346778, worksheet.costpercapita_l26, 0.002); end
  def test_costpercapita_m26; assert_in_epsilon(-24.29343687720638, worksheet.costpercapita_m26, 0.002); end
  def test_costpercapita_o26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_o26, 0.002); end
  def test_costpercapita_p26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_p26, 0.002); end
  def test_costpercapita_q26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_q26, 0.002); end
  def test_costpercapita_r26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_r26, 0.002); end
  def test_costpercapita_s26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_s26, 0.002); end
  def test_costpercapita_t26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_t26, 0.002); end
  def test_costpercapita_u26; assert_in_epsilon(80.46759454024483, worksheet.costpercapita_u26, 0.002); end
  def test_costpercapita_v26; assert_in_epsilon(80.46759454024483, worksheet.costpercapita_v26, 0.002); end
  def test_costpercapita_w26; assert_in_epsilon(49.61116797789233, worksheet.costpercapita_w26, 0.002); end
  def test_costpercapita_y26; assert_in_delta(0.0, (worksheet.costpercapita_y26||0), 0.002); end
  def test_costpercapita_z26; assert_in_delta(0.0, (worksheet.costpercapita_z26||0), 0.002); end
  def test_costpercapita_aa26; assert_in_delta(0.0, (worksheet.costpercapita_aa26||0), 0.002); end
  def test_costpercapita_ab26; assert_in_delta(0.0, (worksheet.costpercapita_ab26||0), 0.002); end
  def test_costpercapita_ac26; assert_in_delta(0.0, (worksheet.costpercapita_ac26||0), 0.002); end
  def test_costpercapita_ad26; assert_in_delta(0.0, (worksheet.costpercapita_ad26||0), 0.002); end
  def test_costpercapita_ae26; assert_in_delta(0.0, (worksheet.costpercapita_ae26||0), 0.002); end
  def test_costpercapita_af26; assert_in_delta(0.0, (worksheet.costpercapita_af26||0), 0.002); end
  def test_costpercapita_ag26; assert_in_delta(0.0, (worksheet.costpercapita_ag26||0), 0.002); end
  def test_costpercapita_ai26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_ai26, 0.002); end
  def test_costpercapita_aj26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_aj26, 0.002); end
  def test_costpercapita_ak26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_ak26, 0.002); end
  def test_costpercapita_al26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_al26, 0.002); end
  def test_costpercapita_am26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_am26, 0.002); end
  def test_costpercapita_an26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_an26, 0.002); end
  def test_costpercapita_ao26; assert_in_epsilon(66.24727468489806, worksheet.costpercapita_ao26, 0.002); end
  def test_costpercapita_ap26; assert_in_epsilon(66.24727468489806, worksheet.costpercapita_ap26, 0.002); end
  def test_costpercapita_aq26; assert_in_epsilon(25.317731100685954, worksheet.costpercapita_aq26, 0.002); end
  def test_costpercapita_as26; assert_in_epsilon(100.21997779320743, worksheet.costpercapita_as26, 0.002); end
  def test_costpercapita_at26; assert_in_epsilon(2283.394281330137, worksheet.costpercapita_at26, 0.002); end
  def test_costpercapita_av26; assert_in_delta(0.0, (worksheet.costpercapita_av26||0), 0.002); end
  def test_costpercapita_aw26; assert_in_epsilon(5.0, worksheet.costpercapita_aw26, 0.002); end
  def test_costpercapita_ay26; assert_in_delta(0.0, (worksheet.costpercapita_ay26||0), 0.002); end
  def test_costpercapita_az26; assert_in_delta(0.0, (worksheet.costpercapita_az26||0), 0.002); end
  def test_costpercapita_ba26; assert_in_delta(0.0, (worksheet.costpercapita_ba26||0), 0.002); end
  def test_costpercapita_bb26; assert_in_delta(0.0, (worksheet.costpercapita_bb26||0), 0.002); end
  def test_costpercapita_bc26; assert_in_delta(0.0, (worksheet.costpercapita_bc26||0), 0.002); end
  def test_costpercapita_bd26; assert_in_delta(0.0, (worksheet.costpercapita_bd26||0), 0.002); end
  def test_costpercapita_be26; assert_in_epsilon(-17.500352499139538, worksheet.costpercapita_be26, 0.002); end
  def test_costpercapita_bf26; assert_in_epsilon(-17.500352499139538, worksheet.costpercapita_bf26, 0.002); end
  def test_costpercapita_bg26; assert_in_epsilon(-29.896916039258787, worksheet.costpercapita_bg26, 0.002); end
  def test_costpercapita_bi26; assert_in_delta(0.0, (worksheet.costpercapita_bi26||0), 0.002); end
  def test_costpercapita_bj26; assert_in_delta(0.0, (worksheet.costpercapita_bj26||0), 0.002); end
  def test_costpercapita_bk26; assert_in_delta(0.0, (worksheet.costpercapita_bk26||0), 0.002); end
  def test_costpercapita_bl26; assert_in_delta(0.0, (worksheet.costpercapita_bl26||0), 0.002); end
  def test_costpercapita_bm26; assert_in_delta(0.0, (worksheet.costpercapita_bm26||0), 0.002); end
  def test_costpercapita_bn26; assert_in_delta(0.0, (worksheet.costpercapita_bn26||0), 0.002); end
  def test_costpercapita_bo26; assert_in_delta(0.0, (worksheet.costpercapita_bo26||0), 0.002); end
  def test_costpercapita_bp26; assert_in_delta(0.0, (worksheet.costpercapita_bp26||0), 0.002); end
  def test_costpercapita_bq26; assert_in_delta(0.0, (worksheet.costpercapita_bq26||0), 0.002); end
  def test_costpercapita_bs26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bs26, 0.002); end
  def test_costpercapita_bt26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bt26, 0.002); end
  def test_costpercapita_bu26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bu26, 0.002); end
  def test_costpercapita_bv26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bv26, 0.002); end
  def test_costpercapita_bw26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bw26, 0.002); end
  def test_costpercapita_bx26; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bx26, 0.002); end
  def test_costpercapita_by26; assert_in_epsilon(62.967242041105294, worksheet.costpercapita_by26, 0.002); end
  def test_costpercapita_bz26; assert_in_epsilon(62.967242041105294, worksheet.costpercapita_bz26, 0.002); end
  def test_costpercapita_ca26; assert_in_epsilon(19.714251938633545, worksheet.costpercapita_ca26, 0.002); end
  def test_costpercapita_cc26; assert_in_epsilon(98.86847285435879, worksheet.costpercapita_cc26, 0.002); end
  def test_costpercapita_cd26; assert_in_epsilon(2265.0834729067974, worksheet.costpercapita_cd26, 0.002); end
  def test_costpercapita_cf26; assert_in_delta(0.0, (worksheet.costpercapita_cf26||0), 0.002); end
  def test_costpercapita_cg26; assert_in_delta(0.0, (worksheet.costpercapita_cg26||0), 0.002); end
  def test_costpercapita_ch26; assert_in_delta(0.0, (worksheet.costpercapita_ch26||0), 0.002); end
  def test_costpercapita_ci26; assert_in_delta(0.0, (worksheet.costpercapita_ci26||0), 0.002); end
  def test_costpercapita_cj26; assert_in_delta(0.0, (worksheet.costpercapita_cj26||0), 0.002); end
  def test_costpercapita_ck26; assert_in_delta(0.0, (worksheet.costpercapita_ck26||0), 0.002); end
  def test_costpercapita_cl26; assert_in_epsilon(-3.2800326437927607, worksheet.costpercapita_cl26, 0.002); end
  def test_costpercapita_cm26; assert_in_epsilon(-3.2800326437927607, worksheet.costpercapita_cm26, 0.002); end
  def test_costpercapita_cn26; assert_in_epsilon(-5.603479162052408, worksheet.costpercapita_cn26, 0.002); end
  def test_costpercapita_cp26; assert_in_epsilon(-1.3515049388486586, worksheet.costpercapita_cp26, 0.002); end
  def test_costpercapita_cq26; assert_in_epsilon(-18.310808423339466, worksheet.costpercapita_cq26, 0.002); end
  def test_costpercapita_cr26; assert_equal("ok", worksheet.costpercapita_cr26); end
  def test_costpercapita_a27; assert_equal("FOS.GTL", worksheet.costpercapita_a27); end
  def test_costpercapita_b27; assert_equal("Petroleum GTL", worksheet.costpercapita_b27); end
  def test_costpercapita_c27; assert_equal("Fossil Fuels", worksheet.costpercapita_c27); end
  def test_costpercapita_e27; assert_in_delta(0.0, (worksheet.costpercapita_e27||0), 0.002); end
  def test_costpercapita_f27; assert_in_delta(0.0, (worksheet.costpercapita_f27||0), 0.002); end
  def test_costpercapita_g27; assert_in_delta(0.0, (worksheet.costpercapita_g27||0), 0.002); end
  def test_costpercapita_h27; assert_in_delta(0.0, (worksheet.costpercapita_h27||0), 0.002); end
  def test_costpercapita_i27; assert_in_delta(0.0, (worksheet.costpercapita_i27||0), 0.002); end
  def test_costpercapita_j27; assert_in_delta(0.0, (worksheet.costpercapita_j27||0), 0.002); end
  def test_costpercapita_k27; assert_in_delta(0.0, (worksheet.costpercapita_k27||0), 0.002); end
  def test_costpercapita_l27; assert_in_delta(0.0, (worksheet.costpercapita_l27||0), 0.002); end
  def test_costpercapita_m27; assert_in_delta(0.0, (worksheet.costpercapita_m27||0), 0.002); end
  def test_costpercapita_o27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_o27, 0.002); end
  def test_costpercapita_p27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_p27, 0.002); end
  def test_costpercapita_q27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_q27, 0.002); end
  def test_costpercapita_r27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_r27, 0.002); end
  def test_costpercapita_s27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_s27, 0.002); end
  def test_costpercapita_t27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_t27, 0.002); end
  def test_costpercapita_u27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_u27, 0.002); end
  def test_costpercapita_v27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_v27, 0.002); end
  def test_costpercapita_w27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_w27, 0.002); end
  def test_costpercapita_y27; assert_in_delta(0.0, (worksheet.costpercapita_y27||0), 0.002); end
  def test_costpercapita_z27; assert_in_delta(0.0, (worksheet.costpercapita_z27||0), 0.002); end
  def test_costpercapita_aa27; assert_in_delta(0.0, (worksheet.costpercapita_aa27||0), 0.002); end
  def test_costpercapita_ab27; assert_in_delta(0.0, (worksheet.costpercapita_ab27||0), 0.002); end
  def test_costpercapita_ac27; assert_in_delta(0.0, (worksheet.costpercapita_ac27||0), 0.002); end
  def test_costpercapita_ad27; assert_in_delta(0.0, (worksheet.costpercapita_ad27||0), 0.002); end
  def test_costpercapita_ae27; assert_in_delta(0.0, (worksheet.costpercapita_ae27||0), 0.002); end
  def test_costpercapita_af27; assert_in_delta(0.0, (worksheet.costpercapita_af27||0), 0.002); end
  def test_costpercapita_ag27; assert_in_delta(0.0, (worksheet.costpercapita_ag27||0), 0.002); end
  def test_costpercapita_ai27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ai27, 0.002); end
  def test_costpercapita_aj27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_aj27, 0.002); end
  def test_costpercapita_ak27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ak27, 0.002); end
  def test_costpercapita_al27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_al27, 0.002); end
  def test_costpercapita_am27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_am27, 0.002); end
  def test_costpercapita_an27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_an27, 0.002); end
  def test_costpercapita_ao27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ao27, 0.002); end
  def test_costpercapita_ap27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ap27, 0.002); end
  def test_costpercapita_aq27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_aq27, 0.002); end
  def test_costpercapita_as27; assert_in_epsilon(31.21853385916763, worksheet.costpercapita_as27, 0.002); end
  def test_costpercapita_at27; assert_in_epsilon(655.9337649288497, worksheet.costpercapita_at27, 0.002); end
  def test_costpercapita_av27; assert_in_delta(0.0, (worksheet.costpercapita_av27||0), 0.002); end
  def test_costpercapita_aw27; assert_in_epsilon(5.0, worksheet.costpercapita_aw27, 0.002); end
  def test_costpercapita_ay27; assert_in_delta(0.0, (worksheet.costpercapita_ay27||0), 0.002); end
  def test_costpercapita_az27; assert_in_delta(0.0, (worksheet.costpercapita_az27||0), 0.002); end
  def test_costpercapita_ba27; assert_in_delta(0.0, (worksheet.costpercapita_ba27||0), 0.002); end
  def test_costpercapita_bb27; assert_in_delta(0.0, (worksheet.costpercapita_bb27||0), 0.002); end
  def test_costpercapita_bc27; assert_in_delta(0.0, (worksheet.costpercapita_bc27||0), 0.002); end
  def test_costpercapita_bd27; assert_in_delta(0.0, (worksheet.costpercapita_bd27||0), 0.002); end
  def test_costpercapita_be27; assert_in_delta(0.0, (worksheet.costpercapita_be27||0), 0.002); end
  def test_costpercapita_bf27; assert_in_delta(0.0, (worksheet.costpercapita_bf27||0), 0.002); end
  def test_costpercapita_bg27; assert_in_delta(0.0, (worksheet.costpercapita_bg27||0), 0.002); end
  def test_costpercapita_bi27; assert_in_delta(0.0, (worksheet.costpercapita_bi27||0), 0.002); end
  def test_costpercapita_bj27; assert_in_delta(0.0, (worksheet.costpercapita_bj27||0), 0.002); end
  def test_costpercapita_bk27; assert_in_delta(0.0, (worksheet.costpercapita_bk27||0), 0.002); end
  def test_costpercapita_bl27; assert_in_delta(0.0, (worksheet.costpercapita_bl27||0), 0.002); end
  def test_costpercapita_bm27; assert_in_delta(0.0, (worksheet.costpercapita_bm27||0), 0.002); end
  def test_costpercapita_bn27; assert_in_delta(0.0, (worksheet.costpercapita_bn27||0), 0.002); end
  def test_costpercapita_bo27; assert_in_delta(0.0, (worksheet.costpercapita_bo27||0), 0.002); end
  def test_costpercapita_bp27; assert_in_delta(0.0, (worksheet.costpercapita_bp27||0), 0.002); end
  def test_costpercapita_bq27; assert_in_delta(0.0, (worksheet.costpercapita_bq27||0), 0.002); end
  def test_costpercapita_bs27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bs27, 0.002); end
  def test_costpercapita_bt27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bt27, 0.002); end
  def test_costpercapita_bu27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bu27, 0.002); end
  def test_costpercapita_bv27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bv27, 0.002); end
  def test_costpercapita_bw27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bw27, 0.002); end
  def test_costpercapita_bx27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bx27, 0.002); end
  def test_costpercapita_by27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_by27, 0.002); end
  def test_costpercapita_bz27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bz27, 0.002); end
  def test_costpercapita_ca27; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ca27, 0.002); end
  def test_costpercapita_cc27; assert_in_epsilon(31.21853385916763, worksheet.costpercapita_cc27, 0.002); end
  def test_costpercapita_cd27; assert_in_epsilon(655.9337649288497, worksheet.costpercapita_cd27, 0.002); end
  def test_costpercapita_cf27; assert_in_delta(0.0, (worksheet.costpercapita_cf27||0), 0.002); end
  def test_costpercapita_cg27; assert_in_delta(0.0, (worksheet.costpercapita_cg27||0), 0.002); end
  def test_costpercapita_ch27; assert_in_delta(0.0, (worksheet.costpercapita_ch27||0), 0.002); end
  def test_costpercapita_ci27; assert_in_delta(0.0, (worksheet.costpercapita_ci27||0), 0.002); end
  def test_costpercapita_cj27; assert_in_delta(0.0, (worksheet.costpercapita_cj27||0), 0.002); end
  def test_costpercapita_ck27; assert_in_delta(0.0, (worksheet.costpercapita_ck27||0), 0.002); end
  def test_costpercapita_cl27; assert_in_delta(0.0, (worksheet.costpercapita_cl27||0), 0.002); end
  def test_costpercapita_cm27; assert_in_delta(0.0, (worksheet.costpercapita_cm27||0), 0.002); end
  def test_costpercapita_cn27; assert_in_delta(0.0, (worksheet.costpercapita_cn27||0), 0.002); end
  def test_costpercapita_cp27; assert_in_delta(0.0, (worksheet.costpercapita_cp27||0), 0.002); end
  def test_costpercapita_cq27; assert_in_delta(0.0, (worksheet.costpercapita_cq27||0), 0.002); end
  def test_costpercapita_cr27; assert_equal("ok", worksheet.costpercapita_cr27); end
  def test_costpercapita_a28; assert_equal("FOS.REF", worksheet.costpercapita_a28); end
  def test_costpercapita_b28; assert_equal("Refineries", worksheet.costpercapita_b28); end
  def test_costpercapita_c28; assert_equal("Fossil Fuels", worksheet.costpercapita_c28); end
  def test_costpercapita_e28; assert_in_delta(0.0, (worksheet.costpercapita_e28||0), 0.002); end
  def test_costpercapita_f28; assert_in_delta(0.0, (worksheet.costpercapita_f28||0), 0.002); end
  def test_costpercapita_g28; assert_in_delta(0.0, (worksheet.costpercapita_g28||0), 0.002); end
  def test_costpercapita_h28; assert_in_delta(0.0, (worksheet.costpercapita_h28||0), 0.002); end
  def test_costpercapita_i28; assert_in_delta(0.0, (worksheet.costpercapita_i28||0), 0.002); end
  def test_costpercapita_j28; assert_in_delta(0.0, (worksheet.costpercapita_j28||0), 0.002); end
  def test_costpercapita_k28; assert_in_delta(0.0, (worksheet.costpercapita_k28||0), 0.002); end
  def test_costpercapita_l28; assert_in_delta(0.0, (worksheet.costpercapita_l28||0), 0.002); end
  def test_costpercapita_m28; assert_in_delta(0.0, (worksheet.costpercapita_m28||0), 0.002); end
  def test_costpercapita_o28; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_o28, 0.002); end
  def test_costpercapita_p28; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_p28, 0.002); end
  def test_costpercapita_q28; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_q28, 0.002); end
  def test_costpercapita_r28; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_r28, 0.002); end
  def test_costpercapita_s28; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_s28, 0.002); end
  def test_costpercapita_t28; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_t28, 0.002); end
  def test_costpercapita_u28; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_u28, 0.002); end
  def test_costpercapita_v28; assert_in_delta(0.0, (worksheet.costpercapita_v28||0), 0.002); end
  def test_costpercapita_w28; assert_in_delta(0.0, (worksheet.costpercapita_w28||0), 0.002); end
  def test_costpercapita_y28; assert_in_delta(0.0, (worksheet.costpercapita_y28||0), 0.002); end
  def test_costpercapita_z28; assert_in_delta(0.0, (worksheet.costpercapita_z28||0), 0.002); end
  def test_costpercapita_aa28; assert_in_delta(0.0, (worksheet.costpercapita_aa28||0), 0.002); end
  def test_costpercapita_ab28; assert_in_delta(0.0, (worksheet.costpercapita_ab28||0), 0.002); end
  def test_costpercapita_ac28; assert_in_delta(0.0, (worksheet.costpercapita_ac28||0), 0.002); end
  def test_costpercapita_ad28; assert_in_delta(0.0, (worksheet.costpercapita_ad28||0), 0.002); end
  def test_costpercapita_ae28; assert_in_delta(0.0, (worksheet.costpercapita_ae28||0), 0.002); end
  def test_costpercapita_af28; assert_in_delta(0.0, (worksheet.costpercapita_af28||0), 0.002); end
  def test_costpercapita_ag28; assert_in_delta(0.0, (worksheet.costpercapita_ag28||0), 0.002); end
  def test_costpercapita_ai28; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_ai28, 0.002); end
  def test_costpercapita_aj28; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_aj28, 0.002); end
  def test_costpercapita_ak28; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_ak28, 0.002); end
  def test_costpercapita_al28; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_al28, 0.002); end
  def test_costpercapita_am28; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_am28, 0.002); end
  def test_costpercapita_an28; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_an28, 0.002); end
  def test_costpercapita_ao28; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_ao28, 0.002); end
  def test_costpercapita_ap28; assert_in_delta(0.0, (worksheet.costpercapita_ap28||0), 0.002); end
  def test_costpercapita_aq28; assert_in_delta(0.0, (worksheet.costpercapita_aq28||0), 0.002); end
  def test_costpercapita_as28; assert_in_epsilon(104.20766539793755, worksheet.costpercapita_as28, 0.002); end
  def test_costpercapita_at28; assert_in_epsilon(2489.272496400997, worksheet.costpercapita_at28, 0.002); end
  def test_costpercapita_av28; assert_in_delta(0.0, (worksheet.costpercapita_av28||0), 0.002); end
  def test_costpercapita_aw28; assert_in_epsilon(5.0, worksheet.costpercapita_aw28, 0.002); end
  def test_costpercapita_ay28; assert_in_delta(0.0, (worksheet.costpercapita_ay28||0), 0.002); end
  def test_costpercapita_az28; assert_in_delta(0.0, (worksheet.costpercapita_az28||0), 0.002); end
  def test_costpercapita_ba28; assert_in_delta(0.0, (worksheet.costpercapita_ba28||0), 0.002); end
  def test_costpercapita_bb28; assert_in_delta(0.0, (worksheet.costpercapita_bb28||0), 0.002); end
  def test_costpercapita_bc28; assert_in_delta(0.0, (worksheet.costpercapita_bc28||0), 0.002); end
  def test_costpercapita_bd28; assert_in_delta(0.0, (worksheet.costpercapita_bd28||0), 0.002); end
  def test_costpercapita_be28; assert_in_delta(0.0, (worksheet.costpercapita_be28||0), 0.002); end
  def test_costpercapita_bf28; assert_in_delta(0.0, (worksheet.costpercapita_bf28||0), 0.002); end
  def test_costpercapita_bg28; assert_in_delta(0.0, (worksheet.costpercapita_bg28||0), 0.002); end
  def test_costpercapita_bi28; assert_in_delta(0.0, (worksheet.costpercapita_bi28||0), 0.002); end
  def test_costpercapita_bj28; assert_in_delta(0.0, (worksheet.costpercapita_bj28||0), 0.002); end
  def test_costpercapita_bk28; assert_in_delta(0.0, (worksheet.costpercapita_bk28||0), 0.002); end
  def test_costpercapita_bl28; assert_in_delta(0.0, (worksheet.costpercapita_bl28||0), 0.002); end
  def test_costpercapita_bm28; assert_in_delta(0.0, (worksheet.costpercapita_bm28||0), 0.002); end
  def test_costpercapita_bn28; assert_in_delta(0.0, (worksheet.costpercapita_bn28||0), 0.002); end
  def test_costpercapita_bo28; assert_in_delta(0.0, (worksheet.costpercapita_bo28||0), 0.002); end
  def test_costpercapita_bp28; assert_in_delta(0.0, (worksheet.costpercapita_bp28||0), 0.002); end
  def test_costpercapita_bq28; assert_in_delta(0.0, (worksheet.costpercapita_bq28||0), 0.002); end
  def test_costpercapita_bs28; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_bs28, 0.002); end
  def test_costpercapita_bt28; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_bt28, 0.002); end
  def test_costpercapita_bu28; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_bu28, 0.002); end
  def test_costpercapita_bv28; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_bv28, 0.002); end
  def test_costpercapita_bw28; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_bw28, 0.002); end
  def test_costpercapita_bx28; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_bx28, 0.002); end
  def test_costpercapita_by28; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_by28, 0.002); end
  def test_costpercapita_bz28; assert_in_delta(0.0, (worksheet.costpercapita_bz28||0), 0.002); end
  def test_costpercapita_ca28; assert_in_delta(0.0, (worksheet.costpercapita_ca28||0), 0.002); end
  def test_costpercapita_cc28; assert_in_epsilon(104.20766539793755, worksheet.costpercapita_cc28, 0.002); end
  def test_costpercapita_cd28; assert_in_epsilon(2489.272496400997, worksheet.costpercapita_cd28, 0.002); end
  def test_costpercapita_cf28; assert_in_delta(0.0, (worksheet.costpercapita_cf28||0), 0.002); end
  def test_costpercapita_cg28; assert_in_delta(0.0, (worksheet.costpercapita_cg28||0), 0.002); end
  def test_costpercapita_ch28; assert_in_delta(0.0, (worksheet.costpercapita_ch28||0), 0.002); end
  def test_costpercapita_ci28; assert_in_delta(0.0, (worksheet.costpercapita_ci28||0), 0.002); end
  def test_costpercapita_cj28; assert_in_delta(0.0, (worksheet.costpercapita_cj28||0), 0.002); end
  def test_costpercapita_ck28; assert_in_delta(0.0, (worksheet.costpercapita_ck28||0), 0.002); end
  def test_costpercapita_cl28; assert_in_delta(0.0, (worksheet.costpercapita_cl28||0), 0.002); end
  def test_costpercapita_cm28; assert_in_delta(0.0, (worksheet.costpercapita_cm28||0), 0.002); end
  def test_costpercapita_cn28; assert_in_delta(0.0, (worksheet.costpercapita_cn28||0), 0.002); end
  def test_costpercapita_cp28; assert_in_delta(0.0, (worksheet.costpercapita_cp28||0), 0.002); end
  def test_costpercapita_cq28; assert_in_delta(0.0, (worksheet.costpercapita_cq28||0), 0.002); end
  def test_costpercapita_cr28; assert_equal("ok", worksheet.costpercapita_cr28); end
  def test_costpercapita_a29; assert_equal("AGL", worksheet.costpercapita_a29); end
  def test_costpercapita_b29; assert_equal("place holder", worksheet.costpercapita_b29); end
  def test_costpercapita_c29; assert_equal("Bioenergy", worksheet.costpercapita_c29); end
  def test_costpercapita_e29; assert_in_delta(0.0, (worksheet.costpercapita_e29||0), 0.002); end
  def test_costpercapita_f29; assert_in_delta(0.0, (worksheet.costpercapita_f29||0), 0.002); end
  def test_costpercapita_g29; assert_in_delta(0.0, (worksheet.costpercapita_g29||0), 0.002); end
  def test_costpercapita_h29; assert_in_delta(0.0, (worksheet.costpercapita_h29||0), 0.002); end
  def test_costpercapita_i29; assert_in_delta(0.0, (worksheet.costpercapita_i29||0), 0.002); end
  def test_costpercapita_j29; assert_in_delta(0.0, (worksheet.costpercapita_j29||0), 0.002); end
  def test_costpercapita_k29; assert_in_delta(0.0, (worksheet.costpercapita_k29||0), 0.002); end
  def test_costpercapita_l29; assert_in_delta(0.0, (worksheet.costpercapita_l29||0), 0.002); end
  def test_costpercapita_m29; assert_in_delta(0.0, (worksheet.costpercapita_m29||0), 0.002); end
  def test_costpercapita_o29; assert_in_delta(0.0, (worksheet.costpercapita_o29||0), 0.002); end
  def test_costpercapita_p29; assert_in_delta(0.0, (worksheet.costpercapita_p29||0), 0.002); end
  def test_costpercapita_q29; assert_in_delta(0.0, (worksheet.costpercapita_q29||0), 0.002); end
  def test_costpercapita_r29; assert_in_delta(0.0, (worksheet.costpercapita_r29||0), 0.002); end
  def test_costpercapita_s29; assert_in_delta(0.0, (worksheet.costpercapita_s29||0), 0.002); end
  def test_costpercapita_t29; assert_in_delta(0.0, (worksheet.costpercapita_t29||0), 0.002); end
  def test_costpercapita_u29; assert_in_delta(0.0, (worksheet.costpercapita_u29||0), 0.002); end
  def test_costpercapita_v29; assert_in_delta(0.0, (worksheet.costpercapita_v29||0), 0.002); end
  def test_costpercapita_w29; assert_in_delta(0.0, (worksheet.costpercapita_w29||0), 0.002); end
  def test_costpercapita_y29; assert_in_delta(0.0, (worksheet.costpercapita_y29||0), 0.002); end
  def test_costpercapita_z29; assert_in_delta(0.0, (worksheet.costpercapita_z29||0), 0.002); end
  def test_costpercapita_aa29; assert_in_delta(0.0, (worksheet.costpercapita_aa29||0), 0.002); end
  def test_costpercapita_ab29; assert_in_delta(0.0, (worksheet.costpercapita_ab29||0), 0.002); end
  def test_costpercapita_ac29; assert_in_delta(0.0, (worksheet.costpercapita_ac29||0), 0.002); end
  def test_costpercapita_ad29; assert_in_delta(0.0, (worksheet.costpercapita_ad29||0), 0.002); end
  def test_costpercapita_ae29; assert_in_delta(0.0, (worksheet.costpercapita_ae29||0), 0.002); end
  def test_costpercapita_af29; assert_in_delta(0.0, (worksheet.costpercapita_af29||0), 0.002); end
  def test_costpercapita_ag29; assert_in_delta(0.0, (worksheet.costpercapita_ag29||0), 0.002); end
  def test_costpercapita_ai29; assert_in_delta(0.0, (worksheet.costpercapita_ai29||0), 0.002); end
  def test_costpercapita_aj29; assert_in_delta(0.0, (worksheet.costpercapita_aj29||0), 0.002); end
  def test_costpercapita_ak29; assert_in_delta(0.0, (worksheet.costpercapita_ak29||0), 0.002); end
  def test_costpercapita_al29; assert_in_delta(0.0, (worksheet.costpercapita_al29||0), 0.002); end
  def test_costpercapita_am29; assert_in_delta(0.0, (worksheet.costpercapita_am29||0), 0.002); end
  def test_costpercapita_an29; assert_in_delta(0.0, (worksheet.costpercapita_an29||0), 0.002); end
  def test_costpercapita_ao29; assert_in_delta(0.0, (worksheet.costpercapita_ao29||0), 0.002); end
  def test_costpercapita_ap29; assert_in_delta(0.0, (worksheet.costpercapita_ap29||0), 0.002); end
  def test_costpercapita_aq29; assert_in_delta(0.0, (worksheet.costpercapita_aq29||0), 0.002); end
  def test_costpercapita_as29; assert_in_delta(0.0, (worksheet.costpercapita_as29||0), 0.002); end
  def test_costpercapita_at29; assert_in_delta(0.0, (worksheet.costpercapita_at29||0), 0.002); end
  def test_costpercapita_av29; assert_in_delta(0.0, (worksheet.costpercapita_av29||0), 0.002); end
  def test_costpercapita_aw29; assert_in_epsilon(5.0, worksheet.costpercapita_aw29, 0.002); end
  def test_costpercapita_ay29; assert_in_delta(0.0, (worksheet.costpercapita_ay29||0), 0.002); end
  def test_costpercapita_az29; assert_in_delta(0.0, (worksheet.costpercapita_az29||0), 0.002); end
  def test_costpercapita_ba29; assert_in_delta(0.0, (worksheet.costpercapita_ba29||0), 0.002); end
  def test_costpercapita_bb29; assert_in_delta(0.0, (worksheet.costpercapita_bb29||0), 0.002); end
  def test_costpercapita_bc29; assert_in_delta(0.0, (worksheet.costpercapita_bc29||0), 0.002); end
  def test_costpercapita_bd29; assert_in_delta(0.0, (worksheet.costpercapita_bd29||0), 0.002); end
  def test_costpercapita_be29; assert_in_delta(0.0, (worksheet.costpercapita_be29||0), 0.002); end
  def test_costpercapita_bf29; assert_in_delta(0.0, (worksheet.costpercapita_bf29||0), 0.002); end
  def test_costpercapita_bg29; assert_in_delta(0.0, (worksheet.costpercapita_bg29||0), 0.002); end
  def test_costpercapita_bi29; assert_in_delta(0.0, (worksheet.costpercapita_bi29||0), 0.002); end
  def test_costpercapita_bj29; assert_in_delta(0.0, (worksheet.costpercapita_bj29||0), 0.002); end
  def test_costpercapita_bk29; assert_in_delta(0.0, (worksheet.costpercapita_bk29||0), 0.002); end
  def test_costpercapita_bl29; assert_in_delta(0.0, (worksheet.costpercapita_bl29||0), 0.002); end
  def test_costpercapita_bm29; assert_in_delta(0.0, (worksheet.costpercapita_bm29||0), 0.002); end
  def test_costpercapita_bn29; assert_in_delta(0.0, (worksheet.costpercapita_bn29||0), 0.002); end
  def test_costpercapita_bo29; assert_in_delta(0.0, (worksheet.costpercapita_bo29||0), 0.002); end
  def test_costpercapita_bp29; assert_in_delta(0.0, (worksheet.costpercapita_bp29||0), 0.002); end
  def test_costpercapita_bq29; assert_in_delta(0.0, (worksheet.costpercapita_bq29||0), 0.002); end
  def test_costpercapita_bs29; assert_in_delta(0.0, (worksheet.costpercapita_bs29||0), 0.002); end
  def test_costpercapita_bt29; assert_in_delta(0.0, (worksheet.costpercapita_bt29||0), 0.002); end
  def test_costpercapita_bu29; assert_in_delta(0.0, (worksheet.costpercapita_bu29||0), 0.002); end
  def test_costpercapita_bv29; assert_in_delta(0.0, (worksheet.costpercapita_bv29||0), 0.002); end
  def test_costpercapita_bw29; assert_in_delta(0.0, (worksheet.costpercapita_bw29||0), 0.002); end
  def test_costpercapita_bx29; assert_in_delta(0.0, (worksheet.costpercapita_bx29||0), 0.002); end
  def test_costpercapita_by29; assert_in_delta(0.0, (worksheet.costpercapita_by29||0), 0.002); end
  def test_costpercapita_bz29; assert_in_delta(0.0, (worksheet.costpercapita_bz29||0), 0.002); end
  def test_costpercapita_ca29; assert_in_delta(0.0, (worksheet.costpercapita_ca29||0), 0.002); end
  def test_costpercapita_cc29; assert_in_delta(0.0, (worksheet.costpercapita_cc29||0), 0.002); end
  def test_costpercapita_cd29; assert_in_delta(0.0, (worksheet.costpercapita_cd29||0), 0.002); end
  def test_costpercapita_cf29; assert_in_delta(0.0, (worksheet.costpercapita_cf29||0), 0.002); end
  def test_costpercapita_cg29; assert_in_delta(0.0, (worksheet.costpercapita_cg29||0), 0.002); end
  def test_costpercapita_ch29; assert_in_delta(0.0, (worksheet.costpercapita_ch29||0), 0.002); end
  def test_costpercapita_ci29; assert_in_delta(0.0, (worksheet.costpercapita_ci29||0), 0.002); end
  def test_costpercapita_cj29; assert_in_delta(0.0, (worksheet.costpercapita_cj29||0), 0.002); end
  def test_costpercapita_ck29; assert_in_delta(0.0, (worksheet.costpercapita_ck29||0), 0.002); end
  def test_costpercapita_cl29; assert_in_delta(0.0, (worksheet.costpercapita_cl29||0), 0.002); end
  def test_costpercapita_cm29; assert_in_delta(0.0, (worksheet.costpercapita_cm29||0), 0.002); end
  def test_costpercapita_cn29; assert_in_delta(0.0, (worksheet.costpercapita_cn29||0), 0.002); end
  def test_costpercapita_cp29; assert_in_delta(0.0, (worksheet.costpercapita_cp29||0), 0.002); end
  def test_costpercapita_cq29; assert_in_delta(0.0, (worksheet.costpercapita_cq29||0), 0.002); end
  def test_costpercapita_cr29; assert_equal("ok", worksheet.costpercapita_cr29); end
  def test_costpercapita_a30; assert_equal("TRA.a.ICE", worksheet.costpercapita_a30); end
  def test_costpercapita_b30; assert_equal("Conventional cars, SUVs, buses, minibuses, BRT", worksheet.costpercapita_b30); end
  def test_costpercapita_c30; assert_equal("Transport", worksheet.costpercapita_c30); end
  def test_costpercapita_e30; assert_in_epsilon(1607.5077175806282, worksheet.costpercapita_e30, 0.002); end
  def test_costpercapita_f30; assert_in_epsilon(1704.5727040164143, worksheet.costpercapita_f30, 0.002); end
  def test_costpercapita_g30; assert_in_epsilon(1778.1853597772392, worksheet.costpercapita_g30, 0.002); end
  def test_costpercapita_h30; assert_in_epsilon(1800.4966737174561, worksheet.costpercapita_h30, 0.002); end
  def test_costpercapita_i30; assert_in_epsilon(1754.2552167718475, worksheet.costpercapita_i30, 0.002); end
  def test_costpercapita_j30; assert_in_epsilon(1758.5319730566519, worksheet.costpercapita_j30, 0.002); end
  def test_costpercapita_k30; assert_in_epsilon(1732.1727747854993, worksheet.costpercapita_k30, 0.002); end
  def test_costpercapita_l30; assert_in_epsilon(1745.0453832099656, worksheet.costpercapita_l30, 0.002); end
  def test_costpercapita_m30; assert_in_epsilon(1757.4902622435895, worksheet.costpercapita_m30, 0.002); end
  def test_costpercapita_o30; assert_in_epsilon(1407.947232645333, worksheet.costpercapita_o30, 0.002); end
  def test_costpercapita_p30; assert_in_epsilon(1988.2151430554538, worksheet.costpercapita_p30, 0.002); end
  def test_costpercapita_q30; assert_in_epsilon(2291.002068150322, worksheet.costpercapita_q30, 0.002); end
  def test_costpercapita_r30; assert_in_epsilon(2436.688638596246, worksheet.costpercapita_r30, 0.002); end
  def test_costpercapita_s30; assert_in_epsilon(2308.018223049976, worksheet.costpercapita_s30, 0.002); end
  def test_costpercapita_t30; assert_in_epsilon(2166.086277225856, worksheet.costpercapita_t30, 0.002); end
  def test_costpercapita_u30; assert_in_epsilon(1864.2428852065443, worksheet.costpercapita_u30, 0.002); end
  def test_costpercapita_v30; assert_in_epsilon(1598.3522831790344, worksheet.costpercapita_v30, 0.002); end
  def test_costpercapita_w30; assert_in_epsilon(1275.6275693927169, worksheet.costpercapita_w30, 0.002); end
  def test_costpercapita_y30; assert_in_delta(0.0, (worksheet.costpercapita_y30||0), 0.002); end
  def test_costpercapita_z30; assert_in_delta(0.0, (worksheet.costpercapita_z30||0), 0.002); end
  def test_costpercapita_aa30; assert_in_delta(0.0, (worksheet.costpercapita_aa30||0), 0.002); end
  def test_costpercapita_ab30; assert_in_delta(0.0, (worksheet.costpercapita_ab30||0), 0.002); end
  def test_costpercapita_ac30; assert_in_delta(0.0, (worksheet.costpercapita_ac30||0), 0.002); end
  def test_costpercapita_ad30; assert_in_delta(0.0, (worksheet.costpercapita_ad30||0), 0.002); end
  def test_costpercapita_ae30; assert_in_delta(0.0, (worksheet.costpercapita_ae30||0), 0.002); end
  def test_costpercapita_af30; assert_in_delta(0.0, (worksheet.costpercapita_af30||0), 0.002); end
  def test_costpercapita_ag30; assert_in_delta(0.0, (worksheet.costpercapita_ag30||0), 0.002); end
  def test_costpercapita_ai30; assert_in_epsilon(3015.454950225961, worksheet.costpercapita_ai30, 0.002); end
  def test_costpercapita_aj30; assert_in_epsilon(3692.787847071868, worksheet.costpercapita_aj30, 0.002); end
  def test_costpercapita_ak30; assert_in_epsilon(4069.187427927561, worksheet.costpercapita_ak30, 0.002); end
  def test_costpercapita_al30; assert_in_epsilon(4237.1853123137025, worksheet.costpercapita_al30, 0.002); end
  def test_costpercapita_am30; assert_in_epsilon(4062.2734398218236, worksheet.costpercapita_am30, 0.002); end
  def test_costpercapita_an30; assert_in_epsilon(3924.6182502825077, worksheet.costpercapita_an30, 0.002); end
  def test_costpercapita_ao30; assert_in_epsilon(3596.415659992044, worksheet.costpercapita_ao30, 0.002); end
  def test_costpercapita_ap30; assert_in_epsilon(3343.3976663890003, worksheet.costpercapita_ap30, 0.002); end
  def test_costpercapita_aq30; assert_in_epsilon(3033.1178316363066, worksheet.costpercapita_aq30, 0.002); end
  def test_costpercapita_as30; assert_in_epsilon(3663.8264872956415, worksheet.costpercapita_as30, 0.002); end
  def test_costpercapita_at30; assert_in_epsilon(79706.854072645, worksheet.costpercapita_at30, 0.002); end
  def test_costpercapita_av30; assert_in_delta(0.0, (worksheet.costpercapita_av30||0), 0.002); end
  def test_costpercapita_aw30; assert_in_epsilon(5.0, worksheet.costpercapita_aw30, 0.002); end
  def test_costpercapita_ay30; assert_in_epsilon(1607.5077175806282, worksheet.costpercapita_ay30, 0.002); end
  def test_costpercapita_az30; assert_in_epsilon(1704.5727040164143, worksheet.costpercapita_az30, 0.002); end
  def test_costpercapita_ba30; assert_in_epsilon(1778.1853597772392, worksheet.costpercapita_ba30, 0.002); end
  def test_costpercapita_bb30; assert_in_epsilon(1800.4966737174561, worksheet.costpercapita_bb30, 0.002); end
  def test_costpercapita_bc30; assert_in_epsilon(1754.2552167718475, worksheet.costpercapita_bc30, 0.002); end
  def test_costpercapita_bd30; assert_in_epsilon(1758.5319730566519, worksheet.costpercapita_bd30, 0.002); end
  def test_costpercapita_be30; assert_in_epsilon(1732.1727747854993, worksheet.costpercapita_be30, 0.002); end
  def test_costpercapita_bf30; assert_in_epsilon(1745.0453832099656, worksheet.costpercapita_bf30, 0.002); end
  def test_costpercapita_bg30; assert_in_epsilon(1757.4902622435895, worksheet.costpercapita_bg30, 0.002); end
  def test_costpercapita_bi30; assert_in_delta(0.0, (worksheet.costpercapita_bi30||0), 0.002); end
  def test_costpercapita_bj30; assert_in_delta(0.0, (worksheet.costpercapita_bj30||0), 0.002); end
  def test_costpercapita_bk30; assert_in_delta(0.0, (worksheet.costpercapita_bk30||0), 0.002); end
  def test_costpercapita_bl30; assert_in_delta(0.0, (worksheet.costpercapita_bl30||0), 0.002); end
  def test_costpercapita_bm30; assert_in_delta(0.0, (worksheet.costpercapita_bm30||0), 0.002); end
  def test_costpercapita_bn30; assert_in_delta(0.0, (worksheet.costpercapita_bn30||0), 0.002); end
  def test_costpercapita_bo30; assert_in_delta(0.0, (worksheet.costpercapita_bo30||0), 0.002); end
  def test_costpercapita_bp30; assert_in_delta(0.0, (worksheet.costpercapita_bp30||0), 0.002); end
  def test_costpercapita_bq30; assert_in_delta(0.0, (worksheet.costpercapita_bq30||0), 0.002); end
  def test_costpercapita_bs30; assert_in_epsilon(3015.454950225961, worksheet.costpercapita_bs30, 0.002); end
  def test_costpercapita_bt30; assert_in_epsilon(3692.787847071868, worksheet.costpercapita_bt30, 0.002); end
  def test_costpercapita_bu30; assert_in_epsilon(4069.187427927561, worksheet.costpercapita_bu30, 0.002); end
  def test_costpercapita_bv30; assert_in_epsilon(4237.1853123137025, worksheet.costpercapita_bv30, 0.002); end
  def test_costpercapita_bw30; assert_in_epsilon(4062.2734398218236, worksheet.costpercapita_bw30, 0.002); end
  def test_costpercapita_bx30; assert_in_epsilon(3924.6182502825077, worksheet.costpercapita_bx30, 0.002); end
  def test_costpercapita_by30; assert_in_epsilon(3596.415659992044, worksheet.costpercapita_by30, 0.002); end
  def test_costpercapita_bz30; assert_in_epsilon(3343.3976663890003, worksheet.costpercapita_bz30, 0.002); end
  def test_costpercapita_ca30; assert_in_epsilon(3033.1178316363066, worksheet.costpercapita_ca30, 0.002); end
  def test_costpercapita_cc30; assert_in_epsilon(3663.8264872956415, worksheet.costpercapita_cc30, 0.002); end
  def test_costpercapita_cd30; assert_in_epsilon(79706.854072645, worksheet.costpercapita_cd30, 0.002); end
  def test_costpercapita_cf30; assert_in_delta(0.0, (worksheet.costpercapita_cf30||0), 0.002); end
  def test_costpercapita_cg30; assert_in_delta(0.0, (worksheet.costpercapita_cg30||0), 0.002); end
  def test_costpercapita_ch30; assert_in_delta(0.0, (worksheet.costpercapita_ch30||0), 0.002); end
  def test_costpercapita_ci30; assert_in_delta(0.0, (worksheet.costpercapita_ci30||0), 0.002); end
  def test_costpercapita_cj30; assert_in_delta(0.0, (worksheet.costpercapita_cj30||0), 0.002); end
  def test_costpercapita_ck30; assert_in_delta(0.0, (worksheet.costpercapita_ck30||0), 0.002); end
  def test_costpercapita_cl30; assert_in_delta(0.0, (worksheet.costpercapita_cl30||0), 0.002); end
  def test_costpercapita_cm30; assert_in_delta(0.0, (worksheet.costpercapita_cm30||0), 0.002); end
  def test_costpercapita_cn30; assert_in_delta(0.0, (worksheet.costpercapita_cn30||0), 0.002); end
  def test_costpercapita_cp30; assert_in_delta(0.0, (worksheet.costpercapita_cp30||0), 0.002); end
  def test_costpercapita_cq30; assert_in_delta(0.0, (worksheet.costpercapita_cq30||0), 0.002); end
  def test_costpercapita_cr30; assert_equal("ok", worksheet.costpercapita_cr30); end
  def test_costpercapita_a31; assert_equal("TRA.a.PHEV", worksheet.costpercapita_a31); end
  def test_costpercapita_b31; assert_equal("PHEV cars, SUVs, minibuses", worksheet.costpercapita_b31); end
  def test_costpercapita_c31; assert_equal("Transport", worksheet.costpercapita_c31); end
  def test_costpercapita_e31; assert_in_delta(0.47942152551409245, worksheet.costpercapita_e31, 0.002); end
  def test_costpercapita_f31; assert_in_epsilon(35.62480983692137, worksheet.costpercapita_f31, 0.002); end
  def test_costpercapita_g31; assert_in_epsilon(95.38158509488464, worksheet.costpercapita_g31, 0.002); end
  def test_costpercapita_h31; assert_in_epsilon(149.72100575074242, worksheet.costpercapita_h31, 0.002); end
  def test_costpercapita_i31; assert_in_epsilon(224.47539942702497, worksheet.costpercapita_i31, 0.002); end
  def test_costpercapita_j31; assert_in_epsilon(277.58621461482215, worksheet.costpercapita_j31, 0.002); end
  def test_costpercapita_k31; assert_in_epsilon(320.76736521044495, worksheet.costpercapita_k31, 0.002); end
  def test_costpercapita_l31; assert_in_epsilon(311.6970199427319, worksheet.costpercapita_l31, 0.002); end
  def test_costpercapita_m31; assert_in_epsilon(335.99616636446956, worksheet.costpercapita_m31, 0.002); end
  def test_costpercapita_o31; assert_in_delta(0.2905854791671061, worksheet.costpercapita_o31, 0.002); end
  def test_costpercapita_p31; assert_in_epsilon(18.85375976132777, worksheet.costpercapita_p31, 0.002); end
  def test_costpercapita_q31; assert_in_epsilon(56.6658422139908, worksheet.costpercapita_q31, 0.002); end
  def test_costpercapita_r31; assert_in_epsilon(104.1887680586342, worksheet.costpercapita_r31, 0.002); end
  def test_costpercapita_s31; assert_in_epsilon(168.83283085912228, worksheet.costpercapita_s31, 0.002); end
  def test_costpercapita_t31; assert_in_epsilon(227.42539993687234, worksheet.costpercapita_t31, 0.002); end
  def test_costpercapita_u31; assert_in_epsilon(281.2465568988414, worksheet.costpercapita_u31, 0.002); end
  def test_costpercapita_v31; assert_in_epsilon(299.44982130599254, worksheet.costpercapita_v31, 0.002); end
  def test_costpercapita_w31; assert_in_epsilon(340.1326767244356, worksheet.costpercapita_w31, 0.002); end
  def test_costpercapita_y31; assert_in_delta(0.0, (worksheet.costpercapita_y31||0), 0.002); end
  def test_costpercapita_z31; assert_in_delta(0.0, (worksheet.costpercapita_z31||0), 0.002); end
  def test_costpercapita_aa31; assert_in_delta(0.0, (worksheet.costpercapita_aa31||0), 0.002); end
  def test_costpercapita_ab31; assert_in_delta(0.0, (worksheet.costpercapita_ab31||0), 0.002); end
  def test_costpercapita_ac31; assert_in_delta(0.0, (worksheet.costpercapita_ac31||0), 0.002); end
  def test_costpercapita_ad31; assert_in_delta(0.0, (worksheet.costpercapita_ad31||0), 0.002); end
  def test_costpercapita_ae31; assert_in_delta(0.0, (worksheet.costpercapita_ae31||0), 0.002); end
  def test_costpercapita_af31; assert_in_delta(0.0, (worksheet.costpercapita_af31||0), 0.002); end
  def test_costpercapita_ag31; assert_in_delta(0.0, (worksheet.costpercapita_ag31||0), 0.002); end
  def test_costpercapita_ai31; assert_in_delta(0.7700070046811985, worksheet.costpercapita_ai31, 0.002); end
  def test_costpercapita_aj31; assert_in_epsilon(54.478569598249145, worksheet.costpercapita_aj31, 0.002); end
  def test_costpercapita_ak31; assert_in_epsilon(152.04742730887543, worksheet.costpercapita_ak31, 0.002); end
  def test_costpercapita_al31; assert_in_epsilon(253.90977380937665, worksheet.costpercapita_al31, 0.002); end
  def test_costpercapita_am31; assert_in_epsilon(393.30823028614725, worksheet.costpercapita_am31, 0.002); end
  def test_costpercapita_an31; assert_in_epsilon(505.01161455169444, worksheet.costpercapita_an31, 0.002); end
  def test_costpercapita_ao31; assert_in_epsilon(602.0139221092865, worksheet.costpercapita_ao31, 0.002); end
  def test_costpercapita_ap31; assert_in_epsilon(611.1468412487244, worksheet.costpercapita_ap31, 0.002); end
  def test_costpercapita_aq31; assert_in_epsilon(676.1288430889051, worksheet.costpercapita_aq31, 0.002); end
  def test_costpercapita_as31; assert_in_epsilon(360.97946988954885, worksheet.costpercapita_as31, 0.002); end
  def test_costpercapita_at31; assert_in_epsilon(6491.3954406115445, worksheet.costpercapita_at31, 0.002); end
  def test_costpercapita_av31; assert_in_delta(0.0, (worksheet.costpercapita_av31||0), 0.002); end
  def test_costpercapita_aw31; assert_in_epsilon(5.0, worksheet.costpercapita_aw31, 0.002); end
  def test_costpercapita_ay31; assert_in_delta(0.47942152551409245, worksheet.costpercapita_ay31, 0.002); end
  def test_costpercapita_az31; assert_in_epsilon(35.624809836921365, worksheet.costpercapita_az31, 0.002); end
  def test_costpercapita_ba31; assert_in_epsilon(95.38158509488464, worksheet.costpercapita_ba31, 0.002); end
  def test_costpercapita_bb31; assert_in_epsilon(149.72100575074242, worksheet.costpercapita_bb31, 0.002); end
  def test_costpercapita_bc31; assert_in_epsilon(224.47539942702497, worksheet.costpercapita_bc31, 0.002); end
  def test_costpercapita_bd31; assert_in_epsilon(277.58621461482215, worksheet.costpercapita_bd31, 0.002); end
  def test_costpercapita_be31; assert_in_epsilon(320.76736521044495, worksheet.costpercapita_be31, 0.002); end
  def test_costpercapita_bf31; assert_in_epsilon(311.6970199427319, worksheet.costpercapita_bf31, 0.002); end
  def test_costpercapita_bg31; assert_in_epsilon(335.99616636446956, worksheet.costpercapita_bg31, 0.002); end
  def test_costpercapita_bi31; assert_in_delta(0.0, (worksheet.costpercapita_bi31||0), 0.002); end
  def test_costpercapita_bj31; assert_in_delta(0.0, (worksheet.costpercapita_bj31||0), 0.002); end
  def test_costpercapita_bk31; assert_in_delta(0.0, (worksheet.costpercapita_bk31||0), 0.002); end
  def test_costpercapita_bl31; assert_in_delta(0.0, (worksheet.costpercapita_bl31||0), 0.002); end
  def test_costpercapita_bm31; assert_in_delta(0.0, (worksheet.costpercapita_bm31||0), 0.002); end
  def test_costpercapita_bn31; assert_in_delta(0.0, (worksheet.costpercapita_bn31||0), 0.002); end
  def test_costpercapita_bo31; assert_in_delta(0.0, (worksheet.costpercapita_bo31||0), 0.002); end
  def test_costpercapita_bp31; assert_in_delta(0.0, (worksheet.costpercapita_bp31||0), 0.002); end
  def test_costpercapita_bq31; assert_in_delta(0.0, (worksheet.costpercapita_bq31||0), 0.002); end
  def test_costpercapita_bs31; assert_in_delta(0.7700070046811985, worksheet.costpercapita_bs31, 0.002); end
  def test_costpercapita_bt31; assert_in_epsilon(54.47856959824914, worksheet.costpercapita_bt31, 0.002); end
  def test_costpercapita_bu31; assert_in_epsilon(152.04742730887543, worksheet.costpercapita_bu31, 0.002); end
  def test_costpercapita_bv31; assert_in_epsilon(253.90977380937665, worksheet.costpercapita_bv31, 0.002); end
  def test_costpercapita_bw31; assert_in_epsilon(393.30823028614725, worksheet.costpercapita_bw31, 0.002); end
  def test_costpercapita_bx31; assert_in_epsilon(505.0116145516945, worksheet.costpercapita_bx31, 0.002); end
  def test_costpercapita_by31; assert_in_epsilon(602.0139221092865, worksheet.costpercapita_by31, 0.002); end
  def test_costpercapita_bz31; assert_in_epsilon(611.1468412487244, worksheet.costpercapita_bz31, 0.002); end
  def test_costpercapita_ca31; assert_in_epsilon(676.1288430889051, worksheet.costpercapita_ca31, 0.002); end
  def test_costpercapita_cc31; assert_in_epsilon(360.97946988954885, worksheet.costpercapita_cc31, 0.002); end
  def test_costpercapita_cd31; assert_in_epsilon(6491.3954406115445, worksheet.costpercapita_cd31, 0.002); end
  def test_costpercapita_cf31; assert_in_delta(0.0, (worksheet.costpercapita_cf31||0), 0.002); end
  def test_costpercapita_cg31; assert_in_delta(0.0, (worksheet.costpercapita_cg31||0), 0.002); end
  def test_costpercapita_ch31; assert_in_delta(0.0, (worksheet.costpercapita_ch31||0), 0.002); end
  def test_costpercapita_ci31; assert_in_delta(0.0, (worksheet.costpercapita_ci31||0), 0.002); end
  def test_costpercapita_cj31; assert_in_delta(0.0, (worksheet.costpercapita_cj31||0), 0.002); end
  def test_costpercapita_ck31; assert_in_delta(0.0, (worksheet.costpercapita_ck31||0), 0.002); end
  def test_costpercapita_cl31; assert_in_delta(0.0, (worksheet.costpercapita_cl31||0), 0.002); end
  def test_costpercapita_cm31; assert_in_delta(0.0, (worksheet.costpercapita_cm31||0), 0.002); end
  def test_costpercapita_cn31; assert_in_delta(0.0, (worksheet.costpercapita_cn31||0), 0.002); end
  def test_costpercapita_cp31; assert_in_delta(0.0, (worksheet.costpercapita_cp31||0), 0.002); end
  def test_costpercapita_cq31; assert_in_delta(0.0, (worksheet.costpercapita_cq31||0), 0.002); end
  def test_costpercapita_cr31; assert_equal("ok", worksheet.costpercapita_cr31); end
  def test_costpercapita_a32; assert_equal("TRA.a.EV", worksheet.costpercapita_a32); end
  def test_costpercapita_b32; assert_equal("Electric cars, buses, minibuses, BRT", worksheet.costpercapita_b32); end
  def test_costpercapita_c32; assert_equal("Transport", worksheet.costpercapita_c32); end
  def test_costpercapita_e32; assert_in_delta(0.0, (worksheet.costpercapita_e32||0), 0.002); end
  def test_costpercapita_f32; assert_in_epsilon(154.0377845191408, worksheet.costpercapita_f32, 0.002); end
  def test_costpercapita_g32; assert_in_epsilon(371.4594522870331, worksheet.costpercapita_g32, 0.002); end
  def test_costpercapita_h32; assert_in_epsilon(638.339492413302, worksheet.costpercapita_h32, 0.002); end
  def test_costpercapita_i32; assert_in_epsilon(945.5263151013467, worksheet.costpercapita_i32, 0.002); end
  def test_costpercapita_j32; assert_in_epsilon(1240.8148748699691, worksheet.costpercapita_j32, 0.002); end
  def test_costpercapita_k32; assert_in_epsilon(1529.750668548088, worksheet.costpercapita_k32, 0.002); end
  def test_costpercapita_l32; assert_in_epsilon(1802.734782300648, worksheet.costpercapita_l32, 0.002); end
  def test_costpercapita_m32; assert_in_epsilon(2073.282096934887, worksheet.costpercapita_m32, 0.002); end
  def test_costpercapita_o32; assert_in_delta(0.0, (worksheet.costpercapita_o32||0), 0.002); end
  def test_costpercapita_p32; assert_in_epsilon(129.8188688318527, worksheet.costpercapita_p32, 0.002); end
  def test_costpercapita_q32; assert_in_epsilon(388.574551427156, worksheet.costpercapita_q32, 0.002); end
  def test_costpercapita_r32; assert_in_epsilon(663.6605504702305, worksheet.costpercapita_r32, 0.002); end
  def test_costpercapita_s32; assert_in_epsilon(1089.9846592316862, worksheet.costpercapita_s32, 0.002); end
  def test_costpercapita_t32; assert_in_epsilon(1547.2812597629318, worksheet.costpercapita_t32, 0.002); end
  def test_costpercapita_u32; assert_in_epsilon(1735.1678024142855, worksheet.costpercapita_u32, 0.002); end
  def test_costpercapita_v32; assert_in_epsilon(1968.9321361659697, worksheet.costpercapita_v32, 0.002); end
  def test_costpercapita_w32; assert_in_epsilon(2343.470928272552, worksheet.costpercapita_w32, 0.002); end
  def test_costpercapita_y32; assert_in_delta(0.0, (worksheet.costpercapita_y32||0), 0.002); end
  def test_costpercapita_z32; assert_in_delta(0.0, (worksheet.costpercapita_z32||0), 0.002); end
  def test_costpercapita_aa32; assert_in_delta(0.0, (worksheet.costpercapita_aa32||0), 0.002); end
  def test_costpercapita_ab32; assert_in_delta(0.0, (worksheet.costpercapita_ab32||0), 0.002); end
  def test_costpercapita_ac32; assert_in_delta(0.0, (worksheet.costpercapita_ac32||0), 0.002); end
  def test_costpercapita_ad32; assert_in_delta(0.0, (worksheet.costpercapita_ad32||0), 0.002); end
  def test_costpercapita_ae32; assert_in_delta(0.0, (worksheet.costpercapita_ae32||0), 0.002); end
  def test_costpercapita_af32; assert_in_delta(0.0, (worksheet.costpercapita_af32||0), 0.002); end
  def test_costpercapita_ag32; assert_in_delta(0.0, (worksheet.costpercapita_ag32||0), 0.002); end
  def test_costpercapita_ai32; assert_in_delta(0.0, (worksheet.costpercapita_ai32||0), 0.002); end
  def test_costpercapita_aj32; assert_in_epsilon(283.8566533509935, worksheet.costpercapita_aj32, 0.002); end
  def test_costpercapita_ak32; assert_in_epsilon(760.0340037141891, worksheet.costpercapita_ak32, 0.002); end
  def test_costpercapita_al32; assert_in_epsilon(1302.0000428835326, worksheet.costpercapita_al32, 0.002); end
  def test_costpercapita_am32; assert_in_epsilon(2035.5109743330331, worksheet.costpercapita_am32, 0.002); end
  def test_costpercapita_an32; assert_in_epsilon(2788.096134632901, worksheet.costpercapita_an32, 0.002); end
  def test_costpercapita_ao32; assert_in_epsilon(3264.9184709623732, worksheet.costpercapita_ao32, 0.002); end
  def test_costpercapita_ap32; assert_in_epsilon(3771.6669184666175, worksheet.costpercapita_ap32, 0.002); end
  def test_costpercapita_aq32; assert_in_epsilon(4416.753025207438, worksheet.costpercapita_aq32, 0.002); end
  def test_costpercapita_as32; assert_in_epsilon(2069.204024839009, worksheet.costpercapita_as32, 0.002); end
  def test_costpercapita_at32; assert_in_epsilon(36254.85124883016, worksheet.costpercapita_at32, 0.002); end
  def test_costpercapita_av32; assert_in_delta(0.0, (worksheet.costpercapita_av32||0), 0.002); end
  def test_costpercapita_aw32; assert_in_epsilon(5.0, worksheet.costpercapita_aw32, 0.002); end
  def test_costpercapita_ay32; assert_in_delta(0.0, (worksheet.costpercapita_ay32||0), 0.002); end
  def test_costpercapita_az32; assert_in_epsilon(154.0377845191408, worksheet.costpercapita_az32, 0.002); end
  def test_costpercapita_ba32; assert_in_epsilon(371.4594522870331, worksheet.costpercapita_ba32, 0.002); end
  def test_costpercapita_bb32; assert_in_epsilon(638.339492413302, worksheet.costpercapita_bb32, 0.002); end
  def test_costpercapita_bc32; assert_in_epsilon(945.5263151013467, worksheet.costpercapita_bc32, 0.002); end
  def test_costpercapita_bd32; assert_in_epsilon(1240.8148748699691, worksheet.costpercapita_bd32, 0.002); end
  def test_costpercapita_be32; assert_in_epsilon(1529.750668548088, worksheet.costpercapita_be32, 0.002); end
  def test_costpercapita_bf32; assert_in_epsilon(1802.734782300648, worksheet.costpercapita_bf32, 0.002); end
  def test_costpercapita_bg32; assert_in_epsilon(2073.282096934887, worksheet.costpercapita_bg32, 0.002); end
  def test_costpercapita_bi32; assert_in_delta(0.0, (worksheet.costpercapita_bi32||0), 0.002); end
  def test_costpercapita_bj32; assert_in_delta(0.0, (worksheet.costpercapita_bj32||0), 0.002); end
  def test_costpercapita_bk32; assert_in_delta(0.0, (worksheet.costpercapita_bk32||0), 0.002); end
  def test_costpercapita_bl32; assert_in_delta(0.0, (worksheet.costpercapita_bl32||0), 0.002); end
  def test_costpercapita_bm32; assert_in_delta(0.0, (worksheet.costpercapita_bm32||0), 0.002); end
  def test_costpercapita_bn32; assert_in_delta(0.0, (worksheet.costpercapita_bn32||0), 0.002); end
  def test_costpercapita_bo32; assert_in_delta(0.0, (worksheet.costpercapita_bo32||0), 0.002); end
  def test_costpercapita_bp32; assert_in_delta(0.0, (worksheet.costpercapita_bp32||0), 0.002); end
  def test_costpercapita_bq32; assert_in_delta(0.0, (worksheet.costpercapita_bq32||0), 0.002); end
  def test_costpercapita_bs32; assert_in_delta(0.0, (worksheet.costpercapita_bs32||0), 0.002); end
  def test_costpercapita_bt32; assert_in_epsilon(283.8566533509935, worksheet.costpercapita_bt32, 0.002); end
  def test_costpercapita_bu32; assert_in_epsilon(760.0340037141891, worksheet.costpercapita_bu32, 0.002); end
  def test_costpercapita_bv32; assert_in_epsilon(1302.0000428835326, worksheet.costpercapita_bv32, 0.002); end
  def test_costpercapita_bw32; assert_in_epsilon(2035.5109743330331, worksheet.costpercapita_bw32, 0.002); end
  def test_costpercapita_bx32; assert_in_epsilon(2788.096134632901, worksheet.costpercapita_bx32, 0.002); end
  def test_costpercapita_by32; assert_in_epsilon(3264.9184709623732, worksheet.costpercapita_by32, 0.002); end
  def test_costpercapita_bz32; assert_in_epsilon(3771.6669184666175, worksheet.costpercapita_bz32, 0.002); end
  def test_costpercapita_ca32; assert_in_epsilon(4416.753025207438, worksheet.costpercapita_ca32, 0.002); end
  def test_costpercapita_cc32; assert_in_epsilon(2069.204024839009, worksheet.costpercapita_cc32, 0.002); end
  def test_costpercapita_cd32; assert_in_epsilon(36254.85124883016, worksheet.costpercapita_cd32, 0.002); end
  def test_costpercapita_cf32; assert_in_delta(0.0, (worksheet.costpercapita_cf32||0), 0.002); end
  def test_costpercapita_cg32; assert_in_delta(0.0, (worksheet.costpercapita_cg32||0), 0.002); end
  def test_costpercapita_ch32; assert_in_delta(0.0, (worksheet.costpercapita_ch32||0), 0.002); end
  def test_costpercapita_ci32; assert_in_delta(0.0, (worksheet.costpercapita_ci32||0), 0.002); end
  def test_costpercapita_cj32; assert_in_delta(0.0, (worksheet.costpercapita_cj32||0), 0.002); end
  def test_costpercapita_ck32; assert_in_delta(0.0, (worksheet.costpercapita_ck32||0), 0.002); end
  def test_costpercapita_cl32; assert_in_delta(0.0, (worksheet.costpercapita_cl32||0), 0.002); end
  def test_costpercapita_cm32; assert_in_delta(0.0, (worksheet.costpercapita_cm32||0), 0.002); end
  def test_costpercapita_cn32; assert_in_delta(0.0, (worksheet.costpercapita_cn32||0), 0.002); end
  def test_costpercapita_cp32; assert_in_delta(0.0, (worksheet.costpercapita_cp32||0), 0.002); end
  def test_costpercapita_cq32; assert_in_delta(0.0, (worksheet.costpercapita_cq32||0), 0.002); end
  def test_costpercapita_cr32; assert_equal("ok", worksheet.costpercapita_cr32); end
  def test_costpercapita_a33; assert_equal("TRA.a.FCV", worksheet.costpercapita_a33); end
  def test_costpercapita_b33; assert_equal("FCV cars, SUVs, buses, minibuses, BRT", worksheet.costpercapita_b33); end
  def test_costpercapita_c33; assert_equal("Transport", worksheet.costpercapita_c33); end
  def test_costpercapita_e33; assert_in_delta(0.0, (worksheet.costpercapita_e33||0), 0.002); end
  def test_costpercapita_f33; assert_in_epsilon(197.30756899581866, worksheet.costpercapita_f33, 0.002); end
  def test_costpercapita_g33; assert_in_epsilon(478.79195146294455, worksheet.costpercapita_g33, 0.002); end
  def test_costpercapita_h33; assert_in_epsilon(817.967228344374, worksheet.costpercapita_h33, 0.002); end
  def test_costpercapita_i33; assert_in_epsilon(1212.5210269621236, worksheet.costpercapita_i33, 0.002); end
  def test_costpercapita_j33; assert_in_epsilon(1584.689568912118, worksheet.costpercapita_j33, 0.002); end
  def test_costpercapita_k33; assert_in_epsilon(1945.6179279516998, worksheet.costpercapita_k33, 0.002); end
  def test_costpercapita_l33; assert_in_epsilon(2269.5344087083295, worksheet.costpercapita_l33, 0.002); end
  def test_costpercapita_m33; assert_in_epsilon(2602.654956979107, worksheet.costpercapita_m33, 0.002); end
  def test_costpercapita_o33; assert_in_delta(0.0, (worksheet.costpercapita_o33||0), 0.002); end
  def test_costpercapita_p33; assert_in_epsilon(74.80200129249373, worksheet.costpercapita_p33, 0.002); end
  def test_costpercapita_q33; assert_in_epsilon(139.43435197610972, worksheet.costpercapita_q33, 0.002); end
  def test_costpercapita_r33; assert_in_epsilon(268.82036712350197, worksheet.costpercapita_r33, 0.002); end
  def test_costpercapita_s33; assert_in_epsilon(440.89546637717075, worksheet.costpercapita_s33, 0.002); end
  def test_costpercapita_t33; assert_in_epsilon(623.2739476296422, worksheet.costpercapita_t33, 0.002); end
  def test_costpercapita_u33; assert_in_epsilon(811.3141939540584, worksheet.costpercapita_u33, 0.002); end
  def test_costpercapita_v33; assert_in_epsilon(907.2429247436627, worksheet.costpercapita_v33, 0.002); end
  def test_costpercapita_w33; assert_in_epsilon(1079.7919079087683, worksheet.costpercapita_w33, 0.002); end
  def test_costpercapita_y33; assert_in_delta(0.0, (worksheet.costpercapita_y33||0), 0.002); end
  def test_costpercapita_z33; assert_in_delta(0.0, (worksheet.costpercapita_z33||0), 0.002); end
  def test_costpercapita_aa33; assert_in_delta(0.0, (worksheet.costpercapita_aa33||0), 0.002); end
  def test_costpercapita_ab33; assert_in_delta(0.0, (worksheet.costpercapita_ab33||0), 0.002); end
  def test_costpercapita_ac33; assert_in_delta(0.0, (worksheet.costpercapita_ac33||0), 0.002); end
  def test_costpercapita_ad33; assert_in_delta(0.0, (worksheet.costpercapita_ad33||0), 0.002); end
  def test_costpercapita_ae33; assert_in_delta(0.0, (worksheet.costpercapita_ae33||0), 0.002); end
  def test_costpercapita_af33; assert_in_delta(0.0, (worksheet.costpercapita_af33||0), 0.002); end
  def test_costpercapita_ag33; assert_in_delta(0.0, (worksheet.costpercapita_ag33||0), 0.002); end
  def test_costpercapita_ai33; assert_in_delta(0.0, (worksheet.costpercapita_ai33||0), 0.002); end
  def test_costpercapita_aj33; assert_in_epsilon(272.1095702883124, worksheet.costpercapita_aj33, 0.002); end
  def test_costpercapita_ak33; assert_in_epsilon(618.2263034390543, worksheet.costpercapita_ak33, 0.002); end
  def test_costpercapita_al33; assert_in_epsilon(1086.787595467876, worksheet.costpercapita_al33, 0.002); end
  def test_costpercapita_am33; assert_in_epsilon(1653.4164933392944, worksheet.costpercapita_am33, 0.002); end
  def test_costpercapita_an33; assert_in_epsilon(2207.9635165417603, worksheet.costpercapita_an33, 0.002); end
  def test_costpercapita_ao33; assert_in_epsilon(2756.9321219057583, worksheet.costpercapita_ao33, 0.002); end
  def test_costpercapita_ap33; assert_in_epsilon(3176.7773334519925, worksheet.costpercapita_ap33, 0.002); end
  def test_costpercapita_aq33; assert_in_epsilon(3682.446864887875, worksheet.costpercapita_aq33, 0.002); end
  def test_costpercapita_as33; assert_in_epsilon(1717.1844221468803, worksheet.costpercapita_as33, 0.002); end
  def test_costpercapita_at33; assert_in_epsilon(30080.51400075859, worksheet.costpercapita_at33, 0.002); end
  def test_costpercapita_av33; assert_in_delta(0.0, (worksheet.costpercapita_av33||0), 0.002); end
  def test_costpercapita_aw33; assert_in_epsilon(5.0, worksheet.costpercapita_aw33, 0.002); end
  def test_costpercapita_ay33; assert_in_delta(0.0, (worksheet.costpercapita_ay33||0), 0.002); end
  def test_costpercapita_az33; assert_in_epsilon(197.30756899581866, worksheet.costpercapita_az33, 0.002); end
  def test_costpercapita_ba33; assert_in_epsilon(478.79195146294455, worksheet.costpercapita_ba33, 0.002); end
  def test_costpercapita_bb33; assert_in_epsilon(817.967228344374, worksheet.costpercapita_bb33, 0.002); end
  def test_costpercapita_bc33; assert_in_epsilon(1212.5210269621236, worksheet.costpercapita_bc33, 0.002); end
  def test_costpercapita_bd33; assert_in_epsilon(1584.689568912118, worksheet.costpercapita_bd33, 0.002); end
  def test_costpercapita_be33; assert_in_epsilon(1945.6179279516998, worksheet.costpercapita_be33, 0.002); end
  def test_costpercapita_bf33; assert_in_epsilon(2269.5344087083295, worksheet.costpercapita_bf33, 0.002); end
  def test_costpercapita_bg33; assert_in_epsilon(2602.654956979107, worksheet.costpercapita_bg33, 0.002); end
  def test_costpercapita_bi33; assert_in_delta(0.0, (worksheet.costpercapita_bi33||0), 0.002); end
  def test_costpercapita_bj33; assert_in_delta(0.0, (worksheet.costpercapita_bj33||0), 0.002); end
  def test_costpercapita_bk33; assert_in_delta(0.0, (worksheet.costpercapita_bk33||0), 0.002); end
  def test_costpercapita_bl33; assert_in_delta(0.0, (worksheet.costpercapita_bl33||0), 0.002); end
  def test_costpercapita_bm33; assert_in_delta(0.0, (worksheet.costpercapita_bm33||0), 0.002); end
  def test_costpercapita_bn33; assert_in_delta(0.0, (worksheet.costpercapita_bn33||0), 0.002); end
  def test_costpercapita_bo33; assert_in_delta(0.0, (worksheet.costpercapita_bo33||0), 0.002); end
  def test_costpercapita_bp33; assert_in_delta(0.0, (worksheet.costpercapita_bp33||0), 0.002); end
  def test_costpercapita_bq33; assert_in_delta(0.0, (worksheet.costpercapita_bq33||0), 0.002); end
  def test_costpercapita_bs33; assert_in_delta(0.0, (worksheet.costpercapita_bs33||0), 0.002); end
  def test_costpercapita_bt33; assert_in_epsilon(272.1095702883124, worksheet.costpercapita_bt33, 0.002); end
  def test_costpercapita_bu33; assert_in_epsilon(618.2263034390543, worksheet.costpercapita_bu33, 0.002); end
  def test_costpercapita_bv33; assert_in_epsilon(1086.787595467876, worksheet.costpercapita_bv33, 0.002); end
  def test_costpercapita_bw33; assert_in_epsilon(1653.4164933392944, worksheet.costpercapita_bw33, 0.002); end
  def test_costpercapita_bx33; assert_in_epsilon(2207.9635165417603, worksheet.costpercapita_bx33, 0.002); end
  def test_costpercapita_by33; assert_in_epsilon(2756.9321219057583, worksheet.costpercapita_by33, 0.002); end
  def test_costpercapita_bz33; assert_in_epsilon(3176.7773334519925, worksheet.costpercapita_bz33, 0.002); end
  def test_costpercapita_ca33; assert_in_epsilon(3682.446864887875, worksheet.costpercapita_ca33, 0.002); end
  def test_costpercapita_cc33; assert_in_epsilon(1717.1844221468803, worksheet.costpercapita_cc33, 0.002); end
  def test_costpercapita_cd33; assert_in_epsilon(30080.51400075859, worksheet.costpercapita_cd33, 0.002); end
  def test_costpercapita_cf33; assert_in_delta(0.0, (worksheet.costpercapita_cf33||0), 0.002); end
  def test_costpercapita_cg33; assert_in_delta(0.0, (worksheet.costpercapita_cg33||0), 0.002); end
  def test_costpercapita_ch33; assert_in_delta(0.0, (worksheet.costpercapita_ch33||0), 0.002); end
  def test_costpercapita_ci33; assert_in_delta(0.0, (worksheet.costpercapita_ci33||0), 0.002); end
  def test_costpercapita_cj33; assert_in_delta(0.0, (worksheet.costpercapita_cj33||0), 0.002); end
  def test_costpercapita_ck33; assert_in_delta(0.0, (worksheet.costpercapita_ck33||0), 0.002); end
  def test_costpercapita_cl33; assert_in_delta(0.0, (worksheet.costpercapita_cl33||0), 0.002); end
  def test_costpercapita_cm33; assert_in_delta(0.0, (worksheet.costpercapita_cm33||0), 0.002); end
  def test_costpercapita_cn33; assert_in_delta(0.0, (worksheet.costpercapita_cn33||0), 0.002); end
  def test_costpercapita_cp33; assert_in_delta(0.0, (worksheet.costpercapita_cp33||0), 0.002); end
  def test_costpercapita_cq33; assert_in_delta(0.0, (worksheet.costpercapita_cq33||0), 0.002); end
  def test_costpercapita_cr33; assert_equal("ok", worksheet.costpercapita_cr33); end
  def test_costpercapita_a34; assert_equal("TRA.a.GAS", worksheet.costpercapita_a34); end
  def test_costpercapita_b34; assert_equal("Natural gas buses, minibuses, BRT", worksheet.costpercapita_b34); end
  def test_costpercapita_c34; assert_equal("Transport", worksheet.costpercapita_c34); end
  def test_costpercapita_e34; assert_in_delta(0.0, (worksheet.costpercapita_e34||0), 0.002); end
  def test_costpercapita_f34; assert_in_epsilon(5.599632945641966, worksheet.costpercapita_f34, 0.002); end
  def test_costpercapita_g34; assert_in_epsilon(11.666556585553714, worksheet.costpercapita_g34, 0.002); end
  def test_costpercapita_h34; assert_in_epsilon(19.672810701439538, worksheet.costpercapita_h34, 0.002); end
  def test_costpercapita_i34; assert_in_epsilon(28.475692476990005, worksheet.costpercapita_i34, 0.002); end
  def test_costpercapita_j34; assert_in_epsilon(36.5510861595974, worksheet.costpercapita_j34, 0.002); end
  def test_costpercapita_k34; assert_in_epsilon(44.51515847566257, worksheet.costpercapita_k34, 0.002); end
  def test_costpercapita_l34; assert_in_epsilon(53.89180265055971, worksheet.costpercapita_l34, 0.002); end
  def test_costpercapita_m34; assert_in_epsilon(63.7797903758777, worksheet.costpercapita_m34, 0.002); end
  def test_costpercapita_o34; assert_in_delta(0.0, (worksheet.costpercapita_o34||0), 0.002); end
  def test_costpercapita_p34; assert_in_epsilon(11.167726925255344, worksheet.costpercapita_p34, 0.002); end
  def test_costpercapita_q34; assert_in_epsilon(28.677332769542677, worksheet.costpercapita_q34, 0.002); end
  def test_costpercapita_r34; assert_in_epsilon(56.2634695792829, worksheet.costpercapita_r34, 0.002); end
  def test_costpercapita_s34; assert_in_epsilon(90.37671606838977, worksheet.costpercapita_s34, 0.002); end
  def test_costpercapita_t34; assert_in_epsilon(124.84587801329658, worksheet.costpercapita_t34, 0.002); end
  def test_costpercapita_u34; assert_in_epsilon(160.46385146160017, worksheet.costpercapita_u34, 0.002); end
  def test_costpercapita_v34; assert_in_epsilon(203.39584272650958, worksheet.costpercapita_v34, 0.002); end
  def test_costpercapita_w34; assert_in_epsilon(249.3920968495614, worksheet.costpercapita_w34, 0.002); end
  def test_costpercapita_y34; assert_in_delta(0.0, (worksheet.costpercapita_y34||0), 0.002); end
  def test_costpercapita_z34; assert_in_delta(0.0, (worksheet.costpercapita_z34||0), 0.002); end
  def test_costpercapita_aa34; assert_in_delta(0.0, (worksheet.costpercapita_aa34||0), 0.002); end
  def test_costpercapita_ab34; assert_in_delta(0.0, (worksheet.costpercapita_ab34||0), 0.002); end
  def test_costpercapita_ac34; assert_in_delta(0.0, (worksheet.costpercapita_ac34||0), 0.002); end
  def test_costpercapita_ad34; assert_in_delta(0.0, (worksheet.costpercapita_ad34||0), 0.002); end
  def test_costpercapita_ae34; assert_in_delta(0.0, (worksheet.costpercapita_ae34||0), 0.002); end
  def test_costpercapita_af34; assert_in_delta(0.0, (worksheet.costpercapita_af34||0), 0.002); end
  def test_costpercapita_ag34; assert_in_delta(0.0, (worksheet.costpercapita_ag34||0), 0.002); end
  def test_costpercapita_ai34; assert_in_delta(0.0, (worksheet.costpercapita_ai34||0), 0.002); end
  def test_costpercapita_aj34; assert_in_epsilon(16.767359870897312, worksheet.costpercapita_aj34, 0.002); end
  def test_costpercapita_ak34; assert_in_epsilon(40.343889355096394, worksheet.costpercapita_ak34, 0.002); end
  def test_costpercapita_al34; assert_in_epsilon(75.93628028072243, worksheet.costpercapita_al34, 0.002); end
  def test_costpercapita_am34; assert_in_epsilon(118.85240854537977, worksheet.costpercapita_am34, 0.002); end
  def test_costpercapita_an34; assert_in_epsilon(161.396964172894, worksheet.costpercapita_an34, 0.002); end
  def test_costpercapita_ao34; assert_in_epsilon(204.97900993726273, worksheet.costpercapita_ao34, 0.002); end
  def test_costpercapita_ap34; assert_in_epsilon(257.28764537706934, worksheet.costpercapita_ap34, 0.002); end
  def test_costpercapita_aq34; assert_in_epsilon(313.1718872254391, worksheet.costpercapita_aq34, 0.002); end
  def test_costpercapita_as34; assert_in_epsilon(132.08171608497344, worksheet.costpercapita_as34, 0.002); end
  def test_costpercapita_at34; assert_in_epsilon(2255.9724820289266, worksheet.costpercapita_at34, 0.002); end
  def test_costpercapita_av34; assert_in_delta(0.0, (worksheet.costpercapita_av34||0), 0.002); end
  def test_costpercapita_aw34; assert_in_epsilon(5.0, worksheet.costpercapita_aw34, 0.002); end
  def test_costpercapita_ay34; assert_in_delta(0.0, (worksheet.costpercapita_ay34||0), 0.002); end
  def test_costpercapita_az34; assert_in_epsilon(5.599632945641966, worksheet.costpercapita_az34, 0.002); end
  def test_costpercapita_ba34; assert_in_epsilon(11.666556585553714, worksheet.costpercapita_ba34, 0.002); end
  def test_costpercapita_bb34; assert_in_epsilon(19.67281070143954, worksheet.costpercapita_bb34, 0.002); end
  def test_costpercapita_bc34; assert_in_epsilon(28.475692476990005, worksheet.costpercapita_bc34, 0.002); end
  def test_costpercapita_bd34; assert_in_epsilon(36.5510861595974, worksheet.costpercapita_bd34, 0.002); end
  def test_costpercapita_be34; assert_in_epsilon(44.51515847566257, worksheet.costpercapita_be34, 0.002); end
  def test_costpercapita_bf34; assert_in_epsilon(53.89180265055971, worksheet.costpercapita_bf34, 0.002); end
  def test_costpercapita_bg34; assert_in_epsilon(63.77979037587772, worksheet.costpercapita_bg34, 0.002); end
  def test_costpercapita_bi34; assert_in_delta(0.0, (worksheet.costpercapita_bi34||0), 0.002); end
  def test_costpercapita_bj34; assert_in_delta(0.0, (worksheet.costpercapita_bj34||0), 0.002); end
  def test_costpercapita_bk34; assert_in_delta(0.0, (worksheet.costpercapita_bk34||0), 0.002); end
  def test_costpercapita_bl34; assert_in_delta(0.0, (worksheet.costpercapita_bl34||0), 0.002); end
  def test_costpercapita_bm34; assert_in_delta(0.0, (worksheet.costpercapita_bm34||0), 0.002); end
  def test_costpercapita_bn34; assert_in_delta(0.0, (worksheet.costpercapita_bn34||0), 0.002); end
  def test_costpercapita_bo34; assert_in_delta(0.0, (worksheet.costpercapita_bo34||0), 0.002); end
  def test_costpercapita_bp34; assert_in_delta(0.0, (worksheet.costpercapita_bp34||0), 0.002); end
  def test_costpercapita_bq34; assert_in_delta(0.0, (worksheet.costpercapita_bq34||0), 0.002); end
  def test_costpercapita_bs34; assert_in_delta(0.0, (worksheet.costpercapita_bs34||0), 0.002); end
  def test_costpercapita_bt34; assert_in_epsilon(16.767359870897312, worksheet.costpercapita_bt34, 0.002); end
  def test_costpercapita_bu34; assert_in_epsilon(40.343889355096394, worksheet.costpercapita_bu34, 0.002); end
  def test_costpercapita_bv34; assert_in_epsilon(75.93628028072243, worksheet.costpercapita_bv34, 0.002); end
  def test_costpercapita_bw34; assert_in_epsilon(118.85240854537977, worksheet.costpercapita_bw34, 0.002); end
  def test_costpercapita_bx34; assert_in_epsilon(161.396964172894, worksheet.costpercapita_bx34, 0.002); end
  def test_costpercapita_by34; assert_in_epsilon(204.97900993726273, worksheet.costpercapita_by34, 0.002); end
  def test_costpercapita_bz34; assert_in_epsilon(257.28764537706934, worksheet.costpercapita_bz34, 0.002); end
  def test_costpercapita_ca34; assert_in_epsilon(313.1718872254391, worksheet.costpercapita_ca34, 0.002); end
  def test_costpercapita_cc34; assert_in_epsilon(132.08171608497344, worksheet.costpercapita_cc34, 0.002); end
  def test_costpercapita_cd34; assert_in_epsilon(2255.9724820289266, worksheet.costpercapita_cd34, 0.002); end
  def test_costpercapita_cf34; assert_in_delta(0.0, (worksheet.costpercapita_cf34||0), 0.002); end
  def test_costpercapita_cg34; assert_in_delta(0.0, (worksheet.costpercapita_cg34||0), 0.002); end
  def test_costpercapita_ch34; assert_in_delta(0.0, (worksheet.costpercapita_ch34||0), 0.002); end
  def test_costpercapita_ci34; assert_in_delta(0.0, (worksheet.costpercapita_ci34||0), 0.002); end
  def test_costpercapita_cj34; assert_in_delta(0.0, (worksheet.costpercapita_cj34||0), 0.002); end
  def test_costpercapita_ck34; assert_in_delta(0.0, (worksheet.costpercapita_ck34||0), 0.002); end
  def test_costpercapita_cl34; assert_in_delta(0.0, (worksheet.costpercapita_cl34||0), 0.002); end
  def test_costpercapita_cm34; assert_in_delta(0.0, (worksheet.costpercapita_cm34||0), 0.002); end
  def test_costpercapita_cn34; assert_in_delta(0.0, (worksheet.costpercapita_cn34||0), 0.002); end
  def test_costpercapita_cp34; assert_in_delta(0.0, (worksheet.costpercapita_cp34||0), 0.002); end
  def test_costpercapita_cq34; assert_in_delta(0.0, (worksheet.costpercapita_cq34||0), 0.002); end
  def test_costpercapita_cr34; assert_equal("ok", worksheet.costpercapita_cr34); end
  def test_costpercapita_a35; assert_equal("TRA.b.ROAD", worksheet.costpercapita_a35); end
  def test_costpercapita_b35; assert_equal("Road freight", worksheet.costpercapita_b35); end
  def test_costpercapita_c35; assert_equal("Transport", worksheet.costpercapita_c35); end
  def test_costpercapita_e35; assert_in_epsilon(531.9852896924297, worksheet.costpercapita_e35, 0.002); end
  def test_costpercapita_f35; assert_in_epsilon(564.5762007230511, worksheet.costpercapita_f35, 0.002); end
  def test_costpercapita_g35; assert_in_epsilon(615.283900757422, worksheet.costpercapita_g35, 0.002); end
  def test_costpercapita_h35; assert_in_epsilon(670.2969309612583, worksheet.costpercapita_h35, 0.002); end
  def test_costpercapita_i35; assert_in_epsilon(729.9765725406608, worksheet.costpercapita_i35, 0.002); end
  def test_costpercapita_j35; assert_in_epsilon(794.6749531025407, worksheet.costpercapita_j35, 0.002); end
  def test_costpercapita_k35; assert_in_epsilon(864.7909747519725, worksheet.costpercapita_k35, 0.002); end
  def test_costpercapita_l35; assert_in_epsilon(940.7443845734624, worksheet.costpercapita_l35, 0.002); end
  def test_costpercapita_m35; assert_in_epsilon(1022.9767992367358, worksheet.costpercapita_m35, 0.002); end
  def test_costpercapita_o35; assert_in_epsilon(1944.9023076547453, worksheet.costpercapita_o35, 0.002); end
  def test_costpercapita_p35; assert_in_epsilon(2035.5482747207086, worksheet.costpercapita_p35, 0.002); end
  def test_costpercapita_q35; assert_in_epsilon(2185.901630464789, worksheet.costpercapita_q35, 0.002); end
  def test_costpercapita_r35; assert_in_epsilon(2345.0198985089073, worksheet.costpercapita_r35, 0.002); end
  def test_costpercapita_s35; assert_in_epsilon(2513.056845109996, worksheet.costpercapita_s35, 0.002); end
  def test_costpercapita_t35; assert_in_epsilon(2690.181589009326, worksheet.costpercapita_t35, 0.002); end
  def test_costpercapita_u35; assert_in_epsilon(2876.334074006541, worksheet.costpercapita_u35, 0.002); end
  def test_costpercapita_v35; assert_in_epsilon(3071.423327685084, worksheet.costpercapita_v35, 0.002); end
  def test_costpercapita_w35; assert_in_epsilon(3275.238539885291, worksheet.costpercapita_w35, 0.002); end
  def test_costpercapita_y35; assert_in_delta(0.0, (worksheet.costpercapita_y35||0), 0.002); end
  def test_costpercapita_z35; assert_in_delta(0.0, (worksheet.costpercapita_z35||0), 0.002); end
  def test_costpercapita_aa35; assert_in_delta(0.0, (worksheet.costpercapita_aa35||0), 0.002); end
  def test_costpercapita_ab35; assert_in_delta(0.0, (worksheet.costpercapita_ab35||0), 0.002); end
  def test_costpercapita_ac35; assert_in_delta(0.0, (worksheet.costpercapita_ac35||0), 0.002); end
  def test_costpercapita_ad35; assert_in_delta(0.0, (worksheet.costpercapita_ad35||0), 0.002); end
  def test_costpercapita_ae35; assert_in_delta(0.0, (worksheet.costpercapita_ae35||0), 0.002); end
  def test_costpercapita_af35; assert_in_delta(0.0, (worksheet.costpercapita_af35||0), 0.002); end
  def test_costpercapita_ag35; assert_in_delta(0.0, (worksheet.costpercapita_ag35||0), 0.002); end
  def test_costpercapita_ai35; assert_in_epsilon(2476.8875973471745, worksheet.costpercapita_ai35, 0.002); end
  def test_costpercapita_aj35; assert_in_epsilon(2600.1244754437594, worksheet.costpercapita_aj35, 0.002); end
  def test_costpercapita_ak35; assert_in_epsilon(2801.1855312222115, worksheet.costpercapita_ak35, 0.002); end
  def test_costpercapita_al35; assert_in_epsilon(3015.316829470166, worksheet.costpercapita_al35, 0.002); end
  def test_costpercapita_am35; assert_in_epsilon(3243.0334176506567, worksheet.costpercapita_am35, 0.002); end
  def test_costpercapita_an35; assert_in_epsilon(3484.8565421118674, worksheet.costpercapita_an35, 0.002); end
  def test_costpercapita_ao35; assert_in_epsilon(3741.125048758514, worksheet.costpercapita_ao35, 0.002); end
  def test_costpercapita_ap35; assert_in_epsilon(4012.1677122585465, worksheet.costpercapita_ap35, 0.002); end
  def test_costpercapita_aq35; assert_in_epsilon(4298.215339122027, worksheet.costpercapita_aq35, 0.002); end
  def test_costpercapita_as35; assert_in_epsilon(3296.9902770427693, worksheet.costpercapita_as35, 0.002); end
  def test_costpercapita_at35; assert_in_epsilon(66400.49145252402, worksheet.costpercapita_at35, 0.002); end
  def test_costpercapita_av35; assert_in_delta(0.0, (worksheet.costpercapita_av35||0), 0.002); end
  def test_costpercapita_aw35; assert_in_epsilon(5.0, worksheet.costpercapita_aw35, 0.002); end
  def test_costpercapita_ay35; assert_in_epsilon(531.9852896924297, worksheet.costpercapita_ay35, 0.002); end
  def test_costpercapita_az35; assert_in_epsilon(564.5762007230511, worksheet.costpercapita_az35, 0.002); end
  def test_costpercapita_ba35; assert_in_epsilon(615.283900757422, worksheet.costpercapita_ba35, 0.002); end
  def test_costpercapita_bb35; assert_in_epsilon(670.2969309612583, worksheet.costpercapita_bb35, 0.002); end
  def test_costpercapita_bc35; assert_in_epsilon(729.9765725406608, worksheet.costpercapita_bc35, 0.002); end
  def test_costpercapita_bd35; assert_in_epsilon(794.6749531025407, worksheet.costpercapita_bd35, 0.002); end
  def test_costpercapita_be35; assert_in_epsilon(864.7909747519725, worksheet.costpercapita_be35, 0.002); end
  def test_costpercapita_bf35; assert_in_epsilon(940.7443845734624, worksheet.costpercapita_bf35, 0.002); end
  def test_costpercapita_bg35; assert_in_epsilon(1022.9767992367358, worksheet.costpercapita_bg35, 0.002); end
  def test_costpercapita_bi35; assert_in_delta(0.0, (worksheet.costpercapita_bi35||0), 0.002); end
  def test_costpercapita_bj35; assert_in_delta(0.0, (worksheet.costpercapita_bj35||0), 0.002); end
  def test_costpercapita_bk35; assert_in_delta(0.0, (worksheet.costpercapita_bk35||0), 0.002); end
  def test_costpercapita_bl35; assert_in_delta(0.0, (worksheet.costpercapita_bl35||0), 0.002); end
  def test_costpercapita_bm35; assert_in_delta(0.0, (worksheet.costpercapita_bm35||0), 0.002); end
  def test_costpercapita_bn35; assert_in_delta(0.0, (worksheet.costpercapita_bn35||0), 0.002); end
  def test_costpercapita_bo35; assert_in_delta(0.0, (worksheet.costpercapita_bo35||0), 0.002); end
  def test_costpercapita_bp35; assert_in_delta(0.0, (worksheet.costpercapita_bp35||0), 0.002); end
  def test_costpercapita_bq35; assert_in_delta(0.0, (worksheet.costpercapita_bq35||0), 0.002); end
  def test_costpercapita_bs35; assert_in_epsilon(2476.8875973471745, worksheet.costpercapita_bs35, 0.002); end
  def test_costpercapita_bt35; assert_in_epsilon(2600.1244754437594, worksheet.costpercapita_bt35, 0.002); end
  def test_costpercapita_bu35; assert_in_epsilon(2801.1855312222115, worksheet.costpercapita_bu35, 0.002); end
  def test_costpercapita_bv35; assert_in_epsilon(3015.316829470166, worksheet.costpercapita_bv35, 0.002); end
  def test_costpercapita_bw35; assert_in_epsilon(3243.0334176506567, worksheet.costpercapita_bw35, 0.002); end
  def test_costpercapita_bx35; assert_in_epsilon(3484.8565421118674, worksheet.costpercapita_bx35, 0.002); end
  def test_costpercapita_by35; assert_in_epsilon(3741.125048758514, worksheet.costpercapita_by35, 0.002); end
  def test_costpercapita_bz35; assert_in_epsilon(4012.1677122585465, worksheet.costpercapita_bz35, 0.002); end
  def test_costpercapita_ca35; assert_in_epsilon(4298.215339122027, worksheet.costpercapita_ca35, 0.002); end
  def test_costpercapita_cc35; assert_in_epsilon(3296.9902770427693, worksheet.costpercapita_cc35, 0.002); end
  def test_costpercapita_cd35; assert_in_epsilon(66400.49145252402, worksheet.costpercapita_cd35, 0.002); end
  def test_costpercapita_cf35; assert_in_delta(0.0, (worksheet.costpercapita_cf35||0), 0.002); end
  def test_costpercapita_cg35; assert_in_delta(0.0, (worksheet.costpercapita_cg35||0), 0.002); end
  def test_costpercapita_ch35; assert_in_delta(0.0, (worksheet.costpercapita_ch35||0), 0.002); end
  def test_costpercapita_ci35; assert_in_delta(0.0, (worksheet.costpercapita_ci35||0), 0.002); end
  def test_costpercapita_cj35; assert_in_delta(0.0, (worksheet.costpercapita_cj35||0), 0.002); end
  def test_costpercapita_ck35; assert_in_delta(0.0, (worksheet.costpercapita_ck35||0), 0.002); end
  def test_costpercapita_cl35; assert_in_delta(0.0, (worksheet.costpercapita_cl35||0), 0.002); end
  def test_costpercapita_cm35; assert_in_delta(0.0, (worksheet.costpercapita_cm35||0), 0.002); end
  def test_costpercapita_cn35; assert_in_delta(0.0, (worksheet.costpercapita_cn35||0), 0.002); end
  def test_costpercapita_cp35; assert_in_delta(0.0, (worksheet.costpercapita_cp35||0), 0.002); end
  def test_costpercapita_cq35; assert_in_delta(0.0, (worksheet.costpercapita_cq35||0), 0.002); end
  def test_costpercapita_cr35; assert_equal("ok", worksheet.costpercapita_cr35); end
  def test_costpercapita_a36; assert_equal("TRA.b.RAIL", worksheet.costpercapita_a36); end
  def test_costpercapita_b36; assert_equal("Rail", worksheet.costpercapita_b36); end
  def test_costpercapita_c36; assert_equal("Transport", worksheet.costpercapita_c36); end
  def test_costpercapita_e36; assert_in_epsilon(903.9605651868222, worksheet.costpercapita_e36, 0.002); end
  def test_costpercapita_f36; assert_in_epsilon(1043.326116946873, worksheet.costpercapita_f36, 0.002); end
  def test_costpercapita_g36; assert_in_epsilon(1231.1674590679893, worksheet.costpercapita_g36, 0.002); end
  def test_costpercapita_h36; assert_in_epsilon(1447.095415843343, worksheet.costpercapita_h36, 0.002); end
  def test_costpercapita_i36; assert_in_epsilon(1694.9283635393647, worksheet.costpercapita_i36, 0.002); end
  def test_costpercapita_j36; assert_in_epsilon(1979.0316754828063, worksheet.costpercapita_j36, 0.002); end
  def test_costpercapita_k36; assert_in_epsilon(2304.2197532224754, worksheet.costpercapita_k36, 0.002); end
  def test_costpercapita_l36; assert_in_epsilon(2675.962021802532, worksheet.costpercapita_l36, 0.002); end
  def test_costpercapita_m36; assert_in_epsilon(3100.414177059544, worksheet.costpercapita_m36, 0.002); end
  def test_costpercapita_o36; assert_in_epsilon(26.096568954168944, worksheet.costpercapita_o36, 0.002); end
  def test_costpercapita_p36; assert_in_epsilon(30.119933325810877, worksheet.costpercapita_p36, 0.002); end
  def test_costpercapita_q36; assert_in_epsilon(35.54275233572448, worksheet.costpercapita_q36, 0.002); end
  def test_costpercapita_r36; assert_in_epsilon(41.77640790670201, worksheet.costpercapita_r36, 0.002); end
  def test_costpercapita_s36; assert_in_epsilon(48.93113329821012, worksheet.costpercapita_s36, 0.002); end
  def test_costpercapita_t36; assert_in_epsilon(57.1329531073602, worksheet.costpercapita_t36, 0.002); end
  def test_costpercapita_u36; assert_in_epsilon(66.52085499227603, worksheet.costpercapita_u36, 0.002); end
  def test_costpercapita_v36; assert_in_epsilon(77.25273657958141, worksheet.costpercapita_v36, 0.002); end
  def test_costpercapita_w36; assert_in_epsilon(89.50630754716117, worksheet.costpercapita_w36, 0.002); end
  def test_costpercapita_y36; assert_in_delta(0.0, (worksheet.costpercapita_y36||0), 0.002); end
  def test_costpercapita_z36; assert_in_delta(0.0, (worksheet.costpercapita_z36||0), 0.002); end
  def test_costpercapita_aa36; assert_in_delta(0.0, (worksheet.costpercapita_aa36||0), 0.002); end
  def test_costpercapita_ab36; assert_in_delta(0.0, (worksheet.costpercapita_ab36||0), 0.002); end
  def test_costpercapita_ac36; assert_in_delta(0.0, (worksheet.costpercapita_ac36||0), 0.002); end
  def test_costpercapita_ad36; assert_in_delta(0.0, (worksheet.costpercapita_ad36||0), 0.002); end
  def test_costpercapita_ae36; assert_in_delta(0.0, (worksheet.costpercapita_ae36||0), 0.002); end
  def test_costpercapita_af36; assert_in_delta(0.0, (worksheet.costpercapita_af36||0), 0.002); end
  def test_costpercapita_ag36; assert_in_delta(0.0, (worksheet.costpercapita_ag36||0), 0.002); end
  def test_costpercapita_ai36; assert_in_epsilon(930.0571341409911, worksheet.costpercapita_ai36, 0.002); end
  def test_costpercapita_aj36; assert_in_epsilon(1073.4460502726838, worksheet.costpercapita_aj36, 0.002); end
  def test_costpercapita_ak36; assert_in_epsilon(1266.7102114037136, worksheet.costpercapita_ak36, 0.002); end
  def test_costpercapita_al36; assert_in_epsilon(1488.8718237500452, worksheet.costpercapita_al36, 0.002); end
  def test_costpercapita_am36; assert_in_epsilon(1743.8594968375746, worksheet.costpercapita_am36, 0.002); end
  def test_costpercapita_an36; assert_in_epsilon(2036.1646285901668, worksheet.costpercapita_an36, 0.002); end
  def test_costpercapita_ao36; assert_in_epsilon(2370.740608214752, worksheet.costpercapita_ao36, 0.002); end
  def test_costpercapita_ap36; assert_in_epsilon(2753.214758382114, worksheet.costpercapita_ap36, 0.002); end
  def test_costpercapita_aq36; assert_in_epsilon(3189.920484606705, worksheet.costpercapita_aq36, 0.002); end
  def test_costpercapita_as36; assert_in_epsilon(1872.5539106887493, worksheet.costpercapita_as36, 0.002); end
  def test_costpercapita_at36; assert_in_epsilon(35754.81226030285, worksheet.costpercapita_at36, 0.002); end
  def test_costpercapita_av36; assert_in_delta(0.0, (worksheet.costpercapita_av36||0), 0.002); end
  def test_costpercapita_aw36; assert_in_epsilon(5.0, worksheet.costpercapita_aw36, 0.002); end
  def test_costpercapita_ay36; assert_in_epsilon(903.9605651868222, worksheet.costpercapita_ay36, 0.002); end
  def test_costpercapita_az36; assert_in_epsilon(1043.326116946873, worksheet.costpercapita_az36, 0.002); end
  def test_costpercapita_ba36; assert_in_epsilon(1231.1674590679893, worksheet.costpercapita_ba36, 0.002); end
  def test_costpercapita_bb36; assert_in_epsilon(1447.095415843343, worksheet.costpercapita_bb36, 0.002); end
  def test_costpercapita_bc36; assert_in_epsilon(1694.9283635393647, worksheet.costpercapita_bc36, 0.002); end
  def test_costpercapita_bd36; assert_in_epsilon(1979.0316754828063, worksheet.costpercapita_bd36, 0.002); end
  def test_costpercapita_be36; assert_in_epsilon(2304.2197532224754, worksheet.costpercapita_be36, 0.002); end
  def test_costpercapita_bf36; assert_in_epsilon(2675.962021802532, worksheet.costpercapita_bf36, 0.002); end
  def test_costpercapita_bg36; assert_in_epsilon(3100.414177059544, worksheet.costpercapita_bg36, 0.002); end
  def test_costpercapita_bi36; assert_in_delta(0.0, (worksheet.costpercapita_bi36||0), 0.002); end
  def test_costpercapita_bj36; assert_in_delta(0.0, (worksheet.costpercapita_bj36||0), 0.002); end
  def test_costpercapita_bk36; assert_in_delta(0.0, (worksheet.costpercapita_bk36||0), 0.002); end
  def test_costpercapita_bl36; assert_in_delta(0.0, (worksheet.costpercapita_bl36||0), 0.002); end
  def test_costpercapita_bm36; assert_in_delta(0.0, (worksheet.costpercapita_bm36||0), 0.002); end
  def test_costpercapita_bn36; assert_in_delta(0.0, (worksheet.costpercapita_bn36||0), 0.002); end
  def test_costpercapita_bo36; assert_in_delta(0.0, (worksheet.costpercapita_bo36||0), 0.002); end
  def test_costpercapita_bp36; assert_in_delta(0.0, (worksheet.costpercapita_bp36||0), 0.002); end
  def test_costpercapita_bq36; assert_in_delta(0.0, (worksheet.costpercapita_bq36||0), 0.002); end
  def test_costpercapita_bs36; assert_in_epsilon(930.0571341409911, worksheet.costpercapita_bs36, 0.002); end
  def test_costpercapita_bt36; assert_in_epsilon(1073.4460502726838, worksheet.costpercapita_bt36, 0.002); end
  def test_costpercapita_bu36; assert_in_epsilon(1266.7102114037136, worksheet.costpercapita_bu36, 0.002); end
  def test_costpercapita_bv36; assert_in_epsilon(1488.8718237500452, worksheet.costpercapita_bv36, 0.002); end
  def test_costpercapita_bw36; assert_in_epsilon(1743.8594968375746, worksheet.costpercapita_bw36, 0.002); end
  def test_costpercapita_bx36; assert_in_epsilon(2036.1646285901668, worksheet.costpercapita_bx36, 0.002); end
  def test_costpercapita_by36; assert_in_epsilon(2370.740608214752, worksheet.costpercapita_by36, 0.002); end
  def test_costpercapita_bz36; assert_in_epsilon(2753.214758382114, worksheet.costpercapita_bz36, 0.002); end
  def test_costpercapita_ca36; assert_in_epsilon(3189.920484606705, worksheet.costpercapita_ca36, 0.002); end
  def test_costpercapita_cc36; assert_in_epsilon(1872.5539106887493, worksheet.costpercapita_cc36, 0.002); end
  def test_costpercapita_cd36; assert_in_epsilon(35754.81226030285, worksheet.costpercapita_cd36, 0.002); end
  def test_costpercapita_cf36; assert_in_delta(0.0, (worksheet.costpercapita_cf36||0), 0.002); end
  def test_costpercapita_cg36; assert_in_delta(0.0, (worksheet.costpercapita_cg36||0), 0.002); end
  def test_costpercapita_ch36; assert_in_delta(0.0, (worksheet.costpercapita_ch36||0), 0.002); end
  def test_costpercapita_ci36; assert_in_delta(0.0, (worksheet.costpercapita_ci36||0), 0.002); end
  def test_costpercapita_cj36; assert_in_delta(0.0, (worksheet.costpercapita_cj36||0), 0.002); end
  def test_costpercapita_ck36; assert_in_delta(0.0, (worksheet.costpercapita_ck36||0), 0.002); end
  def test_costpercapita_cl36; assert_in_delta(0.0, (worksheet.costpercapita_cl36||0), 0.002); end
  def test_costpercapita_cm36; assert_in_delta(0.0, (worksheet.costpercapita_cm36||0), 0.002); end
  def test_costpercapita_cn36; assert_in_delta(0.0, (worksheet.costpercapita_cn36||0), 0.002); end
  def test_costpercapita_cp36; assert_in_delta(0.0, (worksheet.costpercapita_cp36||0), 0.002); end
  def test_costpercapita_cq36; assert_in_delta(0.0, (worksheet.costpercapita_cq36||0), 0.002); end
  def test_costpercapita_cr36; assert_equal("ok", worksheet.costpercapita_cr36); end
  def test_costpercapita_a37; assert_equal("XVI.b.Coal", worksheet.costpercapita_a37); end
  def test_costpercapita_b37; assert_equal("Coal Imports", worksheet.costpercapita_b37); end
  def test_costpercapita_c37; assert_equal("Fossil Fuels", worksheet.costpercapita_c37); end
  def test_costpercapita_e37; assert_in_delta(0.0, (worksheet.costpercapita_e37||0), 0.002); end
  def test_costpercapita_f37; assert_in_delta(0.0, (worksheet.costpercapita_f37||0), 0.002); end
  def test_costpercapita_g37; assert_in_delta(0.0, (worksheet.costpercapita_g37||0), 0.002); end
  def test_costpercapita_h37; assert_in_delta(0.0, (worksheet.costpercapita_h37||0), 0.002); end
  def test_costpercapita_i37; assert_in_delta(0.0, (worksheet.costpercapita_i37||0), 0.002); end
  def test_costpercapita_j37; assert_in_delta(0.0, (worksheet.costpercapita_j37||0), 0.002); end
  def test_costpercapita_k37; assert_in_delta(0.0, (worksheet.costpercapita_k37||0), 0.002); end
  def test_costpercapita_l37; assert_in_delta(0.0, (worksheet.costpercapita_l37||0), 0.002); end
  def test_costpercapita_m37; assert_in_delta(0.0, (worksheet.costpercapita_m37||0), 0.002); end
  def test_costpercapita_o37; assert_in_delta(0.0, (worksheet.costpercapita_o37||0), 0.002); end
  def test_costpercapita_p37; assert_in_delta(0.0, (worksheet.costpercapita_p37||0), 0.002); end
  def test_costpercapita_q37; assert_in_delta(0.0, (worksheet.costpercapita_q37||0), 0.002); end
  def test_costpercapita_r37; assert_in_delta(0.0, (worksheet.costpercapita_r37||0), 0.002); end
  def test_costpercapita_s37; assert_in_delta(0.0, (worksheet.costpercapita_s37||0), 0.002); end
  def test_costpercapita_t37; assert_in_delta(0.0, (worksheet.costpercapita_t37||0), 0.002); end
  def test_costpercapita_u37; assert_in_delta(0.0, (worksheet.costpercapita_u37||0), 0.002); end
  def test_costpercapita_v37; assert_in_delta(0.0, (worksheet.costpercapita_v37||0), 0.002); end
  def test_costpercapita_w37; assert_in_delta(0.0, (worksheet.costpercapita_w37||0), 0.002); end
  def test_costpercapita_y37; assert_in_delta(0.0, (worksheet.costpercapita_y37||0), 0.002); end
  def test_costpercapita_z37; assert_in_delta(0.0, (worksheet.costpercapita_z37||0), 0.002); end
  def test_costpercapita_aa37; assert_in_delta(0.0, (worksheet.costpercapita_aa37||0), 0.002); end
  def test_costpercapita_ab37; assert_in_delta(0.0, (worksheet.costpercapita_ab37||0), 0.002); end
  def test_costpercapita_ac37; assert_in_delta(0.0, (worksheet.costpercapita_ac37||0), 0.002); end
  def test_costpercapita_ad37; assert_in_delta(0.0, (worksheet.costpercapita_ad37||0), 0.002); end
  def test_costpercapita_ae37; assert_in_delta(0.0, (worksheet.costpercapita_ae37||0), 0.002); end
  def test_costpercapita_af37; assert_in_delta(0.0, (worksheet.costpercapita_af37||0), 0.002); end
  def test_costpercapita_ag37; assert_in_delta(0.0, (worksheet.costpercapita_ag37||0), 0.002); end
  def test_costpercapita_ai37; assert_in_delta(0.0, (worksheet.costpercapita_ai37||0), 0.002); end
  def test_costpercapita_aj37; assert_in_delta(0.0, (worksheet.costpercapita_aj37||0), 0.002); end
  def test_costpercapita_ak37; assert_in_delta(0.0, (worksheet.costpercapita_ak37||0), 0.002); end
  def test_costpercapita_al37; assert_in_delta(0.0, (worksheet.costpercapita_al37||0), 0.002); end
  def test_costpercapita_am37; assert_in_delta(0.0, (worksheet.costpercapita_am37||0), 0.002); end
  def test_costpercapita_an37; assert_in_delta(0.0, (worksheet.costpercapita_an37||0), 0.002); end
  def test_costpercapita_ao37; assert_in_delta(0.0, (worksheet.costpercapita_ao37||0), 0.002); end
  def test_costpercapita_ap37; assert_in_delta(0.0, (worksheet.costpercapita_ap37||0), 0.002); end
  def test_costpercapita_aq37; assert_in_delta(0.0, (worksheet.costpercapita_aq37||0), 0.002); end
  def test_costpercapita_as37; assert_in_delta(0.0, (worksheet.costpercapita_as37||0), 0.002); end
  def test_costpercapita_at37; assert_in_delta(0.0, (worksheet.costpercapita_at37||0), 0.002); end
  def test_costpercapita_av37; assert_in_delta(1.0, worksheet.costpercapita_av37, 0.002); end
  def test_costpercapita_aw37; assert_in_epsilon(6.0, worksheet.costpercapita_aw37, 0.002); end
  def test_costpercapita_ay37; assert_in_delta(0.0, (worksheet.costpercapita_ay37||0), 0.002); end
  def test_costpercapita_az37; assert_in_delta(0.0, (worksheet.costpercapita_az37||0), 0.002); end
  def test_costpercapita_ba37; assert_in_delta(0.0, (worksheet.costpercapita_ba37||0), 0.002); end
  def test_costpercapita_bb37; assert_in_delta(0.0, (worksheet.costpercapita_bb37||0), 0.002); end
  def test_costpercapita_bc37; assert_in_delta(0.0, (worksheet.costpercapita_bc37||0), 0.002); end
  def test_costpercapita_bd37; assert_in_delta(0.0, (worksheet.costpercapita_bd37||0), 0.002); end
  def test_costpercapita_be37; assert_in_delta(0.0, (worksheet.costpercapita_be37||0), 0.002); end
  def test_costpercapita_bf37; assert_in_delta(0.0, (worksheet.costpercapita_bf37||0), 0.002); end
  def test_costpercapita_bg37; assert_in_delta(0.0, (worksheet.costpercapita_bg37||0), 0.002); end
  def test_costpercapita_bi37; assert_in_delta(0.0, (worksheet.costpercapita_bi37||0), 0.002); end
  def test_costpercapita_bj37; assert_in_delta(0.0, (worksheet.costpercapita_bj37||0), 0.002); end
  def test_costpercapita_bk37; assert_in_delta(0.0, (worksheet.costpercapita_bk37||0), 0.002); end
  def test_costpercapita_bl37; assert_in_delta(0.0, (worksheet.costpercapita_bl37||0), 0.002); end
  def test_costpercapita_bm37; assert_in_delta(0.0, (worksheet.costpercapita_bm37||0), 0.002); end
  def test_costpercapita_bn37; assert_in_delta(0.0, (worksheet.costpercapita_bn37||0), 0.002); end
  def test_costpercapita_bo37; assert_in_delta(0.0, (worksheet.costpercapita_bo37||0), 0.002); end
  def test_costpercapita_bp37; assert_in_delta(0.0, (worksheet.costpercapita_bp37||0), 0.002); end
  def test_costpercapita_bq37; assert_in_delta(0.0, (worksheet.costpercapita_bq37||0), 0.002); end
  def test_costpercapita_bs37; assert_in_delta(0.0, (worksheet.costpercapita_bs37||0), 0.002); end
  def test_costpercapita_bt37; assert_in_delta(0.0, (worksheet.costpercapita_bt37||0), 0.002); end
  def test_costpercapita_bu37; assert_in_delta(0.0, (worksheet.costpercapita_bu37||0), 0.002); end
  def test_costpercapita_bv37; assert_in_delta(0.0, (worksheet.costpercapita_bv37||0), 0.002); end
  def test_costpercapita_bw37; assert_in_delta(0.0, (worksheet.costpercapita_bw37||0), 0.002); end
  def test_costpercapita_bx37; assert_in_delta(0.0, (worksheet.costpercapita_bx37||0), 0.002); end
  def test_costpercapita_by37; assert_in_delta(0.0, (worksheet.costpercapita_by37||0), 0.002); end
  def test_costpercapita_bz37; assert_in_delta(0.0, (worksheet.costpercapita_bz37||0), 0.002); end
  def test_costpercapita_ca37; assert_in_delta(0.0, (worksheet.costpercapita_ca37||0), 0.002); end
  def test_costpercapita_cc37; assert_in_delta(0.0, (worksheet.costpercapita_cc37||0), 0.002); end
  def test_costpercapita_cd37; assert_in_delta(0.0, (worksheet.costpercapita_cd37||0), 0.002); end
  def test_costpercapita_cf37; assert_in_delta(0.0, (worksheet.costpercapita_cf37||0), 0.002); end
  def test_costpercapita_cg37; assert_in_delta(0.0, (worksheet.costpercapita_cg37||0), 0.002); end
  def test_costpercapita_ch37; assert_in_delta(0.0, (worksheet.costpercapita_ch37||0), 0.002); end
  def test_costpercapita_ci37; assert_in_delta(0.0, (worksheet.costpercapita_ci37||0), 0.002); end
  def test_costpercapita_cj37; assert_in_delta(0.0, (worksheet.costpercapita_cj37||0), 0.002); end
  def test_costpercapita_ck37; assert_in_delta(0.0, (worksheet.costpercapita_ck37||0), 0.002); end
  def test_costpercapita_cl37; assert_in_delta(0.0, (worksheet.costpercapita_cl37||0), 0.002); end
  def test_costpercapita_cm37; assert_in_delta(0.0, (worksheet.costpercapita_cm37||0), 0.002); end
  def test_costpercapita_cn37; assert_in_delta(0.0, (worksheet.costpercapita_cn37||0), 0.002); end
  def test_costpercapita_cp37; assert_in_delta(0.0, (worksheet.costpercapita_cp37||0), 0.002); end
  def test_costpercapita_cq37; assert_in_delta(0.0, (worksheet.costpercapita_cq37||0), 0.002); end
  def test_costpercapita_cr37; assert_equal("ok", worksheet.costpercapita_cr37); end
  def test_costpercapita_a38; assert_equal("XVI.b.Oil", worksheet.costpercapita_a38); end
  def test_costpercapita_b38; assert_equal("Oil Imports", worksheet.costpercapita_b38); end
  def test_costpercapita_c38; assert_equal("Fossil Fuels", worksheet.costpercapita_c38); end
  def test_costpercapita_e38; assert_in_delta(0.0, (worksheet.costpercapita_e38||0), 0.002); end
  def test_costpercapita_f38; assert_in_delta(0.0, (worksheet.costpercapita_f38||0), 0.002); end
  def test_costpercapita_g38; assert_in_delta(0.0, (worksheet.costpercapita_g38||0), 0.002); end
  def test_costpercapita_h38; assert_in_delta(0.0, (worksheet.costpercapita_h38||0), 0.002); end
  def test_costpercapita_i38; assert_in_delta(0.0, (worksheet.costpercapita_i38||0), 0.002); end
  def test_costpercapita_j38; assert_in_delta(0.0, (worksheet.costpercapita_j38||0), 0.002); end
  def test_costpercapita_k38; assert_in_delta(0.0, (worksheet.costpercapita_k38||0), 0.002); end
  def test_costpercapita_l38; assert_in_delta(0.0, (worksheet.costpercapita_l38||0), 0.002); end
  def test_costpercapita_m38; assert_in_delta(0.0, (worksheet.costpercapita_m38||0), 0.002); end
  def test_costpercapita_o38; assert_in_delta(0.0, (worksheet.costpercapita_o38||0), 0.002); end
  def test_costpercapita_p38; assert_in_delta(0.0, (worksheet.costpercapita_p38||0), 0.002); end
  def test_costpercapita_q38; assert_in_delta(0.0, (worksheet.costpercapita_q38||0), 0.002); end
  def test_costpercapita_r38; assert_in_delta(0.0, (worksheet.costpercapita_r38||0), 0.002); end
  def test_costpercapita_s38; assert_in_delta(0.0, (worksheet.costpercapita_s38||0), 0.002); end
  def test_costpercapita_t38; assert_in_delta(0.0, (worksheet.costpercapita_t38||0), 0.002); end
  def test_costpercapita_u38; assert_in_delta(0.0, (worksheet.costpercapita_u38||0), 0.002); end
  def test_costpercapita_v38; assert_in_delta(0.0, (worksheet.costpercapita_v38||0), 0.002); end
  def test_costpercapita_w38; assert_in_delta(0.0, (worksheet.costpercapita_w38||0), 0.002); end
  def test_costpercapita_y38; assert_in_epsilon(-1176.1020157248945, worksheet.costpercapita_y38, 0.002); end
  def test_costpercapita_z38; assert_in_epsilon(-1369.0177075387949, worksheet.costpercapita_z38, 0.002); end
  def test_costpercapita_aa38; assert_in_epsilon(-1564.6860447880383, worksheet.costpercapita_aa38, 0.002); end
  def test_costpercapita_ab38; assert_in_epsilon(-1491.273286376405, worksheet.costpercapita_ab38, 0.002); end
  def test_costpercapita_ac38; assert_in_epsilon(-1451.8972321729175, worksheet.costpercapita_ac38, 0.002); end
  def test_costpercapita_ad38; assert_in_epsilon(-1424.3255205704897, worksheet.costpercapita_ad38, 0.002); end
  def test_costpercapita_ae38; assert_in_epsilon(-1540.3870891520114, worksheet.costpercapita_ae38, 0.002); end
  def test_costpercapita_af38; assert_in_epsilon(-1428.8967984647259, worksheet.costpercapita_af38, 0.002); end
  def test_costpercapita_ag38; assert_in_epsilon(-1515.7925942864347, worksheet.costpercapita_ag38, 0.002); end
  def test_costpercapita_ai38; assert_in_epsilon(-1176.1020157248945, worksheet.costpercapita_ai38, 0.002); end
  def test_costpercapita_aj38; assert_in_epsilon(-1369.0177075387949, worksheet.costpercapita_aj38, 0.002); end
  def test_costpercapita_ak38; assert_in_epsilon(-1564.6860447880383, worksheet.costpercapita_ak38, 0.002); end
  def test_costpercapita_al38; assert_in_epsilon(-1491.273286376405, worksheet.costpercapita_al38, 0.002); end
  def test_costpercapita_am38; assert_in_epsilon(-1451.8972321729175, worksheet.costpercapita_am38, 0.002); end
  def test_costpercapita_an38; assert_in_epsilon(-1424.3255205704897, worksheet.costpercapita_an38, 0.002); end
  def test_costpercapita_ao38; assert_in_epsilon(-1540.3870891520114, worksheet.costpercapita_ao38, 0.002); end
  def test_costpercapita_ap38; assert_in_epsilon(-1428.8967984647259, worksheet.costpercapita_ap38, 0.002); end
  def test_costpercapita_aq38; assert_in_epsilon(-1515.7925942864347, worksheet.costpercapita_aq38, 0.002); end
  def test_costpercapita_as38; assert_in_epsilon(-1440.2642543416346, worksheet.costpercapita_as38, 0.002); end
  def test_costpercapita_at38; assert_in_epsilon(-30547.117853920194, worksheet.costpercapita_at38, 0.002); end
  def test_costpercapita_av38; assert_in_epsilon(2.0, worksheet.costpercapita_av38, 0.002); end
  def test_costpercapita_aw38; assert_in_epsilon(7.0, worksheet.costpercapita_aw38, 0.002); end
  def test_costpercapita_ay38; assert_in_delta(0.0, (worksheet.costpercapita_ay38||0), 0.002); end
  def test_costpercapita_az38; assert_in_delta(0.0, (worksheet.costpercapita_az38||0), 0.002); end
  def test_costpercapita_ba38; assert_in_delta(0.0, (worksheet.costpercapita_ba38||0), 0.002); end
  def test_costpercapita_bb38; assert_in_delta(0.0, (worksheet.costpercapita_bb38||0), 0.002); end
  def test_costpercapita_bc38; assert_in_delta(0.0, (worksheet.costpercapita_bc38||0), 0.002); end
  def test_costpercapita_bd38; assert_in_delta(0.0, (worksheet.costpercapita_bd38||0), 0.002); end
  def test_costpercapita_be38; assert_in_delta(0.0, (worksheet.costpercapita_be38||0), 0.002); end
  def test_costpercapita_bf38; assert_in_delta(0.0, (worksheet.costpercapita_bf38||0), 0.002); end
  def test_costpercapita_bg38; assert_in_delta(0.0, (worksheet.costpercapita_bg38||0), 0.002); end
  def test_costpercapita_bi38; assert_in_delta(0.0, (worksheet.costpercapita_bi38||0), 0.002); end
  def test_costpercapita_bj38; assert_in_delta(0.0, (worksheet.costpercapita_bj38||0), 0.002); end
  def test_costpercapita_bk38; assert_in_delta(0.0, (worksheet.costpercapita_bk38||0), 0.002); end
  def test_costpercapita_bl38; assert_in_delta(0.0, (worksheet.costpercapita_bl38||0), 0.002); end
  def test_costpercapita_bm38; assert_in_delta(0.0, (worksheet.costpercapita_bm38||0), 0.002); end
  def test_costpercapita_bn38; assert_in_delta(0.0, (worksheet.costpercapita_bn38||0), 0.002); end
  def test_costpercapita_bo38; assert_in_delta(0.0, (worksheet.costpercapita_bo38||0), 0.002); end
  def test_costpercapita_bp38; assert_in_delta(0.0, (worksheet.costpercapita_bp38||0), 0.002); end
  def test_costpercapita_bq38; assert_in_delta(0.0, (worksheet.costpercapita_bq38||0), 0.002); end
  def test_costpercapita_bs38; assert_in_delta(0.0, (worksheet.costpercapita_bs38||0), 0.002); end
  def test_costpercapita_bt38; assert_in_delta(0.0, (worksheet.costpercapita_bt38||0), 0.002); end
  def test_costpercapita_bu38; assert_in_delta(0.0, (worksheet.costpercapita_bu38||0), 0.002); end
  def test_costpercapita_bv38; assert_in_delta(0.0, (worksheet.costpercapita_bv38||0), 0.002); end
  def test_costpercapita_bw38; assert_in_delta(0.0, (worksheet.costpercapita_bw38||0), 0.002); end
  def test_costpercapita_bx38; assert_in_delta(0.0, (worksheet.costpercapita_bx38||0), 0.002); end
  def test_costpercapita_by38; assert_in_delta(0.0, (worksheet.costpercapita_by38||0), 0.002); end
  def test_costpercapita_bz38; assert_in_delta(0.0, (worksheet.costpercapita_bz38||0), 0.002); end
  def test_costpercapita_ca38; assert_in_delta(0.0, (worksheet.costpercapita_ca38||0), 0.002); end
  def test_costpercapita_cc38; assert_in_delta(0.0, (worksheet.costpercapita_cc38||0), 0.002); end
  def test_costpercapita_cd38; assert_in_delta(0.0, (worksheet.costpercapita_cd38||0), 0.002); end
  def test_costpercapita_cf38; assert_in_delta(0.0, (worksheet.costpercapita_cf38||0), 0.002); end
  def test_costpercapita_cg38; assert_in_delta(0.0, (worksheet.costpercapita_cg38||0), 0.002); end
  def test_costpercapita_ch38; assert_in_delta(0.0, (worksheet.costpercapita_ch38||0), 0.002); end
  def test_costpercapita_ci38; assert_in_delta(0.0, (worksheet.costpercapita_ci38||0), 0.002); end
  def test_costpercapita_cj38; assert_in_delta(0.0, (worksheet.costpercapita_cj38||0), 0.002); end
  def test_costpercapita_ck38; assert_in_delta(0.0, (worksheet.costpercapita_ck38||0), 0.002); end
  def test_costpercapita_cl38; assert_in_delta(0.0, (worksheet.costpercapita_cl38||0), 0.002); end
  def test_costpercapita_cm38; assert_in_delta(0.0, (worksheet.costpercapita_cm38||0), 0.002); end
  def test_costpercapita_cn38; assert_in_delta(0.0, (worksheet.costpercapita_cn38||0), 0.002); end
  def test_costpercapita_cp38; assert_in_delta(0.0, (worksheet.costpercapita_cp38||0), 0.002); end
  def test_costpercapita_cq38; assert_in_delta(0.0, (worksheet.costpercapita_cq38||0), 0.002); end
  def test_costpercapita_cr38; assert_equal("err", worksheet.costpercapita_cr38); end
  def test_costpercapita_a39; assert_equal("XVI.b.Gas", worksheet.costpercapita_a39); end
  def test_costpercapita_b39; assert_equal("Gas Imports", worksheet.costpercapita_b39); end
  def test_costpercapita_c39; assert_equal("Fossil Fuels", worksheet.costpercapita_c39); end
  def test_costpercapita_e39; assert_in_delta(0.0, (worksheet.costpercapita_e39||0), 0.002); end
  def test_costpercapita_f39; assert_in_delta(0.0, (worksheet.costpercapita_f39||0), 0.002); end
  def test_costpercapita_g39; assert_in_delta(0.0, (worksheet.costpercapita_g39||0), 0.002); end
  def test_costpercapita_h39; assert_in_delta(0.0, (worksheet.costpercapita_h39||0), 0.002); end
  def test_costpercapita_i39; assert_in_delta(0.0, (worksheet.costpercapita_i39||0), 0.002); end
  def test_costpercapita_j39; assert_in_delta(0.0, (worksheet.costpercapita_j39||0), 0.002); end
  def test_costpercapita_k39; assert_in_delta(0.0, (worksheet.costpercapita_k39||0), 0.002); end
  def test_costpercapita_l39; assert_in_delta(0.0, (worksheet.costpercapita_l39||0), 0.002); end
  def test_costpercapita_m39; assert_in_delta(0.0, (worksheet.costpercapita_m39||0), 0.002); end
  def test_costpercapita_o39; assert_in_delta(0.0, (worksheet.costpercapita_o39||0), 0.002); end
  def test_costpercapita_p39; assert_in_delta(0.0, (worksheet.costpercapita_p39||0), 0.002); end
  def test_costpercapita_q39; assert_in_delta(0.0, (worksheet.costpercapita_q39||0), 0.002); end
  def test_costpercapita_r39; assert_in_delta(0.0, (worksheet.costpercapita_r39||0), 0.002); end
  def test_costpercapita_s39; assert_in_delta(0.0, (worksheet.costpercapita_s39||0), 0.002); end
  def test_costpercapita_t39; assert_in_delta(0.0, (worksheet.costpercapita_t39||0), 0.002); end
  def test_costpercapita_u39; assert_in_delta(0.0, (worksheet.costpercapita_u39||0), 0.002); end
  def test_costpercapita_v39; assert_in_delta(0.0, (worksheet.costpercapita_v39||0), 0.002); end
  def test_costpercapita_w39; assert_in_delta(0.0, (worksheet.costpercapita_w39||0), 0.002); end
  def test_costpercapita_y39; assert_in_epsilon(-338.41104341721575, worksheet.costpercapita_y39, 0.002); end
  def test_costpercapita_z39; assert_in_epsilon(-557.1505994173638, worksheet.costpercapita_z39, 0.002); end
  def test_costpercapita_aa39; assert_in_epsilon(363.52584953148596, worksheet.costpercapita_aa39, 0.002); end
  def test_costpercapita_ab39; assert_in_epsilon(240.79129195794008, worksheet.costpercapita_ab39, 0.002); end
  def test_costpercapita_ac39; assert_in_epsilon(-702.1211455146531, worksheet.costpercapita_ac39, 0.002); end
  def test_costpercapita_ad39; assert_in_epsilon(-1150.465156211079, worksheet.costpercapita_ad39, 0.002); end
  def test_costpercapita_ae39; assert_in_epsilon(-1682.0914688694324, worksheet.costpercapita_ae39, 0.002); end
  def test_costpercapita_af39; assert_in_epsilon(-2444.7884031329468, worksheet.costpercapita_af39, 0.002); end
  def test_costpercapita_ag39; assert_in_epsilon(-3120.5610817153115, worksheet.costpercapita_ag39, 0.002); end
  def test_costpercapita_ai39; assert_in_epsilon(-338.41104341721575, worksheet.costpercapita_ai39, 0.002); end
  def test_costpercapita_aj39; assert_in_epsilon(-557.1505994173638, worksheet.costpercapita_aj39, 0.002); end
  def test_costpercapita_ak39; assert_in_epsilon(363.52584953148596, worksheet.costpercapita_ak39, 0.002); end
  def test_costpercapita_al39; assert_in_epsilon(240.79129195794008, worksheet.costpercapita_al39, 0.002); end
  def test_costpercapita_am39; assert_in_epsilon(-702.1211455146531, worksheet.costpercapita_am39, 0.002); end
  def test_costpercapita_an39; assert_in_epsilon(-1150.465156211079, worksheet.costpercapita_an39, 0.002); end
  def test_costpercapita_ao39; assert_in_epsilon(-1682.0914688694324, worksheet.costpercapita_ao39, 0.002); end
  def test_costpercapita_ap39; assert_in_epsilon(-2444.7884031329468, worksheet.costpercapita_ap39, 0.002); end
  def test_costpercapita_aq39; assert_in_epsilon(-3120.5610817153115, worksheet.costpercapita_aq39, 0.002); end
  def test_costpercapita_as39; assert_in_epsilon(-1043.4746396431751, worksheet.costpercapita_as39, 0.002); end
  def test_costpercapita_at39; assert_in_epsilon(-15764.75874897505, worksheet.costpercapita_at39, 0.002); end
  def test_costpercapita_av39; assert_in_epsilon(3.0, worksheet.costpercapita_av39, 0.002); end
  def test_costpercapita_aw39; assert_in_epsilon(8.0, worksheet.costpercapita_aw39, 0.002); end
  def test_costpercapita_ay39; assert_in_delta(0.0, (worksheet.costpercapita_ay39||0), 0.002); end
  def test_costpercapita_az39; assert_in_delta(0.0, (worksheet.costpercapita_az39||0), 0.002); end
  def test_costpercapita_ba39; assert_in_delta(0.0, (worksheet.costpercapita_ba39||0), 0.002); end
  def test_costpercapita_bb39; assert_in_delta(0.0, (worksheet.costpercapita_bb39||0), 0.002); end
  def test_costpercapita_bc39; assert_in_delta(0.0, (worksheet.costpercapita_bc39||0), 0.002); end
  def test_costpercapita_bd39; assert_in_delta(0.0, (worksheet.costpercapita_bd39||0), 0.002); end
  def test_costpercapita_be39; assert_in_delta(0.0, (worksheet.costpercapita_be39||0), 0.002); end
  def test_costpercapita_bf39; assert_in_delta(0.0, (worksheet.costpercapita_bf39||0), 0.002); end
  def test_costpercapita_bg39; assert_in_delta(0.0, (worksheet.costpercapita_bg39||0), 0.002); end
  def test_costpercapita_bi39; assert_in_delta(0.0, (worksheet.costpercapita_bi39||0), 0.002); end
  def test_costpercapita_bj39; assert_in_delta(0.0, (worksheet.costpercapita_bj39||0), 0.002); end
  def test_costpercapita_bk39; assert_in_delta(0.0, (worksheet.costpercapita_bk39||0), 0.002); end
  def test_costpercapita_bl39; assert_in_delta(0.0, (worksheet.costpercapita_bl39||0), 0.002); end
  def test_costpercapita_bm39; assert_in_delta(0.0, (worksheet.costpercapita_bm39||0), 0.002); end
  def test_costpercapita_bn39; assert_in_delta(0.0, (worksheet.costpercapita_bn39||0), 0.002); end
  def test_costpercapita_bo39; assert_in_delta(0.0, (worksheet.costpercapita_bo39||0), 0.002); end
  def test_costpercapita_bp39; assert_in_delta(0.0, (worksheet.costpercapita_bp39||0), 0.002); end
  def test_costpercapita_bq39; assert_in_delta(0.0, (worksheet.costpercapita_bq39||0), 0.002); end
  def test_costpercapita_bs39; assert_in_delta(0.0, (worksheet.costpercapita_bs39||0), 0.002); end
  def test_costpercapita_bt39; assert_in_delta(0.0, (worksheet.costpercapita_bt39||0), 0.002); end
  def test_costpercapita_bu39; assert_in_delta(0.0, (worksheet.costpercapita_bu39||0), 0.002); end
  def test_costpercapita_bv39; assert_in_delta(0.0, (worksheet.costpercapita_bv39||0), 0.002); end
  def test_costpercapita_bw39; assert_in_delta(0.0, (worksheet.costpercapita_bw39||0), 0.002); end
  def test_costpercapita_bx39; assert_in_delta(0.0, (worksheet.costpercapita_bx39||0), 0.002); end
  def test_costpercapita_by39; assert_in_delta(0.0, (worksheet.costpercapita_by39||0), 0.002); end
  def test_costpercapita_bz39; assert_in_delta(0.0, (worksheet.costpercapita_bz39||0), 0.002); end
  def test_costpercapita_ca39; assert_in_delta(0.0, (worksheet.costpercapita_ca39||0), 0.002); end
  def test_costpercapita_cc39; assert_in_delta(0.0, (worksheet.costpercapita_cc39||0), 0.002); end
  def test_costpercapita_cd39; assert_in_delta(0.0, (worksheet.costpercapita_cd39||0), 0.002); end
  def test_costpercapita_cf39; assert_in_delta(0.0, (worksheet.costpercapita_cf39||0), 0.002); end
  def test_costpercapita_cg39; assert_in_delta(0.0, (worksheet.costpercapita_cg39||0), 0.002); end
  def test_costpercapita_ch39; assert_in_delta(0.0, (worksheet.costpercapita_ch39||0), 0.002); end
  def test_costpercapita_ci39; assert_in_delta(0.0, (worksheet.costpercapita_ci39||0), 0.002); end
  def test_costpercapita_cj39; assert_in_delta(0.0, (worksheet.costpercapita_cj39||0), 0.002); end
  def test_costpercapita_ck39; assert_in_delta(0.0, (worksheet.costpercapita_ck39||0), 0.002); end
  def test_costpercapita_cl39; assert_in_delta(0.0, (worksheet.costpercapita_cl39||0), 0.002); end
  def test_costpercapita_cm39; assert_in_delta(0.0, (worksheet.costpercapita_cm39||0), 0.002); end
  def test_costpercapita_cn39; assert_in_delta(0.0, (worksheet.costpercapita_cn39||0), 0.002); end
  def test_costpercapita_cp39; assert_in_delta(0.0, (worksheet.costpercapita_cp39||0), 0.002); end
  def test_costpercapita_cq39; assert_in_delta(0.0, (worksheet.costpercapita_cq39||0), 0.002); end
  def test_costpercapita_cr39; assert_equal("err", worksheet.costpercapita_cr39); end
  def test_costpercapita_a40; assert_equal("Total", worksheet.costpercapita_a40); end
  def test_costpercapita_b40; assert_equal("Total", worksheet.costpercapita_b40); end
  def test_costpercapita_c40; assert_equal("Total", worksheet.costpercapita_c40); end
  def test_costpercapita_e40; assert_in_epsilon(4608.355474709857, worksheet.costpercapita_e40, 0.002); end
  def test_costpercapita_f40; assert_in_epsilon(5396.19433142459, worksheet.costpercapita_f40, 0.002); end
  def test_costpercapita_g40; assert_in_epsilon(6818.123401720317, worksheet.costpercapita_g40, 0.002); end
  def test_costpercapita_h40; assert_in_epsilon(8241.58186209783, worksheet.costpercapita_h40, 0.002); end
  def test_costpercapita_i40; assert_in_epsilon(9669.511922178184, worksheet.costpercapita_i40, 0.002); end
  def test_costpercapita_j40; assert_in_epsilon(11174.463700189483, worksheet.costpercapita_j40, 0.002); end
  def test_costpercapita_k40; assert_in_epsilon(12670.074426397636, worksheet.costpercapita_k40, 0.002); end
  def test_costpercapita_l40; assert_in_epsilon(14164.644275202234, worksheet.costpercapita_l40, 0.002); end
  def test_costpercapita_m40; assert_in_epsilon(15750.095659274883, worksheet.costpercapita_m40, 0.002); end
  def test_costpercapita_o40; assert_in_epsilon(3776.749696894705, worksheet.costpercapita_o40, 0.002); end
  def test_costpercapita_p40; assert_in_epsilon(4691.209039140344, worksheet.costpercapita_p40, 0.002); end
  def test_costpercapita_q40; assert_in_epsilon(5793.131336501407, worksheet.costpercapita_q40, 0.002); end
  def test_costpercapita_r40; assert_in_epsilon(6848.557943148739, worksheet.costpercapita_r40, 0.002); end
  def test_costpercapita_s40; assert_in_epsilon(7859.675141856074, worksheet.costpercapita_s40, 0.002); end
  def test_costpercapita_t40; assert_in_epsilon(8803.137593221245, worksheet.costpercapita_t40, 0.002); end
  def test_costpercapita_u40; assert_in_epsilon(9332.128074429605, worksheet.costpercapita_u40, 0.002); end
  def test_costpercapita_v40; assert_in_epsilon(9779.55952073274, worksheet.costpercapita_v40, 0.002); end
  def test_costpercapita_w40; assert_in_epsilon(10486.050350709458, worksheet.costpercapita_w40, 0.002); end
  def test_costpercapita_y40; assert_in_epsilon(151.4995283809722, worksheet.costpercapita_y40, 0.002); end
  def test_costpercapita_z40; assert_in_epsilon(-122.47714423227048, worksheet.costpercapita_z40, 0.002); end
  def test_costpercapita_aa40; assert_in_epsilon(-132.7806966952133, worksheet.costpercapita_aa40, 0.002); end
  def test_costpercapita_ab40; assert_in_epsilon(-59.41341199108668, worksheet.costpercapita_ab40, 0.002); end
  def test_costpercapita_ac40; assert_in_epsilon(-794.6013916169942, worksheet.costpercapita_ac40, 0.002); end
  def test_costpercapita_ad40; assert_in_epsilon(-1036.07590597754, worksheet.costpercapita_ad40, 0.002); end
  def test_costpercapita_ae40; assert_in_epsilon(-1532.7174187595613, worksheet.costpercapita_ae40, 0.002); end
  def test_costpercapita_af40; assert_in_epsilon(-1787.2151044695777, worksheet.costpercapita_af40, 0.002); end
  def test_costpercapita_ag40; assert_in_epsilon(-2261.79113222256, worksheet.costpercapita_ag40, 0.002); end
  def test_costpercapita_ai40; assert_in_epsilon(8536.604699985533, worksheet.costpercapita_ai40, 0.002); end
  def test_costpercapita_aj40; assert_in_epsilon(9964.926226332664, worksheet.costpercapita_aj40, 0.002); end
  def test_costpercapita_ak40; assert_in_epsilon(12478.474041526508, worksheet.costpercapita_ak40, 0.002); end
  def test_costpercapita_al40; assert_in_epsilon(15030.726393255478, worksheet.costpercapita_al40, 0.002); end
  def test_costpercapita_am40; assert_in_epsilon(16734.585672417263, worksheet.costpercapita_am40, 0.002); end
  def test_costpercapita_an40; assert_in_epsilon(18941.52538743319, worksheet.costpercapita_an40, 0.002); end
  def test_costpercapita_ao40; assert_in_epsilon(20469.48508206768, worksheet.costpercapita_ao40, 0.002); end
  def test_costpercapita_ap40; assert_in_epsilon(22156.98869146539, worksheet.costpercapita_ap40, 0.002); end
  def test_costpercapita_aq40; assert_in_epsilon(23974.354877761787, worksheet.costpercapita_aq40, 0.002); end
  def test_costpercapita_as40; assert_in_epsilon(16476.407896916167, worksheet.costpercapita_as40, 0.002); end
  def test_costpercapita_at40; assert_in_epsilon(323993.7864232625, worksheet.costpercapita_at40, 0.002); end
  def test_costpercapita_av40; assert_in_delta(0.0, (worksheet.costpercapita_av40||0), 0.002); end
  def test_costpercapita_aw40; assert_in_epsilon(5.0, worksheet.costpercapita_aw40, 0.002); end
  def test_costpercapita_ay40; assert_in_epsilon(4608.3591038809745, worksheet.costpercapita_ay40, 0.002); end
  def test_costpercapita_az40; assert_in_epsilon(5397.485496476932, worksheet.costpercapita_az40, 0.002); end
  def test_costpercapita_ba40; assert_in_epsilon(6865.082645277677, worksheet.costpercapita_ba40, 0.002); end
  def test_costpercapita_bb40; assert_in_epsilon(8327.417652782251, worksheet.costpercapita_bb40, 0.002); end
  def test_costpercapita_bc40; assert_in_epsilon(9792.222535773773, worksheet.costpercapita_bc40, 0.002); end
  def test_costpercapita_bd40; assert_in_epsilon(11325.684043266865, worksheet.costpercapita_bd40, 0.002); end
  def test_costpercapita_be40; assert_in_epsilon(12848.297125339794, worksheet.costpercapita_be40, 0.002); end
  def test_costpercapita_bf40; assert_in_epsilon(14373.149362652955, worksheet.costpercapita_bf40, 0.002); end
  def test_costpercapita_bg40; assert_in_epsilon(15986.559688715912, worksheet.costpercapita_bg40, 0.002); end
  def test_costpercapita_bi40; assert_in_delta(0.0, (worksheet.costpercapita_bi40||0), 0.002); end
  def test_costpercapita_bj40; assert_in_delta(0.0, (worksheet.costpercapita_bj40||0), 0.002); end
  def test_costpercapita_bk40; assert_in_delta(0.0, (worksheet.costpercapita_bk40||0), 0.002); end
  def test_costpercapita_bl40; assert_in_delta(0.0, (worksheet.costpercapita_bl40||0), 0.002); end
  def test_costpercapita_bm40; assert_in_delta(0.0, (worksheet.costpercapita_bm40||0), 0.002); end
  def test_costpercapita_bn40; assert_in_delta(0.0, (worksheet.costpercapita_bn40||0), 0.002); end
  def test_costpercapita_bo40; assert_in_delta(0.0, (worksheet.costpercapita_bo40||0), 0.002); end
  def test_costpercapita_bp40; assert_in_delta(0.0, (worksheet.costpercapita_bp40||0), 0.002); end
  def test_costpercapita_bq40; assert_in_delta(0.0, (worksheet.costpercapita_bq40||0), 0.002); end
  def test_costpercapita_bs40; assert_in_epsilon(10051.121388298761, worksheet.costpercapita_bs40, 0.002); end
  def test_costpercapita_bt40; assert_in_epsilon(11892.385698341164, worksheet.costpercapita_bt40, 0.002); end
  def test_costpercapita_bu40; assert_in_epsilon(13726.59348034042, worksheet.costpercapita_bu40, 0.002); end
  def test_costpercapita_bv40; assert_in_epsilon(16367.044178358366, worksheet.costpercapita_bv40, 0.002); end
  def test_costpercapita_bw40; assert_in_epsilon(19011.314663700425, worksheet.costpercapita_bw40, 0.002); end
  def test_costpercapita_bx40; assert_in_epsilon(21667.536407292137, worksheet.costpercapita_bx40, 0.002); end
  def test_costpercapita_by40; assert_in_epsilon(23870.18633903128, worksheet.costpercapita_by40, 0.002); end
  def test_costpercapita_bz40; assert_in_epsilon(26239.17898051379, worksheet.costpercapita_bz40, 0.002); end
  def test_costpercapita_ca40; assert_in_epsilon(28847.172583204556, worksheet.costpercapita_ca40, 0.002); end
  def test_costpercapita_cc40; assert_in_epsilon(19074.725968786763, worksheet.costpercapita_cc40, 0.002); end
  def test_costpercapita_cd40; assert_in_epsilon(372313.3408269267, worksheet.costpercapita_cd40, 0.002); end
  def test_costpercapita_cf40; assert_in_delta(0.003629171117142193, worksheet.costpercapita_cf40, 0.002); end
  def test_costpercapita_cg40; assert_in_epsilon(1.2911650523423375, worksheet.costpercapita_cg40, 0.002); end
  def test_costpercapita_ch40; assert_in_epsilon(46.95924355735984, worksheet.costpercapita_ch40, 0.002); end
  def test_costpercapita_ci40; assert_in_epsilon(85.83579068442225, worksheet.costpercapita_ci40, 0.002); end
  def test_costpercapita_cj40; assert_in_epsilon(122.71061359559171, worksheet.costpercapita_cj40, 0.002); end
  def test_costpercapita_ck40; assert_in_epsilon(151.2203430773833, worksheet.costpercapita_ck40, 0.002); end
  def test_costpercapita_cl40; assert_in_epsilon(178.2226989421568, worksheet.costpercapita_cl40, 0.002); end
  def test_costpercapita_cm40; assert_in_epsilon(208.50508745072284, worksheet.costpercapita_cm40, 0.002); end
  def test_costpercapita_cn40; assert_in_epsilon(236.46402944102917, worksheet.costpercapita_cn40, 0.002); end
  def test_costpercapita_cp40; assert_in_epsilon(114.5791778857917, worksheet.costpercapita_cp40, 0.002); end
  def test_costpercapita_cq40; assert_in_epsilon(2007.6778007690987, worksheet.costpercapita_cq40, 0.002); end
  def test_costpercapita_cr40; assert_equal("err", worksheet.costpercapita_cr40); end
  def test_costpercapita_b42; assert_equal("ZAR/Capita/yr", worksheet.costpercapita_b42); end
  def test_costpercapita_e42; assert_equal("C1.Point", worksheet.costpercapita_e42); end
  def test_costpercapita_f42; assert_equal("Point estimate of capital costs", worksheet.costpercapita_f42); end
  def test_costpercapita_o42; assert_equal("C2.Point", worksheet.costpercapita_o42); end
  def test_costpercapita_p42; assert_equal("Point estimate of operating costs", worksheet.costpercapita_p42); end
  def test_costpercapita_y42; assert_equal("C3.Point", worksheet.costpercapita_y42); end
  def test_costpercapita_z42; assert_equal("Point estimate of fuel costs", worksheet.costpercapita_z42); end
  def test_costpercapita_ai42; assert_equal("Point estimate of total cost", worksheet.costpercapita_ai42); end
  def test_costpercapita_as42; assert_equal("Cashflow capital basis", worksheet.costpercapita_as42); end
  def test_costpercapita_av42; assert_equal("Loan", worksheet.costpercapita_av42); end
  def test_costpercapita_ay42; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay42); end
  def test_costpercapita_bi42; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi42); end
  def test_costpercapita_br42; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br42); end
  def test_costpercapita_cc42; assert_equal("Amortised Capital", worksheet.costpercapita_cc42); end
  def test_costpercapita_cf42; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf42); end
  def test_costpercapita_cp42; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp42); end
  def test_costpercapita_a43; assert_equal("Code", worksheet.costpercapita_a43); end
  def test_costpercapita_b43; assert_equal("Description", worksheet.costpercapita_b43); end
  def test_costpercapita_c43; assert_equal("Category", worksheet.costpercapita_c43); end
  def test_costpercapita_e43; assert_equal("2010", worksheet.costpercapita_e43); end
  def test_costpercapita_f43; assert_equal("2015", worksheet.costpercapita_f43); end
  def test_costpercapita_g43; assert_equal("2020", worksheet.costpercapita_g43); end
  def test_costpercapita_h43; assert_equal("2025", worksheet.costpercapita_h43); end
  def test_costpercapita_i43; assert_equal("2030", worksheet.costpercapita_i43); end
  def test_costpercapita_j43; assert_equal("2035", worksheet.costpercapita_j43); end
  def test_costpercapita_k43; assert_equal("2040", worksheet.costpercapita_k43); end
  def test_costpercapita_l43; assert_equal("2045", worksheet.costpercapita_l43); end
  def test_costpercapita_m43; assert_equal("2050", worksheet.costpercapita_m43); end
  def test_costpercapita_o43; assert_equal("2010", worksheet.costpercapita_o43); end
  def test_costpercapita_p43; assert_equal("2015", worksheet.costpercapita_p43); end
  def test_costpercapita_q43; assert_equal("2020", worksheet.costpercapita_q43); end
  def test_costpercapita_r43; assert_equal("2025", worksheet.costpercapita_r43); end
  def test_costpercapita_s43; assert_equal("2030", worksheet.costpercapita_s43); end
  def test_costpercapita_t43; assert_equal("2035", worksheet.costpercapita_t43); end
  def test_costpercapita_u43; assert_equal("2040", worksheet.costpercapita_u43); end
  def test_costpercapita_v43; assert_equal("2045", worksheet.costpercapita_v43); end
  def test_costpercapita_w43; assert_equal("2050", worksheet.costpercapita_w43); end
  def test_costpercapita_y43; assert_equal("2010", worksheet.costpercapita_y43); end
  def test_costpercapita_z43; assert_equal("2015", worksheet.costpercapita_z43); end
  def test_costpercapita_aa43; assert_equal("2020", worksheet.costpercapita_aa43); end
  def test_costpercapita_ab43; assert_equal("2025", worksheet.costpercapita_ab43); end
  def test_costpercapita_ac43; assert_equal("2030", worksheet.costpercapita_ac43); end
  def test_costpercapita_ad43; assert_equal("2035", worksheet.costpercapita_ad43); end
  def test_costpercapita_ae43; assert_equal("2040", worksheet.costpercapita_ae43); end
  def test_costpercapita_af43; assert_equal("2045", worksheet.costpercapita_af43); end
  def test_costpercapita_ag43; assert_equal("2050", worksheet.costpercapita_ag43); end
  def test_costpercapita_ai43; assert_equal("2010", worksheet.costpercapita_ai43); end
  def test_costpercapita_aj43; assert_equal("2015", worksheet.costpercapita_aj43); end
  def test_costpercapita_ak43; assert_equal("2020", worksheet.costpercapita_ak43); end
  def test_costpercapita_al43; assert_equal("2025", worksheet.costpercapita_al43); end
  def test_costpercapita_am43; assert_equal("2030", worksheet.costpercapita_am43); end
  def test_costpercapita_an43; assert_equal("2035", worksheet.costpercapita_an43); end
  def test_costpercapita_ao43; assert_equal("2040", worksheet.costpercapita_ao43); end
  def test_costpercapita_ap43; assert_equal("2045", worksheet.costpercapita_ap43); end
  def test_costpercapita_aq43; assert_equal("2050", worksheet.costpercapita_aq43); end
  def test_costpercapita_as43; assert_equal("Mean", worksheet.costpercapita_as43); end
  def test_costpercapita_at43; assert_equal("NPV", worksheet.costpercapita_at43); end
  def test_costpercapita_av43; assert_equal("Rate", worksheet.costpercapita_av43); end
  def test_costpercapita_aw43; assert_equal("Years", worksheet.costpercapita_aw43); end
  def test_costpercapita_ay43; assert_in_epsilon(2010.0, worksheet.costpercapita_ay43, 0.002); end
  def test_costpercapita_az43; assert_in_epsilon(2015.0, worksheet.costpercapita_az43, 0.002); end
  def test_costpercapita_ba43; assert_in_epsilon(2020.0, worksheet.costpercapita_ba43, 0.002); end
  def test_costpercapita_bb43; assert_in_epsilon(2025.0, worksheet.costpercapita_bb43, 0.002); end
  def test_costpercapita_bc43; assert_in_epsilon(2030.0, worksheet.costpercapita_bc43, 0.002); end
  def test_costpercapita_bd43; assert_in_epsilon(2035.0, worksheet.costpercapita_bd43, 0.002); end
  def test_costpercapita_be43; assert_in_epsilon(2040.0, worksheet.costpercapita_be43, 0.002); end
  def test_costpercapita_bf43; assert_in_epsilon(2045.0, worksheet.costpercapita_bf43, 0.002); end
  def test_costpercapita_bg43; assert_in_epsilon(2050.0, worksheet.costpercapita_bg43, 0.002); end
  def test_costpercapita_bi43; assert_in_epsilon(2010.0, worksheet.costpercapita_bi43, 0.002); end
  def test_costpercapita_bj43; assert_in_epsilon(2015.0, worksheet.costpercapita_bj43, 0.002); end
  def test_costpercapita_bk43; assert_in_epsilon(2020.0, worksheet.costpercapita_bk43, 0.002); end
  def test_costpercapita_bl43; assert_in_epsilon(2025.0, worksheet.costpercapita_bl43, 0.002); end
  def test_costpercapita_bm43; assert_in_epsilon(2030.0, worksheet.costpercapita_bm43, 0.002); end
  def test_costpercapita_bn43; assert_in_epsilon(2035.0, worksheet.costpercapita_bn43, 0.002); end
  def test_costpercapita_bo43; assert_in_epsilon(2040.0, worksheet.costpercapita_bo43, 0.002); end
  def test_costpercapita_bp43; assert_in_epsilon(2045.0, worksheet.costpercapita_bp43, 0.002); end
  def test_costpercapita_bq43; assert_in_epsilon(2050.0, worksheet.costpercapita_bq43, 0.002); end
  def test_costpercapita_bs43; assert_equal("2010", worksheet.costpercapita_bs43); end
  def test_costpercapita_bt43; assert_equal("2015", worksheet.costpercapita_bt43); end
  def test_costpercapita_bu43; assert_equal("2020", worksheet.costpercapita_bu43); end
  def test_costpercapita_bv43; assert_equal("2025", worksheet.costpercapita_bv43); end
  def test_costpercapita_bw43; assert_equal("2030", worksheet.costpercapita_bw43); end
  def test_costpercapita_bx43; assert_equal("2035", worksheet.costpercapita_bx43); end
  def test_costpercapita_by43; assert_equal("2040", worksheet.costpercapita_by43); end
  def test_costpercapita_bz43; assert_equal("2045", worksheet.costpercapita_bz43); end
  def test_costpercapita_ca43; assert_equal("2050", worksheet.costpercapita_ca43); end
  def test_costpercapita_cc43; assert_equal("Mean", worksheet.costpercapita_cc43); end
  def test_costpercapita_cd43; assert_equal("NPV", worksheet.costpercapita_cd43); end
  def test_costpercapita_cf43; assert_equal("2010", worksheet.costpercapita_cf43); end
  def test_costpercapita_cg43; assert_equal("2015", worksheet.costpercapita_cg43); end
  def test_costpercapita_ch43; assert_equal("2020", worksheet.costpercapita_ch43); end
  def test_costpercapita_ci43; assert_equal("2025", worksheet.costpercapita_ci43); end
  def test_costpercapita_cj43; assert_equal("2030", worksheet.costpercapita_cj43); end
  def test_costpercapita_ck43; assert_equal("2035", worksheet.costpercapita_ck43); end
  def test_costpercapita_cl43; assert_equal("2040", worksheet.costpercapita_cl43); end
  def test_costpercapita_cm43; assert_equal("2045", worksheet.costpercapita_cm43); end
  def test_costpercapita_cn43; assert_equal("2050", worksheet.costpercapita_cn43); end
  def test_costpercapita_cp43; assert_equal("Mean", worksheet.costpercapita_cp43); end
  def test_costpercapita_cq43; assert_equal("NPV", worksheet.costpercapita_cq43); end
  def test_costpercapita_a44; assert_equal("Therm.a", worksheet.costpercapita_a44); end
  def test_costpercapita_b44; assert_equal("Biomass/coal power stations", worksheet.costpercapita_b44); end
  def test_costpercapita_c44; assert_equal("Electricity", worksheet.costpercapita_c44); end
  def test_costpercapita_e44; assert_in_delta(0.0, (worksheet.costpercapita_e44||0), 0.002); end
  def test_costpercapita_f44; assert_in_epsilon(36.44049182221046, worksheet.costpercapita_f44, 0.002); end
  def test_costpercapita_g44; assert_in_epsilon(111.51042725903159, worksheet.costpercapita_g44, 0.002); end
  def test_costpercapita_h44; assert_in_epsilon(155.6425198477449, worksheet.costpercapita_h44, 0.002); end
  def test_costpercapita_i44; assert_in_epsilon(199.77461243645823, worksheet.costpercapita_i44, 0.002); end
  def test_costpercapita_j44; assert_in_epsilon(243.90670502517153, worksheet.costpercapita_j44, 0.002); end
  def test_costpercapita_k44; assert_in_epsilon(288.03879761388487, worksheet.costpercapita_k44, 0.002); end
  def test_costpercapita_l44; assert_in_epsilon(376.3029827913115, worksheet.costpercapita_l44, 0.002); end
  def test_costpercapita_m44; assert_in_epsilon(464.56716796873815, worksheet.costpercapita_m44, 0.002); end
  def test_costpercapita_o44; assert_in_epsilon(402.3170171803726, worksheet.costpercapita_o44, 0.002); end
  def test_costpercapita_p44; assert_in_epsilon(449.2858072082012, worksheet.costpercapita_p44, 0.002); end
  def test_costpercapita_q44; assert_in_epsilon(333.132110105587, worksheet.costpercapita_q44, 0.002); end
  def test_costpercapita_r44; assert_in_epsilon(333.33386158098, worksheet.costpercapita_r44, 0.002); end
  def test_costpercapita_s44; assert_in_epsilon(308.0217234952685, worksheet.costpercapita_s44, 0.002); end
  def test_costpercapita_t44; assert_in_epsilon(309.30077352997915, worksheet.costpercapita_t44, 0.002); end
  def test_costpercapita_u44; assert_in_epsilon(287.1053083661126, worksheet.costpercapita_u44, 0.002); end
  def test_costpercapita_v44; assert_in_epsilon(332.0368977346607, worksheet.costpercapita_v44, 0.002); end
  def test_costpercapita_w44; assert_in_epsilon(380.683068381341, worksheet.costpercapita_w44, 0.002); end
  def test_costpercapita_y44; assert_in_delta(0.0, (worksheet.costpercapita_y44||0), 0.002); end
  def test_costpercapita_z44; assert_in_delta(0.0, (worksheet.costpercapita_z44||0), 0.002); end
  def test_costpercapita_aa44; assert_in_delta(0.0, (worksheet.costpercapita_aa44||0), 0.002); end
  def test_costpercapita_ab44; assert_in_delta(0.0, (worksheet.costpercapita_ab44||0), 0.002); end
  def test_costpercapita_ac44; assert_in_delta(0.0, (worksheet.costpercapita_ac44||0), 0.002); end
  def test_costpercapita_ad44; assert_in_delta(0.0, (worksheet.costpercapita_ad44||0), 0.002); end
  def test_costpercapita_ae44; assert_in_delta(0.0, (worksheet.costpercapita_ae44||0), 0.002); end
  def test_costpercapita_af44; assert_in_delta(0.0, (worksheet.costpercapita_af44||0), 0.002); end
  def test_costpercapita_ag44; assert_in_delta(0.0, (worksheet.costpercapita_ag44||0), 0.002); end
  def test_costpercapita_ai44; assert_in_epsilon(402.3170171803726, worksheet.costpercapita_ai44, 0.002); end
  def test_costpercapita_aj44; assert_in_epsilon(485.72629903041167, worksheet.costpercapita_aj44, 0.002); end
  def test_costpercapita_ak44; assert_in_epsilon(444.64253736461853, worksheet.costpercapita_ak44, 0.002); end
  def test_costpercapita_al44; assert_in_epsilon(488.9763814287249, worksheet.costpercapita_al44, 0.002); end
  def test_costpercapita_am44; assert_in_epsilon(507.79633593172673, worksheet.costpercapita_am44, 0.002); end
  def test_costpercapita_an44; assert_in_epsilon(553.2074785551507, worksheet.costpercapita_an44, 0.002); end
  def test_costpercapita_ao44; assert_in_epsilon(575.1441059799974, worksheet.costpercapita_ao44, 0.002); end
  def test_costpercapita_ap44; assert_in_epsilon(708.3398805259723, worksheet.costpercapita_ap44, 0.002); end
  def test_costpercapita_aq44; assert_in_epsilon(845.2502363500791, worksheet.costpercapita_aq44, 0.002); end
  def test_costpercapita_as44; assert_in_epsilon(556.822252483006, worksheet.costpercapita_as44, 0.002); end
  def test_costpercapita_at44; assert_in_epsilon(11162.432203081768, worksheet.costpercapita_at44, 0.002); end
  def test_costpercapita_av44; assert_in_delta(0.0, (worksheet.costpercapita_av44||0), 0.002); end
  def test_costpercapita_aw44; assert_in_epsilon(5.0, worksheet.costpercapita_aw44, 0.002); end
  def test_costpercapita_ay44; assert_in_delta(0.0, (worksheet.costpercapita_ay44||0), 0.002); end
  def test_costpercapita_az44; assert_in_epsilon(104.63294271688288, worksheet.costpercapita_az44, 0.002); end
  def test_costpercapita_ba44; assert_in_epsilon(320.1840470390675, worksheet.costpercapita_ba44, 0.002); end
  def test_costpercapita_bb44; assert_in_epsilon(446.9021697894455, worksheet.costpercapita_bb44, 0.002); end
  def test_costpercapita_bc44; assert_in_epsilon(573.6202925398236, worksheet.costpercapita_bc44, 0.002); end
  def test_costpercapita_bd44; assert_in_epsilon(700.3384152902016, worksheet.costpercapita_bd44, 0.002); end
  def test_costpercapita_be44; assert_in_epsilon(827.0565380405795, worksheet.costpercapita_be44, 0.002); end
  def test_costpercapita_bf44; assert_in_epsilon(1080.4927835413357, worksheet.costpercapita_bf44, 0.002); end
  def test_costpercapita_bg44; assert_in_epsilon(1333.9290290420918, worksheet.costpercapita_bg44, 0.002); end
  def test_costpercapita_bi44; assert_in_delta(0.0, (worksheet.costpercapita_bi44||0), 0.002); end
  def test_costpercapita_bj44; assert_in_delta(0.0, (worksheet.costpercapita_bj44||0), 0.002); end
  def test_costpercapita_bk44; assert_in_delta(0.0, (worksheet.costpercapita_bk44||0), 0.002); end
  def test_costpercapita_bl44; assert_in_delta(0.0, (worksheet.costpercapita_bl44||0), 0.002); end
  def test_costpercapita_bm44; assert_in_delta(0.0, (worksheet.costpercapita_bm44||0), 0.002); end
  def test_costpercapita_bn44; assert_in_delta(0.0, (worksheet.costpercapita_bn44||0), 0.002); end
  def test_costpercapita_bo44; assert_in_delta(0.0, (worksheet.costpercapita_bo44||0), 0.002); end
  def test_costpercapita_bp44; assert_in_delta(0.0, (worksheet.costpercapita_bp44||0), 0.002); end
  def test_costpercapita_bq44; assert_in_delta(0.0, (worksheet.costpercapita_bq44||0), 0.002); end
  def test_costpercapita_bs44; assert_in_epsilon(402.3170171803726, worksheet.costpercapita_bs44, 0.002); end
  def test_costpercapita_bt44; assert_in_epsilon(553.9187499250842, worksheet.costpercapita_bt44, 0.002); end
  def test_costpercapita_bu44; assert_in_epsilon(653.3161571446544, worksheet.costpercapita_bu44, 0.002); end
  def test_costpercapita_bv44; assert_in_epsilon(780.2360313704255, worksheet.costpercapita_bv44, 0.002); end
  def test_costpercapita_bw44; assert_in_epsilon(881.6420160350922, worksheet.costpercapita_bw44, 0.002); end
  def test_costpercapita_bx44; assert_in_epsilon(1009.6391888201807, worksheet.costpercapita_bx44, 0.002); end
  def test_costpercapita_by44; assert_in_epsilon(1114.1618464066921, worksheet.costpercapita_by44, 0.002); end
  def test_costpercapita_bz44; assert_in_epsilon(1412.5296812759966, worksheet.costpercapita_bz44, 0.002); end
  def test_costpercapita_ca44; assert_in_epsilon(1714.612097423433, worksheet.costpercapita_ca44, 0.002); end
  def test_costpercapita_cc44; assert_in_epsilon(946.9303095091034, worksheet.costpercapita_cc44, 0.002); end
  def test_costpercapita_cd44; assert_in_epsilon(18158.176641891198, worksheet.costpercapita_cd44, 0.002); end
  def test_costpercapita_cf44; assert_in_delta(0.0, (worksheet.costpercapita_cf44||0), 0.002); end
  def test_costpercapita_cg44; assert_in_epsilon(68.19245089467243, worksheet.costpercapita_cg44, 0.002); end
  def test_costpercapita_ch44; assert_in_epsilon(208.67361978003592, worksheet.costpercapita_ch44, 0.002); end
  def test_costpercapita_ci44; assert_in_epsilon(291.2596499417006, worksheet.costpercapita_ci44, 0.002); end
  def test_costpercapita_cj44; assert_in_epsilon(373.84568010336534, worksheet.costpercapita_cj44, 0.002); end
  def test_costpercapita_ck44; assert_in_epsilon(456.4317102650301, worksheet.costpercapita_ck44, 0.002); end
  def test_costpercapita_cl44; assert_in_epsilon(539.0177404266947, worksheet.costpercapita_cl44, 0.002); end
  def test_costpercapita_cm44; assert_in_epsilon(704.1898007500242, worksheet.costpercapita_cm44, 0.002); end
  def test_costpercapita_cn44; assert_in_epsilon(869.3618610733537, worksheet.costpercapita_cn44, 0.002); end
  def test_costpercapita_cp44; assert_in_epsilon(390.1080570260974, worksheet.costpercapita_cp44, 0.002); end
  def test_costpercapita_cq44; assert_in_epsilon(6995.74443880943, worksheet.costpercapita_cq44, 0.002); end
  def test_costpercapita_cr44; assert_equal("ok", worksheet.costpercapita_cr44); end
  def test_costpercapita_a45; assert_equal("Therm.b.CCGT", worksheet.costpercapita_a45); end
  def test_costpercapita_b45; assert_equal("CCGT", worksheet.costpercapita_b45); end
  def test_costpercapita_c45; assert_equal("Electricity", worksheet.costpercapita_c45); end
  def test_costpercapita_e45; assert_in_delta(0.0, (worksheet.costpercapita_e45||0), 0.002); end
  def test_costpercapita_f45; assert_in_delta(0.0, (worksheet.costpercapita_f45||0), 0.002); end
  def test_costpercapita_g45; assert_in_delta(0.0, (worksheet.costpercapita_g45||0), 0.002); end
  def test_costpercapita_h45; assert_in_delta(0.0, (worksheet.costpercapita_h45||0), 0.002); end
  def test_costpercapita_i45; assert_in_epsilon(31.947274543063333, worksheet.costpercapita_i45, 0.002); end
  def test_costpercapita_j45; assert_in_epsilon(39.934093178829166, worksheet.costpercapita_j45, 0.002); end
  def test_costpercapita_k45; assert_in_epsilon(47.920911814595, worksheet.costpercapita_k45, 0.002); end
  def test_costpercapita_l45; assert_in_epsilon(55.90773045036083, worksheet.costpercapita_l45, 0.002); end
  def test_costpercapita_m45; assert_in_epsilon(63.894549086126666, worksheet.costpercapita_m45, 0.002); end
  def test_costpercapita_o45; assert_in_delta(0.0, (worksheet.costpercapita_o45||0), 0.002); end
  def test_costpercapita_p45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_p45, 0.002); end
  def test_costpercapita_q45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_q45, 0.002); end
  def test_costpercapita_r45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_r45, 0.002); end
  def test_costpercapita_s45; assert_in_epsilon(24.93664749661499, worksheet.costpercapita_s45, 0.002); end
  def test_costpercapita_t45; assert_in_epsilon(31.0701656135753, worksheet.costpercapita_t45, 0.002); end
  def test_costpercapita_u45; assert_in_epsilon(37.2036837305356, worksheet.costpercapita_u45, 0.002); end
  def test_costpercapita_v45; assert_in_epsilon(43.33720184749591, worksheet.costpercapita_v45, 0.002); end
  def test_costpercapita_w45; assert_in_epsilon(49.068144935682454, worksheet.costpercapita_w45, 0.002); end
  def test_costpercapita_y45; assert_in_delta(0.0, (worksheet.costpercapita_y45||0), 0.002); end
  def test_costpercapita_z45; assert_in_delta(0.0, (worksheet.costpercapita_z45||0), 0.002); end
  def test_costpercapita_aa45; assert_in_delta(0.0, (worksheet.costpercapita_aa45||0), 0.002); end
  def test_costpercapita_ab45; assert_in_delta(0.0, (worksheet.costpercapita_ab45||0), 0.002); end
  def test_costpercapita_ac45; assert_in_delta(0.0, (worksheet.costpercapita_ac45||0), 0.002); end
  def test_costpercapita_ad45; assert_in_delta(0.0, (worksheet.costpercapita_ad45||0), 0.002); end
  def test_costpercapita_ae45; assert_in_delta(0.0, (worksheet.costpercapita_ae45||0), 0.002); end
  def test_costpercapita_af45; assert_in_delta(0.0, (worksheet.costpercapita_af45||0), 0.002); end
  def test_costpercapita_ag45; assert_in_delta(0.0, (worksheet.costpercapita_ag45||0), 0.002); end
  def test_costpercapita_ai45; assert_in_delta(0.0, (worksheet.costpercapita_ai45||0), 0.002); end
  def test_costpercapita_aj45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_aj45, 0.002); end
  def test_costpercapita_ak45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_ak45, 0.002); end
  def test_costpercapita_al45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_al45, 0.002); end
  def test_costpercapita_am45; assert_in_epsilon(56.883922039678325, worksheet.costpercapita_am45, 0.002); end
  def test_costpercapita_an45; assert_in_epsilon(71.00425879240447, worksheet.costpercapita_an45, 0.002); end
  def test_costpercapita_ao45; assert_in_epsilon(85.1245955451306, worksheet.costpercapita_ao45, 0.002); end
  def test_costpercapita_ap45; assert_in_epsilon(99.24493229785675, worksheet.costpercapita_ap45, 0.002); end
  def test_costpercapita_aq45; assert_in_epsilon(112.96269402180911, worksheet.costpercapita_aq45, 0.002); end
  def test_costpercapita_as45; assert_in_epsilon(47.38090308702229, worksheet.costpercapita_as45, 0.002); end
  def test_costpercapita_at45; assert_in_epsilon(751.3681011632527, worksheet.costpercapita_at45, 0.002); end
  def test_costpercapita_av45; assert_in_delta(0.0, (worksheet.costpercapita_av45||0), 0.002); end
  def test_costpercapita_aw45; assert_in_epsilon(5.0, worksheet.costpercapita_aw45, 0.002); end
  def test_costpercapita_ay45; assert_in_delta(0.0, (worksheet.costpercapita_ay45||0), 0.002); end
  def test_costpercapita_az45; assert_in_delta(0.0, (worksheet.costpercapita_az45||0), 0.002); end
  def test_costpercapita_ba45; assert_in_delta(0.0, (worksheet.costpercapita_ba45||0), 0.002); end
  def test_costpercapita_bb45; assert_in_delta(0.0, (worksheet.costpercapita_bb45||0), 0.002); end
  def test_costpercapita_bc45; assert_in_epsilon(88.5618814607241, worksheet.costpercapita_bc45, 0.002); end
  def test_costpercapita_bd45; assert_in_epsilon(110.70235182590513, worksheet.costpercapita_bd45, 0.002); end
  def test_costpercapita_be45; assert_in_epsilon(132.84282219108616, worksheet.costpercapita_be45, 0.002); end
  def test_costpercapita_bf45; assert_in_epsilon(154.98329255626714, worksheet.costpercapita_bf45, 0.002); end
  def test_costpercapita_bg45; assert_in_epsilon(177.1237629214482, worksheet.costpercapita_bg45, 0.002); end
  def test_costpercapita_bi45; assert_in_delta(0.0, (worksheet.costpercapita_bi45||0), 0.002); end
  def test_costpercapita_bj45; assert_in_delta(0.0, (worksheet.costpercapita_bj45||0), 0.002); end
  def test_costpercapita_bk45; assert_in_delta(0.0, (worksheet.costpercapita_bk45||0), 0.002); end
  def test_costpercapita_bl45; assert_in_delta(0.0, (worksheet.costpercapita_bl45||0), 0.002); end
  def test_costpercapita_bm45; assert_in_delta(0.0, (worksheet.costpercapita_bm45||0), 0.002); end
  def test_costpercapita_bn45; assert_in_delta(0.0, (worksheet.costpercapita_bn45||0), 0.002); end
  def test_costpercapita_bo45; assert_in_delta(0.0, (worksheet.costpercapita_bo45||0), 0.002); end
  def test_costpercapita_bp45; assert_in_delta(0.0, (worksheet.costpercapita_bp45||0), 0.002); end
  def test_costpercapita_bq45; assert_in_delta(0.0, (worksheet.costpercapita_bq45||0), 0.002); end
  def test_costpercapita_bs45; assert_in_delta(0.0, (worksheet.costpercapita_bs45||0), 0.002); end
  def test_costpercapita_bt45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_bt45, 0.002); end
  def test_costpercapita_bu45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_bu45, 0.002); end
  def test_costpercapita_bv45; assert_in_delta(0.40257502877376605, worksheet.costpercapita_bv45, 0.002); end
  def test_costpercapita_bw45; assert_in_epsilon(113.49852895733909, worksheet.costpercapita_bw45, 0.002); end
  def test_costpercapita_bx45; assert_in_epsilon(141.77251743948042, worksheet.costpercapita_bx45, 0.002); end
  def test_costpercapita_by45; assert_in_epsilon(170.0465059216218, worksheet.costpercapita_by45, 0.002); end
  def test_costpercapita_bz45; assert_in_epsilon(198.32049440376306, worksheet.costpercapita_bz45, 0.002); end
  def test_costpercapita_ca45; assert_in_epsilon(226.19190785713064, worksheet.costpercapita_ca45, 0.002); end
  def test_costpercapita_cc45; assert_in_epsilon(94.55974218507293, worksheet.costpercapita_cc45, 0.002); end
  def test_costpercapita_cd45; assert_in_epsilon(1496.9688820288068, worksheet.costpercapita_cd45, 0.002); end
  def test_costpercapita_cf45; assert_in_delta(0.0, (worksheet.costpercapita_cf45||0), 0.002); end
  def test_costpercapita_cg45; assert_in_delta(0.0, (worksheet.costpercapita_cg45||0), 0.002); end
  def test_costpercapita_ch45; assert_in_delta(0.0, (worksheet.costpercapita_ch45||0), 0.002); end
  def test_costpercapita_ci45; assert_in_delta(0.0, (worksheet.costpercapita_ci45||0), 0.002); end
  def test_costpercapita_cj45; assert_in_epsilon(56.61460691766076, worksheet.costpercapita_cj45, 0.002); end
  def test_costpercapita_ck45; assert_in_epsilon(70.76825864707595, worksheet.costpercapita_ck45, 0.002); end
  def test_costpercapita_cl45; assert_in_epsilon(84.92191037649116, worksheet.costpercapita_cl45, 0.002); end
  def test_costpercapita_cm45; assert_in_epsilon(99.07556210590631, worksheet.costpercapita_cm45, 0.002); end
  def test_costpercapita_cn45; assert_in_epsilon(113.22921383532152, worksheet.costpercapita_cn45, 0.002); end
  def test_costpercapita_cp45; assert_in_epsilon(47.17883909805063, worksheet.costpercapita_cp45, 0.002); end
  def test_costpercapita_cq45; assert_in_epsilon(745.6007808655539, worksheet.costpercapita_cq45, 0.002); end
  def test_costpercapita_cr45; assert_equal("ok", worksheet.costpercapita_cr45); end
  def test_costpercapita_a46; assert_equal("Therm.b.OCGT", worksheet.costpercapita_a46); end
  def test_costpercapita_b46; assert_equal("OCGT", worksheet.costpercapita_b46); end
  def test_costpercapita_c46; assert_equal("Electricity", worksheet.costpercapita_c46); end
  def test_costpercapita_e46; assert_in_delta(0.0, (worksheet.costpercapita_e46||0), 0.002); end
  def test_costpercapita_f46; assert_in_epsilon(2.5976688736742712, worksheet.costpercapita_f46, 0.002); end
  def test_costpercapita_g46; assert_in_epsilon(4.647789896525044, worksheet.costpercapita_g46, 0.002); end
  def test_costpercapita_h46; assert_in_epsilon(13.14114841976396, worksheet.costpercapita_h46, 0.002); end
  def test_costpercapita_i46; assert_in_epsilon(23.391753534017823, worksheet.costpercapita_i46, 0.002); end
  def test_costpercapita_j46; assert_in_epsilon(23.391753534017823, worksheet.costpercapita_j46, 0.002); end
  def test_costpercapita_k46; assert_in_epsilon(23.391753534017823, worksheet.costpercapita_k46, 0.002); end
  def test_costpercapita_l46; assert_in_epsilon(23.391753534017823, worksheet.costpercapita_l46, 0.002); end
  def test_costpercapita_m46; assert_in_epsilon(23.391753534017823, worksheet.costpercapita_m46, 0.002); end
  def test_costpercapita_o46; assert_in_epsilon(3.1640998352251613, worksheet.costpercapita_o46, 0.002); end
  def test_costpercapita_p46; assert_in_epsilon(4.551351623567192, worksheet.costpercapita_p46, 0.002); end
  def test_costpercapita_q46; assert_in_epsilon(5.646192495739091, worksheet.costpercapita_q46, 0.002); end
  def test_costpercapita_r46; assert_in_epsilon(10.104789428327237, worksheet.costpercapita_r46, 0.002); end
  def test_costpercapita_s46; assert_in_epsilon(15.193127183891013, worksheet.costpercapita_s46, 0.002); end
  def test_costpercapita_t46; assert_in_epsilon(15.193127183891013, worksheet.costpercapita_t46, 0.002); end
  def test_costpercapita_u46; assert_in_epsilon(12.492066348942705, worksheet.costpercapita_u46, 0.002); end
  def test_costpercapita_v46; assert_in_epsilon(12.492066348942705, worksheet.costpercapita_v46, 0.002); end
  def test_costpercapita_w46; assert_in_epsilon(12.492066348942705, worksheet.costpercapita_w46, 0.002); end
  def test_costpercapita_y46; assert_in_delta(0.0, (worksheet.costpercapita_y46||0), 0.002); end
  def test_costpercapita_z46; assert_in_delta(0.0, (worksheet.costpercapita_z46||0), 0.002); end
  def test_costpercapita_aa46; assert_in_delta(0.0, (worksheet.costpercapita_aa46||0), 0.002); end
  def test_costpercapita_ab46; assert_in_delta(0.0, (worksheet.costpercapita_ab46||0), 0.002); end
  def test_costpercapita_ac46; assert_in_delta(0.0, (worksheet.costpercapita_ac46||0), 0.002); end
  def test_costpercapita_ad46; assert_in_delta(0.0, (worksheet.costpercapita_ad46||0), 0.002); end
  def test_costpercapita_ae46; assert_in_delta(0.0, (worksheet.costpercapita_ae46||0), 0.002); end
  def test_costpercapita_af46; assert_in_delta(0.0, (worksheet.costpercapita_af46||0), 0.002); end
  def test_costpercapita_ag46; assert_in_delta(0.0, (worksheet.costpercapita_ag46||0), 0.002); end
  def test_costpercapita_ai46; assert_in_epsilon(3.1640998352251613, worksheet.costpercapita_ai46, 0.002); end
  def test_costpercapita_aj46; assert_in_epsilon(7.149020497241463, worksheet.costpercapita_aj46, 0.002); end
  def test_costpercapita_ak46; assert_in_epsilon(10.293982392264136, worksheet.costpercapita_ak46, 0.002); end
  def test_costpercapita_al46; assert_in_epsilon(23.2459378480912, worksheet.costpercapita_al46, 0.002); end
  def test_costpercapita_am46; assert_in_epsilon(38.58488071790884, worksheet.costpercapita_am46, 0.002); end
  def test_costpercapita_an46; assert_in_epsilon(38.58488071790884, worksheet.costpercapita_an46, 0.002); end
  def test_costpercapita_ao46; assert_in_epsilon(35.88381988296053, worksheet.costpercapita_ao46, 0.002); end
  def test_costpercapita_ap46; assert_in_epsilon(35.88381988296053, worksheet.costpercapita_ap46, 0.002); end
  def test_costpercapita_aq46; assert_in_epsilon(35.88381988296053, worksheet.costpercapita_aq46, 0.002); end
  def test_costpercapita_as46; assert_in_epsilon(25.408251295280134, worksheet.costpercapita_as46, 0.002); end
  def test_costpercapita_at46; assert_in_epsilon(484.34617281914046, worksheet.costpercapita_at46, 0.002); end
  def test_costpercapita_av46; assert_in_delta(0.0, (worksheet.costpercapita_av46||0), 0.002); end
  def test_costpercapita_aw46; assert_in_epsilon(5.0, worksheet.costpercapita_aw46, 0.002); end
  def test_costpercapita_ay46; assert_in_delta(0.0, (worksheet.costpercapita_ay46||0), 0.002); end
  def test_costpercapita_az46; assert_in_epsilon(12.294684554567395, worksheet.costpercapita_az46, 0.002); end
  def test_costpercapita_ba46; assert_in_epsilon(21.997842462828913, worksheet.costpercapita_ba46, 0.002); end
  def test_costpercapita_bb46; assert_in_epsilon(62.19663951134094, worksheet.costpercapita_bb46, 0.002); end
  def test_costpercapita_bc46; assert_in_epsilon(110.71242905264855, worksheet.costpercapita_bc46, 0.002); end
  def test_costpercapita_bd46; assert_in_epsilon(110.71242905264855, worksheet.costpercapita_bd46, 0.002); end
  def test_costpercapita_be46; assert_in_epsilon(110.71242905264855, worksheet.costpercapita_be46, 0.002); end
  def test_costpercapita_bf46; assert_in_epsilon(110.71242905264855, worksheet.costpercapita_bf46, 0.002); end
  def test_costpercapita_bg46; assert_in_epsilon(110.71242905264855, worksheet.costpercapita_bg46, 0.002); end
  def test_costpercapita_bi46; assert_in_delta(0.0, (worksheet.costpercapita_bi46||0), 0.002); end
  def test_costpercapita_bj46; assert_in_delta(0.0, (worksheet.costpercapita_bj46||0), 0.002); end
  def test_costpercapita_bk46; assert_in_delta(0.0, (worksheet.costpercapita_bk46||0), 0.002); end
  def test_costpercapita_bl46; assert_in_delta(0.0, (worksheet.costpercapita_bl46||0), 0.002); end
  def test_costpercapita_bm46; assert_in_delta(0.0, (worksheet.costpercapita_bm46||0), 0.002); end
  def test_costpercapita_bn46; assert_in_delta(0.0, (worksheet.costpercapita_bn46||0), 0.002); end
  def test_costpercapita_bo46; assert_in_delta(0.0, (worksheet.costpercapita_bo46||0), 0.002); end
  def test_costpercapita_bp46; assert_in_delta(0.0, (worksheet.costpercapita_bp46||0), 0.002); end
  def test_costpercapita_bq46; assert_in_delta(0.0, (worksheet.costpercapita_bq46||0), 0.002); end
  def test_costpercapita_bs46; assert_in_epsilon(3.1640998352251613, worksheet.costpercapita_bs46, 0.002); end
  def test_costpercapita_bt46; assert_in_epsilon(16.84603617813459, worksheet.costpercapita_bt46, 0.002); end
  def test_costpercapita_bu46; assert_in_epsilon(27.644034958568003, worksheet.costpercapita_bu46, 0.002); end
  def test_costpercapita_bv46; assert_in_epsilon(72.30142893966818, worksheet.costpercapita_bv46, 0.002); end
  def test_costpercapita_bw46; assert_in_epsilon(125.90555623653957, worksheet.costpercapita_bw46, 0.002); end
  def test_costpercapita_bx46; assert_in_epsilon(125.90555623653957, worksheet.costpercapita_bx46, 0.002); end
  def test_costpercapita_by46; assert_in_epsilon(123.20449540159126, worksheet.costpercapita_by46, 0.002); end
  def test_costpercapita_bz46; assert_in_epsilon(123.20449540159126, worksheet.costpercapita_bz46, 0.002); end
  def test_costpercapita_ca46; assert_in_epsilon(123.20449540159126, worksheet.costpercapita_ca46, 0.002); end
  def test_costpercapita_cc46; assert_in_epsilon(82.37557762104987, worksheet.costpercapita_cc46, 0.002); end
  def test_costpercapita_cd46; assert_in_epsilon(1542.7201307056139, worksheet.costpercapita_cd46, 0.002); end
  def test_costpercapita_cf46; assert_in_delta(0.0, (worksheet.costpercapita_cf46||0), 0.002); end
  def test_costpercapita_cg46; assert_in_epsilon(9.697015680893125, worksheet.costpercapita_cg46, 0.002); end
  def test_costpercapita_ch46; assert_in_epsilon(17.35005256630387, worksheet.costpercapita_ch46, 0.002); end
  def test_costpercapita_ci46; assert_in_epsilon(49.05549109157698, worksheet.costpercapita_ci46, 0.002); end
  def test_costpercapita_cj46; assert_in_epsilon(87.32067551863072, worksheet.costpercapita_cj46, 0.002); end
  def test_costpercapita_ck46; assert_in_epsilon(87.32067551863072, worksheet.costpercapita_ck46, 0.002); end
  def test_costpercapita_cl46; assert_in_epsilon(87.32067551863072, worksheet.costpercapita_cl46, 0.002); end
  def test_costpercapita_cm46; assert_in_epsilon(87.32067551863072, worksheet.costpercapita_cm46, 0.002); end
  def test_costpercapita_cn46; assert_in_epsilon(87.32067551863072, worksheet.costpercapita_cn46, 0.002); end
  def test_costpercapita_cp46; assert_in_epsilon(56.96732632576973, worksheet.costpercapita_cp46, 0.002); end
  def test_costpercapita_cq46; assert_in_epsilon(1058.3739578864734, worksheet.costpercapita_cq46, 0.002); end
  def test_costpercapita_cr46; assert_equal("ok", worksheet.costpercapita_cr46); end
  def test_costpercapita_a47; assert_equal("RE.a", worksheet.costpercapita_a47); end
  def test_costpercapita_b47; assert_equal("Onshore wind", worksheet.costpercapita_b47); end
  def test_costpercapita_c47; assert_equal("Electricity", worksheet.costpercapita_c47); end
  def test_costpercapita_e47; assert_in_delta(0.033775440829615526, worksheet.costpercapita_e47, 0.002); end
  def test_costpercapita_f47; assert_in_epsilon(4.8373100047886695, worksheet.costpercapita_f47, 0.002); end
  def test_costpercapita_g47; assert_in_epsilon(43.99934208345663, worksheet.costpercapita_g47, 0.002); end
  def test_costpercapita_h47; assert_in_epsilon(72.57074337466833, worksheet.costpercapita_h47, 0.002); end
  def test_costpercapita_i47; assert_in_epsilon(105.9548642656167, worksheet.costpercapita_i47, 0.002); end
  def test_costpercapita_j47; assert_in_epsilon(110.36965027668408, worksheet.costpercapita_j47, 0.002); end
  def test_costpercapita_k47; assert_in_epsilon(132.4435803320209, worksheet.costpercapita_k47, 0.002); end
  def test_costpercapita_l47; assert_in_epsilon(154.5175103873577, worksheet.costpercapita_l47, 0.002); end
  def test_costpercapita_m47; assert_in_epsilon(176.59144044269453, worksheet.costpercapita_m47, 0.002); end
  def test_costpercapita_o47; assert_in_delta(0.012097706026837164, worksheet.costpercapita_o47, 0.002); end
  def test_costpercapita_p47; assert_in_epsilon(1.8948786620702502, worksheet.costpercapita_p47, 0.002); end
  def test_costpercapita_q47; assert_in_epsilon(17.663651361334857, worksheet.costpercapita_q47, 0.002); end
  def test_costpercapita_r47; assert_in_epsilon(29.499197700528928, worksheet.costpercapita_r47, 0.002); end
  def test_costpercapita_s47; assert_in_epsilon(43.412820670468285, worksheet.costpercapita_s47, 0.002); end
  def test_costpercapita_t47; assert_in_epsilon(45.221688198404465, worksheet.costpercapita_t47, 0.002); end
  def test_costpercapita_u47; assert_in_epsilon(54.266025838085355, worksheet.costpercapita_u47, 0.002); end
  def test_costpercapita_v47; assert_in_epsilon(63.31036347776625, worksheet.costpercapita_v47, 0.002); end
  def test_costpercapita_w47; assert_in_epsilon(72.35470111744714, worksheet.costpercapita_w47, 0.002); end
  def test_costpercapita_y47; assert_in_delta(0.0, (worksheet.costpercapita_y47||0), 0.002); end
  def test_costpercapita_z47; assert_in_delta(0.0, (worksheet.costpercapita_z47||0), 0.002); end
  def test_costpercapita_aa47; assert_in_delta(0.0, (worksheet.costpercapita_aa47||0), 0.002); end
  def test_costpercapita_ab47; assert_in_delta(0.0, (worksheet.costpercapita_ab47||0), 0.002); end
  def test_costpercapita_ac47; assert_in_delta(0.0, (worksheet.costpercapita_ac47||0), 0.002); end
  def test_costpercapita_ad47; assert_in_delta(0.0, (worksheet.costpercapita_ad47||0), 0.002); end
  def test_costpercapita_ae47; assert_in_delta(0.0, (worksheet.costpercapita_ae47||0), 0.002); end
  def test_costpercapita_af47; assert_in_delta(0.0, (worksheet.costpercapita_af47||0), 0.002); end
  def test_costpercapita_ag47; assert_in_delta(0.0, (worksheet.costpercapita_ag47||0), 0.002); end
  def test_costpercapita_ai47; assert_in_delta(0.04587314685645268, worksheet.costpercapita_ai47, 0.002); end
  def test_costpercapita_aj47; assert_in_epsilon(6.73218866685892, worksheet.costpercapita_aj47, 0.002); end
  def test_costpercapita_ak47; assert_in_epsilon(61.66299344479149, worksheet.costpercapita_ak47, 0.002); end
  def test_costpercapita_al47; assert_in_epsilon(102.06994107519724, worksheet.costpercapita_al47, 0.002); end
  def test_costpercapita_am47; assert_in_epsilon(149.367684936085, worksheet.costpercapita_am47, 0.002); end
  def test_costpercapita_an47; assert_in_epsilon(155.59133847508855, worksheet.costpercapita_an47, 0.002); end
  def test_costpercapita_ao47; assert_in_epsilon(186.70960617010627, worksheet.costpercapita_ao47, 0.002); end
  def test_costpercapita_ap47; assert_in_epsilon(217.82787386512396, worksheet.costpercapita_ap47, 0.002); end
  def test_costpercapita_aq47; assert_in_epsilon(248.94614156014168, worksheet.costpercapita_aq47, 0.002); end
  def test_costpercapita_as47; assert_in_epsilon(125.43929348224995, worksheet.costpercapita_as47, 0.002); end
  def test_costpercapita_at47; assert_in_epsilon(2253.4170935077505, worksheet.costpercapita_at47, 0.002); end
  def test_costpercapita_av47; assert_in_delta(0.0, (worksheet.costpercapita_av47||0), 0.002); end
  def test_costpercapita_aw47; assert_in_epsilon(5.0, worksheet.costpercapita_aw47, 0.002); end
  def test_costpercapita_ay47; assert_in_delta(0.07061461515891192, worksheet.costpercapita_ay47, 0.002); end
  def test_costpercapita_az47; assert_in_epsilon(10.113407138508533, worksheet.costpercapita_az47, 0.002); end
  def test_costpercapita_ba47; assert_in_epsilon(91.98981662866353, worksheet.costpercapita_ba47, 0.002); end
  def test_costpercapita_bb47; assert_in_epsilon(151.72429994473873, worksheet.costpercapita_bb47, 0.002); end
  def test_costpercapita_bc47; assert_in_epsilon(221.5207790203235, worksheet.costpercapita_bc47, 0.002); end
  def test_costpercapita_bd47; assert_in_epsilon(230.75081147950365, worksheet.costpercapita_bd47, 0.002); end
  def test_costpercapita_be47; assert_in_epsilon(276.90097377540434, worksheet.costpercapita_be47, 0.002); end
  def test_costpercapita_bf47; assert_in_epsilon(323.0511360713051, worksheet.costpercapita_bf47, 0.002); end
  def test_costpercapita_bg47; assert_in_epsilon(369.2012983672059, worksheet.costpercapita_bg47, 0.002); end
  def test_costpercapita_bi47; assert_in_delta(0.0, (worksheet.costpercapita_bi47||0), 0.002); end
  def test_costpercapita_bj47; assert_in_delta(0.0, (worksheet.costpercapita_bj47||0), 0.002); end
  def test_costpercapita_bk47; assert_in_delta(0.0, (worksheet.costpercapita_bk47||0), 0.002); end
  def test_costpercapita_bl47; assert_in_delta(0.0, (worksheet.costpercapita_bl47||0), 0.002); end
  def test_costpercapita_bm47; assert_in_delta(0.0, (worksheet.costpercapita_bm47||0), 0.002); end
  def test_costpercapita_bn47; assert_in_delta(0.0, (worksheet.costpercapita_bn47||0), 0.002); end
  def test_costpercapita_bo47; assert_in_delta(0.0, (worksheet.costpercapita_bo47||0), 0.002); end
  def test_costpercapita_bp47; assert_in_delta(0.0, (worksheet.costpercapita_bp47||0), 0.002); end
  def test_costpercapita_bq47; assert_in_delta(0.0, (worksheet.costpercapita_bq47||0), 0.002); end
  def test_costpercapita_bs47; assert_in_delta(0.08271232118574909, worksheet.costpercapita_bs47, 0.002); end
  def test_costpercapita_bt47; assert_in_epsilon(12.008285800578783, worksheet.costpercapita_bt47, 0.002); end
  def test_costpercapita_bu47; assert_in_epsilon(109.65346798999839, worksheet.costpercapita_bu47, 0.002); end
  def test_costpercapita_bv47; assert_in_epsilon(181.22349764526766, worksheet.costpercapita_bv47, 0.002); end
  def test_costpercapita_bw47; assert_in_epsilon(264.93359969079177, worksheet.costpercapita_bw47, 0.002); end
  def test_costpercapita_bx47; assert_in_epsilon(275.9724996779081, worksheet.costpercapita_bx47, 0.002); end
  def test_costpercapita_by47; assert_in_epsilon(331.16699961348974, worksheet.costpercapita_by47, 0.002); end
  def test_costpercapita_bz47; assert_in_epsilon(386.36149954907137, worksheet.costpercapita_bz47, 0.002); end
  def test_costpercapita_ca47; assert_in_epsilon(441.555999484653, worksheet.costpercapita_ca47, 0.002); end
  def test_costpercapita_cc47; assert_in_epsilon(222.55095130810497, worksheet.costpercapita_cc47, 0.002); end
  def test_costpercapita_cd47; assert_in_epsilon(3998.7147868963684, worksheet.costpercapita_cd47, 0.002); end
  def test_costpercapita_cf47; assert_in_delta(0.0368391743292964, worksheet.costpercapita_cf47, 0.002); end
  def test_costpercapita_cg47; assert_in_epsilon(5.276097133719864, worksheet.costpercapita_cg47, 0.002); end
  def test_costpercapita_ch47; assert_in_epsilon(47.9904745452069, worksheet.costpercapita_ch47, 0.002); end
  def test_costpercapita_ci47; assert_in_epsilon(79.15355657007042, worksheet.costpercapita_ci47, 0.002); end
  def test_costpercapita_cj47; assert_in_epsilon(115.5659147547068, worksheet.costpercapita_cj47, 0.002); end
  def test_costpercapita_ck47; assert_in_epsilon(120.38116120281957, worksheet.costpercapita_ck47, 0.002); end
  def test_costpercapita_cl47; assert_in_epsilon(144.45739344338347, worksheet.costpercapita_cl47, 0.002); end
  def test_costpercapita_cm47; assert_in_epsilon(168.5336256839474, worksheet.costpercapita_cm47, 0.002); end
  def test_costpercapita_cn47; assert_in_epsilon(192.60985792451132, worksheet.costpercapita_cn47, 0.002); end
  def test_costpercapita_cp47; assert_in_epsilon(97.111657825855, worksheet.costpercapita_cp47, 0.002); end
  def test_costpercapita_cq47; assert_in_epsilon(1745.2976933886184, worksheet.costpercapita_cq47, 0.002); end
  def test_costpercapita_cr47; assert_equal("ok", worksheet.costpercapita_cr47); end
  def test_costpercapita_a48; assert_equal("RE.b", worksheet.costpercapita_a48); end
  def test_costpercapita_b48; assert_equal("Hydroelectric", worksheet.costpercapita_b48); end
  def test_costpercapita_c48; assert_equal("Electricity", worksheet.costpercapita_c48); end
  def test_costpercapita_e48; assert_in_delta(0.0, (worksheet.costpercapita_e48||0), 0.002); end
  def test_costpercapita_f48; assert_in_delta(0.0, (worksheet.costpercapita_f48||0), 0.002); end
  def test_costpercapita_g48; assert_in_delta(0.0, (worksheet.costpercapita_g48||0), 0.002); end
  def test_costpercapita_h48; assert_in_epsilon(8.49210861132055, worksheet.costpercapita_h48, 0.002); end
  def test_costpercapita_i48; assert_in_epsilon(15.839784341176822, worksheet.costpercapita_i48, 0.002); end
  def test_costpercapita_j48; assert_in_epsilon(23.18746007103309, worksheet.costpercapita_j48, 0.002); end
  def test_costpercapita_k48; assert_in_epsilon(30.53513580088936, worksheet.costpercapita_k48, 0.002); end
  def test_costpercapita_l48; assert_in_epsilon(37.88281153074563, worksheet.costpercapita_l48, 0.002); end
  def test_costpercapita_m48; assert_in_epsilon(45.23048726060191, worksheet.costpercapita_m48, 0.002); end
  def test_costpercapita_o48; assert_in_delta(0.0, (worksheet.costpercapita_o48||0), 0.002); end
  def test_costpercapita_p48; assert_in_delta(0.0, (worksheet.costpercapita_p48||0), 0.002); end
  def test_costpercapita_q48; assert_in_delta(0.0, (worksheet.costpercapita_q48||0), 0.002); end
  def test_costpercapita_r48; assert_in_epsilon(12.289178782015286, worksheet.costpercapita_r48, 0.002); end
  def test_costpercapita_s48; assert_in_epsilon(22.922215264392175, worksheet.costpercapita_s48, 0.002); end
  def test_costpercapita_t48; assert_in_epsilon(33.555251746769066, worksheet.costpercapita_t48, 0.002); end
  def test_costpercapita_u48; assert_in_epsilon(44.18828822914595, worksheet.costpercapita_u48, 0.002); end
  def test_costpercapita_v48; assert_in_epsilon(54.82132471152284, worksheet.costpercapita_v48, 0.002); end
  def test_costpercapita_w48; assert_in_epsilon(65.45436119389974, worksheet.costpercapita_w48, 0.002); end
  def test_costpercapita_y48; assert_in_delta(0.0, (worksheet.costpercapita_y48||0), 0.002); end
  def test_costpercapita_z48; assert_in_delta(0.0, (worksheet.costpercapita_z48||0), 0.002); end
  def test_costpercapita_aa48; assert_in_delta(0.0, (worksheet.costpercapita_aa48||0), 0.002); end
  def test_costpercapita_ab48; assert_in_delta(0.0, (worksheet.costpercapita_ab48||0), 0.002); end
  def test_costpercapita_ac48; assert_in_delta(0.0, (worksheet.costpercapita_ac48||0), 0.002); end
  def test_costpercapita_ad48; assert_in_delta(0.0, (worksheet.costpercapita_ad48||0), 0.002); end
  def test_costpercapita_ae48; assert_in_delta(0.0, (worksheet.costpercapita_ae48||0), 0.002); end
  def test_costpercapita_af48; assert_in_delta(0.0, (worksheet.costpercapita_af48||0), 0.002); end
  def test_costpercapita_ag48; assert_in_delta(0.0, (worksheet.costpercapita_ag48||0), 0.002); end
  def test_costpercapita_ai48; assert_in_delta(0.0, (worksheet.costpercapita_ai48||0), 0.002); end
  def test_costpercapita_aj48; assert_in_delta(0.0, (worksheet.costpercapita_aj48||0), 0.002); end
  def test_costpercapita_ak48; assert_in_delta(0.0, (worksheet.costpercapita_ak48||0), 0.002); end
  def test_costpercapita_al48; assert_in_epsilon(20.781287393335834, worksheet.costpercapita_al48, 0.002); end
  def test_costpercapita_am48; assert_in_epsilon(38.761999605568995, worksheet.costpercapita_am48, 0.002); end
  def test_costpercapita_an48; assert_in_epsilon(56.74271181780215, worksheet.costpercapita_an48, 0.002); end
  def test_costpercapita_ao48; assert_in_epsilon(74.72342403003532, worksheet.costpercapita_ao48, 0.002); end
  def test_costpercapita_ap48; assert_in_epsilon(92.70413624226848, worksheet.costpercapita_ap48, 0.002); end
  def test_costpercapita_aq48; assert_in_epsilon(110.68484845450163, worksheet.costpercapita_aq48, 0.002); end
  def test_costpercapita_as48; assert_in_epsilon(43.82204528261249, worksheet.costpercapita_as48, 0.002); end
  def test_costpercapita_at48; assert_in_epsilon(701.7559284062033, worksheet.costpercapita_at48, 0.002); end
  def test_costpercapita_av48; assert_in_delta(0.0, (worksheet.costpercapita_av48||0), 0.002); end
  def test_costpercapita_aw48; assert_in_epsilon(5.0, worksheet.costpercapita_aw48, 0.002); end
  def test_costpercapita_ay48; assert_in_delta(0.0, (worksheet.costpercapita_ay48||0), 0.002); end
  def test_costpercapita_az48; assert_in_delta(0.0, (worksheet.costpercapita_az48||0), 0.002); end
  def test_costpercapita_ba48; assert_in_delta(0.0, (worksheet.costpercapita_ba48||0), 0.002); end
  def test_costpercapita_bb48; assert_in_epsilon(41.61548919374897, worksheet.costpercapita_bb48, 0.002); end
  def test_costpercapita_bc48; assert_in_epsilon(77.62269705345341, worksheet.costpercapita_bc48, 0.002); end
  def test_costpercapita_bd48; assert_in_epsilon(113.62990491315786, worksheet.costpercapita_bd48, 0.002); end
  def test_costpercapita_be48; assert_in_epsilon(149.63711277286234, worksheet.costpercapita_be48, 0.002); end
  def test_costpercapita_bf48; assert_in_epsilon(185.64432063256672, worksheet.costpercapita_bf48, 0.002); end
  def test_costpercapita_bg48; assert_in_epsilon(221.65152849227124, worksheet.costpercapita_bg48, 0.002); end
  def test_costpercapita_bi48; assert_in_delta(0.0, (worksheet.costpercapita_bi48||0), 0.002); end
  def test_costpercapita_bj48; assert_in_delta(0.0, (worksheet.costpercapita_bj48||0), 0.002); end
  def test_costpercapita_bk48; assert_in_delta(0.0, (worksheet.costpercapita_bk48||0), 0.002); end
  def test_costpercapita_bl48; assert_in_delta(0.0, (worksheet.costpercapita_bl48||0), 0.002); end
  def test_costpercapita_bm48; assert_in_delta(0.0, (worksheet.costpercapita_bm48||0), 0.002); end
  def test_costpercapita_bn48; assert_in_delta(0.0, (worksheet.costpercapita_bn48||0), 0.002); end
  def test_costpercapita_bo48; assert_in_delta(0.0, (worksheet.costpercapita_bo48||0), 0.002); end
  def test_costpercapita_bp48; assert_in_delta(0.0, (worksheet.costpercapita_bp48||0), 0.002); end
  def test_costpercapita_bq48; assert_in_delta(0.0, (worksheet.costpercapita_bq48||0), 0.002); end
  def test_costpercapita_bs48; assert_in_delta(0.0, (worksheet.costpercapita_bs48||0), 0.002); end
  def test_costpercapita_bt48; assert_in_delta(0.0, (worksheet.costpercapita_bt48||0), 0.002); end
  def test_costpercapita_bu48; assert_in_delta(0.0, (worksheet.costpercapita_bu48||0), 0.002); end
  def test_costpercapita_bv48; assert_in_epsilon(53.904667975764255, worksheet.costpercapita_bv48, 0.002); end
  def test_costpercapita_bw48; assert_in_epsilon(100.54491231784559, worksheet.costpercapita_bw48, 0.002); end
  def test_costpercapita_bx48; assert_in_epsilon(147.18515665992692, worksheet.costpercapita_bx48, 0.002); end
  def test_costpercapita_by48; assert_in_epsilon(193.82540100200828, worksheet.costpercapita_by48, 0.002); end
  def test_costpercapita_bz48; assert_in_epsilon(240.46564534408958, worksheet.costpercapita_bz48, 0.002); end
  def test_costpercapita_ca48; assert_in_epsilon(287.105889686171, worksheet.costpercapita_ca48, 0.002); end
  def test_costpercapita_cc48; assert_in_epsilon(113.67018588731172, worksheet.costpercapita_cc48, 0.002); end
  def test_costpercapita_cd48; assert_in_epsilon(1820.2876272665994, worksheet.costpercapita_cd48, 0.002); end
  def test_costpercapita_cf48; assert_in_delta(0.0, (worksheet.costpercapita_cf48||0), 0.002); end
  def test_costpercapita_cg48; assert_in_delta(0.0, (worksheet.costpercapita_cg48||0), 0.002); end
  def test_costpercapita_ch48; assert_in_delta(0.0, (worksheet.costpercapita_ch48||0), 0.002); end
  def test_costpercapita_ci48; assert_in_epsilon(33.12338058242842, worksheet.costpercapita_ci48, 0.002); end
  def test_costpercapita_cj48; assert_in_epsilon(61.78291271227659, worksheet.costpercapita_cj48, 0.002); end
  def test_costpercapita_ck48; assert_in_epsilon(90.44244484212477, worksheet.costpercapita_ck48, 0.002); end
  def test_costpercapita_cl48; assert_in_epsilon(119.10197697197297, worksheet.costpercapita_cl48, 0.002); end
  def test_costpercapita_cm48; assert_in_epsilon(147.76150910182108, worksheet.costpercapita_cm48, 0.002); end
  def test_costpercapita_cn48; assert_in_epsilon(176.42104123166934, worksheet.costpercapita_cn48, 0.002); end
  def test_costpercapita_cp48; assert_in_epsilon(69.84814060469924, worksheet.costpercapita_cp48, 0.002); end
  def test_costpercapita_cq48; assert_in_epsilon(1118.5316988603959, worksheet.costpercapita_cq48, 0.002); end
  def test_costpercapita_cr48; assert_equal("ok", worksheet.costpercapita_cr48); end
  def test_costpercapita_a49; assert_equal("RE.c", worksheet.costpercapita_a49); end
  def test_costpercapita_b49; assert_equal("CSP", worksheet.costpercapita_b49); end
  def test_costpercapita_c49; assert_equal("Electricity", worksheet.costpercapita_c49); end
  def test_costpercapita_e49; assert_in_delta(0.0, (worksheet.costpercapita_e49||0), 0.002); end
  def test_costpercapita_f49; assert_in_epsilon(1.3384032255465612, worksheet.costpercapita_f49, 0.002); end
  def test_costpercapita_g49; assert_in_epsilon(330.47772843563763, worksheet.costpercapita_g49, 0.002); end
  def test_costpercapita_h49; assert_in_epsilon(623.0615061341707, worksheet.costpercapita_h49, 0.002); end
  def test_costpercapita_i49; assert_in_epsilon(900.8216105605889, worksheet.costpercapita_i49, 0.002); end
  def test_costpercapita_j49; assert_in_epsilon(1126.0270132007358, worksheet.costpercapita_j49, 0.002); end
  def test_costpercapita_k49; assert_in_epsilon(1351.232415840883, worksheet.costpercapita_k49, 0.002); end
  def test_costpercapita_l49; assert_in_epsilon(1576.4378184810303, worksheet.costpercapita_l49, 0.002); end
  def test_costpercapita_m49; assert_in_epsilon(1801.6432211211777, worksheet.costpercapita_m49, 0.002); end
  def test_costpercapita_o49; assert_in_delta(0.0, (worksheet.costpercapita_o49||0), 0.002); end
  def test_costpercapita_p49; assert_in_delta(0.6579245613828018, worksheet.costpercapita_p49, 0.002); end
  def test_costpercapita_q49; assert_in_epsilon(200.59388849271198, worksheet.costpercapita_q49, 0.002); end
  def test_costpercapita_r49; assert_in_epsilon(400.5298524240412, worksheet.costpercapita_r49, 0.002); end
  def test_costpercapita_s49; assert_in_epsilon(600.4658163553704, worksheet.costpercapita_s49, 0.002); end
  def test_costpercapita_t49; assert_in_epsilon(750.582270444213, worksheet.costpercapita_t49, 0.002); end
  def test_costpercapita_u49; assert_in_epsilon(900.6987245330556, worksheet.costpercapita_u49, 0.002); end
  def test_costpercapita_v49; assert_in_epsilon(1050.8151786218982, worksheet.costpercapita_v49, 0.002); end
  def test_costpercapita_w49; assert_in_epsilon(1200.9316327107408, worksheet.costpercapita_w49, 0.002); end
  def test_costpercapita_y49; assert_in_delta(0.0, (worksheet.costpercapita_y49||0), 0.002); end
  def test_costpercapita_z49; assert_in_delta(0.0, (worksheet.costpercapita_z49||0), 0.002); end
  def test_costpercapita_aa49; assert_in_delta(0.0, (worksheet.costpercapita_aa49||0), 0.002); end
  def test_costpercapita_ab49; assert_in_delta(0.0, (worksheet.costpercapita_ab49||0), 0.002); end
  def test_costpercapita_ac49; assert_in_delta(0.0, (worksheet.costpercapita_ac49||0), 0.002); end
  def test_costpercapita_ad49; assert_in_delta(0.0, (worksheet.costpercapita_ad49||0), 0.002); end
  def test_costpercapita_ae49; assert_in_delta(0.0, (worksheet.costpercapita_ae49||0), 0.002); end
  def test_costpercapita_af49; assert_in_delta(0.0, (worksheet.costpercapita_af49||0), 0.002); end
  def test_costpercapita_ag49; assert_in_delta(0.0, (worksheet.costpercapita_ag49||0), 0.002); end
  def test_costpercapita_ai49; assert_in_delta(0.0, (worksheet.costpercapita_ai49||0), 0.002); end
  def test_costpercapita_aj49; assert_in_epsilon(1.996327786929363, worksheet.costpercapita_aj49, 0.002); end
  def test_costpercapita_ak49; assert_in_epsilon(531.0716169283496, worksheet.costpercapita_ak49, 0.002); end
  def test_costpercapita_al49; assert_in_epsilon(1023.5913585582119, worksheet.costpercapita_al49, 0.002); end
  def test_costpercapita_am49; assert_in_epsilon(1501.2874269159593, worksheet.costpercapita_am49, 0.002); end
  def test_costpercapita_an49; assert_in_epsilon(1876.609283644949, worksheet.costpercapita_an49, 0.002); end
  def test_costpercapita_ao49; assert_in_epsilon(2251.931140373939, worksheet.costpercapita_ao49, 0.002); end
  def test_costpercapita_ap49; assert_in_epsilon(2627.2529971029285, worksheet.costpercapita_ap49, 0.002); end
  def test_costpercapita_aq49; assert_in_epsilon(3002.5748538319185, worksheet.costpercapita_aq49, 0.002); end
  def test_costpercapita_as49; assert_in_epsilon(1424.0350005714652, worksheet.costpercapita_as49, 0.002); end
  def test_costpercapita_at49; assert_in_epsilon(24717.29294958325, worksheet.costpercapita_at49, 0.002); end
  def test_costpercapita_av49; assert_in_delta(0.0, (worksheet.costpercapita_av49||0), 0.002); end
  def test_costpercapita_aw49; assert_in_epsilon(5.0, worksheet.costpercapita_aw49, 0.002); end
  def test_costpercapita_ay49; assert_in_delta(0.0, (worksheet.costpercapita_ay49||0), 0.002); end
  def test_costpercapita_az49; assert_in_epsilon(3.7102228438213327, worksheet.costpercapita_az49, 0.002); end
  def test_costpercapita_ba49; assert_in_epsilon(916.1260179385526, worksheet.costpercapita_ba49, 0.002); end
  def test_costpercapita_bb49; assert_in_epsilon(1727.2052166645838, worksheet.costpercapita_bb49, 0.002); end
  def test_costpercapita_bc49; assert_in_epsilon(2497.1913201605994, worksheet.costpercapita_bc49, 0.002); end
  def test_costpercapita_bd49; assert_in_epsilon(3121.4891502007486, worksheet.costpercapita_bd49, 0.002); end
  def test_costpercapita_be49; assert_in_epsilon(3745.786980240898, worksheet.costpercapita_be49, 0.002); end
  def test_costpercapita_bf49; assert_in_epsilon(4370.084810281048, worksheet.costpercapita_bf49, 0.002); end
  def test_costpercapita_bg49; assert_in_epsilon(4994.382640321199, worksheet.costpercapita_bg49, 0.002); end
  def test_costpercapita_bi49; assert_in_delta(0.0, (worksheet.costpercapita_bi49||0), 0.002); end
  def test_costpercapita_bj49; assert_in_delta(0.0, (worksheet.costpercapita_bj49||0), 0.002); end
  def test_costpercapita_bk49; assert_in_delta(0.0, (worksheet.costpercapita_bk49||0), 0.002); end
  def test_costpercapita_bl49; assert_in_delta(0.0, (worksheet.costpercapita_bl49||0), 0.002); end
  def test_costpercapita_bm49; assert_in_delta(0.0, (worksheet.costpercapita_bm49||0), 0.002); end
  def test_costpercapita_bn49; assert_in_delta(0.0, (worksheet.costpercapita_bn49||0), 0.002); end
  def test_costpercapita_bo49; assert_in_delta(0.0, (worksheet.costpercapita_bo49||0), 0.002); end
  def test_costpercapita_bp49; assert_in_delta(0.0, (worksheet.costpercapita_bp49||0), 0.002); end
  def test_costpercapita_bq49; assert_in_delta(0.0, (worksheet.costpercapita_bq49||0), 0.002); end
  def test_costpercapita_bs49; assert_in_delta(0.0, (worksheet.costpercapita_bs49||0), 0.002); end
  def test_costpercapita_bt49; assert_in_epsilon(4.368147405204135, worksheet.costpercapita_bt49, 0.002); end
  def test_costpercapita_bu49; assert_in_epsilon(1116.7199064312647, worksheet.costpercapita_bu49, 0.002); end
  def test_costpercapita_bv49; assert_in_epsilon(2127.735069088625, worksheet.costpercapita_bv49, 0.002); end
  def test_costpercapita_bw49; assert_in_epsilon(3097.6571365159693, worksheet.costpercapita_bw49, 0.002); end
  def test_costpercapita_bx49; assert_in_epsilon(3872.0714206449616, worksheet.costpercapita_bx49, 0.002); end
  def test_costpercapita_by49; assert_in_epsilon(4646.485704773953, worksheet.costpercapita_by49, 0.002); end
  def test_costpercapita_bz49; assert_in_epsilon(5420.899988902946, worksheet.costpercapita_bz49, 0.002); end
  def test_costpercapita_ca49; assert_in_epsilon(6195.314273031939, worksheet.costpercapita_ca49, 0.002); end
  def test_costpercapita_cc49; assert_in_epsilon(2942.3612940883177, worksheet.costpercapita_cc49, 0.002); end
  def test_costpercapita_cd49; assert_in_epsilon(51122.23437053901, worksheet.costpercapita_cd49, 0.002); end
  def test_costpercapita_cf49; assert_in_delta(0.0, (worksheet.costpercapita_cf49||0), 0.002); end
  def test_costpercapita_cg49; assert_in_epsilon(2.3718196182747713, worksheet.costpercapita_cg49, 0.002); end
  def test_costpercapita_ch49; assert_in_epsilon(585.6482895029151, worksheet.costpercapita_ch49, 0.002); end
  def test_costpercapita_ci49; assert_in_epsilon(1104.143710530413, worksheet.costpercapita_ci49, 0.002); end
  def test_costpercapita_cj49; assert_in_epsilon(1596.3697096000103, worksheet.costpercapita_cj49, 0.002); end
  def test_costpercapita_ck49; assert_in_epsilon(1995.4621370000127, worksheet.costpercapita_ck49, 0.002); end
  def test_costpercapita_cl49; assert_in_epsilon(2394.554564400015, worksheet.costpercapita_cl49, 0.002); end
  def test_costpercapita_cm49; assert_in_epsilon(2793.646991800018, worksheet.costpercapita_cm49, 0.002); end
  def test_costpercapita_cn49; assert_in_epsilon(3192.7394192000206, worksheet.costpercapita_cn49, 0.002); end
  def test_costpercapita_cp49; assert_in_epsilon(1518.3262935168532, worksheet.costpercapita_cp49, 0.002); end
  def test_costpercapita_cq49; assert_in_epsilon(26404.94142095576, worksheet.costpercapita_cq49, 0.002); end
  def test_costpercapita_cr49; assert_equal("ok", worksheet.costpercapita_cr49); end
  def test_costpercapita_a50; assert_equal("RE.d", worksheet.costpercapita_a50); end
  def test_costpercapita_b50; assert_equal("Decentralized PV", worksheet.costpercapita_b50); end
  def test_costpercapita_c50; assert_equal("Electricity", worksheet.costpercapita_c50); end
  def test_costpercapita_e50; assert_in_delta(0.3382177619391267, worksheet.costpercapita_e50, 0.002); end
  def test_costpercapita_f50; assert_in_epsilon(3.300217536452029, worksheet.costpercapita_f50, 0.002); end
  def test_costpercapita_g50; assert_in_epsilon(13.450207044495079, worksheet.costpercapita_g50, 0.002); end
  def test_costpercapita_h50; assert_in_epsilon(32.873902782920865, worksheet.costpercapita_h50, 0.002); end
  def test_costpercapita_i50; assert_in_epsilon(54.13928293687756, worksheet.costpercapita_i50, 0.002); end
  def test_costpercapita_j50; assert_in_epsilon(78.59531026210891, worksheet.costpercapita_j50, 0.002); end
  def test_costpercapita_k50; assert_in_epsilon(98.5335937735268, worksheet.costpercapita_k50, 0.002); end
  def test_costpercapita_l50; assert_in_epsilon(113.01554076949262, worksheet.costpercapita_l50, 0.002); end
  def test_costpercapita_m50; assert_in_epsilon(122.81725881389707, worksheet.costpercapita_m50, 0.002); end
  def test_costpercapita_o50; assert_in_delta(0.06466069960227284, worksheet.costpercapita_o50, 0.002); end
  def test_costpercapita_p50; assert_in_delta(0.9002156382932025, worksheet.costpercapita_p50, 0.002); end
  def test_costpercapita_q50; assert_in_epsilon(4.784768213659149, worksheet.costpercapita_q50, 0.002); end
  def test_costpercapita_r50; assert_in_epsilon(13.17976304710475, worksheet.costpercapita_r50, 0.002); end
  def test_costpercapita_s50; assert_in_epsilon(24.367412565902182, worksheet.costpercapita_s50, 0.002); end
  def test_costpercapita_t50; assert_in_epsilon(35.37476388696974, worksheet.costpercapita_t50, 0.002); end
  def test_costpercapita_u50; assert_in_epsilon(44.34873535137025, worksheet.costpercapita_u50, 0.002); end
  def test_costpercapita_v50; assert_in_epsilon(50.86687815018914, worksheet.costpercapita_v50, 0.002); end
  def test_costpercapita_w50; assert_in_epsilon(55.27850856873613, worksheet.costpercapita_w50, 0.002); end
  def test_costpercapita_y50; assert_in_delta(0.0, (worksheet.costpercapita_y50||0), 0.002); end
  def test_costpercapita_z50; assert_in_delta(0.0, (worksheet.costpercapita_z50||0), 0.002); end
  def test_costpercapita_aa50; assert_in_delta(0.0, (worksheet.costpercapita_aa50||0), 0.002); end
  def test_costpercapita_ab50; assert_in_delta(0.0, (worksheet.costpercapita_ab50||0), 0.002); end
  def test_costpercapita_ac50; assert_in_delta(0.0, (worksheet.costpercapita_ac50||0), 0.002); end
  def test_costpercapita_ad50; assert_in_delta(0.0, (worksheet.costpercapita_ad50||0), 0.002); end
  def test_costpercapita_ae50; assert_in_delta(0.0, (worksheet.costpercapita_ae50||0), 0.002); end
  def test_costpercapita_af50; assert_in_delta(0.0, (worksheet.costpercapita_af50||0), 0.002); end
  def test_costpercapita_ag50; assert_in_delta(0.0, (worksheet.costpercapita_ag50||0), 0.002); end
  def test_costpercapita_ai50; assert_in_delta(0.40287846154139956, worksheet.costpercapita_ai50, 0.002); end
  def test_costpercapita_aj50; assert_in_epsilon(4.200433174745231, worksheet.costpercapita_aj50, 0.002); end
  def test_costpercapita_ak50; assert_in_epsilon(18.23497525815423, worksheet.costpercapita_ak50, 0.002); end
  def test_costpercapita_al50; assert_in_epsilon(46.05366583002561, worksheet.costpercapita_al50, 0.002); end
  def test_costpercapita_am50; assert_in_epsilon(78.50669550277973, worksheet.costpercapita_am50, 0.002); end
  def test_costpercapita_an50; assert_in_epsilon(113.97007414907864, worksheet.costpercapita_an50, 0.002); end
  def test_costpercapita_ao50; assert_in_epsilon(142.88232912489707, worksheet.costpercapita_ao50, 0.002); end
  def test_costpercapita_ap50; assert_in_epsilon(163.88241891968173, worksheet.costpercapita_ap50, 0.002); end
  def test_costpercapita_aq50; assert_in_epsilon(178.0957673826332, worksheet.costpercapita_aq50, 0.002); end
  def test_costpercapita_as50; assert_in_epsilon(82.91435975594854, worksheet.costpercapita_as50, 0.002); end
  def test_costpercapita_at50; assert_in_epsilon(1400.9996180359956, worksheet.costpercapita_at50, 0.002); end
  def test_costpercapita_av50; assert_in_delta(0.0, (worksheet.costpercapita_av50||0), 0.002); end
  def test_costpercapita_aw50; assert_in_epsilon(5.0, worksheet.costpercapita_aw50, 0.002); end
  def test_costpercapita_ay50; assert_in_delta(0.7255660271303105, worksheet.costpercapita_ay50, 0.002); end
  def test_costpercapita_az50; assert_in_epsilon(7.079834343591488, worksheet.costpercapita_az50, 0.002); end
  def test_costpercapita_ba50; assert_in_epsilon(28.854230580329077, worksheet.costpercapita_ba50, 0.002); end
  def test_costpercapita_bb50; assert_in_epsilon(70.52316502160795, worksheet.costpercapita_bb50, 0.002); end
  def test_costpercapita_bc50; assert_in_epsilon(116.14299676923548, worksheet.costpercapita_bc50, 0.002); end
  def test_costpercapita_bd50; assert_in_epsilon(168.60760561775638, worksheet.costpercapita_bd50, 0.002); end
  def test_costpercapita_be50; assert_in_epsilon(211.3804661329323, worksheet.costpercapita_be50, 0.002); end
  def test_costpercapita_bf50; assert_in_epsilon(242.4480501850846, worksheet.costpercapita_bf50, 0.002); end
  def test_costpercapita_bg50; assert_in_epsilon(263.47531256112154, worksheet.costpercapita_bg50, 0.002); end
  def test_costpercapita_bi50; assert_in_delta(0.0, (worksheet.costpercapita_bi50||0), 0.002); end
  def test_costpercapita_bj50; assert_in_delta(0.0, (worksheet.costpercapita_bj50||0), 0.002); end
  def test_costpercapita_bk50; assert_in_delta(0.0, (worksheet.costpercapita_bk50||0), 0.002); end
  def test_costpercapita_bl50; assert_in_delta(0.0, (worksheet.costpercapita_bl50||0), 0.002); end
  def test_costpercapita_bm50; assert_in_delta(0.0, (worksheet.costpercapita_bm50||0), 0.002); end
  def test_costpercapita_bn50; assert_in_delta(0.0, (worksheet.costpercapita_bn50||0), 0.002); end
  def test_costpercapita_bo50; assert_in_delta(0.0, (worksheet.costpercapita_bo50||0), 0.002); end
  def test_costpercapita_bp50; assert_in_delta(0.0, (worksheet.costpercapita_bp50||0), 0.002); end
  def test_costpercapita_bq50; assert_in_delta(0.0, (worksheet.costpercapita_bq50||0), 0.002); end
  def test_costpercapita_bs50; assert_in_delta(0.7902267267325834, worksheet.costpercapita_bs50, 0.002); end
  def test_costpercapita_bt50; assert_in_epsilon(7.98004998188469, worksheet.costpercapita_bt50, 0.002); end
  def test_costpercapita_bu50; assert_in_epsilon(33.63899879398823, worksheet.costpercapita_bu50, 0.002); end
  def test_costpercapita_bv50; assert_in_epsilon(83.7029280687127, worksheet.costpercapita_bv50, 0.002); end
  def test_costpercapita_bw50; assert_in_epsilon(140.51040933513767, worksheet.costpercapita_bw50, 0.002); end
  def test_costpercapita_bx50; assert_in_epsilon(203.98236950472614, worksheet.costpercapita_bx50, 0.002); end
  def test_costpercapita_by50; assert_in_epsilon(255.72920148430256, worksheet.costpercapita_by50, 0.002); end
  def test_costpercapita_bz50; assert_in_epsilon(293.31492833527375, worksheet.costpercapita_bz50, 0.002); end
  def test_costpercapita_ca50; assert_in_epsilon(318.75382112985767, worksheet.costpercapita_ca50, 0.002); end
  def test_costpercapita_cc50; assert_in_epsilon(148.71143704006843, worksheet.costpercapita_cc50, 0.002); end
  def test_costpercapita_cd50; assert_in_epsilon(2516.870779072143, worksheet.costpercapita_cd50, 0.002); end
  def test_costpercapita_cf50; assert_in_delta(0.38734826519118376, worksheet.costpercapita_cf50, 0.002); end
  def test_costpercapita_cg50; assert_in_epsilon(3.779616807139459, worksheet.costpercapita_cg50, 0.002); end
  def test_costpercapita_ch50; assert_in_epsilon(15.404023535833998, worksheet.costpercapita_ch50, 0.002); end
  def test_costpercapita_ci50; assert_in_epsilon(37.649262238687086, worksheet.costpercapita_ci50, 0.002); end
  def test_costpercapita_cj50; assert_in_epsilon(62.003713832357924, worksheet.costpercapita_cj50, 0.002); end
  def test_costpercapita_ck50; assert_in_epsilon(90.01229535564745, worksheet.costpercapita_ck50, 0.002); end
  def test_costpercapita_cl50; assert_in_epsilon(112.84687235940551, worksheet.costpercapita_cl50, 0.002); end
  def test_costpercapita_cm50; assert_in_epsilon(129.432509415592, worksheet.costpercapita_cm50, 0.002); end
  def test_costpercapita_cn50; assert_in_epsilon(140.65805374722447, worksheet.costpercapita_cn50, 0.002); end
  def test_costpercapita_cp50; assert_in_epsilon(65.7970772841199, worksheet.costpercapita_cp50, 0.002); end
  def test_costpercapita_cq50; assert_in_epsilon(1115.8711610361463, worksheet.costpercapita_cq50, 0.002); end
  def test_costpercapita_cr50; assert_equal("ok", worksheet.costpercapita_cr50); end
  def test_costpercapita_a51; assert_equal("RE.e", worksheet.costpercapita_a51); end
  def test_costpercapita_b51; assert_equal("Centralized PV", worksheet.costpercapita_b51); end
  def test_costpercapita_c51; assert_equal("Electricity", worksheet.costpercapita_c51); end
  def test_costpercapita_e51; assert_in_delta(0.0, (worksheet.costpercapita_e51||0), 0.002); end
  def test_costpercapita_f51; assert_in_epsilon(3.9744299055611934, worksheet.costpercapita_f51, 0.002); end
  def test_costpercapita_g51; assert_in_epsilon(97.28386742694757, worksheet.costpercapita_g51, 0.002); end
  def test_costpercapita_h51; assert_in_epsilon(169.93782418755328, worksheet.costpercapita_h51, 0.002); end
  def test_costpercapita_i51; assert_in_epsilon(225.85584815875953, worksheet.costpercapita_i51, 0.002); end
  def test_costpercapita_j51; assert_in_epsilon(282.31981019844943, worksheet.costpercapita_j51, 0.002); end
  def test_costpercapita_k51; assert_in_epsilon(338.7837722381393, worksheet.costpercapita_k51, 0.002); end
  def test_costpercapita_l51; assert_in_epsilon(395.2477342778292, worksheet.costpercapita_l51, 0.002); end
  def test_costpercapita_m51; assert_in_epsilon(451.71169631751906, worksheet.costpercapita_m51, 0.002); end
  def test_costpercapita_o51; assert_in_delta(0.0, (worksheet.costpercapita_o51||0), 0.002); end
  def test_costpercapita_p51; assert_in_epsilon(1.4093607737060392, worksheet.costpercapita_p51, 0.002); end
  def test_costpercapita_q51; assert_in_epsilon(44.990012227662824, worksheet.costpercapita_q51, 0.002); end
  def test_costpercapita_r51; assert_in_epsilon(88.5706636816196, worksheet.costpercapita_r51, 0.002); end
  def test_costpercapita_s51; assert_in_epsilon(132.1513151355764, worksheet.costpercapita_s51, 0.002); end
  def test_costpercapita_t51; assert_in_epsilon(165.18914391947052, worksheet.costpercapita_t51, 0.002); end
  def test_costpercapita_u51; assert_in_epsilon(198.22697270336462, worksheet.costpercapita_u51, 0.002); end
  def test_costpercapita_v51; assert_in_epsilon(231.26480148725872, worksheet.costpercapita_v51, 0.002); end
  def test_costpercapita_w51; assert_in_epsilon(264.3026302711528, worksheet.costpercapita_w51, 0.002); end
  def test_costpercapita_y51; assert_in_delta(0.0, (worksheet.costpercapita_y51||0), 0.002); end
  def test_costpercapita_z51; assert_in_delta(0.0, (worksheet.costpercapita_z51||0), 0.002); end
  def test_costpercapita_aa51; assert_in_delta(0.0, (worksheet.costpercapita_aa51||0), 0.002); end
  def test_costpercapita_ab51; assert_in_delta(0.0, (worksheet.costpercapita_ab51||0), 0.002); end
  def test_costpercapita_ac51; assert_in_delta(0.0, (worksheet.costpercapita_ac51||0), 0.002); end
  def test_costpercapita_ad51; assert_in_delta(0.0, (worksheet.costpercapita_ad51||0), 0.002); end
  def test_costpercapita_ae51; assert_in_delta(0.0, (worksheet.costpercapita_ae51||0), 0.002); end
  def test_costpercapita_af51; assert_in_delta(0.0, (worksheet.costpercapita_af51||0), 0.002); end
  def test_costpercapita_ag51; assert_in_delta(0.0, (worksheet.costpercapita_ag51||0), 0.002); end
  def test_costpercapita_ai51; assert_in_delta(0.0, (worksheet.costpercapita_ai51||0), 0.002); end
  def test_costpercapita_aj51; assert_in_epsilon(5.383790679267233, worksheet.costpercapita_aj51, 0.002); end
  def test_costpercapita_ak51; assert_in_epsilon(142.2738796546104, worksheet.costpercapita_ak51, 0.002); end
  def test_costpercapita_al51; assert_in_epsilon(258.5084878691729, worksheet.costpercapita_al51, 0.002); end
  def test_costpercapita_am51; assert_in_epsilon(358.00716329433595, worksheet.costpercapita_am51, 0.002); end
  def test_costpercapita_an51; assert_in_epsilon(447.50895411792004, worksheet.costpercapita_an51, 0.002); end
  def test_costpercapita_ao51; assert_in_epsilon(537.010744941504, worksheet.costpercapita_ao51, 0.002); end
  def test_costpercapita_ap51; assert_in_epsilon(626.5125357650879, worksheet.costpercapita_ap51, 0.002); end
  def test_costpercapita_aq51; assert_in_epsilon(716.0143265886719, worksheet.costpercapita_aq51, 0.002); end
  def test_costpercapita_as51; assert_in_epsilon(343.46887587895225, worksheet.costpercapita_as51, 0.002); end
  def test_costpercapita_at51; assert_in_epsilon(6013.343031521746, worksheet.costpercapita_at51, 0.002); end
  def test_costpercapita_av51; assert_in_delta(0.0, (worksheet.costpercapita_av51||0), 0.002); end
  def test_costpercapita_aw51; assert_in_epsilon(5.0, worksheet.costpercapita_aw51, 0.002); end
  def test_costpercapita_ay51; assert_in_delta(0.0, (worksheet.costpercapita_ay51||0), 0.002); end
  def test_costpercapita_az51; assert_in_epsilon(8.526197146337182, worksheet.costpercapita_az51, 0.002); end
  def test_costpercapita_ba51; assert_in_epsilon(208.69947452832588, worksheet.costpercapita_ba51, 0.002); end
  def test_costpercapita_bb51; assert_in_epsilon(364.5613147222122, worksheet.costpercapita_bb51, 0.002); end
  def test_costpercapita_bc51; assert_in_epsilon(484.5201786953819, worksheet.costpercapita_bc51, 0.002); end
  def test_costpercapita_bd51; assert_in_epsilon(605.6502233692274, worksheet.costpercapita_bd51, 0.002); end
  def test_costpercapita_be51; assert_in_epsilon(726.7802680430729, worksheet.costpercapita_be51, 0.002); end
  def test_costpercapita_bf51; assert_in_epsilon(847.9103127169184, worksheet.costpercapita_bf51, 0.002); end
  def test_costpercapita_bg51; assert_in_epsilon(969.0403573907638, worksheet.costpercapita_bg51, 0.002); end
  def test_costpercapita_bi51; assert_in_delta(0.0, (worksheet.costpercapita_bi51||0), 0.002); end
  def test_costpercapita_bj51; assert_in_delta(0.0, (worksheet.costpercapita_bj51||0), 0.002); end
  def test_costpercapita_bk51; assert_in_delta(0.0, (worksheet.costpercapita_bk51||0), 0.002); end
  def test_costpercapita_bl51; assert_in_delta(0.0, (worksheet.costpercapita_bl51||0), 0.002); end
  def test_costpercapita_bm51; assert_in_delta(0.0, (worksheet.costpercapita_bm51||0), 0.002); end
  def test_costpercapita_bn51; assert_in_delta(0.0, (worksheet.costpercapita_bn51||0), 0.002); end
  def test_costpercapita_bo51; assert_in_delta(0.0, (worksheet.costpercapita_bo51||0), 0.002); end
  def test_costpercapita_bp51; assert_in_delta(0.0, (worksheet.costpercapita_bp51||0), 0.002); end
  def test_costpercapita_bq51; assert_in_delta(0.0, (worksheet.costpercapita_bq51||0), 0.002); end
  def test_costpercapita_bs51; assert_in_delta(0.0, (worksheet.costpercapita_bs51||0), 0.002); end
  def test_costpercapita_bt51; assert_in_epsilon(9.935557920043221, worksheet.costpercapita_bt51, 0.002); end
  def test_costpercapita_bu51; assert_in_epsilon(253.6894867559887, worksheet.costpercapita_bu51, 0.002); end
  def test_costpercapita_bv51; assert_in_epsilon(453.1319784038318, worksheet.costpercapita_bv51, 0.002); end
  def test_costpercapita_bw51; assert_in_epsilon(616.6714938309583, worksheet.costpercapita_bw51, 0.002); end
  def test_costpercapita_bx51; assert_in_epsilon(770.839367288698, worksheet.costpercapita_bx51, 0.002); end
  def test_costpercapita_by51; assert_in_epsilon(925.0072407464376, worksheet.costpercapita_by51, 0.002); end
  def test_costpercapita_bz51; assert_in_epsilon(1079.1751142041771, worksheet.costpercapita_bz51, 0.002); end
  def test_costpercapita_ca51; assert_in_epsilon(1233.3429876619166, worksheet.costpercapita_ca51, 0.002); end
  def test_costpercapita_cc51; assert_in_epsilon(593.5325807568947, worksheet.costpercapita_cc51, 0.002); end
  def test_costpercapita_cd51; assert_in_epsilon(10414.820271407682, worksheet.costpercapita_cd51, 0.002); end
  def test_costpercapita_cf51; assert_in_delta(0.0, (worksheet.costpercapita_cf51||0), 0.002); end
  def test_costpercapita_cg51; assert_in_epsilon(4.551767240775988, worksheet.costpercapita_cg51, 0.002); end
  def test_costpercapita_ch51; assert_in_epsilon(111.4156071013783, worksheet.costpercapita_ch51, 0.002); end
  def test_costpercapita_ci51; assert_in_epsilon(194.6234905346589, worksheet.costpercapita_ci51, 0.002); end
  def test_costpercapita_cj51; assert_in_epsilon(258.66433053662234, worksheet.costpercapita_cj51, 0.002); end
  def test_costpercapita_ck51; assert_in_epsilon(323.33041317077794, worksheet.costpercapita_ck51, 0.002); end
  def test_costpercapita_cl51; assert_in_epsilon(387.9964958049335, worksheet.costpercapita_cl51, 0.002); end
  def test_costpercapita_cm51; assert_in_epsilon(452.6625784390892, worksheet.costpercapita_cm51, 0.002); end
  def test_costpercapita_cn51; assert_in_epsilon(517.3286610732447, worksheet.costpercapita_cn51, 0.002); end
  def test_costpercapita_cp51; assert_in_epsilon(250.0637048779423, worksheet.costpercapita_cp51, 0.002); end
  def test_costpercapita_cq51; assert_in_epsilon(4401.477239885936, worksheet.costpercapita_cq51, 0.002); end
  def test_costpercapita_cr51; assert_equal("ok", worksheet.costpercapita_cr51); end
  def test_costpercapita_a52; assert_equal("ElcDSB.s", worksheet.costpercapita_a52); end
  def test_costpercapita_b52; assert_equal("Pumped Storage", worksheet.costpercapita_b52); end
  def test_costpercapita_c52; assert_equal("Electricity", worksheet.costpercapita_c52); end
  def test_costpercapita_e52; assert_in_delta(0.0, (worksheet.costpercapita_e52||0), 0.002); end
  def test_costpercapita_f52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_f52, 0.002); end
  def test_costpercapita_g52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_g52, 0.002); end
  def test_costpercapita_h52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_h52, 0.002); end
  def test_costpercapita_i52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_i52, 0.002); end
  def test_costpercapita_j52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_j52, 0.002); end
  def test_costpercapita_k52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_k52, 0.002); end
  def test_costpercapita_l52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_l52, 0.002); end
  def test_costpercapita_m52; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_m52, 0.002); end
  def test_costpercapita_o52; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_o52, 0.002); end
  def test_costpercapita_p52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_p52, 0.002); end
  def test_costpercapita_q52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_q52, 0.002); end
  def test_costpercapita_r52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_r52, 0.002); end
  def test_costpercapita_s52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_s52, 0.002); end
  def test_costpercapita_t52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_t52, 0.002); end
  def test_costpercapita_u52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_u52, 0.002); end
  def test_costpercapita_v52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_v52, 0.002); end
  def test_costpercapita_w52; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_w52, 0.002); end
  def test_costpercapita_y52; assert_in_delta(0.0, (worksheet.costpercapita_y52||0), 0.002); end
  def test_costpercapita_z52; assert_in_delta(0.0, (worksheet.costpercapita_z52||0), 0.002); end
  def test_costpercapita_aa52; assert_in_delta(0.0, (worksheet.costpercapita_aa52||0), 0.002); end
  def test_costpercapita_ab52; assert_in_delta(0.0, (worksheet.costpercapita_ab52||0), 0.002); end
  def test_costpercapita_ac52; assert_in_delta(0.0, (worksheet.costpercapita_ac52||0), 0.002); end
  def test_costpercapita_ad52; assert_in_delta(0.0, (worksheet.costpercapita_ad52||0), 0.002); end
  def test_costpercapita_ae52; assert_in_delta(0.0, (worksheet.costpercapita_ae52||0), 0.002); end
  def test_costpercapita_af52; assert_in_delta(0.0, (worksheet.costpercapita_af52||0), 0.002); end
  def test_costpercapita_ag52; assert_in_delta(0.0, (worksheet.costpercapita_ag52||0), 0.002); end
  def test_costpercapita_ai52; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_ai52, 0.002); end
  def test_costpercapita_aj52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_aj52, 0.002); end
  def test_costpercapita_ak52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ak52, 0.002); end
  def test_costpercapita_al52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_al52, 0.002); end
  def test_costpercapita_am52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_am52, 0.002); end
  def test_costpercapita_an52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_an52, 0.002); end
  def test_costpercapita_ao52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ao52, 0.002); end
  def test_costpercapita_ap52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ap52, 0.002); end
  def test_costpercapita_aq52; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_aq52, 0.002); end
  def test_costpercapita_as52; assert_in_epsilon(11.90548499948826, worksheet.costpercapita_as52, 0.002); end
  def test_costpercapita_at52; assert_in_epsilon(260.9280183723279, worksheet.costpercapita_at52, 0.002); end
  def test_costpercapita_av52; assert_in_delta(0.0, (worksheet.costpercapita_av52||0), 0.002); end
  def test_costpercapita_aw52; assert_in_epsilon(5.0, worksheet.costpercapita_aw52, 0.002); end
  def test_costpercapita_ay52; assert_in_delta(0.0, (worksheet.costpercapita_ay52||0), 0.002); end
  def test_costpercapita_az52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_az52, 0.002); end
  def test_costpercapita_ba52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_ba52, 0.002); end
  def test_costpercapita_bb52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_bb52, 0.002); end
  def test_costpercapita_bc52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_bc52, 0.002); end
  def test_costpercapita_bd52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_bd52, 0.002); end
  def test_costpercapita_be52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_be52, 0.002); end
  def test_costpercapita_bf52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_bf52, 0.002); end
  def test_costpercapita_bg52; assert_in_epsilon(17.014919223405037, worksheet.costpercapita_bg52, 0.002); end
  def test_costpercapita_bi52; assert_in_delta(0.0, (worksheet.costpercapita_bi52||0), 0.002); end
  def test_costpercapita_bj52; assert_in_delta(0.0, (worksheet.costpercapita_bj52||0), 0.002); end
  def test_costpercapita_bk52; assert_in_delta(0.0, (worksheet.costpercapita_bk52||0), 0.002); end
  def test_costpercapita_bl52; assert_in_delta(0.0, (worksheet.costpercapita_bl52||0), 0.002); end
  def test_costpercapita_bm52; assert_in_delta(0.0, (worksheet.costpercapita_bm52||0), 0.002); end
  def test_costpercapita_bn52; assert_in_delta(0.0, (worksheet.costpercapita_bn52||0), 0.002); end
  def test_costpercapita_bo52; assert_in_delta(0.0, (worksheet.costpercapita_bo52||0), 0.002); end
  def test_costpercapita_bp52; assert_in_delta(0.0, (worksheet.costpercapita_bp52||0), 0.002); end
  def test_costpercapita_bq52; assert_in_delta(0.0, (worksheet.costpercapita_bq52||0), 0.002); end
  def test_costpercapita_bs52; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_bs52, 0.002); end
  def test_costpercapita_bt52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_bt52, 0.002); end
  def test_costpercapita_bu52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_bu52, 0.002); end
  def test_costpercapita_bv52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_bv52, 0.002); end
  def test_costpercapita_bw52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_bw52, 0.002); end
  def test_costpercapita_bx52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_bx52, 0.002); end
  def test_costpercapita_by52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_by52, 0.002); end
  def test_costpercapita_bz52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_bz52, 0.002); end
  def test_costpercapita_ca52; assert_in_epsilon(25.722290683596107, worksheet.costpercapita_ca52, 0.002); end
  def test_costpercapita_cc52; assert_in_epsilon(23.389199125158605, worksheet.costpercapita_cc52, 0.002); end
  def test_costpercapita_cd52; assert_in_epsilon(519.4541730729206, worksheet.costpercapita_cd52, 0.002); end
  def test_costpercapita_cf52; assert_in_delta(0.0, (worksheet.costpercapita_cf52||0), 0.002); end
  def test_costpercapita_cg52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_cg52, 0.002); end
  def test_costpercapita_ch52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_ch52, 0.002); end
  def test_costpercapita_ci52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_ci52, 0.002); end
  def test_costpercapita_cj52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_cj52, 0.002); end
  def test_costpercapita_ck52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_ck52, 0.002); end
  def test_costpercapita_cl52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_cl52, 0.002); end
  def test_costpercapita_cm52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_cm52, 0.002); end
  def test_costpercapita_cn52; assert_in_epsilon(12.919178391379138, worksheet.costpercapita_cn52, 0.002); end
  def test_costpercapita_cp52; assert_in_epsilon(11.483714125670343, worksheet.costpercapita_cp52, 0.002); end
  def test_costpercapita_cq52; assert_in_epsilon(258.52615470059266, worksheet.costpercapita_cq52, 0.002); end
  def test_costpercapita_cr52; assert_equal("ok", worksheet.costpercapita_cr52); end
  def test_costpercapita_a53; assert_equal("ElcDSB.i", worksheet.costpercapita_a53); end
  def test_costpercapita_b53; assert_equal("place holder", worksheet.costpercapita_b53); end
  def test_costpercapita_c53; assert_equal("Electricity", worksheet.costpercapita_c53); end
  def test_costpercapita_e53; assert_in_delta(0.0, (worksheet.costpercapita_e53||0), 0.002); end
  def test_costpercapita_f53; assert_in_delta(0.0, (worksheet.costpercapita_f53||0), 0.002); end
  def test_costpercapita_g53; assert_in_delta(0.0, (worksheet.costpercapita_g53||0), 0.002); end
  def test_costpercapita_h53; assert_in_delta(0.0, (worksheet.costpercapita_h53||0), 0.002); end
  def test_costpercapita_i53; assert_in_delta(0.0, (worksheet.costpercapita_i53||0), 0.002); end
  def test_costpercapita_j53; assert_in_delta(0.0, (worksheet.costpercapita_j53||0), 0.002); end
  def test_costpercapita_k53; assert_in_delta(0.0, (worksheet.costpercapita_k53||0), 0.002); end
  def test_costpercapita_l53; assert_in_delta(0.0, (worksheet.costpercapita_l53||0), 0.002); end
  def test_costpercapita_m53; assert_in_delta(0.0, (worksheet.costpercapita_m53||0), 0.002); end
  def test_costpercapita_o53; assert_in_delta(0.0, (worksheet.costpercapita_o53||0), 0.002); end
  def test_costpercapita_p53; assert_in_delta(0.0, (worksheet.costpercapita_p53||0), 0.002); end
  def test_costpercapita_q53; assert_in_delta(0.0, (worksheet.costpercapita_q53||0), 0.002); end
  def test_costpercapita_r53; assert_in_delta(0.0, (worksheet.costpercapita_r53||0), 0.002); end
  def test_costpercapita_s53; assert_in_delta(0.0, (worksheet.costpercapita_s53||0), 0.002); end
  def test_costpercapita_t53; assert_in_delta(0.0, (worksheet.costpercapita_t53||0), 0.002); end
  def test_costpercapita_u53; assert_in_delta(0.0, (worksheet.costpercapita_u53||0), 0.002); end
  def test_costpercapita_v53; assert_in_delta(0.0, (worksheet.costpercapita_v53||0), 0.002); end
  def test_costpercapita_w53; assert_in_delta(0.0, (worksheet.costpercapita_w53||0), 0.002); end
  def test_costpercapita_y53; assert_in_delta(0.0, (worksheet.costpercapita_y53||0), 0.002); end
  def test_costpercapita_z53; assert_in_delta(0.0, (worksheet.costpercapita_z53||0), 0.002); end
  def test_costpercapita_aa53; assert_in_delta(0.0, (worksheet.costpercapita_aa53||0), 0.002); end
  def test_costpercapita_ab53; assert_in_delta(0.0, (worksheet.costpercapita_ab53||0), 0.002); end
  def test_costpercapita_ac53; assert_in_delta(0.0, (worksheet.costpercapita_ac53||0), 0.002); end
  def test_costpercapita_ad53; assert_in_delta(0.0, (worksheet.costpercapita_ad53||0), 0.002); end
  def test_costpercapita_ae53; assert_in_delta(0.0, (worksheet.costpercapita_ae53||0), 0.002); end
  def test_costpercapita_af53; assert_in_delta(0.0, (worksheet.costpercapita_af53||0), 0.002); end
  def test_costpercapita_ag53; assert_in_delta(0.0, (worksheet.costpercapita_ag53||0), 0.002); end
  def test_costpercapita_ai53; assert_in_delta(0.0, (worksheet.costpercapita_ai53||0), 0.002); end
  def test_costpercapita_aj53; assert_in_delta(0.0, (worksheet.costpercapita_aj53||0), 0.002); end
  def test_costpercapita_ak53; assert_in_delta(0.0, (worksheet.costpercapita_ak53||0), 0.002); end
  def test_costpercapita_al53; assert_in_delta(0.0, (worksheet.costpercapita_al53||0), 0.002); end
  def test_costpercapita_am53; assert_in_delta(0.0, (worksheet.costpercapita_am53||0), 0.002); end
  def test_costpercapita_an53; assert_in_delta(0.0, (worksheet.costpercapita_an53||0), 0.002); end
  def test_costpercapita_ao53; assert_in_delta(0.0, (worksheet.costpercapita_ao53||0), 0.002); end
  def test_costpercapita_ap53; assert_in_delta(0.0, (worksheet.costpercapita_ap53||0), 0.002); end
  def test_costpercapita_aq53; assert_in_delta(0.0, (worksheet.costpercapita_aq53||0), 0.002); end
  def test_costpercapita_as53; assert_in_delta(0.0, (worksheet.costpercapita_as53||0), 0.002); end
  def test_costpercapita_at53; assert_in_delta(0.0, (worksheet.costpercapita_at53||0), 0.002); end
  def test_costpercapita_av53; assert_in_delta(0.0, (worksheet.costpercapita_av53||0), 0.002); end
  def test_costpercapita_aw53; assert_in_epsilon(5.0, worksheet.costpercapita_aw53, 0.002); end
  def test_costpercapita_ay53; assert_in_delta(0.0, (worksheet.costpercapita_ay53||0), 0.002); end
  def test_costpercapita_az53; assert_in_delta(0.0, (worksheet.costpercapita_az53||0), 0.002); end
  def test_costpercapita_ba53; assert_in_delta(0.0, (worksheet.costpercapita_ba53||0), 0.002); end
  def test_costpercapita_bb53; assert_in_delta(0.0, (worksheet.costpercapita_bb53||0), 0.002); end
  def test_costpercapita_bc53; assert_in_delta(0.0, (worksheet.costpercapita_bc53||0), 0.002); end
  def test_costpercapita_bd53; assert_in_delta(0.0, (worksheet.costpercapita_bd53||0), 0.002); end
  def test_costpercapita_be53; assert_in_delta(0.0, (worksheet.costpercapita_be53||0), 0.002); end
  def test_costpercapita_bf53; assert_in_delta(0.0, (worksheet.costpercapita_bf53||0), 0.002); end
  def test_costpercapita_bg53; assert_in_delta(0.0, (worksheet.costpercapita_bg53||0), 0.002); end
  def test_costpercapita_bi53; assert_in_delta(0.0, (worksheet.costpercapita_bi53||0), 0.002); end
  def test_costpercapita_bj53; assert_in_delta(0.0, (worksheet.costpercapita_bj53||0), 0.002); end
  def test_costpercapita_bk53; assert_in_delta(0.0, (worksheet.costpercapita_bk53||0), 0.002); end
  def test_costpercapita_bl53; assert_in_delta(0.0, (worksheet.costpercapita_bl53||0), 0.002); end
  def test_costpercapita_bm53; assert_in_delta(0.0, (worksheet.costpercapita_bm53||0), 0.002); end
  def test_costpercapita_bn53; assert_in_delta(0.0, (worksheet.costpercapita_bn53||0), 0.002); end
  def test_costpercapita_bo53; assert_in_delta(0.0, (worksheet.costpercapita_bo53||0), 0.002); end
  def test_costpercapita_bp53; assert_in_delta(0.0, (worksheet.costpercapita_bp53||0), 0.002); end
  def test_costpercapita_bq53; assert_in_delta(0.0, (worksheet.costpercapita_bq53||0), 0.002); end
  def test_costpercapita_bs53; assert_in_delta(0.0, (worksheet.costpercapita_bs53||0), 0.002); end
  def test_costpercapita_bt53; assert_in_delta(0.0, (worksheet.costpercapita_bt53||0), 0.002); end
  def test_costpercapita_bu53; assert_in_delta(0.0, (worksheet.costpercapita_bu53||0), 0.002); end
  def test_costpercapita_bv53; assert_in_delta(0.0, (worksheet.costpercapita_bv53||0), 0.002); end
  def test_costpercapita_bw53; assert_in_delta(0.0, (worksheet.costpercapita_bw53||0), 0.002); end
  def test_costpercapita_bx53; assert_in_delta(0.0, (worksheet.costpercapita_bx53||0), 0.002); end
  def test_costpercapita_by53; assert_in_delta(0.0, (worksheet.costpercapita_by53||0), 0.002); end
  def test_costpercapita_bz53; assert_in_delta(0.0, (worksheet.costpercapita_bz53||0), 0.002); end
  def test_costpercapita_ca53; assert_in_delta(0.0, (worksheet.costpercapita_ca53||0), 0.002); end
  def test_costpercapita_cc53; assert_in_delta(0.0, (worksheet.costpercapita_cc53||0), 0.002); end
  def test_costpercapita_cd53; assert_in_delta(0.0, (worksheet.costpercapita_cd53||0), 0.002); end
  def test_costpercapita_cf53; assert_in_delta(0.0, (worksheet.costpercapita_cf53||0), 0.002); end
  def test_costpercapita_cg53; assert_in_delta(0.0, (worksheet.costpercapita_cg53||0), 0.002); end
  def test_costpercapita_ch53; assert_in_delta(0.0, (worksheet.costpercapita_ch53||0), 0.002); end
  def test_costpercapita_ci53; assert_in_delta(0.0, (worksheet.costpercapita_ci53||0), 0.002); end
  def test_costpercapita_cj53; assert_in_delta(0.0, (worksheet.costpercapita_cj53||0), 0.002); end
  def test_costpercapita_ck53; assert_in_delta(0.0, (worksheet.costpercapita_ck53||0), 0.002); end
  def test_costpercapita_cl53; assert_in_delta(0.0, (worksheet.costpercapita_cl53||0), 0.002); end
  def test_costpercapita_cm53; assert_in_delta(0.0, (worksheet.costpercapita_cm53||0), 0.002); end
  def test_costpercapita_cn53; assert_in_delta(0.0, (worksheet.costpercapita_cn53||0), 0.002); end
  def test_costpercapita_cp53; assert_in_delta(0.0, (worksheet.costpercapita_cp53||0), 0.002); end
  def test_costpercapita_cq53; assert_in_delta(0.0, (worksheet.costpercapita_cq53||0), 0.002); end
  def test_costpercapita_cr53; assert_equal("ok", worksheet.costpercapita_cr53); end
  def test_costpercapita_a54; assert_equal("ElcDSB.d", worksheet.costpercapita_a54); end
  def test_costpercapita_b54; assert_equal("Electricity Transmission and Distribution", worksheet.costpercapita_b54); end
  def test_costpercapita_c54; assert_equal("Electricity", worksheet.costpercapita_c54); end
  def test_costpercapita_e54; assert_in_epsilon(161.79586130896936, worksheet.costpercapita_e54, 0.002); end
  def test_costpercapita_f54; assert_in_epsilon(179.386053577576, worksheet.costpercapita_f54, 0.002); end
  def test_costpercapita_g54; assert_in_epsilon(202.40446388480606, worksheet.costpercapita_g54, 0.002); end
  def test_costpercapita_h54; assert_in_epsilon(231.5206499055592, worksheet.costpercapita_h54, 0.002); end
  def test_costpercapita_i54; assert_in_epsilon(216.9420485636026, worksheet.costpercapita_i54, 0.002); end
  def test_costpercapita_j54; assert_in_epsilon(230.31184336108927, worksheet.costpercapita_j54, 0.002); end
  def test_costpercapita_k54; assert_in_epsilon(241.05517252332965, worksheet.costpercapita_k54, 0.002); end
  def test_costpercapita_l54; assert_in_epsilon(254.2843129049674, worksheet.costpercapita_l54, 0.002); end
  def test_costpercapita_m54; assert_in_epsilon(265.2427599857889, worksheet.costpercapita_m54, 0.002); end
  def test_costpercapita_o54; assert_in_delta(0.0, (worksheet.costpercapita_o54||0), 0.002); end
  def test_costpercapita_p54; assert_in_delta(0.0, (worksheet.costpercapita_p54||0), 0.002); end
  def test_costpercapita_q54; assert_in_delta(0.0, (worksheet.costpercapita_q54||0), 0.002); end
  def test_costpercapita_r54; assert_in_delta(0.0, (worksheet.costpercapita_r54||0), 0.002); end
  def test_costpercapita_s54; assert_in_delta(0.0, (worksheet.costpercapita_s54||0), 0.002); end
  def test_costpercapita_t54; assert_in_delta(0.0, (worksheet.costpercapita_t54||0), 0.002); end
  def test_costpercapita_u54; assert_in_delta(0.0, (worksheet.costpercapita_u54||0), 0.002); end
  def test_costpercapita_v54; assert_in_delta(0.0, (worksheet.costpercapita_v54||0), 0.002); end
  def test_costpercapita_w54; assert_in_delta(0.0, (worksheet.costpercapita_w54||0), 0.002); end
  def test_costpercapita_y54; assert_in_delta(0.0, (worksheet.costpercapita_y54||0), 0.002); end
  def test_costpercapita_z54; assert_in_delta(0.0, (worksheet.costpercapita_z54||0), 0.002); end
  def test_costpercapita_aa54; assert_in_delta(0.0, (worksheet.costpercapita_aa54||0), 0.002); end
  def test_costpercapita_ab54; assert_in_delta(0.0, (worksheet.costpercapita_ab54||0), 0.002); end
  def test_costpercapita_ac54; assert_in_delta(0.0, (worksheet.costpercapita_ac54||0), 0.002); end
  def test_costpercapita_ad54; assert_in_delta(0.0, (worksheet.costpercapita_ad54||0), 0.002); end
  def test_costpercapita_ae54; assert_in_delta(0.0, (worksheet.costpercapita_ae54||0), 0.002); end
  def test_costpercapita_af54; assert_in_delta(0.0, (worksheet.costpercapita_af54||0), 0.002); end
  def test_costpercapita_ag54; assert_in_delta(0.0, (worksheet.costpercapita_ag54||0), 0.002); end
  def test_costpercapita_ai54; assert_in_epsilon(161.79586130896936, worksheet.costpercapita_ai54, 0.002); end
  def test_costpercapita_aj54; assert_in_epsilon(179.386053577576, worksheet.costpercapita_aj54, 0.002); end
  def test_costpercapita_ak54; assert_in_epsilon(202.40446388480606, worksheet.costpercapita_ak54, 0.002); end
  def test_costpercapita_al54; assert_in_epsilon(231.5206499055592, worksheet.costpercapita_al54, 0.002); end
  def test_costpercapita_am54; assert_in_epsilon(216.9420485636026, worksheet.costpercapita_am54, 0.002); end
  def test_costpercapita_an54; assert_in_epsilon(230.31184336108927, worksheet.costpercapita_an54, 0.002); end
  def test_costpercapita_ao54; assert_in_epsilon(241.05517252332965, worksheet.costpercapita_ao54, 0.002); end
  def test_costpercapita_ap54; assert_in_epsilon(254.2843129049674, worksheet.costpercapita_ap54, 0.002); end
  def test_costpercapita_aq54; assert_in_epsilon(265.2427599857889, worksheet.costpercapita_aq54, 0.002); end
  def test_costpercapita_as54; assert_in_epsilon(220.32701844618765, worksheet.costpercapita_as54, 0.002); end
  def test_costpercapita_at54; assert_in_epsilon(4529.5521573728065, worksheet.costpercapita_at54, 0.002); end
  def test_costpercapita_av54; assert_in_delta(0.0, (worksheet.costpercapita_av54||0), 0.002); end
  def test_costpercapita_aw54; assert_in_epsilon(5.0, worksheet.costpercapita_aw54, 0.002); end
  def test_costpercapita_ay54; assert_in_epsilon(691.4756334087871, worksheet.costpercapita_ay54, 0.002); end
  def test_costpercapita_az54; assert_in_epsilon(766.651779710144, worksheet.costpercapita_az54, 0.002); end
  def test_costpercapita_ba54; assert_in_epsilon(865.0267920156838, worksheet.costpercapita_ba54, 0.002); end
  def test_costpercapita_bb54; assert_in_epsilon(989.462194802048, worksheet.costpercapita_bb54, 0.002); end
  def test_costpercapita_bc54; assert_in_epsilon(927.1568458543811, worksheet.costpercapita_bc54, 0.002); end
  def test_costpercapita_bd54; assert_in_epsilon(984.2960535655311, worksheet.costpercapita_bd54, 0.002); end
  def test_costpercapita_be54; assert_in_epsilon(1030.2103944966202, worksheet.costpercapita_be54, 0.002); end
  def test_costpercapita_bf54; assert_in_epsilon(1086.7484799015256, worksheet.costpercapita_bf54, 0.002); end
  def test_costpercapita_bg54; assert_in_epsilon(1133.5821817965177, worksheet.costpercapita_bg54, 0.002); end
  def test_costpercapita_bi54; assert_in_delta(0.0, (worksheet.costpercapita_bi54||0), 0.002); end
  def test_costpercapita_bj54; assert_in_delta(0.0, (worksheet.costpercapita_bj54||0), 0.002); end
  def test_costpercapita_bk54; assert_in_delta(0.0, (worksheet.costpercapita_bk54||0), 0.002); end
  def test_costpercapita_bl54; assert_in_delta(0.0, (worksheet.costpercapita_bl54||0), 0.002); end
  def test_costpercapita_bm54; assert_in_delta(0.0, (worksheet.costpercapita_bm54||0), 0.002); end
  def test_costpercapita_bn54; assert_in_delta(0.0, (worksheet.costpercapita_bn54||0), 0.002); end
  def test_costpercapita_bo54; assert_in_delta(0.0, (worksheet.costpercapita_bo54||0), 0.002); end
  def test_costpercapita_bp54; assert_in_delta(0.0, (worksheet.costpercapita_bp54||0), 0.002); end
  def test_costpercapita_bq54; assert_in_delta(0.0, (worksheet.costpercapita_bq54||0), 0.002); end
  def test_costpercapita_bs54; assert_in_epsilon(691.4756334087871, worksheet.costpercapita_bs54, 0.002); end
  def test_costpercapita_bt54; assert_in_epsilon(766.651779710144, worksheet.costpercapita_bt54, 0.002); end
  def test_costpercapita_bu54; assert_in_epsilon(865.0267920156838, worksheet.costpercapita_bu54, 0.002); end
  def test_costpercapita_bv54; assert_in_epsilon(989.462194802048, worksheet.costpercapita_bv54, 0.002); end
  def test_costpercapita_bw54; assert_in_epsilon(927.1568458543811, worksheet.costpercapita_bw54, 0.002); end
  def test_costpercapita_bx54; assert_in_epsilon(984.2960535655311, worksheet.costpercapita_bx54, 0.002); end
  def test_costpercapita_by54; assert_in_epsilon(1030.2103944966202, worksheet.costpercapita_by54, 0.002); end
  def test_costpercapita_bz54; assert_in_epsilon(1086.7484799015256, worksheet.costpercapita_bz54, 0.002); end
  def test_costpercapita_ca54; assert_in_epsilon(1133.5821817965177, worksheet.costpercapita_ca54, 0.002); end
  def test_costpercapita_cc54; assert_in_epsilon(941.6233728390265, worksheet.costpercapita_cc54, 0.002); end
  def test_costpercapita_cd54; assert_in_epsilon(19358.18952189643, worksheet.costpercapita_cd54, 0.002); end
  def test_costpercapita_cf54; assert_in_epsilon(529.6797720998177, worksheet.costpercapita_cf54, 0.002); end
  def test_costpercapita_cg54; assert_in_epsilon(587.265726132568, worksheet.costpercapita_cg54, 0.002); end
  def test_costpercapita_ch54; assert_in_epsilon(662.6223281308776, worksheet.costpercapita_ch54, 0.002); end
  def test_costpercapita_ci54; assert_in_epsilon(757.9415448964888, worksheet.costpercapita_ci54, 0.002); end
  def test_costpercapita_cj54; assert_in_epsilon(710.2147972907785, worksheet.costpercapita_cj54, 0.002); end
  def test_costpercapita_ck54; assert_in_epsilon(753.984210204442, worksheet.costpercapita_ck54, 0.002); end
  def test_costpercapita_cl54; assert_in_epsilon(789.1552219732905, worksheet.costpercapita_cl54, 0.002); end
  def test_costpercapita_cm54; assert_in_epsilon(832.4641669965581, worksheet.costpercapita_cm54, 0.002); end
  def test_costpercapita_cn54; assert_in_epsilon(868.3394218107287, worksheet.costpercapita_cn54, 0.002); end
  def test_costpercapita_cp54; assert_in_epsilon(721.2963543928388, worksheet.costpercapita_cp54, 0.002); end
  def test_costpercapita_cq54; assert_in_epsilon(14828.637364523627, worksheet.costpercapita_cq54, 0.002); end
  def test_costpercapita_cr54; assert_equal("ok", worksheet.costpercapita_cr54); end
  def test_costpercapita_a55; assert_equal("H2Prod", worksheet.costpercapita_a55); end
  def test_costpercapita_b55; assert_equal("H2 Production", worksheet.costpercapita_b55); end
  def test_costpercapita_c55; assert_equal("Transport", worksheet.costpercapita_c55); end
  def test_costpercapita_e55; assert_in_delta(0.0, (worksheet.costpercapita_e55||0), 0.002); end
  def test_costpercapita_f55; assert_in_delta(0.1616645837236155, worksheet.costpercapita_f55, 0.002); end
  def test_costpercapita_g55; assert_in_delta(0.48462343670151964, worksheet.costpercapita_g55, 0.002); end
  def test_costpercapita_h55; assert_in_delta(0.8272175556514285, worksheet.costpercapita_h55, 0.002); end
  def test_costpercapita_i55; assert_in_epsilon(1.2630552702652291, worksheet.costpercapita_i55, 0.002); end
  def test_costpercapita_j55; assert_in_epsilon(1.7506568289350883, worksheet.costpercapita_j55, 0.002); end
  def test_costpercapita_k55; assert_in_epsilon(2.3475808761733323, worksheet.costpercapita_k55, 0.002); end
  def test_costpercapita_l55; assert_in_epsilon(3.048248206007595, worksheet.costpercapita_l55, 0.002); end
  def test_costpercapita_m55; assert_in_epsilon(3.930660625641697, worksheet.costpercapita_m55, 0.002); end
  def test_costpercapita_o55; assert_in_delta(0.0, (worksheet.costpercapita_o55||0), 0.002); end
  def test_costpercapita_p55; assert_in_delta(0.24451608876629932, worksheet.costpercapita_p55, 0.002); end
  def test_costpercapita_q55; assert_in_delta(0.8201319698025715, worksheet.costpercapita_q55, 0.002); end
  def test_costpercapita_r55; assert_in_epsilon(1.434673637056946, worksheet.costpercapita_r55, 0.002); end
  def test_costpercapita_s55; assert_in_epsilon(2.244207811177307, worksheet.costpercapita_s55, 0.002); end
  def test_costpercapita_t55; assert_in_epsilon(3.1842771673494723, worksheet.costpercapita_t55, 0.002); end
  def test_costpercapita_u55; assert_in_epsilon(4.366015739210696, worksheet.costpercapita_u55, 0.002); end
  def test_costpercapita_v55; assert_in_epsilon(5.787902295972432, worksheet.costpercapita_v55, 0.002); end
  def test_costpercapita_w55; assert_in_epsilon(7.607730243177477, worksheet.costpercapita_w55, 0.002); end
  def test_costpercapita_y55; assert_in_delta(0.0, (worksheet.costpercapita_y55||0), 0.002); end
  def test_costpercapita_z55; assert_in_delta(0.0, (worksheet.costpercapita_z55||0), 0.002); end
  def test_costpercapita_aa55; assert_in_delta(0.0, (worksheet.costpercapita_aa55||0), 0.002); end
  def test_costpercapita_ab55; assert_in_delta(0.0, (worksheet.costpercapita_ab55||0), 0.002); end
  def test_costpercapita_ac55; assert_in_delta(0.0, (worksheet.costpercapita_ac55||0), 0.002); end
  def test_costpercapita_ad55; assert_in_delta(0.0, (worksheet.costpercapita_ad55||0), 0.002); end
  def test_costpercapita_ae55; assert_in_delta(0.0, (worksheet.costpercapita_ae55||0), 0.002); end
  def test_costpercapita_af55; assert_in_delta(0.0, (worksheet.costpercapita_af55||0), 0.002); end
  def test_costpercapita_ag55; assert_in_delta(0.0, (worksheet.costpercapita_ag55||0), 0.002); end
  def test_costpercapita_ai55; assert_in_delta(0.0, (worksheet.costpercapita_ai55||0), 0.002); end
  def test_costpercapita_aj55; assert_in_delta(0.40618067248991485, worksheet.costpercapita_aj55, 0.002); end
  def test_costpercapita_ak55; assert_in_epsilon(1.304755406504091, worksheet.costpercapita_ak55, 0.002); end
  def test_costpercapita_al55; assert_in_epsilon(2.2618911927083745, worksheet.costpercapita_al55, 0.002); end
  def test_costpercapita_am55; assert_in_epsilon(3.5072630814425363, worksheet.costpercapita_am55, 0.002); end
  def test_costpercapita_an55; assert_in_epsilon(4.934933996284561, worksheet.costpercapita_an55, 0.002); end
  def test_costpercapita_ao55; assert_in_epsilon(6.71359661538403, worksheet.costpercapita_ao55, 0.002); end
  def test_costpercapita_ap55; assert_in_epsilon(8.836150501980027, worksheet.costpercapita_ap55, 0.002); end
  def test_costpercapita_aq55; assert_in_epsilon(11.538390868819173, worksheet.costpercapita_aq55, 0.002); end
  def test_costpercapita_as55; assert_in_epsilon(4.389240259512523, worksheet.costpercapita_as55, 0.002); end
  def test_costpercapita_at55; assert_in_epsilon(73.17144021803944, worksheet.costpercapita_at55, 0.002); end
  def test_costpercapita_av55; assert_in_delta(0.0, (worksheet.costpercapita_av55||0), 0.002); end
  def test_costpercapita_aw55; assert_in_epsilon(5.0, worksheet.costpercapita_aw55, 0.002); end
  def test_costpercapita_ay55; assert_in_delta(0.0, (worksheet.costpercapita_ay55||0), 0.002); end
  def test_costpercapita_az55; assert_in_delta(0.2662485344606822, worksheet.costpercapita_az55, 0.002); end
  def test_costpercapita_ba55; assert_in_delta(0.7981357253093303, worksheet.costpercapita_ba55, 0.002); end
  def test_costpercapita_bb55; assert_in_epsilon(1.3623606160324888, worksheet.costpercapita_bb55, 0.002); end
  def test_costpercapita_bc55; assert_in_epsilon(2.0801501906309885, worksheet.costpercapita_bc55, 0.002); end
  def test_costpercapita_bd55; assert_in_epsilon(2.8831906426977336, worksheet.costpercapita_bd55, 0.002); end
  def test_costpercapita_be55; assert_in_epsilon(3.866276418820667, worksheet.costpercapita_be55, 0.002); end
  def test_costpercapita_bf55; assert_in_epsilon(5.020219016611807, worksheet.costpercapita_bf55, 0.002); end
  def test_costpercapita_bg55; assert_in_epsilon(6.473481123290305, worksheet.costpercapita_bg55, 0.002); end
  def test_costpercapita_bi55; assert_in_delta(0.0, (worksheet.costpercapita_bi55||0), 0.002); end
  def test_costpercapita_bj55; assert_in_delta(0.0, (worksheet.costpercapita_bj55||0), 0.002); end
  def test_costpercapita_bk55; assert_in_delta(0.0, (worksheet.costpercapita_bk55||0), 0.002); end
  def test_costpercapita_bl55; assert_in_delta(0.0, (worksheet.costpercapita_bl55||0), 0.002); end
  def test_costpercapita_bm55; assert_in_delta(0.0, (worksheet.costpercapita_bm55||0), 0.002); end
  def test_costpercapita_bn55; assert_in_delta(0.0, (worksheet.costpercapita_bn55||0), 0.002); end
  def test_costpercapita_bo55; assert_in_delta(0.0, (worksheet.costpercapita_bo55||0), 0.002); end
  def test_costpercapita_bp55; assert_in_delta(0.0, (worksheet.costpercapita_bp55||0), 0.002); end
  def test_costpercapita_bq55; assert_in_delta(0.0, (worksheet.costpercapita_bq55||0), 0.002); end
  def test_costpercapita_bs55; assert_in_delta(0.0, (worksheet.costpercapita_bs55||0), 0.002); end
  def test_costpercapita_bt55; assert_in_delta(0.5107646232269816, worksheet.costpercapita_bt55, 0.002); end
  def test_costpercapita_bu55; assert_in_epsilon(1.618267695111902, worksheet.costpercapita_bu55, 0.002); end
  def test_costpercapita_bv55; assert_in_epsilon(2.7970342530894348, worksheet.costpercapita_bv55, 0.002); end
  def test_costpercapita_bw55; assert_in_epsilon(4.324358001808295, worksheet.costpercapita_bw55, 0.002); end
  def test_costpercapita_bx55; assert_in_epsilon(6.067467810047207, worksheet.costpercapita_bx55, 0.002); end
  def test_costpercapita_by55; assert_in_epsilon(8.232292158031363, worksheet.costpercapita_by55, 0.002); end
  def test_costpercapita_bz55; assert_in_epsilon(10.808121312584241, worksheet.costpercapita_bz55, 0.002); end
  def test_costpercapita_ca55; assert_in_epsilon(14.081211366467782, worksheet.costpercapita_ca55, 0.002); end
  def test_costpercapita_cc55; assert_in_epsilon(5.382168580040801, worksheet.costpercapita_cc55, 0.002); end
  def test_costpercapita_cd55; assert_in_epsilon(89.8756464639311, worksheet.costpercapita_cd55, 0.002); end
  def test_costpercapita_cf55; assert_in_delta(0.0, (worksheet.costpercapita_cf55||0), 0.002); end
  def test_costpercapita_cg55; assert_in_delta(0.10458395073706672, worksheet.costpercapita_cg55, 0.002); end
  def test_costpercapita_ch55; assert_in_delta(0.3135122886078106, worksheet.costpercapita_ch55, 0.002); end
  def test_costpercapita_ci55; assert_in_delta(0.5351430603810603, worksheet.costpercapita_ci55, 0.002); end
  def test_costpercapita_cj55; assert_in_delta(0.8170949203657593, worksheet.costpercapita_cj55, 0.002); end
  def test_costpercapita_ck55; assert_in_epsilon(1.1325338137626453, worksheet.costpercapita_ck55, 0.002); end
  def test_costpercapita_cl55; assert_in_epsilon(1.5186955426473348, worksheet.costpercapita_cl55, 0.002); end
  def test_costpercapita_cm55; assert_in_epsilon(1.9719708106042118, worksheet.costpercapita_cm55, 0.002); end
  def test_costpercapita_cn55; assert_in_epsilon(2.5428204976486075, worksheet.costpercapita_cn55, 0.002); end
  def test_costpercapita_cp55; assert_in_delta(0.9929283205282774, worksheet.costpercapita_cp55, 0.002); end
  def test_costpercapita_cq55; assert_in_epsilon(16.704206245891676, worksheet.costpercapita_cq55, 0.002); end
  def test_costpercapita_cr55; assert_equal("ok", worksheet.costpercapita_cr55); end
  def test_costpercapita_a56; assert_equal("COM.A", worksheet.costpercapita_a56); end
  def test_costpercapita_b56; assert_equal("Commercial", worksheet.costpercapita_b56); end
  def test_costpercapita_c56; assert_equal("Buildings", worksheet.costpercapita_c56); end
  def test_costpercapita_e56; assert_in_epsilon(952.9560344646352, worksheet.costpercapita_e56, 0.002); end
  def test_costpercapita_f56; assert_in_epsilon(952.7740576869879, worksheet.costpercapita_f56, 0.002); end
  def test_costpercapita_g56; assert_in_epsilon(967.4869700218754, worksheet.costpercapita_g56, 0.002); end
  def test_costpercapita_h56; assert_in_epsilon(983.3406897625332, worksheet.costpercapita_h56, 0.002); end
  def test_costpercapita_i56; assert_in_epsilon(993.023990423831, worksheet.costpercapita_i56, 0.002); end
  def test_costpercapita_j56; assert_in_epsilon(1091.7552986487694, worksheet.costpercapita_j56, 0.002); end
  def test_costpercapita_k56; assert_in_epsilon(1203.3467046334522, worksheet.costpercapita_k56, 0.002); end
  def test_costpercapita_l56; assert_in_epsilon(1329.2539893119156, worksheet.costpercapita_l56, 0.002); end
  def test_costpercapita_m56; assert_in_epsilon(1471.1021215342973, worksheet.costpercapita_m56, 0.002); end
  def test_costpercapita_o56; assert_in_epsilon(58.1832170025101, worksheet.costpercapita_o56, 0.002); end
  def test_costpercapita_p56; assert_in_epsilon(57.646518460183664, worksheet.costpercapita_p56, 0.002); end
  def test_costpercapita_q56; assert_in_epsilon(58.02424614226965, worksheet.costpercapita_q56, 0.002); end
  def test_costpercapita_r56; assert_in_epsilon(58.3097807296498, worksheet.costpercapita_r56, 0.002); end
  def test_costpercapita_s56; assert_in_epsilon(58.1789378479071, worksheet.costpercapita_s56, 0.002); end
  def test_costpercapita_t56; assert_in_epsilon(64.4522165637873, worksheet.costpercapita_t56, 0.002); end
  def test_costpercapita_u56; assert_in_epsilon(71.52361739284545, worksheet.costpercapita_u56, 0.002); end
  def test_costpercapita_v56; assert_in_epsilon(79.48666250383478, worksheet.costpercapita_v56, 0.002); end
  def test_costpercapita_w56; assert_in_epsilon(88.44600259338466, worksheet.costpercapita_w56, 0.002); end
  def test_costpercapita_y56; assert_in_delta(0.0, (worksheet.costpercapita_y56||0), 0.002); end
  def test_costpercapita_z56; assert_in_delta(0.0, (worksheet.costpercapita_z56||0), 0.002); end
  def test_costpercapita_aa56; assert_in_delta(0.0, (worksheet.costpercapita_aa56||0), 0.002); end
  def test_costpercapita_ab56; assert_in_delta(0.0, (worksheet.costpercapita_ab56||0), 0.002); end
  def test_costpercapita_ac56; assert_in_delta(0.0, (worksheet.costpercapita_ac56||0), 0.002); end
  def test_costpercapita_ad56; assert_in_delta(0.0, (worksheet.costpercapita_ad56||0), 0.002); end
  def test_costpercapita_ae56; assert_in_delta(0.0, (worksheet.costpercapita_ae56||0), 0.002); end
  def test_costpercapita_af56; assert_in_delta(0.0, (worksheet.costpercapita_af56||0), 0.002); end
  def test_costpercapita_ag56; assert_in_delta(0.0, (worksheet.costpercapita_ag56||0), 0.002); end
  def test_costpercapita_ai56; assert_in_epsilon(1011.1392514671453, worksheet.costpercapita_ai56, 0.002); end
  def test_costpercapita_aj56; assert_in_epsilon(1010.4205761471716, worksheet.costpercapita_aj56, 0.002); end
  def test_costpercapita_ak56; assert_in_epsilon(1025.511216164145, worksheet.costpercapita_ak56, 0.002); end
  def test_costpercapita_al56; assert_in_epsilon(1041.6504704921829, worksheet.costpercapita_al56, 0.002); end
  def test_costpercapita_am56; assert_in_epsilon(1051.2029282717383, worksheet.costpercapita_am56, 0.002); end
  def test_costpercapita_an56; assert_in_epsilon(1156.2075152125567, worksheet.costpercapita_an56, 0.002); end
  def test_costpercapita_ao56; assert_in_epsilon(1274.8703220262976, worksheet.costpercapita_ao56, 0.002); end
  def test_costpercapita_ap56; assert_in_epsilon(1408.7406518157504, worksheet.costpercapita_ap56, 0.002); end
  def test_costpercapita_aq56; assert_in_epsilon(1559.5481241276818, worksheet.costpercapita_aq56, 0.002); end
  def test_costpercapita_as56; assert_in_epsilon(1171.0323395249634, worksheet.costpercapita_as56, 0.002); end
  def test_costpercapita_at56; assert_in_epsilon(23599.36877622428, worksheet.costpercapita_at56, 0.002); end
  def test_costpercapita_av56; assert_in_delta(0.0, (worksheet.costpercapita_av56||0), 0.002); end
  def test_costpercapita_aw56; assert_in_epsilon(5.0, worksheet.costpercapita_aw56, 0.002); end
  def test_costpercapita_ay56; assert_in_epsilon(1569.4417524090609, worksheet.costpercapita_ay56, 0.002); end
  def test_costpercapita_az56; assert_in_epsilon(1569.1420513289697, worksheet.costpercapita_az56, 0.002); end
  def test_costpercapita_ba56; assert_in_epsilon(1593.3730316499868, worksheet.costpercapita_ba56, 0.002); end
  def test_costpercapita_bb56; assert_in_epsilon(1619.4828297855934, worksheet.costpercapita_bb56, 0.002); end
  def test_costpercapita_bc56; assert_in_epsilon(1635.4304452152069, worksheet.costpercapita_bc56, 0.002); end
  def test_costpercapita_bd56; assert_in_epsilon(1798.0329492071542, worksheet.costpercapita_bd56, 0.002); end
  def test_costpercapita_be56; assert_in_epsilon(1981.8149973063428, worksheet.costpercapita_be56, 0.002); end
  def test_costpercapita_bf56; assert_in_epsilon(2189.174143332263, worksheet.costpercapita_bf56, 0.002); end
  def test_costpercapita_bg56; assert_in_epsilon(2422.7865799606902, worksheet.costpercapita_bg56, 0.002); end
  def test_costpercapita_bi56; assert_in_delta(0.0, (worksheet.costpercapita_bi56||0), 0.002); end
  def test_costpercapita_bj56; assert_in_delta(0.0, (worksheet.costpercapita_bj56||0), 0.002); end
  def test_costpercapita_bk56; assert_in_delta(0.0, (worksheet.costpercapita_bk56||0), 0.002); end
  def test_costpercapita_bl56; assert_in_delta(0.0, (worksheet.costpercapita_bl56||0), 0.002); end
  def test_costpercapita_bm56; assert_in_delta(0.0, (worksheet.costpercapita_bm56||0), 0.002); end
  def test_costpercapita_bn56; assert_in_delta(0.0, (worksheet.costpercapita_bn56||0), 0.002); end
  def test_costpercapita_bo56; assert_in_delta(0.0, (worksheet.costpercapita_bo56||0), 0.002); end
  def test_costpercapita_bp56; assert_in_delta(0.0, (worksheet.costpercapita_bp56||0), 0.002); end
  def test_costpercapita_bq56; assert_in_delta(0.0, (worksheet.costpercapita_bq56||0), 0.002); end
  def test_costpercapita_bs56; assert_in_epsilon(1627.6249694115709, worksheet.costpercapita_bs56, 0.002); end
  def test_costpercapita_bt56; assert_in_epsilon(1626.7885697891536, worksheet.costpercapita_bt56, 0.002); end
  def test_costpercapita_bu56; assert_in_epsilon(1651.3972777922563, worksheet.costpercapita_bu56, 0.002); end
  def test_costpercapita_bv56; assert_in_epsilon(1677.7926105152435, worksheet.costpercapita_bv56, 0.002); end
  def test_costpercapita_bw56; assert_in_epsilon(1693.609383063114, worksheet.costpercapita_bw56, 0.002); end
  def test_costpercapita_bx56; assert_in_epsilon(1862.4851657709414, worksheet.costpercapita_bx56, 0.002); end
  def test_costpercapita_by56; assert_in_epsilon(2053.3386146991884, worksheet.costpercapita_by56, 0.002); end
  def test_costpercapita_bz56; assert_in_epsilon(2268.660805836098, worksheet.costpercapita_bz56, 0.002); end
  def test_costpercapita_ca56; assert_in_epsilon(2511.2325825540747, worksheet.costpercapita_ca56, 0.002); end
  def test_costpercapita_cc56; assert_in_epsilon(1885.8811088257378, worksheet.costpercapita_cc56, 0.002); end
  def test_costpercapita_cd56; assert_in_epsilon(38005.91197236212, worksheet.costpercapita_cd56, 0.002); end
  def test_costpercapita_cf56; assert_in_epsilon(616.4857179444257, worksheet.costpercapita_cf56, 0.002); end
  def test_costpercapita_cg56; assert_in_epsilon(616.3679936419818, worksheet.costpercapita_cg56, 0.002); end
  def test_costpercapita_ch56; assert_in_epsilon(625.8860616281114, worksheet.costpercapita_ch56, 0.002); end
  def test_costpercapita_ci56; assert_in_epsilon(636.1421400230603, worksheet.costpercapita_ci56, 0.002); end
  def test_costpercapita_cj56; assert_in_epsilon(642.4064547913758, worksheet.costpercapita_cj56, 0.002); end
  def test_costpercapita_ck56; assert_in_epsilon(706.277650558385, worksheet.costpercapita_ck56, 0.002); end
  def test_costpercapita_cl56; assert_in_epsilon(778.4682926728907, worksheet.costpercapita_cl56, 0.002); end
  def test_costpercapita_cm56; assert_in_epsilon(859.9201540203475, worksheet.costpercapita_cm56, 0.002); end
  def test_costpercapita_cn56; assert_in_epsilon(951.6844584263929, worksheet.costpercapita_cn56, 0.002); end
  def test_costpercapita_cp56; assert_in_epsilon(714.8487693007745, worksheet.costpercapita_cp56, 0.002); end
  def test_costpercapita_cq56; assert_in_epsilon(14406.543196137836, worksheet.costpercapita_cq56, 0.002); end
  def test_costpercapita_cr56; assert_equal("ok", worksheet.costpercapita_cr56); end
  def test_costpercapita_a57; assert_equal("RES.L", worksheet.costpercapita_a57); end
  def test_costpercapita_b57; assert_equal("Residential lighting", worksheet.costpercapita_b57); end
  def test_costpercapita_c57; assert_equal("Buildings", worksheet.costpercapita_c57); end
  def test_costpercapita_e57; assert_in_epsilon(308.97346125039047, worksheet.costpercapita_e57, 0.002); end
  def test_costpercapita_f57; assert_in_epsilon(359.3391069879091, worksheet.costpercapita_f57, 0.002); end
  def test_costpercapita_g57; assert_in_epsilon(416.87241349395657, worksheet.costpercapita_g57, 0.002); end
  def test_costpercapita_h57; assert_in_epsilon(455.4467314888882, worksheet.costpercapita_h57, 0.002); end
  def test_costpercapita_i57; assert_in_epsilon(489.3476540770057, worksheet.costpercapita_i57, 0.002); end
  def test_costpercapita_j57; assert_in_epsilon(519.1372843819173, worksheet.costpercapita_j57, 0.002); end
  def test_costpercapita_k57; assert_in_epsilon(545.5232916761142, worksheet.costpercapita_k57, 0.002); end
  def test_costpercapita_l57; assert_in_epsilon(568.1240511871838, worksheet.costpercapita_l57, 0.002); end
  def test_costpercapita_m57; assert_in_epsilon(587.1384373040722, worksheet.costpercapita_m57, 0.002); end
  def test_costpercapita_o57; assert_in_epsilon(10.842777204361198, worksheet.costpercapita_o57, 0.002); end
  def test_costpercapita_p57; assert_in_epsilon(12.636853384708877, worksheet.costpercapita_p57, 0.002); end
  def test_costpercapita_q57; assert_in_epsilon(14.697967690904065, worksheet.costpercapita_q57, 0.002); end
  def test_costpercapita_r57; assert_in_epsilon(16.10612759429024, worksheet.costpercapita_r57, 0.002); end
  def test_costpercapita_s57; assert_in_epsilon(17.34429953844795, worksheet.costpercapita_s57, 0.002); end
  def test_costpercapita_t57; assert_in_epsilon(18.43196052308185, worksheet.costpercapita_t57, 0.002); end
  def test_costpercapita_u57; assert_in_epsilon(19.39415349856063, worksheet.costpercapita_u57, 0.002); end
  def test_costpercapita_v57; assert_in_epsilon(20.217403147326113, worksheet.costpercapita_v57, 0.002); end
  def test_costpercapita_w57; assert_in_epsilon(20.9089278212082, worksheet.costpercapita_w57, 0.002); end
  def test_costpercapita_y57; assert_in_delta(0.0, (worksheet.costpercapita_y57||0), 0.002); end
  def test_costpercapita_z57; assert_in_delta(0.0, (worksheet.costpercapita_z57||0), 0.002); end
  def test_costpercapita_aa57; assert_in_delta(0.0, (worksheet.costpercapita_aa57||0), 0.002); end
  def test_costpercapita_ab57; assert_in_delta(0.0, (worksheet.costpercapita_ab57||0), 0.002); end
  def test_costpercapita_ac57; assert_in_delta(0.0, (worksheet.costpercapita_ac57||0), 0.002); end
  def test_costpercapita_ad57; assert_in_delta(0.0, (worksheet.costpercapita_ad57||0), 0.002); end
  def test_costpercapita_ae57; assert_in_delta(0.0, (worksheet.costpercapita_ae57||0), 0.002); end
  def test_costpercapita_af57; assert_in_delta(0.0, (worksheet.costpercapita_af57||0), 0.002); end
  def test_costpercapita_ag57; assert_in_delta(0.0, (worksheet.costpercapita_ag57||0), 0.002); end
  def test_costpercapita_ai57; assert_in_epsilon(319.81623845475167, worksheet.costpercapita_ai57, 0.002); end
  def test_costpercapita_aj57; assert_in_epsilon(371.975960372618, worksheet.costpercapita_aj57, 0.002); end
  def test_costpercapita_ak57; assert_in_epsilon(431.57038118486065, worksheet.costpercapita_ak57, 0.002); end
  def test_costpercapita_al57; assert_in_epsilon(471.5528590831784, worksheet.costpercapita_al57, 0.002); end
  def test_costpercapita_am57; assert_in_epsilon(506.6919536154536, worksheet.costpercapita_am57, 0.002); end
  def test_costpercapita_an57; assert_in_epsilon(537.5692449049991, worksheet.costpercapita_an57, 0.002); end
  def test_costpercapita_ao57; assert_in_epsilon(564.9174451746749, worksheet.costpercapita_ao57, 0.002); end
  def test_costpercapita_ap57; assert_in_epsilon(588.3414543345099, worksheet.costpercapita_ap57, 0.002); end
  def test_costpercapita_aq57; assert_in_epsilon(608.0473651252804, worksheet.costpercapita_aq57, 0.002); end
  def test_costpercapita_as57; assert_in_epsilon(488.9425446944807, worksheet.costpercapita_as57, 0.002); end
  def test_costpercapita_at57; assert_in_epsilon(9949.8306415517, worksheet.costpercapita_at57, 0.002); end
  def test_costpercapita_av57; assert_in_delta(0.0, (worksheet.costpercapita_av57||0), 0.002); end
  def test_costpercapita_aw57; assert_in_epsilon(5.0, worksheet.costpercapita_aw57, 0.002); end
  def test_costpercapita_ay57; assert_in_epsilon(439.90869821860787, worksheet.costpercapita_ay57, 0.002); end
  def test_costpercapita_az57; assert_in_epsilon(511.61804685219835, worksheet.costpercapita_az57, 0.002); end
  def test_costpercapita_ba57; assert_in_epsilon(593.5325318919892, worksheet.costpercapita_ba57, 0.002); end
  def test_costpercapita_bb57; assert_in_epsilon(648.4536825472853, worksheet.costpercapita_bb57, 0.002); end
  def test_costpercapita_bc57; assert_in_epsilon(696.720969529784, worksheet.costpercapita_bc57, 0.002); end
  def test_costpercapita_bd57; assert_in_epsilon(739.1347012296313, worksheet.costpercapita_bd57, 0.002); end
  def test_costpercapita_be57; assert_in_epsilon(776.7024394845693, worksheet.costpercapita_be57, 0.002); end
  def test_costpercapita_bf57; assert_in_epsilon(808.8808364738475, worksheet.costpercapita_bf57, 0.002); end
  def test_costpercapita_bg57; assert_in_epsilon(835.9530445860121, worksheet.costpercapita_bg57, 0.002); end
  def test_costpercapita_bi57; assert_in_delta(0.0, (worksheet.costpercapita_bi57||0), 0.002); end
  def test_costpercapita_bj57; assert_in_delta(0.0, (worksheet.costpercapita_bj57||0), 0.002); end
  def test_costpercapita_bk57; assert_in_delta(0.0, (worksheet.costpercapita_bk57||0), 0.002); end
  def test_costpercapita_bl57; assert_in_delta(0.0, (worksheet.costpercapita_bl57||0), 0.002); end
  def test_costpercapita_bm57; assert_in_delta(0.0, (worksheet.costpercapita_bm57||0), 0.002); end
  def test_costpercapita_bn57; assert_in_delta(0.0, (worksheet.costpercapita_bn57||0), 0.002); end
  def test_costpercapita_bo57; assert_in_delta(0.0, (worksheet.costpercapita_bo57||0), 0.002); end
  def test_costpercapita_bp57; assert_in_delta(0.0, (worksheet.costpercapita_bp57||0), 0.002); end
  def test_costpercapita_bq57; assert_in_delta(0.0, (worksheet.costpercapita_bq57||0), 0.002); end
  def test_costpercapita_bs57; assert_in_epsilon(450.75147542296907, worksheet.costpercapita_bs57, 0.002); end
  def test_costpercapita_bt57; assert_in_epsilon(524.2549002369071, worksheet.costpercapita_bt57, 0.002); end
  def test_costpercapita_bu57; assert_in_epsilon(608.2304995828932, worksheet.costpercapita_bu57, 0.002); end
  def test_costpercapita_bv57; assert_in_epsilon(664.5598101415756, worksheet.costpercapita_bv57, 0.002); end
  def test_costpercapita_bw57; assert_in_epsilon(714.065269068232, worksheet.costpercapita_bw57, 0.002); end
  def test_costpercapita_bx57; assert_in_epsilon(757.5666617527132, worksheet.costpercapita_bx57, 0.002); end
  def test_costpercapita_by57; assert_in_epsilon(796.0965929831299, worksheet.costpercapita_by57, 0.002); end
  def test_costpercapita_bz57; assert_in_epsilon(829.0982396211735, worksheet.costpercapita_bz57, 0.002); end
  def test_costpercapita_ca57; assert_in_epsilon(856.8619724072203, worksheet.costpercapita_ca57, 0.002); end
  def test_costpercapita_cc57; assert_in_epsilon(689.0539356907572, worksheet.costpercapita_cc57, 0.002); end
  def test_costpercapita_cd57; assert_in_epsilon(14022.186128021149, worksheet.costpercapita_cd57, 0.002); end
  def test_costpercapita_cf57; assert_in_epsilon(130.9352369682174, worksheet.costpercapita_cf57, 0.002); end
  def test_costpercapita_cg57; assert_in_epsilon(152.27893986428927, worksheet.costpercapita_cg57, 0.002); end
  def test_costpercapita_ch57; assert_in_epsilon(176.6601183980326, worksheet.costpercapita_ch57, 0.002); end
  def test_costpercapita_ci57; assert_in_epsilon(193.0069510583971, worksheet.costpercapita_ci57, 0.002); end
  def test_costpercapita_cj57; assert_in_epsilon(207.3733154527784, worksheet.costpercapita_cj57, 0.002); end
  def test_costpercapita_ck57; assert_in_epsilon(219.99741684771408, worksheet.costpercapita_ck57, 0.002); end
  def test_costpercapita_cl57; assert_in_epsilon(231.17914780845504, worksheet.costpercapita_cl57, 0.002); end
  def test_costpercapita_cm57; assert_in_epsilon(240.75678528666373, worksheet.costpercapita_cm57, 0.002); end
  def test_costpercapita_cn57; assert_in_epsilon(248.81460728193977, worksheet.costpercapita_cn57, 0.002); end
  def test_costpercapita_cp57; assert_in_epsilon(200.11139099627636, worksheet.costpercapita_cp57, 0.002); end
  def test_costpercapita_cq57; assert_in_epsilon(4072.3554864694497, worksheet.costpercapita_cq57, 0.002); end
  def test_costpercapita_cr57; assert_equal("ok", worksheet.costpercapita_cr57); end
  def test_costpercapita_a58; assert_equal("RES.W", worksheet.costpercapita_a58); end
  def test_costpercapita_b58; assert_equal("Residential water heating", worksheet.costpercapita_b58); end
  def test_costpercapita_c58; assert_equal("Buildings", worksheet.costpercapita_c58); end
  def test_costpercapita_e58; assert_in_epsilon(132.0937375056388, worksheet.costpercapita_e58, 0.002); end
  def test_costpercapita_f58; assert_in_epsilon(156.59004590706252, worksheet.costpercapita_f58, 0.002); end
  def test_costpercapita_g58; assert_in_epsilon(186.13780287945977, worksheet.costpercapita_g58, 0.002); end
  def test_costpercapita_h58; assert_in_epsilon(209.069329355755, worksheet.costpercapita_h58, 0.002); end
  def test_costpercapita_i58; assert_in_epsilon(229.0188760688829, worksheet.costpercapita_i58, 0.002); end
  def test_costpercapita_j58; assert_in_epsilon(246.24296946781152, worksheet.costpercapita_j58, 0.002); end
  def test_costpercapita_k58; assert_in_epsilon(261.1147846920992, worksheet.costpercapita_k58, 0.002); end
  def test_costpercapita_l58; assert_in_epsilon(273.50818515192054, worksheet.costpercapita_l58, 0.002); end
  def test_costpercapita_m58; assert_in_epsilon(283.5801319250093, worksheet.costpercapita_m58, 0.002); end
  def test_costpercapita_o58; assert_in_epsilon(7.609599273500649, worksheet.costpercapita_o58, 0.002); end
  def test_costpercapita_p58; assert_in_epsilon(9.007437678001505, worksheet.costpercapita_p58, 0.002); end
  def test_costpercapita_q58; assert_in_epsilon(10.691229764170126, worksheet.costpercapita_q58, 0.002); end
  def test_costpercapita_r58; assert_in_epsilon(11.99386591194937, worksheet.costpercapita_r58, 0.002); end
  def test_costpercapita_s58; assert_in_epsilon(13.127359622152925, worksheet.costpercapita_s58, 0.002); end
  def test_costpercapita_t58; assert_in_epsilon(14.106494004980947, worksheet.costpercapita_t58, 0.002); end
  def test_costpercapita_u58; assert_in_epsilon(14.952616781117865, worksheet.costpercapita_u58, 0.002); end
  def test_costpercapita_v58; assert_in_epsilon(15.658424416574578, worksheet.costpercapita_v58, 0.002); end
  def test_costpercapita_w58; assert_in_epsilon(16.232806096962697, worksheet.costpercapita_w58, 0.002); end
  def test_costpercapita_y58; assert_in_delta(0.0, (worksheet.costpercapita_y58||0), 0.002); end
  def test_costpercapita_z58; assert_in_delta(0.0, (worksheet.costpercapita_z58||0), 0.002); end
  def test_costpercapita_aa58; assert_in_delta(0.0, (worksheet.costpercapita_aa58||0), 0.002); end
  def test_costpercapita_ab58; assert_in_delta(0.0, (worksheet.costpercapita_ab58||0), 0.002); end
  def test_costpercapita_ac58; assert_in_delta(0.0, (worksheet.costpercapita_ac58||0), 0.002); end
  def test_costpercapita_ad58; assert_in_delta(0.0, (worksheet.costpercapita_ad58||0), 0.002); end
  def test_costpercapita_ae58; assert_in_delta(0.0, (worksheet.costpercapita_ae58||0), 0.002); end
  def test_costpercapita_af58; assert_in_delta(0.0, (worksheet.costpercapita_af58||0), 0.002); end
  def test_costpercapita_ag58; assert_in_delta(0.0, (worksheet.costpercapita_ag58||0), 0.002); end
  def test_costpercapita_ai58; assert_in_epsilon(139.70333677913948, worksheet.costpercapita_ai58, 0.002); end
  def test_costpercapita_aj58; assert_in_epsilon(165.597483585064, worksheet.costpercapita_aj58, 0.002); end
  def test_costpercapita_ak58; assert_in_epsilon(196.8290326436299, worksheet.costpercapita_ak58, 0.002); end
  def test_costpercapita_al58; assert_in_epsilon(221.06319526770437, worksheet.costpercapita_al58, 0.002); end
  def test_costpercapita_am58; assert_in_epsilon(242.14623569103583, worksheet.costpercapita_am58, 0.002); end
  def test_costpercapita_an58; assert_in_epsilon(260.3494634727924, worksheet.costpercapita_an58, 0.002); end
  def test_costpercapita_ao58; assert_in_epsilon(276.06740147321705, worksheet.costpercapita_ao58, 0.002); end
  def test_costpercapita_ap58; assert_in_epsilon(289.1666095684952, worksheet.costpercapita_ap58, 0.002); end
  def test_costpercapita_aq58; assert_in_epsilon(299.81293802197206, worksheet.costpercapita_aq58, 0.002); end
  def test_costpercapita_as58; assert_in_epsilon(232.30396627811672, worksheet.costpercapita_as58, 0.002); end
  def test_costpercapita_at58; assert_in_epsilon(4687.120404372771, worksheet.costpercapita_at58, 0.002); end
  def test_costpercapita_av58; assert_in_delta(0.0, (worksheet.costpercapita_av58||0), 0.002); end
  def test_costpercapita_aw58; assert_in_epsilon(5.0, worksheet.costpercapita_aw58, 0.002); end
  def test_costpercapita_ay58; assert_in_epsilon(188.07176471976888, worksheet.costpercapita_ay58, 0.002); end
  def test_costpercapita_az58; assert_in_epsilon(222.94899688210964, worksheet.costpercapita_az58, 0.002); end
  def test_costpercapita_ba58; assert_in_epsilon(265.01835537135963, worksheet.costpercapita_ba58, 0.002); end
  def test_costpercapita_bb58; assert_in_epsilon(297.66769010557323, worksheet.costpercapita_bb58, 0.002); end
  def test_costpercapita_bc58; assert_in_epsilon(326.0713565211538, worksheet.costpercapita_bc58, 0.002); end
  def test_costpercapita_bd58; assert_in_epsilon(350.59459056997724, worksheet.costpercapita_bd58, 0.002); end
  def test_costpercapita_be58; assert_in_epsilon(371.76870969654607, worksheet.costpercapita_be58, 0.002); end
  def test_costpercapita_bf58; assert_in_epsilon(389.41412377424143, worksheet.costpercapita_bf58, 0.002); end
  def test_costpercapita_bg58; assert_in_epsilon(403.7543100657947, worksheet.costpercapita_bg58, 0.002); end
  def test_costpercapita_bi58; assert_in_delta(0.0, (worksheet.costpercapita_bi58||0), 0.002); end
  def test_costpercapita_bj58; assert_in_delta(0.0, (worksheet.costpercapita_bj58||0), 0.002); end
  def test_costpercapita_bk58; assert_in_delta(0.0, (worksheet.costpercapita_bk58||0), 0.002); end
  def test_costpercapita_bl58; assert_in_delta(0.0, (worksheet.costpercapita_bl58||0), 0.002); end
  def test_costpercapita_bm58; assert_in_delta(0.0, (worksheet.costpercapita_bm58||0), 0.002); end
  def test_costpercapita_bn58; assert_in_delta(0.0, (worksheet.costpercapita_bn58||0), 0.002); end
  def test_costpercapita_bo58; assert_in_delta(0.0, (worksheet.costpercapita_bo58||0), 0.002); end
  def test_costpercapita_bp58; assert_in_delta(0.0, (worksheet.costpercapita_bp58||0), 0.002); end
  def test_costpercapita_bq58; assert_in_delta(0.0, (worksheet.costpercapita_bq58||0), 0.002); end
  def test_costpercapita_bs58; assert_in_epsilon(195.68136399326954, worksheet.costpercapita_bs58, 0.002); end
  def test_costpercapita_bt58; assert_in_epsilon(231.95643456011115, worksheet.costpercapita_bt58, 0.002); end
  def test_costpercapita_bu58; assert_in_epsilon(275.7095851355297, worksheet.costpercapita_bu58, 0.002); end
  def test_costpercapita_bv58; assert_in_epsilon(309.6615560175226, worksheet.costpercapita_bv58, 0.002); end
  def test_costpercapita_bw58; assert_in_epsilon(339.19871614330674, worksheet.costpercapita_bw58, 0.002); end
  def test_costpercapita_bx58; assert_in_epsilon(364.70108457495814, worksheet.costpercapita_bx58, 0.002); end
  def test_costpercapita_by58; assert_in_epsilon(386.7213264776639, worksheet.costpercapita_by58, 0.002); end
  def test_costpercapita_bz58; assert_in_epsilon(405.072548190816, worksheet.costpercapita_bz58, 0.002); end
  def test_costpercapita_ca58; assert_in_epsilon(419.9871161627574, worksheet.costpercapita_ca58, 0.002); end
  def test_costpercapita_cc58; assert_in_epsilon(325.40997013954836, worksheet.costpercapita_cc58, 0.002); end
  def test_costpercapita_cd58; assert_in_epsilon(6565.65247576358, worksheet.costpercapita_cd58, 0.002); end
  def test_costpercapita_cf58; assert_in_epsilon(55.97802721413006, worksheet.costpercapita_cf58, 0.002); end
  def test_costpercapita_cg58; assert_in_epsilon(66.35895097504714, worksheet.costpercapita_cg58, 0.002); end
  def test_costpercapita_ch58; assert_in_epsilon(78.88055249189983, worksheet.costpercapita_ch58, 0.002); end
  def test_costpercapita_ci58; assert_in_epsilon(88.59836074981823, worksheet.costpercapita_ci58, 0.002); end
  def test_costpercapita_cj58; assert_in_epsilon(97.05248045227091, worksheet.costpercapita_cj58, 0.002); end
  def test_costpercapita_ck58; assert_in_epsilon(104.35162110216572, worksheet.costpercapita_ck58, 0.002); end
  def test_costpercapita_cl58; assert_in_epsilon(110.65392500444688, worksheet.costpercapita_cl58, 0.002); end
  def test_costpercapita_cm58; assert_in_epsilon(115.90593862232085, worksheet.costpercapita_cm58, 0.002); end
  def test_costpercapita_cn58; assert_in_epsilon(120.17417814078537, worksheet.costpercapita_cn58, 0.002); end
  def test_costpercapita_cp58; assert_in_epsilon(93.10600386143166, worksheet.costpercapita_cp58, 0.002); end
  def test_costpercapita_cq58; assert_in_epsilon(1878.5320713908072, worksheet.costpercapita_cq58, 0.002); end
  def test_costpercapita_cr58; assert_equal("ok", worksheet.costpercapita_cr58); end
  def test_costpercapita_a59; assert_equal("RES.H", worksheet.costpercapita_a59); end
  def test_costpercapita_b59; assert_equal("Residential space heating", worksheet.costpercapita_b59); end
  def test_costpercapita_c59; assert_equal("Buildings", worksheet.costpercapita_c59); end
  def test_costpercapita_e59; assert_in_epsilon(31.405368695309022, worksheet.costpercapita_e59, 0.002); end
  def test_costpercapita_f59; assert_in_epsilon(43.973340990118224, worksheet.costpercapita_f59, 0.002); end
  def test_costpercapita_g59; assert_in_epsilon(60.73060699684998, worksheet.costpercapita_g59, 0.002); end
  def test_costpercapita_h59; assert_in_epsilon(78.43585886557462, worksheet.costpercapita_h59, 0.002); end
  def test_costpercapita_i59; assert_in_epsilon(98.27193690863898, worksheet.costpercapita_i59, 0.002); end
  def test_costpercapita_j59; assert_in_epsilon(105.51408587773709, worksheet.costpercapita_j59, 0.002); end
  def test_costpercapita_k59; assert_in_epsilon(111.87865283555492, worksheet.costpercapita_k59, 0.002); end
  def test_costpercapita_l59; assert_in_epsilon(117.29113713626732, worksheet.costpercapita_l59, 0.002); end
  def test_costpercapita_m59; assert_in_epsilon(121.79835302582505, worksheet.costpercapita_m59, 0.002); end
  def test_costpercapita_o59; assert_in_epsilon(1.0183962883885378, worksheet.costpercapita_o59, 0.002); end
  def test_costpercapita_p59; assert_in_epsilon(1.4772157605637386, worksheet.costpercapita_p59, 0.002); end
  def test_costpercapita_q59; assert_in_epsilon(2.0967375435413698, worksheet.costpercapita_q59, 0.002); end
  def test_costpercapita_r59; assert_in_epsilon(2.7785119726716196, worksheet.costpercapita_r59, 0.002); end
  def test_costpercapita_s59; assert_in_epsilon(3.547578975731679, worksheet.costpercapita_s59, 0.002); end
  def test_costpercapita_t59; assert_in_epsilon(3.824854881028566, worksheet.costpercapita_t59, 0.002); end
  def test_costpercapita_u59; assert_in_epsilon(4.06805129541457, worksheet.costpercapita_u59, 0.002); end
  def test_costpercapita_v59; assert_in_epsilon(4.274503822676743, worksheet.costpercapita_v59, 0.002); end
  def test_costpercapita_w59; assert_in_epsilon(4.445986460437213, worksheet.costpercapita_w59, 0.002); end
  def test_costpercapita_y59; assert_in_delta(0.0, (worksheet.costpercapita_y59||0), 0.002); end
  def test_costpercapita_z59; assert_in_delta(0.0, (worksheet.costpercapita_z59||0), 0.002); end
  def test_costpercapita_aa59; assert_in_delta(0.0, (worksheet.costpercapita_aa59||0), 0.002); end
  def test_costpercapita_ab59; assert_in_delta(0.0, (worksheet.costpercapita_ab59||0), 0.002); end
  def test_costpercapita_ac59; assert_in_delta(0.0, (worksheet.costpercapita_ac59||0), 0.002); end
  def test_costpercapita_ad59; assert_in_delta(0.0, (worksheet.costpercapita_ad59||0), 0.002); end
  def test_costpercapita_ae59; assert_in_delta(0.0, (worksheet.costpercapita_ae59||0), 0.002); end
  def test_costpercapita_af59; assert_in_delta(0.0, (worksheet.costpercapita_af59||0), 0.002); end
  def test_costpercapita_ag59; assert_in_delta(0.0, (worksheet.costpercapita_ag59||0), 0.002); end
  def test_costpercapita_ai59; assert_in_epsilon(32.42376498369756, worksheet.costpercapita_ai59, 0.002); end
  def test_costpercapita_aj59; assert_in_epsilon(45.45055675068197, worksheet.costpercapita_aj59, 0.002); end
  def test_costpercapita_ak59; assert_in_epsilon(62.82734454039135, worksheet.costpercapita_ak59, 0.002); end
  def test_costpercapita_al59; assert_in_epsilon(81.21437083824624, worksheet.costpercapita_al59, 0.002); end
  def test_costpercapita_am59; assert_in_epsilon(101.81951588437067, worksheet.costpercapita_am59, 0.002); end
  def test_costpercapita_an59; assert_in_epsilon(109.33894075876566, worksheet.costpercapita_an59, 0.002); end
  def test_costpercapita_ao59; assert_in_epsilon(115.9467041309695, worksheet.costpercapita_ao59, 0.002); end
  def test_costpercapita_ap59; assert_in_epsilon(121.56564095894407, worksheet.costpercapita_ap59, 0.002); end
  def test_costpercapita_aq59; assert_in_epsilon(126.24433948626226, worksheet.costpercapita_aq59, 0.002); end
  def test_costpercapita_as59; assert_in_epsilon(88.53679759248104, worksheet.costpercapita_as59, 0.002); end
  def test_costpercapita_at59; assert_in_epsilon(1736.7191939850843, worksheet.costpercapita_at59, 0.002); end
  def test_costpercapita_av59; assert_in_delta(0.0, (worksheet.costpercapita_av59||0), 0.002); end
  def test_costpercapita_aw59; assert_in_epsilon(5.0, worksheet.costpercapita_aw59, 0.002); end
  def test_costpercapita_ay59; assert_in_epsilon(44.71417967070255, worksheet.costpercapita_ay59, 0.002); end
  def test_costpercapita_az59; assert_in_epsilon(62.60814476751897, worksheet.costpercapita_az59, 0.002); end
  def test_costpercapita_ba59; assert_in_epsilon(86.46672163328525, worksheet.costpercapita_ba59, 0.002); end
  def test_costpercapita_bb59; assert_in_epsilon(111.67501709556542, worksheet.costpercapita_bb59, 0.002); end
  def test_costpercapita_bc59; assert_in_epsilon(139.91712965233162, worksheet.costpercapita_bc59, 0.002); end
  def test_costpercapita_bd59; assert_in_epsilon(150.22832049832908, worksheet.costpercapita_bd59, 0.002); end
  def test_costpercapita_be59; assert_in_epsilon(159.29003199228111, worksheet.costpercapita_be59, 0.002); end
  def test_costpercapita_bf59; assert_in_epsilon(166.99619197514608, worksheet.costpercapita_bf59, 0.002); end
  def test_costpercapita_bg59; assert_in_epsilon(173.41345340122936, worksheet.costpercapita_bg59, 0.002); end
  def test_costpercapita_bi59; assert_in_delta(0.0, (worksheet.costpercapita_bi59||0), 0.002); end
  def test_costpercapita_bj59; assert_in_delta(0.0, (worksheet.costpercapita_bj59||0), 0.002); end
  def test_costpercapita_bk59; assert_in_delta(0.0, (worksheet.costpercapita_bk59||0), 0.002); end
  def test_costpercapita_bl59; assert_in_delta(0.0, (worksheet.costpercapita_bl59||0), 0.002); end
  def test_costpercapita_bm59; assert_in_delta(0.0, (worksheet.costpercapita_bm59||0), 0.002); end
  def test_costpercapita_bn59; assert_in_delta(0.0, (worksheet.costpercapita_bn59||0), 0.002); end
  def test_costpercapita_bo59; assert_in_delta(0.0, (worksheet.costpercapita_bo59||0), 0.002); end
  def test_costpercapita_bp59; assert_in_delta(0.0, (worksheet.costpercapita_bp59||0), 0.002); end
  def test_costpercapita_bq59; assert_in_delta(0.0, (worksheet.costpercapita_bq59||0), 0.002); end
  def test_costpercapita_bs59; assert_in_epsilon(45.732575959091086, worksheet.costpercapita_bs59, 0.002); end
  def test_costpercapita_bt59; assert_in_epsilon(64.0853605280827, worksheet.costpercapita_bt59, 0.002); end
  def test_costpercapita_bu59; assert_in_epsilon(88.56345917682661, worksheet.costpercapita_bu59, 0.002); end
  def test_costpercapita_bv59; assert_in_epsilon(114.45352906823705, worksheet.costpercapita_bv59, 0.002); end
  def test_costpercapita_bw59; assert_in_epsilon(143.4647086280633, worksheet.costpercapita_bw59, 0.002); end
  def test_costpercapita_bx59; assert_in_epsilon(154.05317537935767, worksheet.costpercapita_bx59, 0.002); end
  def test_costpercapita_by59; assert_in_epsilon(163.35808328769568, worksheet.costpercapita_by59, 0.002); end
  def test_costpercapita_bz59; assert_in_epsilon(171.27069579782284, worksheet.costpercapita_bz59, 0.002); end
  def test_costpercapita_ca59; assert_in_epsilon(177.8594398616666, worksheet.costpercapita_ca59, 0.002); end
  def test_costpercapita_cc59; assert_in_epsilon(124.76011418742706, worksheet.costpercapita_cc59, 0.002); end
  def test_costpercapita_cd59; assert_in_epsilon(2447.4078028838167, worksheet.costpercapita_cd59, 0.002); end
  def test_costpercapita_cf59; assert_in_epsilon(13.308810975393527, worksheet.costpercapita_cf59, 0.002); end
  def test_costpercapita_cg59; assert_in_epsilon(18.634803777400744, worksheet.costpercapita_cg59, 0.002); end
  def test_costpercapita_ch59; assert_in_epsilon(25.736114636435257, worksheet.costpercapita_ch59, 0.002); end
  def test_costpercapita_ci59; assert_in_epsilon(33.239158229990814, worksheet.costpercapita_ci59, 0.002); end
  def test_costpercapita_cj59; assert_in_epsilon(41.64519274369264, worksheet.costpercapita_cj59, 0.002); end
  def test_costpercapita_ck59; assert_in_epsilon(44.714234620591995, worksheet.costpercapita_ck59, 0.002); end
  def test_costpercapita_cl59; assert_in_epsilon(47.4113791567262, worksheet.costpercapita_cl59, 0.002); end
  def test_costpercapita_cm59; assert_in_epsilon(49.70505483887876, worksheet.costpercapita_cm59, 0.002); end
  def test_costpercapita_cn59; assert_in_epsilon(51.615100375404324, worksheet.costpercapita_cn59, 0.002); end
  def test_costpercapita_cp59; assert_in_epsilon(36.22331659494603, worksheet.costpercapita_cp59, 0.002); end
  def test_costpercapita_cq59; assert_in_epsilon(710.6886088987328, worksheet.costpercapita_cq59, 0.002); end
  def test_costpercapita_cr59; assert_equal("ok", worksheet.costpercapita_cr59); end
  def test_costpercapita_a60; assert_equal("RES.O", worksheet.costpercapita_a60); end
  def test_costpercapita_b60; assert_equal("Residential other", worksheet.costpercapita_b60); end
  def test_costpercapita_c60; assert_equal("Buildings", worksheet.costpercapita_c60); end
  def test_costpercapita_e60; assert_in_epsilon(13.947563478583067, worksheet.costpercapita_e60, 0.002); end
  def test_costpercapita_f60; assert_in_epsilon(16.414196210755584, worksheet.costpercapita_f60, 0.002); end
  def test_costpercapita_g60; assert_in_epsilon(19.297202128740246, worksheet.costpercapita_g60, 0.002); end
  def test_costpercapita_h60; assert_in_epsilon(21.408048305091892, worksheet.costpercapita_h60, 0.002); end
  def test_costpercapita_i60; assert_in_epsilon(23.26279143978159, worksheet.costpercapita_i60, 0.002); end
  def test_costpercapita_j60; assert_in_epsilon(24.88521576457973, worksheet.costpercapita_j60, 0.002); end
  def test_costpercapita_k60; assert_in_epsilon(26.308852589824756, worksheet.costpercapita_k60, 0.002); end
  def test_costpercapita_l60; assert_in_epsilon(27.51614545991234, worksheet.costpercapita_l60, 0.002); end
  def test_costpercapita_m60; assert_in_epsilon(28.517985273530915, worksheet.costpercapita_m60, 0.002); end
  def test_costpercapita_o60; assert_in_delta(0.6555208939521215, worksheet.costpercapita_o60, 0.002); end
  def test_costpercapita_p60; assert_in_delta(0.7795832104531262, worksheet.costpercapita_p60, 0.002); end
  def test_costpercapita_q60; assert_in_delta(0.928073544375427, worksheet.costpercapita_q60, 0.002); end
  def test_costpercapita_r60; assert_in_epsilon(1.0439838456873078, worksheet.costpercapita_r60, 0.002); end
  def test_costpercapita_s60; assert_in_epsilon(1.1460633365410273, worksheet.costpercapita_s60, 0.002); end
  def test_costpercapita_t60; assert_in_epsilon(1.2353530229879066, worksheet.costpercapita_t60, 0.002); end
  def test_costpercapita_u60; assert_in_epsilon(1.3134915895683454, worksheet.costpercapita_u60, 0.002); end
  def test_costpercapita_v60; assert_in_epsilon(1.3796261865949757, worksheet.costpercapita_v60, 0.002); end
  def test_costpercapita_w60; assert_in_epsilon(1.434339428821475, worksheet.costpercapita_w60, 0.002); end
  def test_costpercapita_y60; assert_in_delta(0.0, (worksheet.costpercapita_y60||0), 0.002); end
  def test_costpercapita_z60; assert_in_delta(0.0, (worksheet.costpercapita_z60||0), 0.002); end
  def test_costpercapita_aa60; assert_in_delta(0.0, (worksheet.costpercapita_aa60||0), 0.002); end
  def test_costpercapita_ab60; assert_in_delta(0.0, (worksheet.costpercapita_ab60||0), 0.002); end
  def test_costpercapita_ac60; assert_in_delta(0.0, (worksheet.costpercapita_ac60||0), 0.002); end
  def test_costpercapita_ad60; assert_in_delta(0.0, (worksheet.costpercapita_ad60||0), 0.002); end
  def test_costpercapita_ae60; assert_in_delta(0.0, (worksheet.costpercapita_ae60||0), 0.002); end
  def test_costpercapita_af60; assert_in_delta(0.0, (worksheet.costpercapita_af60||0), 0.002); end
  def test_costpercapita_ag60; assert_in_delta(0.0, (worksheet.costpercapita_ag60||0), 0.002); end
  def test_costpercapita_ai60; assert_in_epsilon(14.603084372535188, worksheet.costpercapita_ai60, 0.002); end
  def test_costpercapita_aj60; assert_in_epsilon(17.19377942120871, worksheet.costpercapita_aj60, 0.002); end
  def test_costpercapita_ak60; assert_in_epsilon(20.22527567311567, worksheet.costpercapita_ak60, 0.002); end
  def test_costpercapita_al60; assert_in_epsilon(22.4520321507792, worksheet.costpercapita_al60, 0.002); end
  def test_costpercapita_am60; assert_in_epsilon(24.408854776322617, worksheet.costpercapita_am60, 0.002); end
  def test_costpercapita_an60; assert_in_epsilon(26.12056878756764, worksheet.costpercapita_an60, 0.002); end
  def test_costpercapita_ao60; assert_in_epsilon(27.622344179393103, worksheet.costpercapita_ao60, 0.002); end
  def test_costpercapita_ap60; assert_in_epsilon(28.89577164650732, worksheet.costpercapita_ap60, 0.002); end
  def test_costpercapita_aq60; assert_in_epsilon(29.952324702352392, worksheet.costpercapita_aq60, 0.002); end
  def test_costpercapita_as60; assert_in_epsilon(23.49711507886465, worksheet.costpercapita_as60, 0.002); end
  def test_costpercapita_at60; assert_in_epsilon(475.5947525035495, worksheet.costpercapita_at60, 0.002); end
  def test_costpercapita_av60; assert_in_delta(0.0, (worksheet.costpercapita_av60||0), 0.002); end
  def test_costpercapita_aw60; assert_in_epsilon(5.0, worksheet.costpercapita_aw60, 0.002); end
  def test_costpercapita_ay60; assert_in_epsilon(19.858192572120533, worksheet.costpercapita_ay60, 0.002); end
  def test_costpercapita_az60; assert_in_epsilon(23.370122657643535, worksheet.costpercapita_az60, 0.002); end
  def test_costpercapita_ba60; assert_in_epsilon(27.474874487152224, worksheet.costpercapita_ba60, 0.002); end
  def test_costpercapita_bb60; assert_in_epsilon(30.480244559457763, worksheet.costpercapita_bb60, 0.002); end
  def test_costpercapita_bc60; assert_in_epsilon(33.1209815166362, worksheet.costpercapita_bc60, 0.002); end
  def test_costpercapita_bd60; assert_in_epsilon(35.43094875392511, worksheet.costpercapita_bd60, 0.002); end
  def test_costpercapita_be60; assert_in_epsilon(37.457887313616105, worksheet.costpercapita_be60, 0.002); end
  def test_costpercapita_bf60; assert_in_epsilon(39.17680075265233, worksheet.costpercapita_bf60, 0.002); end
  def test_costpercapita_bg60; assert_in_epsilon(40.603195260610946, worksheet.costpercapita_bg60, 0.002); end
  def test_costpercapita_bi60; assert_in_delta(0.0, (worksheet.costpercapita_bi60||0), 0.002); end
  def test_costpercapita_bj60; assert_in_delta(0.0, (worksheet.costpercapita_bj60||0), 0.002); end
  def test_costpercapita_bk60; assert_in_delta(0.0, (worksheet.costpercapita_bk60||0), 0.002); end
  def test_costpercapita_bl60; assert_in_delta(0.0, (worksheet.costpercapita_bl60||0), 0.002); end
  def test_costpercapita_bm60; assert_in_delta(0.0, (worksheet.costpercapita_bm60||0), 0.002); end
  def test_costpercapita_bn60; assert_in_delta(0.0, (worksheet.costpercapita_bn60||0), 0.002); end
  def test_costpercapita_bo60; assert_in_delta(0.0, (worksheet.costpercapita_bo60||0), 0.002); end
  def test_costpercapita_bp60; assert_in_delta(0.0, (worksheet.costpercapita_bp60||0), 0.002); end
  def test_costpercapita_bq60; assert_in_delta(0.0, (worksheet.costpercapita_bq60||0), 0.002); end
  def test_costpercapita_bs60; assert_in_epsilon(20.51371346607265, worksheet.costpercapita_bs60, 0.002); end
  def test_costpercapita_bt60; assert_in_epsilon(24.149705868096657, worksheet.costpercapita_bt60, 0.002); end
  def test_costpercapita_bu60; assert_in_epsilon(28.402948031527654, worksheet.costpercapita_bu60, 0.002); end
  def test_costpercapita_bv60; assert_in_epsilon(31.524228405145074, worksheet.costpercapita_bv60, 0.002); end
  def test_costpercapita_bw60; assert_in_epsilon(34.26704485317723, worksheet.costpercapita_bw60, 0.002); end
  def test_costpercapita_bx60; assert_in_epsilon(36.66630177691301, worksheet.costpercapita_bx60, 0.002); end
  def test_costpercapita_by60; assert_in_epsilon(38.771378903184456, worksheet.costpercapita_by60, 0.002); end
  def test_costpercapita_bz60; assert_in_epsilon(40.55642693924732, worksheet.costpercapita_bz60, 0.002); end
  def test_costpercapita_ca60; assert_in_epsilon(42.03753468943242, worksheet.costpercapita_ca60, 0.002); end
  def test_costpercapita_cc60; assert_in_epsilon(32.98769810364406, worksheet.costpercapita_cc60, 0.002); end
  def test_costpercapita_cd60; assert_in_epsilon(667.7332042329035, worksheet.costpercapita_cd60, 0.002); end
  def test_costpercapita_cf60; assert_in_epsilon(5.910629093537465, worksheet.costpercapita_cf60, 0.002); end
  def test_costpercapita_cg60; assert_in_epsilon(6.95592644688795, worksheet.costpercapita_cg60, 0.002); end
  def test_costpercapita_ch60; assert_in_epsilon(8.17767235841198, worksheet.costpercapita_ch60, 0.002); end
  def test_costpercapita_ci60; assert_in_epsilon(9.072196254365872, worksheet.costpercapita_ci60, 0.002); end
  def test_costpercapita_cj60; assert_in_epsilon(9.858190076854612, worksheet.costpercapita_cj60, 0.002); end
  def test_costpercapita_ck60; assert_in_epsilon(10.545732989345375, worksheet.costpercapita_ck60, 0.002); end
  def test_costpercapita_cl60; assert_in_epsilon(11.149034723791353, worksheet.costpercapita_cl60, 0.002); end
  def test_costpercapita_cm60; assert_in_epsilon(11.660655292739994, worksheet.costpercapita_cm60, 0.002); end
  def test_costpercapita_cn60; assert_in_epsilon(12.085209987080031, worksheet.costpercapita_cn60, 0.002); end
  def test_costpercapita_cp60; assert_in_epsilon(9.490583024779404, worksheet.costpercapita_cp60, 0.002); end
  def test_costpercapita_cq60; assert_in_epsilon(192.13845172935407, worksheet.costpercapita_cq60, 0.002); end
  def test_costpercapita_cr60; assert_equal("ok", worksheet.costpercapita_cr60); end
  def test_costpercapita_a61; assert_equal("RES.K", worksheet.costpercapita_a61); end
  def test_costpercapita_b61; assert_equal("Residential cooking", worksheet.costpercapita_b61); end
  def test_costpercapita_c61; assert_equal("Buildings", worksheet.costpercapita_c61); end
  def test_costpercapita_e61; assert_in_epsilon(49.94597981998638, worksheet.costpercapita_e61, 0.002); end
  def test_costpercapita_f61; assert_in_epsilon(53.96814883857157, worksheet.costpercapita_f61, 0.002); end
  def test_costpercapita_g61; assert_in_epsilon(57.747334170129, worksheet.costpercapita_g61, 0.002); end
  def test_costpercapita_h61; assert_in_epsilon(57.83113843300183, worksheet.costpercapita_h61, 0.002); end
  def test_costpercapita_i61; assert_in_epsilon(56.58319369667016, worksheet.costpercapita_i61, 0.002); end
  def test_costpercapita_j61; assert_in_epsilon(59.550162217981914, worksheet.costpercapita_j61, 0.002); end
  def test_costpercapita_k61; assert_in_epsilon(62.1151632462284, worksheet.costpercapita_k61, 0.002); end
  def test_costpercapita_l61; assert_in_epsilon(64.24337205698626, worksheet.costpercapita_l61, 0.002); end
  def test_costpercapita_m61; assert_in_epsilon(65.9656470457042, worksheet.costpercapita_m61, 0.002); end
  def test_costpercapita_o61; assert_in_epsilon(2.4550882155595146, worksheet.costpercapita_o61, 0.002); end
  def test_costpercapita_p61; assert_in_epsilon(2.740373656565955, worksheet.costpercapita_p61, 0.002); end
  def test_costpercapita_q61; assert_in_epsilon(3.0321781534707064, worksheet.costpercapita_q61, 0.002); end
  def test_costpercapita_r61; assert_in_epsilon(3.1511841431917373, worksheet.costpercapita_r61, 0.002); end
  def test_costpercapita_s61; assert_in_epsilon(3.212512910900402, worksheet.costpercapita_s61, 0.002); end
  def test_costpercapita_t61; assert_in_epsilon(3.372804487351122, worksheet.costpercapita_t61, 0.002); end
  def test_costpercapita_u61; assert_in_epsilon(3.5117413355306337, worksheet.costpercapita_u61, 0.002); end
  def test_costpercapita_v61; assert_in_epsilon(3.62729881600057, worksheet.costpercapita_v61, 0.002); end
  def test_costpercapita_w61; assert_in_epsilon(3.7211508540262916, worksheet.costpercapita_w61, 0.002); end
  def test_costpercapita_y61; assert_in_delta(0.0, (worksheet.costpercapita_y61||0), 0.002); end
  def test_costpercapita_z61; assert_in_delta(0.0, (worksheet.costpercapita_z61||0), 0.002); end
  def test_costpercapita_aa61; assert_in_delta(0.0, (worksheet.costpercapita_aa61||0), 0.002); end
  def test_costpercapita_ab61; assert_in_delta(0.0, (worksheet.costpercapita_ab61||0), 0.002); end
  def test_costpercapita_ac61; assert_in_delta(0.0, (worksheet.costpercapita_ac61||0), 0.002); end
  def test_costpercapita_ad61; assert_in_delta(0.0, (worksheet.costpercapita_ad61||0), 0.002); end
  def test_costpercapita_ae61; assert_in_delta(0.0, (worksheet.costpercapita_ae61||0), 0.002); end
  def test_costpercapita_af61; assert_in_delta(0.0, (worksheet.costpercapita_af61||0), 0.002); end
  def test_costpercapita_ag61; assert_in_delta(0.0, (worksheet.costpercapita_ag61||0), 0.002); end
  def test_costpercapita_ai61; assert_in_epsilon(52.40106803554589, worksheet.costpercapita_ai61, 0.002); end
  def test_costpercapita_aj61; assert_in_epsilon(56.70852249513754, worksheet.costpercapita_aj61, 0.002); end
  def test_costpercapita_ak61; assert_in_epsilon(60.77951232359971, worksheet.costpercapita_ak61, 0.002); end
  def test_costpercapita_al61; assert_in_epsilon(60.98232257619357, worksheet.costpercapita_al61, 0.002); end
  def test_costpercapita_am61; assert_in_epsilon(59.79570660757056, worksheet.costpercapita_am61, 0.002); end
  def test_costpercapita_an61; assert_in_epsilon(62.92296670533303, worksheet.costpercapita_an61, 0.002); end
  def test_costpercapita_ao61; assert_in_epsilon(65.62690458175902, worksheet.costpercapita_ao61, 0.002); end
  def test_costpercapita_ap61; assert_in_epsilon(67.87067087298682, worksheet.costpercapita_ap61, 0.002); end
  def test_costpercapita_aq61; assert_in_epsilon(69.68679789973051, worksheet.costpercapita_aq61, 0.002); end
  def test_costpercapita_as61; assert_in_epsilon(61.86383023309517, worksheet.costpercapita_as61, 0.002); end
  def test_costpercapita_at61; assert_in_epsilon(1285.5304373357767, worksheet.costpercapita_at61, 0.002); end
  def test_costpercapita_av61; assert_in_delta(0.0, (worksheet.costpercapita_av61||0), 0.002); end
  def test_costpercapita_aw61; assert_in_epsilon(5.0, worksheet.costpercapita_aw61, 0.002); end
  def test_costpercapita_ay61; assert_in_epsilon(71.11183878041014, worksheet.costpercapita_ay61, 0.002); end
  def test_costpercapita_az61; assert_in_epsilon(76.8385025845455, worksheet.costpercapita_az61, 0.002); end
  def test_costpercapita_ba61; assert_in_epsilon(82.21921228305585, worksheet.costpercapita_ba61, 0.002); end
  def test_costpercapita_bb61; assert_in_epsilon(82.33853069971326, worksheet.costpercapita_bb61, 0.002); end
  def test_costpercapita_bc61; assert_in_epsilon(80.56173814870664, worksheet.costpercapita_bc61, 0.002); end
  def test_costpercapita_bd61; assert_in_epsilon(84.78603383605731, worksheet.costpercapita_bd61, 0.002); end
  def test_costpercapita_be61; assert_in_epsilon(88.43801824500588, worksheet.costpercapita_be61, 0.002); end
  def test_costpercapita_bf61; assert_in_epsilon(91.46810880258667, worksheet.costpercapita_bf61, 0.002); end
  def test_costpercapita_bg61; assert_in_epsilon(93.92024092162129, worksheet.costpercapita_bg61, 0.002); end
  def test_costpercapita_bi61; assert_in_delta(0.0, (worksheet.costpercapita_bi61||0), 0.002); end
  def test_costpercapita_bj61; assert_in_delta(0.0, (worksheet.costpercapita_bj61||0), 0.002); end
  def test_costpercapita_bk61; assert_in_delta(0.0, (worksheet.costpercapita_bk61||0), 0.002); end
  def test_costpercapita_bl61; assert_in_delta(0.0, (worksheet.costpercapita_bl61||0), 0.002); end
  def test_costpercapita_bm61; assert_in_delta(0.0, (worksheet.costpercapita_bm61||0), 0.002); end
  def test_costpercapita_bn61; assert_in_delta(0.0, (worksheet.costpercapita_bn61||0), 0.002); end
  def test_costpercapita_bo61; assert_in_delta(0.0, (worksheet.costpercapita_bo61||0), 0.002); end
  def test_costpercapita_bp61; assert_in_delta(0.0, (worksheet.costpercapita_bp61||0), 0.002); end
  def test_costpercapita_bq61; assert_in_delta(0.0, (worksheet.costpercapita_bq61||0), 0.002); end
  def test_costpercapita_bs61; assert_in_epsilon(73.56692699596965, worksheet.costpercapita_bs61, 0.002); end
  def test_costpercapita_bt61; assert_in_epsilon(79.57887624111146, worksheet.costpercapita_bt61, 0.002); end
  def test_costpercapita_bu61; assert_in_epsilon(85.25139043652656, worksheet.costpercapita_bu61, 0.002); end
  def test_costpercapita_bv61; assert_in_epsilon(85.489714842905, worksheet.costpercapita_bv61, 0.002); end
  def test_costpercapita_bw61; assert_in_epsilon(83.77425105960704, worksheet.costpercapita_bw61, 0.002); end
  def test_costpercapita_bx61; assert_in_epsilon(88.15883832340842, worksheet.costpercapita_bx61, 0.002); end
  def test_costpercapita_by61; assert_in_epsilon(91.94975958053651, worksheet.costpercapita_by61, 0.002); end
  def test_costpercapita_bz61; assert_in_epsilon(95.09540761858723, worksheet.costpercapita_bz61, 0.002); end
  def test_costpercapita_ca61; assert_in_epsilon(97.64139177564758, worksheet.costpercapita_ca61, 0.002); end
  def test_costpercapita_cc61; assert_in_epsilon(86.72295076381106, worksheet.costpercapita_cc61, 0.002); end
  def test_costpercapita_cd61; assert_in_epsilon(1802.2883829366144, worksheet.costpercapita_cd61, 0.002); end
  def test_costpercapita_cf61; assert_in_epsilon(21.16585896042377, worksheet.costpercapita_cf61, 0.002); end
  def test_costpercapita_cg61; assert_in_epsilon(22.870353745973922, worksheet.costpercapita_cg61, 0.002); end
  def test_costpercapita_ch61; assert_in_epsilon(24.47187811292685, worksheet.costpercapita_ch61, 0.002); end
  def test_costpercapita_ci61; assert_in_epsilon(24.507392266711424, worksheet.costpercapita_ci61, 0.002); end
  def test_costpercapita_cj61; assert_in_epsilon(23.978544452036477, worksheet.costpercapita_cj61, 0.002); end
  def test_costpercapita_ck61; assert_in_epsilon(25.235871618075397, worksheet.costpercapita_ck61, 0.002); end
  def test_costpercapita_cl61; assert_in_epsilon(26.32285499877748, worksheet.costpercapita_cl61, 0.002); end
  def test_costpercapita_cm61; assert_in_epsilon(27.224736745600413, worksheet.costpercapita_cm61, 0.002); end
  def test_costpercapita_cn61; assert_in_epsilon(27.954593875917084, worksheet.costpercapita_cn61, 0.002); end
  def test_costpercapita_cp61; assert_in_epsilon(24.859120530715867, worksheet.costpercapita_cp61, 0.002); end
  def test_costpercapita_cq61; assert_in_epsilon(516.7579456008375, worksheet.costpercapita_cq61, 0.002); end
  def test_costpercapita_cr61; assert_equal("ok", worksheet.costpercapita_cr61); end
  def test_costpercapita_a62; assert_equal("RES.R", worksheet.costpercapita_a62); end
  def test_costpercapita_b62; assert_equal("Residential refrigeration", worksheet.costpercapita_b62); end
  def test_costpercapita_c62; assert_equal("Buildings", worksheet.costpercapita_c62); end
  def test_costpercapita_e62; assert_in_epsilon(105.89926128409593, worksheet.costpercapita_e62, 0.002); end
  def test_costpercapita_f62; assert_in_epsilon(119.34026497564346, worksheet.costpercapita_f62, 0.002); end
  def test_costpercapita_g62; assert_in_epsilon(133.7872204092031, worksheet.costpercapita_g62, 0.002); end
  def test_costpercapita_h62; assert_in_epsilon(141.23093230038947, worksheet.costpercapita_h62, 0.002); end
  def test_costpercapita_i62; assert_in_epsilon(146.7326582544945, worksheet.costpercapita_i62, 0.002); end
  def test_costpercapita_j62; assert_in_epsilon(154.91544159218034, worksheet.costpercapita_j62, 0.002); end
  def test_costpercapita_k62; assert_in_epsilon(162.00805079788282, worksheet.costpercapita_k62, 0.002); end
  def test_costpercapita_l62; assert_in_epsilon(167.91237349319832, worksheet.costpercapita_l62, 0.002); end
  def test_costpercapita_m62; assert_in_epsilon(172.70306716154812, worksheet.costpercapita_m62, 0.002); end
  def test_costpercapita_o62; assert_in_epsilon(8.154226262202476, worksheet.costpercapita_o62, 0.002); end
  def test_costpercapita_p62; assert_in_epsilon(9.189142766341295, worksheet.costpercapita_p62, 0.002); end
  def test_costpercapita_q62; assert_in_epsilon(10.301487871803161, worksheet.costpercapita_q62, 0.002); end
  def test_costpercapita_r62; assert_in_epsilon(10.874552224159029, worksheet.costpercapita_r62, 0.002); end
  def test_costpercapita_s62; assert_in_epsilon(11.298059395345467, worksheet.costpercapita_s62, 0.002); end
  def test_costpercapita_t62; assert_in_epsilon(11.928084556026677, worksheet.costpercapita_t62, 0.002); end
  def test_costpercapita_u62; assert_in_epsilon(12.474172901302477, worksheet.costpercapita_u62, 0.002); end
  def test_costpercapita_v62; assert_in_epsilon(12.928769964270192, worksheet.costpercapita_v62, 0.002); end
  def test_costpercapita_w62; assert_in_epsilon(13.29762404034204, worksheet.costpercapita_w62, 0.002); end
  def test_costpercapita_y62; assert_in_delta(0.0, (worksheet.costpercapita_y62||0), 0.002); end
  def test_costpercapita_z62; assert_in_delta(0.0, (worksheet.costpercapita_z62||0), 0.002); end
  def test_costpercapita_aa62; assert_in_delta(0.0, (worksheet.costpercapita_aa62||0), 0.002); end
  def test_costpercapita_ab62; assert_in_delta(0.0, (worksheet.costpercapita_ab62||0), 0.002); end
  def test_costpercapita_ac62; assert_in_delta(0.0, (worksheet.costpercapita_ac62||0), 0.002); end
  def test_costpercapita_ad62; assert_in_delta(0.0, (worksheet.costpercapita_ad62||0), 0.002); end
  def test_costpercapita_ae62; assert_in_delta(0.0, (worksheet.costpercapita_ae62||0), 0.002); end
  def test_costpercapita_af62; assert_in_delta(0.0, (worksheet.costpercapita_af62||0), 0.002); end
  def test_costpercapita_ag62; assert_in_delta(0.0, (worksheet.costpercapita_ag62||0), 0.002); end
  def test_costpercapita_ai62; assert_in_epsilon(114.0534875462984, worksheet.costpercapita_ai62, 0.002); end
  def test_costpercapita_aj62; assert_in_epsilon(128.52940774198476, worksheet.costpercapita_aj62, 0.002); end
  def test_costpercapita_ak62; assert_in_epsilon(144.08870828100626, worksheet.costpercapita_ak62, 0.002); end
  def test_costpercapita_al62; assert_in_epsilon(152.1054845245485, worksheet.costpercapita_al62, 0.002); end
  def test_costpercapita_am62; assert_in_epsilon(158.03071764983997, worksheet.costpercapita_am62, 0.002); end
  def test_costpercapita_an62; assert_in_epsilon(166.84352614820705, worksheet.costpercapita_an62, 0.002); end
  def test_costpercapita_ao62; assert_in_epsilon(174.48222369918528, worksheet.costpercapita_ao62, 0.002); end
  def test_costpercapita_ap62; assert_in_epsilon(180.84114345746852, worksheet.costpercapita_ap62, 0.002); end
  def test_costpercapita_aq62; assert_in_epsilon(186.00069120189016, worksheet.costpercapita_aq62, 0.002); end
  def test_costpercapita_as62; assert_in_epsilon(156.1083766944921, worksheet.costpercapita_as62, 0.002); end
  def test_costpercapita_at62; assert_in_epsilon(3205.1916049830393, worksheet.costpercapita_at62, 0.002); end
  def test_costpercapita_av62; assert_in_delta(0.0, (worksheet.costpercapita_av62||0), 0.002); end
  def test_costpercapita_aw62; assert_in_epsilon(5.0, worksheet.costpercapita_aw62, 0.002); end
  def test_costpercapita_ay62; assert_in_epsilon(150.77672362302278, worksheet.costpercapita_ay62, 0.002); end
  def test_costpercapita_az62; assert_in_epsilon(169.91368902054106, worksheet.costpercapita_az62, 0.002); end
  def test_costpercapita_ba62; assert_in_epsilon(190.48290338697862, worksheet.costpercapita_ba62, 0.002); end
  def test_costpercapita_bb62; assert_in_epsilon(201.08107448786967, worksheet.costpercapita_bb62, 0.002); end
  def test_costpercapita_bc62; assert_in_epsilon(208.91429450822764, worksheet.costpercapita_bc62, 0.002); end
  def test_costpercapita_bd62; assert_in_epsilon(220.5647370780157, worksheet.costpercapita_bd62, 0.002); end
  def test_costpercapita_be62; assert_in_epsilon(230.66301694330602, worksheet.costpercapita_be62, 0.002); end
  def test_costpercapita_bf62; assert_in_epsilon(239.06944414986125, worksheet.costpercapita_bf62, 0.002); end
  def test_costpercapita_bg62; assert_in_epsilon(245.89031415817567, worksheet.costpercapita_bg62, 0.002); end
  def test_costpercapita_bi62; assert_in_delta(0.0, (worksheet.costpercapita_bi62||0), 0.002); end
  def test_costpercapita_bj62; assert_in_delta(0.0, (worksheet.costpercapita_bj62||0), 0.002); end
  def test_costpercapita_bk62; assert_in_delta(0.0, (worksheet.costpercapita_bk62||0), 0.002); end
  def test_costpercapita_bl62; assert_in_delta(0.0, (worksheet.costpercapita_bl62||0), 0.002); end
  def test_costpercapita_bm62; assert_in_delta(0.0, (worksheet.costpercapita_bm62||0), 0.002); end
  def test_costpercapita_bn62; assert_in_delta(0.0, (worksheet.costpercapita_bn62||0), 0.002); end
  def test_costpercapita_bo62; assert_in_delta(0.0, (worksheet.costpercapita_bo62||0), 0.002); end
  def test_costpercapita_bp62; assert_in_delta(0.0, (worksheet.costpercapita_bp62||0), 0.002); end
  def test_costpercapita_bq62; assert_in_delta(0.0, (worksheet.costpercapita_bq62||0), 0.002); end
  def test_costpercapita_bs62; assert_in_epsilon(158.93094988522526, worksheet.costpercapita_bs62, 0.002); end
  def test_costpercapita_bt62; assert_in_epsilon(179.10283178688235, worksheet.costpercapita_bt62, 0.002); end
  def test_costpercapita_bu62; assert_in_epsilon(200.78439125878177, worksheet.costpercapita_bu62, 0.002); end
  def test_costpercapita_bv62; assert_in_epsilon(211.9556267120287, worksheet.costpercapita_bv62, 0.002); end
  def test_costpercapita_bw62; assert_in_epsilon(220.2123539035731, worksheet.costpercapita_bw62, 0.002); end
  def test_costpercapita_bx62; assert_in_epsilon(232.49282163404237, worksheet.costpercapita_bx62, 0.002); end
  def test_costpercapita_by62; assert_in_epsilon(243.13718984460849, worksheet.costpercapita_by62, 0.002); end
  def test_costpercapita_bz62; assert_in_epsilon(251.99821411413146, worksheet.costpercapita_bz62, 0.002); end
  def test_costpercapita_ca62; assert_in_epsilon(259.1879381985177, worksheet.costpercapita_ca62, 0.002); end
  def test_costpercapita_cc62; assert_in_epsilon(217.53359081531013, worksheet.costpercapita_cc62, 0.002); end
  def test_costpercapita_cd62; assert_in_epsilon(4466.363780498093, worksheet.costpercapita_cd62, 0.002); end
  def test_costpercapita_cf62; assert_in_epsilon(44.87746233892685, worksheet.costpercapita_cf62, 0.002); end
  def test_costpercapita_cg62; assert_in_epsilon(50.57342404489759, worksheet.costpercapita_cg62, 0.002); end
  def test_costpercapita_ch62; assert_in_epsilon(56.69568297777551, worksheet.costpercapita_ch62, 0.002); end
  def test_costpercapita_ci62; assert_in_epsilon(59.8501421874802, worksheet.costpercapita_ci62, 0.002); end
  def test_costpercapita_cj62; assert_in_epsilon(62.181636253733146, worksheet.costpercapita_cj62, 0.002); end
  def test_costpercapita_ck62; assert_in_epsilon(65.64929548583535, worksheet.costpercapita_ck62, 0.002); end
  def test_costpercapita_cl62; assert_in_epsilon(68.6549661454232, worksheet.costpercapita_cl62, 0.002); end
  def test_costpercapita_cm62; assert_in_epsilon(71.15707065666292, worksheet.costpercapita_cm62, 0.002); end
  def test_costpercapita_cn62; assert_in_epsilon(73.18724699662755, worksheet.costpercapita_cn62, 0.002); end
  def test_costpercapita_cp62; assert_in_epsilon(61.425214120818026, worksheet.costpercapita_cp62, 0.002); end
  def test_costpercapita_cq62; assert_in_epsilon(1261.1721755150536, worksheet.costpercapita_cq62, 0.002); end
  def test_costpercapita_cr62; assert_equal("ok", worksheet.costpercapita_cr62); end
  def test_costpercapita_a63; assert_equal("RES.N", worksheet.costpercapita_a63); end
  def test_costpercapita_b63; assert_equal("Residential non-energy use", worksheet.costpercapita_b63); end
  def test_costpercapita_c63; assert_equal("Buildings", worksheet.costpercapita_c63); end
  def test_costpercapita_e63; assert_in_delta(0.0, (worksheet.costpercapita_e63||0), 0.002); end
  def test_costpercapita_f63; assert_in_delta(0.0, (worksheet.costpercapita_f63||0), 0.002); end
  def test_costpercapita_g63; assert_in_delta(0.0, (worksheet.costpercapita_g63||0), 0.002); end
  def test_costpercapita_h63; assert_in_delta(0.0, (worksheet.costpercapita_h63||0), 0.002); end
  def test_costpercapita_i63; assert_in_delta(0.0, (worksheet.costpercapita_i63||0), 0.002); end
  def test_costpercapita_j63; assert_in_delta(0.0, (worksheet.costpercapita_j63||0), 0.002); end
  def test_costpercapita_k63; assert_in_delta(0.0, (worksheet.costpercapita_k63||0), 0.002); end
  def test_costpercapita_l63; assert_in_delta(0.0, (worksheet.costpercapita_l63||0), 0.002); end
  def test_costpercapita_m63; assert_in_delta(0.0, (worksheet.costpercapita_m63||0), 0.002); end
  def test_costpercapita_o63; assert_in_delta(0.0, (worksheet.costpercapita_o63||0), 0.002); end
  def test_costpercapita_p63; assert_in_delta(0.0, (worksheet.costpercapita_p63||0), 0.002); end
  def test_costpercapita_q63; assert_in_delta(0.0, (worksheet.costpercapita_q63||0), 0.002); end
  def test_costpercapita_r63; assert_in_delta(0.0, (worksheet.costpercapita_r63||0), 0.002); end
  def test_costpercapita_s63; assert_in_delta(0.0, (worksheet.costpercapita_s63||0), 0.002); end
  def test_costpercapita_t63; assert_in_delta(0.0, (worksheet.costpercapita_t63||0), 0.002); end
  def test_costpercapita_u63; assert_in_delta(0.0, (worksheet.costpercapita_u63||0), 0.002); end
  def test_costpercapita_v63; assert_in_delta(0.0, (worksheet.costpercapita_v63||0), 0.002); end
  def test_costpercapita_w63; assert_in_delta(0.0, (worksheet.costpercapita_w63||0), 0.002); end
  def test_costpercapita_y63; assert_in_delta(0.0, (worksheet.costpercapita_y63||0), 0.002); end
  def test_costpercapita_z63; assert_in_delta(0.0, (worksheet.costpercapita_z63||0), 0.002); end
  def test_costpercapita_aa63; assert_in_delta(0.0, (worksheet.costpercapita_aa63||0), 0.002); end
  def test_costpercapita_ab63; assert_in_delta(0.0, (worksheet.costpercapita_ab63||0), 0.002); end
  def test_costpercapita_ac63; assert_in_delta(0.0, (worksheet.costpercapita_ac63||0), 0.002); end
  def test_costpercapita_ad63; assert_in_delta(0.0, (worksheet.costpercapita_ad63||0), 0.002); end
  def test_costpercapita_ae63; assert_in_delta(0.0, (worksheet.costpercapita_ae63||0), 0.002); end
  def test_costpercapita_af63; assert_in_delta(0.0, (worksheet.costpercapita_af63||0), 0.002); end
  def test_costpercapita_ag63; assert_in_delta(0.0, (worksheet.costpercapita_ag63||0), 0.002); end
  def test_costpercapita_ai63; assert_in_delta(0.0, (worksheet.costpercapita_ai63||0), 0.002); end
  def test_costpercapita_aj63; assert_in_delta(0.0, (worksheet.costpercapita_aj63||0), 0.002); end
  def test_costpercapita_ak63; assert_in_delta(0.0, (worksheet.costpercapita_ak63||0), 0.002); end
  def test_costpercapita_al63; assert_in_delta(0.0, (worksheet.costpercapita_al63||0), 0.002); end
  def test_costpercapita_am63; assert_in_delta(0.0, (worksheet.costpercapita_am63||0), 0.002); end
  def test_costpercapita_an63; assert_in_delta(0.0, (worksheet.costpercapita_an63||0), 0.002); end
  def test_costpercapita_ao63; assert_in_delta(0.0, (worksheet.costpercapita_ao63||0), 0.002); end
  def test_costpercapita_ap63; assert_in_delta(0.0, (worksheet.costpercapita_ap63||0), 0.002); end
  def test_costpercapita_aq63; assert_in_delta(0.0, (worksheet.costpercapita_aq63||0), 0.002); end
  def test_costpercapita_as63; assert_in_delta(0.0, (worksheet.costpercapita_as63||0), 0.002); end
  def test_costpercapita_at63; assert_in_delta(0.0, (worksheet.costpercapita_at63||0), 0.002); end
  def test_costpercapita_av63; assert_in_delta(0.0, (worksheet.costpercapita_av63||0), 0.002); end
  def test_costpercapita_aw63; assert_in_epsilon(5.0, worksheet.costpercapita_aw63, 0.002); end
  def test_costpercapita_ay63; assert_in_delta(0.0, (worksheet.costpercapita_ay63||0), 0.002); end
  def test_costpercapita_az63; assert_in_delta(0.0, (worksheet.costpercapita_az63||0), 0.002); end
  def test_costpercapita_ba63; assert_in_delta(0.0, (worksheet.costpercapita_ba63||0), 0.002); end
  def test_costpercapita_bb63; assert_in_delta(0.0, (worksheet.costpercapita_bb63||0), 0.002); end
  def test_costpercapita_bc63; assert_in_delta(0.0, (worksheet.costpercapita_bc63||0), 0.002); end
  def test_costpercapita_bd63; assert_in_delta(0.0, (worksheet.costpercapita_bd63||0), 0.002); end
  def test_costpercapita_be63; assert_in_delta(0.0, (worksheet.costpercapita_be63||0), 0.002); end
  def test_costpercapita_bf63; assert_in_delta(0.0, (worksheet.costpercapita_bf63||0), 0.002); end
  def test_costpercapita_bg63; assert_in_delta(0.0, (worksheet.costpercapita_bg63||0), 0.002); end
  def test_costpercapita_bi63; assert_in_delta(0.0, (worksheet.costpercapita_bi63||0), 0.002); end
  def test_costpercapita_bj63; assert_in_delta(0.0, (worksheet.costpercapita_bj63||0), 0.002); end
  def test_costpercapita_bk63; assert_in_delta(0.0, (worksheet.costpercapita_bk63||0), 0.002); end
  def test_costpercapita_bl63; assert_in_delta(0.0, (worksheet.costpercapita_bl63||0), 0.002); end
  def test_costpercapita_bm63; assert_in_delta(0.0, (worksheet.costpercapita_bm63||0), 0.002); end
  def test_costpercapita_bn63; assert_in_delta(0.0, (worksheet.costpercapita_bn63||0), 0.002); end
  def test_costpercapita_bo63; assert_in_delta(0.0, (worksheet.costpercapita_bo63||0), 0.002); end
  def test_costpercapita_bp63; assert_in_delta(0.0, (worksheet.costpercapita_bp63||0), 0.002); end
  def test_costpercapita_bq63; assert_in_delta(0.0, (worksheet.costpercapita_bq63||0), 0.002); end
  def test_costpercapita_bs63; assert_in_delta(0.0, (worksheet.costpercapita_bs63||0), 0.002); end
  def test_costpercapita_bt63; assert_in_delta(0.0, (worksheet.costpercapita_bt63||0), 0.002); end
  def test_costpercapita_bu63; assert_in_delta(0.0, (worksheet.costpercapita_bu63||0), 0.002); end
  def test_costpercapita_bv63; assert_in_delta(0.0, (worksheet.costpercapita_bv63||0), 0.002); end
  def test_costpercapita_bw63; assert_in_delta(0.0, (worksheet.costpercapita_bw63||0), 0.002); end
  def test_costpercapita_bx63; assert_in_delta(0.0, (worksheet.costpercapita_bx63||0), 0.002); end
  def test_costpercapita_by63; assert_in_delta(0.0, (worksheet.costpercapita_by63||0), 0.002); end
  def test_costpercapita_bz63; assert_in_delta(0.0, (worksheet.costpercapita_bz63||0), 0.002); end
  def test_costpercapita_ca63; assert_in_delta(0.0, (worksheet.costpercapita_ca63||0), 0.002); end
  def test_costpercapita_cc63; assert_in_delta(0.0, (worksheet.costpercapita_cc63||0), 0.002); end
  def test_costpercapita_cd63; assert_in_delta(0.0, (worksheet.costpercapita_cd63||0), 0.002); end
  def test_costpercapita_cf63; assert_in_delta(0.0, (worksheet.costpercapita_cf63||0), 0.002); end
  def test_costpercapita_cg63; assert_in_delta(0.0, (worksheet.costpercapita_cg63||0), 0.002); end
  def test_costpercapita_ch63; assert_in_delta(0.0, (worksheet.costpercapita_ch63||0), 0.002); end
  def test_costpercapita_ci63; assert_in_delta(0.0, (worksheet.costpercapita_ci63||0), 0.002); end
  def test_costpercapita_cj63; assert_in_delta(0.0, (worksheet.costpercapita_cj63||0), 0.002); end
  def test_costpercapita_ck63; assert_in_delta(0.0, (worksheet.costpercapita_ck63||0), 0.002); end
  def test_costpercapita_cl63; assert_in_delta(0.0, (worksheet.costpercapita_cl63||0), 0.002); end
  def test_costpercapita_cm63; assert_in_delta(0.0, (worksheet.costpercapita_cm63||0), 0.002); end
  def test_costpercapita_cn63; assert_in_delta(0.0, (worksheet.costpercapita_cn63||0), 0.002); end
  def test_costpercapita_cp63; assert_in_delta(0.0, (worksheet.costpercapita_cp63||0), 0.002); end
  def test_costpercapita_cq63; assert_in_delta(0.0, (worksheet.costpercapita_cq63||0), 0.002); end
  def test_costpercapita_cr63; assert_equal("ok", worksheet.costpercapita_cr63); end
  def test_costpercapita_a64; assert_equal("BIO.SUP", worksheet.costpercapita_a64); end
  def test_costpercapita_b64; assert_equal("Biomass for fuel", worksheet.costpercapita_b64); end
  def test_costpercapita_c64; assert_equal("Bioenergy", worksheet.costpercapita_c64); end
  def test_costpercapita_e64; assert_in_delta(0.0, (worksheet.costpercapita_e64||0), 0.002); end
  def test_costpercapita_f64; assert_in_delta(0.0, (worksheet.costpercapita_f64||0), 0.002); end
  def test_costpercapita_g64; assert_in_delta(0.0, (worksheet.costpercapita_g64||0), 0.002); end
  def test_costpercapita_h64; assert_in_delta(0.0, (worksheet.costpercapita_h64||0), 0.002); end
  def test_costpercapita_i64; assert_in_delta(0.0, (worksheet.costpercapita_i64||0), 0.002); end
  def test_costpercapita_j64; assert_in_delta(0.0, (worksheet.costpercapita_j64||0), 0.002); end
  def test_costpercapita_k64; assert_in_delta(0.0, (worksheet.costpercapita_k64||0), 0.002); end
  def test_costpercapita_l64; assert_in_delta(0.0, (worksheet.costpercapita_l64||0), 0.002); end
  def test_costpercapita_m64; assert_in_delta(0.0, (worksheet.costpercapita_m64||0), 0.002); end
  def test_costpercapita_o64; assert_in_delta(0.0, (worksheet.costpercapita_o64||0), 0.002); end
  def test_costpercapita_p64; assert_in_delta(0.0, (worksheet.costpercapita_p64||0), 0.002); end
  def test_costpercapita_q64; assert_in_delta(0.0, (worksheet.costpercapita_q64||0), 0.002); end
  def test_costpercapita_r64; assert_in_delta(0.0, (worksheet.costpercapita_r64||0), 0.002); end
  def test_costpercapita_s64; assert_in_delta(0.0, (worksheet.costpercapita_s64||0), 0.002); end
  def test_costpercapita_t64; assert_in_delta(0.0, (worksheet.costpercapita_t64||0), 0.002); end
  def test_costpercapita_u64; assert_in_delta(0.0, (worksheet.costpercapita_u64||0), 0.002); end
  def test_costpercapita_v64; assert_in_delta(0.0, (worksheet.costpercapita_v64||0), 0.002); end
  def test_costpercapita_w64; assert_in_delta(0.0, (worksheet.costpercapita_w64||0), 0.002); end
  def test_costpercapita_y64; assert_in_delta(0.0, (worksheet.costpercapita_y64||0), 0.002); end
  def test_costpercapita_z64; assert_in_delta(0.0385697013093565, worksheet.costpercapita_z64, 0.002); end
  def test_costpercapita_aa64; assert_in_delta(0.08228553517656419, worksheet.costpercapita_aa64, 0.002); end
  def test_costpercapita_ab64; assert_in_delta(0.19749369850207865, worksheet.costpercapita_ab64, 0.002); end
  def test_costpercapita_ac64; assert_in_delta(0.2808918939575386, worksheet.costpercapita_ac64, 0.002); end
  def test_costpercapita_ad64; assert_in_delta(0.3745384822219214, worksheet.costpercapita_ad64, 0.002); end
  def test_costpercapita_ae64; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ae64, 0.002); end
  def test_costpercapita_af64; assert_in_delta(0.5966490253229234, worksheet.costpercapita_af64, 0.002); end
  def test_costpercapita_ag64; assert_in_delta(0.727374563002047, worksheet.costpercapita_ag64, 0.002); end
  def test_costpercapita_ai64; assert_in_delta(0.0, (worksheet.costpercapita_ai64||0), 0.002); end
  def test_costpercapita_aj64; assert_in_delta(0.0385697013093565, worksheet.costpercapita_aj64, 0.002); end
  def test_costpercapita_ak64; assert_in_delta(0.08228553517656419, worksheet.costpercapita_ak64, 0.002); end
  def test_costpercapita_al64; assert_in_delta(0.19749369850207865, worksheet.costpercapita_al64, 0.002); end
  def test_costpercapita_am64; assert_in_delta(0.2808918939575386, worksheet.costpercapita_am64, 0.002); end
  def test_costpercapita_an64; assert_in_delta(0.3745384822219214, worksheet.costpercapita_an64, 0.002); end
  def test_costpercapita_ao64; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ao64, 0.002); end
  def test_costpercapita_ap64; assert_in_delta(0.5966490253229234, worksheet.costpercapita_ap64, 0.002); end
  def test_costpercapita_aq64; assert_in_delta(0.727374563002047, worksheet.costpercapita_aq64, 0.002); end
  def test_costpercapita_as64; assert_in_delta(0.308581398055175, worksheet.costpercapita_as64, 0.002); end
  def test_costpercapita_at64; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_at64, 0.002); end
  def test_costpercapita_av64; assert_in_delta(0.0, (worksheet.costpercapita_av64||0), 0.002); end
  def test_costpercapita_aw64; assert_in_epsilon(5.0, worksheet.costpercapita_aw64, 0.002); end
  def test_costpercapita_ay64; assert_in_delta(0.0, (worksheet.costpercapita_ay64||0), 0.002); end
  def test_costpercapita_az64; assert_in_delta(0.0, (worksheet.costpercapita_az64||0), 0.002); end
  def test_costpercapita_ba64; assert_in_delta(0.0, (worksheet.costpercapita_ba64||0), 0.002); end
  def test_costpercapita_bb64; assert_in_delta(0.0, (worksheet.costpercapita_bb64||0), 0.002); end
  def test_costpercapita_bc64; assert_in_delta(0.0, (worksheet.costpercapita_bc64||0), 0.002); end
  def test_costpercapita_bd64; assert_in_delta(0.0, (worksheet.costpercapita_bd64||0), 0.002); end
  def test_costpercapita_be64; assert_in_delta(0.0, (worksheet.costpercapita_be64||0), 0.002); end
  def test_costpercapita_bf64; assert_in_delta(0.0, (worksheet.costpercapita_bf64||0), 0.002); end
  def test_costpercapita_bg64; assert_in_delta(0.0, (worksheet.costpercapita_bg64||0), 0.002); end
  def test_costpercapita_bi64; assert_in_delta(0.0, (worksheet.costpercapita_bi64||0), 0.002); end
  def test_costpercapita_bj64; assert_in_delta(0.0, (worksheet.costpercapita_bj64||0), 0.002); end
  def test_costpercapita_bk64; assert_in_delta(0.0, (worksheet.costpercapita_bk64||0), 0.002); end
  def test_costpercapita_bl64; assert_in_delta(0.0, (worksheet.costpercapita_bl64||0), 0.002); end
  def test_costpercapita_bm64; assert_in_delta(0.0, (worksheet.costpercapita_bm64||0), 0.002); end
  def test_costpercapita_bn64; assert_in_delta(0.0, (worksheet.costpercapita_bn64||0), 0.002); end
  def test_costpercapita_bo64; assert_in_delta(0.0, (worksheet.costpercapita_bo64||0), 0.002); end
  def test_costpercapita_bp64; assert_in_delta(0.0, (worksheet.costpercapita_bp64||0), 0.002); end
  def test_costpercapita_bq64; assert_in_delta(0.0, (worksheet.costpercapita_bq64||0), 0.002); end
  def test_costpercapita_bs64; assert_in_delta(0.0, (worksheet.costpercapita_bs64||0), 0.002); end
  def test_costpercapita_bt64; assert_in_delta(0.0385697013093565, worksheet.costpercapita_bt64, 0.002); end
  def test_costpercapita_bu64; assert_in_delta(0.08228553517656419, worksheet.costpercapita_bu64, 0.002); end
  def test_costpercapita_bv64; assert_in_delta(0.19749369850207865, worksheet.costpercapita_bv64, 0.002); end
  def test_costpercapita_bw64; assert_in_delta(0.2808918939575386, worksheet.costpercapita_bw64, 0.002); end
  def test_costpercapita_bx64; assert_in_delta(0.3745384822219214, worksheet.costpercapita_bx64, 0.002); end
  def test_costpercapita_by64; assert_in_delta(0.4794296830041448, worksheet.costpercapita_by64, 0.002); end
  def test_costpercapita_bz64; assert_in_delta(0.5966490253229234, worksheet.costpercapita_bz64, 0.002); end
  def test_costpercapita_ca64; assert_in_delta(0.727374563002047, worksheet.costpercapita_ca64, 0.002); end
  def test_costpercapita_cc64; assert_in_delta(0.308581398055175, worksheet.costpercapita_cc64, 0.002); end
  def test_costpercapita_cd64; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_cd64, 0.002); end
  def test_costpercapita_cf64; assert_in_delta(0.0, (worksheet.costpercapita_cf64||0), 0.002); end
  def test_costpercapita_cg64; assert_in_delta(0.0, (worksheet.costpercapita_cg64||0), 0.002); end
  def test_costpercapita_ch64; assert_in_delta(0.0, (worksheet.costpercapita_ch64||0), 0.002); end
  def test_costpercapita_ci64; assert_in_delta(0.0, (worksheet.costpercapita_ci64||0), 0.002); end
  def test_costpercapita_cj64; assert_in_delta(0.0, (worksheet.costpercapita_cj64||0), 0.002); end
  def test_costpercapita_ck64; assert_in_delta(0.0, (worksheet.costpercapita_ck64||0), 0.002); end
  def test_costpercapita_cl64; assert_in_delta(0.0, (worksheet.costpercapita_cl64||0), 0.002); end
  def test_costpercapita_cm64; assert_in_delta(0.0, (worksheet.costpercapita_cm64||0), 0.002); end
  def test_costpercapita_cn64; assert_in_delta(0.0, (worksheet.costpercapita_cn64||0), 0.002); end
  def test_costpercapita_cp64; assert_in_delta(0.0, (worksheet.costpercapita_cp64||0), 0.002); end
  def test_costpercapita_cq64; assert_in_delta(0.0, (worksheet.costpercapita_cq64||0), 0.002); end
  def test_costpercapita_cr64; assert_equal("ok", worksheet.costpercapita_cr64); end
  def test_costpercapita_a65; assert_equal("FOS.SUP.Coal", worksheet.costpercapita_a65); end
  def test_costpercapita_b65; assert_equal("Fossil fuel  coal supply", worksheet.costpercapita_b65); end
  def test_costpercapita_c65; assert_equal("Fossil Fuels", worksheet.costpercapita_c65); end
  def test_costpercapita_e65; assert_in_delta(0.0, (worksheet.costpercapita_e65||0), 0.002); end
  def test_costpercapita_f65; assert_in_delta(0.0, (worksheet.costpercapita_f65||0), 0.002); end
  def test_costpercapita_g65; assert_in_delta(0.0, (worksheet.costpercapita_g65||0), 0.002); end
  def test_costpercapita_h65; assert_in_delta(0.0, (worksheet.costpercapita_h65||0), 0.002); end
  def test_costpercapita_i65; assert_in_delta(0.0, (worksheet.costpercapita_i65||0), 0.002); end
  def test_costpercapita_j65; assert_in_delta(0.0, (worksheet.costpercapita_j65||0), 0.002); end
  def test_costpercapita_k65; assert_in_delta(0.0, (worksheet.costpercapita_k65||0), 0.002); end
  def test_costpercapita_l65; assert_in_delta(0.0, (worksheet.costpercapita_l65||0), 0.002); end
  def test_costpercapita_m65; assert_in_delta(0.0, (worksheet.costpercapita_m65||0), 0.002); end
  def test_costpercapita_o65; assert_in_delta(0.0, (worksheet.costpercapita_o65||0), 0.002); end
  def test_costpercapita_p65; assert_in_delta(0.0, (worksheet.costpercapita_p65||0), 0.002); end
  def test_costpercapita_q65; assert_in_delta(0.0, (worksheet.costpercapita_q65||0), 0.002); end
  def test_costpercapita_r65; assert_in_delta(0.0, (worksheet.costpercapita_r65||0), 0.002); end
  def test_costpercapita_s65; assert_in_delta(0.0, (worksheet.costpercapita_s65||0), 0.002); end
  def test_costpercapita_t65; assert_in_delta(0.0, (worksheet.costpercapita_t65||0), 0.002); end
  def test_costpercapita_u65; assert_in_delta(0.0, (worksheet.costpercapita_u65||0), 0.002); end
  def test_costpercapita_v65; assert_in_delta(0.0, (worksheet.costpercapita_v65||0), 0.002); end
  def test_costpercapita_w65; assert_in_delta(0.0, (worksheet.costpercapita_w65||0), 0.002); end
  def test_costpercapita_y65; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_y65, 0.002); end
  def test_costpercapita_z65; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_z65, 0.002); end
  def test_costpercapita_aa65; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_aa65, 0.002); end
  def test_costpercapita_ab65; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_ab65, 0.002); end
  def test_costpercapita_ac65; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_ac65, 0.002); end
  def test_costpercapita_ad65; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_ad65, 0.002); end
  def test_costpercapita_ae65; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_ae65, 0.002); end
  def test_costpercapita_af65; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_af65, 0.002); end
  def test_costpercapita_ag65; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_ag65, 0.002); end
  def test_costpercapita_ai65; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_ai65, 0.002); end
  def test_costpercapita_aj65; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_aj65, 0.002); end
  def test_costpercapita_ak65; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_ak65, 0.002); end
  def test_costpercapita_al65; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_al65, 0.002); end
  def test_costpercapita_am65; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_am65, 0.002); end
  def test_costpercapita_an65; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_an65, 0.002); end
  def test_costpercapita_ao65; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_ao65, 0.002); end
  def test_costpercapita_ap65; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_ap65, 0.002); end
  def test_costpercapita_aq65; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_aq65, 0.002); end
  def test_costpercapita_as65; assert_in_epsilon(611.8742656818816, worksheet.costpercapita_as65, 0.002); end
  def test_costpercapita_at65; assert_in_epsilon(13493.346325779166, worksheet.costpercapita_at65, 0.002); end
  def test_costpercapita_av65; assert_in_delta(0.0, (worksheet.costpercapita_av65||0), 0.002); end
  def test_costpercapita_aw65; assert_in_epsilon(5.0, worksheet.costpercapita_aw65, 0.002); end
  def test_costpercapita_ay65; assert_in_delta(0.0, (worksheet.costpercapita_ay65||0), 0.002); end
  def test_costpercapita_az65; assert_in_delta(0.0, (worksheet.costpercapita_az65||0), 0.002); end
  def test_costpercapita_ba65; assert_in_delta(0.0, (worksheet.costpercapita_ba65||0), 0.002); end
  def test_costpercapita_bb65; assert_in_delta(0.0, (worksheet.costpercapita_bb65||0), 0.002); end
  def test_costpercapita_bc65; assert_in_delta(0.0, (worksheet.costpercapita_bc65||0), 0.002); end
  def test_costpercapita_bd65; assert_in_delta(0.0, (worksheet.costpercapita_bd65||0), 0.002); end
  def test_costpercapita_be65; assert_in_delta(0.0, (worksheet.costpercapita_be65||0), 0.002); end
  def test_costpercapita_bf65; assert_in_delta(0.0, (worksheet.costpercapita_bf65||0), 0.002); end
  def test_costpercapita_bg65; assert_in_delta(0.0, (worksheet.costpercapita_bg65||0), 0.002); end
  def test_costpercapita_bi65; assert_in_delta(0.0, (worksheet.costpercapita_bi65||0), 0.002); end
  def test_costpercapita_bj65; assert_in_delta(0.0, (worksheet.costpercapita_bj65||0), 0.002); end
  def test_costpercapita_bk65; assert_in_delta(0.0, (worksheet.costpercapita_bk65||0), 0.002); end
  def test_costpercapita_bl65; assert_in_delta(0.0, (worksheet.costpercapita_bl65||0), 0.002); end
  def test_costpercapita_bm65; assert_in_delta(0.0, (worksheet.costpercapita_bm65||0), 0.002); end
  def test_costpercapita_bn65; assert_in_delta(0.0, (worksheet.costpercapita_bn65||0), 0.002); end
  def test_costpercapita_bo65; assert_in_delta(0.0, (worksheet.costpercapita_bo65||0), 0.002); end
  def test_costpercapita_bp65; assert_in_delta(0.0, (worksheet.costpercapita_bp65||0), 0.002); end
  def test_costpercapita_bq65; assert_in_delta(0.0, (worksheet.costpercapita_bq65||0), 0.002); end
  def test_costpercapita_bs65; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_bs65, 0.002); end
  def test_costpercapita_bt65; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_bt65, 0.002); end
  def test_costpercapita_bu65; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_bu65, 0.002); end
  def test_costpercapita_bv65; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_bv65, 0.002); end
  def test_costpercapita_bw65; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_bw65, 0.002); end
  def test_costpercapita_bx65; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_bx65, 0.002); end
  def test_costpercapita_by65; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_by65, 0.002); end
  def test_costpercapita_bz65; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_bz65, 0.002); end
  def test_costpercapita_ca65; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_ca65, 0.002); end
  def test_costpercapita_cc65; assert_in_epsilon(611.8742656818816, worksheet.costpercapita_cc65, 0.002); end
  def test_costpercapita_cd65; assert_in_epsilon(13493.346325779166, worksheet.costpercapita_cd65, 0.002); end
  def test_costpercapita_cf65; assert_in_delta(0.0, (worksheet.costpercapita_cf65||0), 0.002); end
  def test_costpercapita_cg65; assert_in_delta(0.0, (worksheet.costpercapita_cg65||0), 0.002); end
  def test_costpercapita_ch65; assert_in_delta(0.0, (worksheet.costpercapita_ch65||0), 0.002); end
  def test_costpercapita_ci65; assert_in_delta(0.0, (worksheet.costpercapita_ci65||0), 0.002); end
  def test_costpercapita_cj65; assert_in_delta(0.0, (worksheet.costpercapita_cj65||0), 0.002); end
  def test_costpercapita_ck65; assert_in_delta(0.0, (worksheet.costpercapita_ck65||0), 0.002); end
  def test_costpercapita_cl65; assert_in_delta(0.0, (worksheet.costpercapita_cl65||0), 0.002); end
  def test_costpercapita_cm65; assert_in_delta(0.0, (worksheet.costpercapita_cm65||0), 0.002); end
  def test_costpercapita_cn65; assert_in_delta(0.0, (worksheet.costpercapita_cn65||0), 0.002); end
  def test_costpercapita_cp65; assert_in_delta(0.0, (worksheet.costpercapita_cp65||0), 0.002); end
  def test_costpercapita_cq65; assert_in_delta(0.0, (worksheet.costpercapita_cq65||0), 0.002); end
  def test_costpercapita_cr65; assert_equal("ok", worksheet.costpercapita_cr65); end
  def test_costpercapita_a66; assert_equal("FOS.SUP.Gas", worksheet.costpercapita_a66); end
  def test_costpercapita_b66; assert_equal("Fossil fuel gas supply", worksheet.costpercapita_b66); end
  def test_costpercapita_c66; assert_equal("Fossil Fuels", worksheet.costpercapita_c66); end
  def test_costpercapita_e66; assert_in_epsilon(6.603592234542045, worksheet.costpercapita_e66, 0.002); end
  def test_costpercapita_f66; assert_in_epsilon(7.790279022895726, worksheet.costpercapita_f66, 0.002); end
  def test_costpercapita_g66; assert_in_delta(0.0, (worksheet.costpercapita_g66||0), 0.002); end
  def test_costpercapita_h66; assert_in_delta(0.0, (worksheet.costpercapita_h66||0), 0.002); end
  def test_costpercapita_i66; assert_in_delta(0.0, (worksheet.costpercapita_i66||0), 0.002); end
  def test_costpercapita_j66; assert_in_epsilon(4.142615380466118, worksheet.costpercapita_j66, 0.002); end
  def test_costpercapita_k66; assert_in_epsilon(9.990565320356277, worksheet.costpercapita_k66, 0.002); end
  def test_costpercapita_l66; assert_in_epsilon(9.653430846448389, worksheet.costpercapita_l66, 0.002); end
  def test_costpercapita_m66; assert_in_epsilon(9.7249716892638, worksheet.costpercapita_m66, 0.002); end
  def test_costpercapita_o66; assert_in_delta(0.0, (worksheet.costpercapita_o66||0), 0.002); end
  def test_costpercapita_p66; assert_in_delta(0.0, (worksheet.costpercapita_p66||0), 0.002); end
  def test_costpercapita_q66; assert_in_delta(0.0, (worksheet.costpercapita_q66||0), 0.002); end
  def test_costpercapita_r66; assert_in_delta(0.0, (worksheet.costpercapita_r66||0), 0.002); end
  def test_costpercapita_s66; assert_in_delta(0.0, (worksheet.costpercapita_s66||0), 0.002); end
  def test_costpercapita_t66; assert_in_delta(0.0, (worksheet.costpercapita_t66||0), 0.002); end
  def test_costpercapita_u66; assert_in_delta(0.0, (worksheet.costpercapita_u66||0), 0.002); end
  def test_costpercapita_v66; assert_in_delta(0.0, (worksheet.costpercapita_v66||0), 0.002); end
  def test_costpercapita_w66; assert_in_delta(0.0, (worksheet.costpercapita_w66||0), 0.002); end
  def test_costpercapita_y66; assert_in_epsilon(402.4554336428264, worksheet.costpercapita_y66, 0.002); end
  def test_costpercapita_z66; assert_in_epsilon(498.799008857509, worksheet.costpercapita_z66, 0.002); end
  def test_costpercapita_aa66; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_aa66, 0.002); end
  def test_costpercapita_ab66; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_ab66, 0.002); end
  def test_costpercapita_ac66; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_ac66, 0.002); end
  def test_costpercapita_ad66; assert_in_epsilon(1106.3541515982145, worksheet.costpercapita_ad66, 0.002); end
  def test_costpercapita_ae66; assert_in_epsilon(1301.5020938371151, worksheet.costpercapita_ae66, 0.002); end
  def test_costpercapita_af66; assert_in_epsilon(1673.4941063465744, worksheet.costpercapita_af66, 0.002); end
  def test_costpercapita_ag66; assert_in_epsilon(1976.5705229344449, worksheet.costpercapita_ag66, 0.002); end
  def test_costpercapita_ai66; assert_in_epsilon(409.05902587736847, worksheet.costpercapita_ai66, 0.002); end
  def test_costpercapita_aj66; assert_in_epsilon(506.58928788040475, worksheet.costpercapita_aj66, 0.002); end
  def test_costpercapita_ak66; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_ak66, 0.002); end
  def test_costpercapita_al66; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_al66, 0.002); end
  def test_costpercapita_am66; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_am66, 0.002); end
  def test_costpercapita_an66; assert_in_epsilon(1110.4967669786806, worksheet.costpercapita_an66, 0.002); end
  def test_costpercapita_ao66; assert_in_epsilon(1311.4926591574713, worksheet.costpercapita_ao66, 0.002); end
  def test_costpercapita_ap66; assert_in_epsilon(1683.1475371930226, worksheet.costpercapita_ap66, 0.002); end
  def test_costpercapita_aq66; assert_in_epsilon(1986.2954946237087, worksheet.costpercapita_aq66, 0.002); end
  def test_costpercapita_as66; assert_in_epsilon(1035.1485776726663, worksheet.costpercapita_as66, 0.002); end
  def test_costpercapita_at66; assert_in_epsilon(19231.355808810556, worksheet.costpercapita_at66, 0.002); end
  def test_costpercapita_av66; assert_in_delta(0.0, (worksheet.costpercapita_av66||0), 0.002); end
  def test_costpercapita_aw66; assert_in_epsilon(5.0, worksheet.costpercapita_aw66, 0.002); end
  def test_costpercapita_ay66; assert_in_epsilon(10.875583966050376, worksheet.costpercapita_ay66, 0.002); end
  def test_costpercapita_az66; assert_in_epsilon(12.829961424524406, worksheet.costpercapita_az66, 0.002); end
  def test_costpercapita_ba66; assert_in_delta(0.0, (worksheet.costpercapita_ba66||0), 0.002); end
  def test_costpercapita_bb66; assert_in_delta(0.0, (worksheet.costpercapita_bb66||0), 0.002); end
  def test_costpercapita_bc66; assert_in_delta(0.0, (worksheet.costpercapita_bc66||0), 0.002); end
  def test_costpercapita_bd66; assert_in_epsilon(6.822553514683425, worksheet.costpercapita_bd66, 0.002); end
  def test_costpercapita_be66; assert_in_epsilon(16.45365554849113, worksheet.costpercapita_be66, 0.002); end
  def test_costpercapita_bf66; assert_in_epsilon(15.898422252943812, worksheet.costpercapita_bf66, 0.002); end
  def test_costpercapita_bg66; assert_in_epsilon(16.01624425275949, worksheet.costpercapita_bg66, 0.002); end
  def test_costpercapita_bi66; assert_in_delta(0.0, (worksheet.costpercapita_bi66||0), 0.002); end
  def test_costpercapita_bj66; assert_in_delta(0.0, (worksheet.costpercapita_bj66||0), 0.002); end
  def test_costpercapita_bk66; assert_in_delta(0.0, (worksheet.costpercapita_bk66||0), 0.002); end
  def test_costpercapita_bl66; assert_in_delta(0.0, (worksheet.costpercapita_bl66||0), 0.002); end
  def test_costpercapita_bm66; assert_in_delta(0.0, (worksheet.costpercapita_bm66||0), 0.002); end
  def test_costpercapita_bn66; assert_in_delta(0.0, (worksheet.costpercapita_bn66||0), 0.002); end
  def test_costpercapita_bo66; assert_in_delta(0.0, (worksheet.costpercapita_bo66||0), 0.002); end
  def test_costpercapita_bp66; assert_in_delta(0.0, (worksheet.costpercapita_bp66||0), 0.002); end
  def test_costpercapita_bq66; assert_in_delta(0.0, (worksheet.costpercapita_bq66||0), 0.002); end
  def test_costpercapita_bs66; assert_in_epsilon(413.3310176088768, worksheet.costpercapita_bs66, 0.002); end
  def test_costpercapita_bt66; assert_in_epsilon(511.62897028203344, worksheet.costpercapita_bt66, 0.002); end
  def test_costpercapita_bu66; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_bu66, 0.002); end
  def test_costpercapita_bv66; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_bv66, 0.002); end
  def test_costpercapita_bw66; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_bw66, 0.002); end
  def test_costpercapita_bx66; assert_in_epsilon(1113.176705112898, worksheet.costpercapita_bx66, 0.002); end
  def test_costpercapita_by66; assert_in_epsilon(1317.9557493856062, worksheet.costpercapita_by66, 0.002); end
  def test_costpercapita_bz66; assert_in_epsilon(1689.3925285995183, worksheet.costpercapita_bz66, 0.002); end
  def test_costpercapita_ca66; assert_in_epsilon(1992.5867671872043, worksheet.costpercapita_ca66, 0.002); end
  def test_costpercapita_cc66; assert_in_epsilon(1038.5920183910532, worksheet.costpercapita_cc66, 0.002); end
  def test_costpercapita_cd66; assert_in_epsilon(19291.96308131491, worksheet.costpercapita_cd66, 0.002); end
  def test_costpercapita_cf66; assert_in_epsilon(4.271991731508331, worksheet.costpercapita_cf66, 0.002); end
  def test_costpercapita_cg66; assert_in_epsilon(5.039682401628679, worksheet.costpercapita_cg66, 0.002); end
  def test_costpercapita_ch66; assert_in_delta(0.0, (worksheet.costpercapita_ch66||0), 0.002); end
  def test_costpercapita_ci66; assert_in_delta(0.0, (worksheet.costpercapita_ci66||0), 0.002); end
  def test_costpercapita_cj66; assert_in_delta(0.0, (worksheet.costpercapita_cj66||0), 0.002); end
  def test_costpercapita_ck66; assert_in_epsilon(2.679938134217306, worksheet.costpercapita_ck66, 0.002); end
  def test_costpercapita_cl66; assert_in_epsilon(6.463090228134854, worksheet.costpercapita_cl66, 0.002); end
  def test_costpercapita_cm66; assert_in_epsilon(6.244991406495423, worksheet.costpercapita_cm66, 0.002); end
  def test_costpercapita_cn66; assert_in_epsilon(6.291272563495688, worksheet.costpercapita_cn66, 0.002); end
  def test_costpercapita_cp66; assert_in_epsilon(3.4434407183866984, worksheet.costpercapita_cp66, 0.002); end
  def test_costpercapita_cq66; assert_in_epsilon(60.60727250435085, worksheet.costpercapita_cq66, 0.002); end
  def test_costpercapita_cr66; assert_equal("ok", worksheet.costpercapita_cr66); end
  def test_costpercapita_a67; assert_equal("FOS.CTL", worksheet.costpercapita_a67); end
  def test_costpercapita_b67; assert_equal("Petroleum CTL", worksheet.costpercapita_b67); end
  def test_costpercapita_c67; assert_equal("Fossil Fuels", worksheet.costpercapita_c67); end
  def test_costpercapita_e67; assert_in_delta(0.0, (worksheet.costpercapita_e67||0), 0.002); end
  def test_costpercapita_f67; assert_in_delta(0.0, (worksheet.costpercapita_f67||0), 0.002); end
  def test_costpercapita_g67; assert_in_delta(0.0, (worksheet.costpercapita_g67||0), 0.002); end
  def test_costpercapita_h67; assert_in_delta(0.0, (worksheet.costpercapita_h67||0), 0.002); end
  def test_costpercapita_i67; assert_in_delta(0.0, (worksheet.costpercapita_i67||0), 0.002); end
  def test_costpercapita_j67; assert_in_delta(0.0, (worksheet.costpercapita_j67||0), 0.002); end
  def test_costpercapita_k67; assert_in_epsilon(-14.220319855346778, worksheet.costpercapita_k67, 0.002); end
  def test_costpercapita_l67; assert_in_epsilon(-14.220319855346778, worksheet.costpercapita_l67, 0.002); end
  def test_costpercapita_m67; assert_in_epsilon(-24.29343687720638, worksheet.costpercapita_m67, 0.002); end
  def test_costpercapita_o67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_o67, 0.002); end
  def test_costpercapita_p67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_p67, 0.002); end
  def test_costpercapita_q67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_q67, 0.002); end
  def test_costpercapita_r67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_r67, 0.002); end
  def test_costpercapita_s67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_s67, 0.002); end
  def test_costpercapita_t67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_t67, 0.002); end
  def test_costpercapita_u67; assert_in_epsilon(80.46759454024483, worksheet.costpercapita_u67, 0.002); end
  def test_costpercapita_v67; assert_in_epsilon(80.46759454024483, worksheet.costpercapita_v67, 0.002); end
  def test_costpercapita_w67; assert_in_epsilon(49.61116797789233, worksheet.costpercapita_w67, 0.002); end
  def test_costpercapita_y67; assert_in_delta(0.0, (worksheet.costpercapita_y67||0), 0.002); end
  def test_costpercapita_z67; assert_in_delta(0.0, (worksheet.costpercapita_z67||0), 0.002); end
  def test_costpercapita_aa67; assert_in_delta(0.0, (worksheet.costpercapita_aa67||0), 0.002); end
  def test_costpercapita_ab67; assert_in_delta(0.0, (worksheet.costpercapita_ab67||0), 0.002); end
  def test_costpercapita_ac67; assert_in_delta(0.0, (worksheet.costpercapita_ac67||0), 0.002); end
  def test_costpercapita_ad67; assert_in_delta(0.0, (worksheet.costpercapita_ad67||0), 0.002); end
  def test_costpercapita_ae67; assert_in_delta(0.0, (worksheet.costpercapita_ae67||0), 0.002); end
  def test_costpercapita_af67; assert_in_delta(0.0, (worksheet.costpercapita_af67||0), 0.002); end
  def test_costpercapita_ag67; assert_in_delta(0.0, (worksheet.costpercapita_ag67||0), 0.002); end
  def test_costpercapita_ai67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_ai67, 0.002); end
  def test_costpercapita_aj67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_aj67, 0.002); end
  def test_costpercapita_ak67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_ak67, 0.002); end
  def test_costpercapita_al67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_al67, 0.002); end
  def test_costpercapita_am67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_am67, 0.002); end
  def test_costpercapita_an67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_an67, 0.002); end
  def test_costpercapita_ao67; assert_in_epsilon(66.24727468489806, worksheet.costpercapita_ao67, 0.002); end
  def test_costpercapita_ap67; assert_in_epsilon(66.24727468489806, worksheet.costpercapita_ap67, 0.002); end
  def test_costpercapita_aq67; assert_in_epsilon(25.317731100685954, worksheet.costpercapita_aq67, 0.002); end
  def test_costpercapita_as67; assert_in_epsilon(100.21997779320743, worksheet.costpercapita_as67, 0.002); end
  def test_costpercapita_at67; assert_in_epsilon(2283.394281330137, worksheet.costpercapita_at67, 0.002); end
  def test_costpercapita_av67; assert_in_delta(0.0, (worksheet.costpercapita_av67||0), 0.002); end
  def test_costpercapita_aw67; assert_in_epsilon(5.0, worksheet.costpercapita_aw67, 0.002); end
  def test_costpercapita_ay67; assert_in_delta(0.0, (worksheet.costpercapita_ay67||0), 0.002); end
  def test_costpercapita_az67; assert_in_delta(0.0, (worksheet.costpercapita_az67||0), 0.002); end
  def test_costpercapita_ba67; assert_in_delta(0.0, (worksheet.costpercapita_ba67||0), 0.002); end
  def test_costpercapita_bb67; assert_in_delta(0.0, (worksheet.costpercapita_bb67||0), 0.002); end
  def test_costpercapita_bc67; assert_in_delta(0.0, (worksheet.costpercapita_bc67||0), 0.002); end
  def test_costpercapita_bd67; assert_in_delta(0.0, (worksheet.costpercapita_bd67||0), 0.002); end
  def test_costpercapita_be67; assert_in_epsilon(-63.4036454488874, worksheet.costpercapita_be67, 0.002); end
  def test_costpercapita_bf67; assert_in_epsilon(-63.4036454488874, worksheet.costpercapita_bf67, 0.002); end
  def test_costpercapita_bg67; assert_in_epsilon(-108.31630189514878, worksheet.costpercapita_bg67, 0.002); end
  def test_costpercapita_bi67; assert_in_delta(0.0, (worksheet.costpercapita_bi67||0), 0.002); end
  def test_costpercapita_bj67; assert_in_delta(0.0, (worksheet.costpercapita_bj67||0), 0.002); end
  def test_costpercapita_bk67; assert_in_delta(0.0, (worksheet.costpercapita_bk67||0), 0.002); end
  def test_costpercapita_bl67; assert_in_delta(0.0, (worksheet.costpercapita_bl67||0), 0.002); end
  def test_costpercapita_bm67; assert_in_delta(0.0, (worksheet.costpercapita_bm67||0), 0.002); end
  def test_costpercapita_bn67; assert_in_delta(0.0, (worksheet.costpercapita_bn67||0), 0.002); end
  def test_costpercapita_bo67; assert_in_delta(0.0, (worksheet.costpercapita_bo67||0), 0.002); end
  def test_costpercapita_bp67; assert_in_delta(0.0, (worksheet.costpercapita_bp67||0), 0.002); end
  def test_costpercapita_bq67; assert_in_delta(0.0, (worksheet.costpercapita_bq67||0), 0.002); end
  def test_costpercapita_bs67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bs67, 0.002); end
  def test_costpercapita_bt67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bt67, 0.002); end
  def test_costpercapita_bu67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bu67, 0.002); end
  def test_costpercapita_bv67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bv67, 0.002); end
  def test_costpercapita_bw67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bw67, 0.002); end
  def test_costpercapita_bx67; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bx67, 0.002); end
  def test_costpercapita_by67; assert_in_epsilon(17.063949091357436, worksheet.costpercapita_by67, 0.002); end
  def test_costpercapita_bz67; assert_in_epsilon(17.063949091357436, worksheet.costpercapita_bz67, 0.002); end
  def test_costpercapita_ca67; assert_in_epsilon(-58.70513391725645, worksheet.costpercapita_ca67, 0.002); end
  def test_costpercapita_cc67; assert_in_epsilon(79.95447599264926, worksheet.costpercapita_cc67, 0.002); end
  def test_costpercapita_cd67; assert_in_epsilon(2008.827973500747, worksheet.costpercapita_cd67, 0.002); end
  def test_costpercapita_cf67; assert_in_delta(0.0, (worksheet.costpercapita_cf67||0), 0.002); end
  def test_costpercapita_cg67; assert_in_delta(0.0, (worksheet.costpercapita_cg67||0), 0.002); end
  def test_costpercapita_ch67; assert_in_delta(0.0, (worksheet.costpercapita_ch67||0), 0.002); end
  def test_costpercapita_ci67; assert_in_delta(0.0, (worksheet.costpercapita_ci67||0), 0.002); end
  def test_costpercapita_cj67; assert_in_delta(0.0, (worksheet.costpercapita_cj67||0), 0.002); end
  def test_costpercapita_ck67; assert_in_delta(0.0, (worksheet.costpercapita_ck67||0), 0.002); end
  def test_costpercapita_cl67; assert_in_epsilon(-49.18332559354062, worksheet.costpercapita_cl67, 0.002); end
  def test_costpercapita_cm67; assert_in_epsilon(-49.18332559354062, worksheet.costpercapita_cm67, 0.002); end
  def test_costpercapita_cn67; assert_in_epsilon(-84.02286501794241, worksheet.costpercapita_cn67, 0.002); end
  def test_costpercapita_cp67; assert_in_epsilon(-20.265501800558184, worksheet.costpercapita_cp67, 0.002); end
  def test_costpercapita_cq67; assert_in_epsilon(-274.5663078293901, worksheet.costpercapita_cq67, 0.002); end
  def test_costpercapita_cr67; assert_equal("ok", worksheet.costpercapita_cr67); end
  def test_costpercapita_a68; assert_equal("FOS.GTL", worksheet.costpercapita_a68); end
  def test_costpercapita_b68; assert_equal("Petroleum GTL", worksheet.costpercapita_b68); end
  def test_costpercapita_c68; assert_equal("Fossil Fuels", worksheet.costpercapita_c68); end
  def test_costpercapita_e68; assert_in_delta(0.0, (worksheet.costpercapita_e68||0), 0.002); end
  def test_costpercapita_f68; assert_in_delta(0.0, (worksheet.costpercapita_f68||0), 0.002); end
  def test_costpercapita_g68; assert_in_delta(0.0, (worksheet.costpercapita_g68||0), 0.002); end
  def test_costpercapita_h68; assert_in_delta(0.0, (worksheet.costpercapita_h68||0), 0.002); end
  def test_costpercapita_i68; assert_in_delta(0.0, (worksheet.costpercapita_i68||0), 0.002); end
  def test_costpercapita_j68; assert_in_delta(0.0, (worksheet.costpercapita_j68||0), 0.002); end
  def test_costpercapita_k68; assert_in_delta(0.0, (worksheet.costpercapita_k68||0), 0.002); end
  def test_costpercapita_l68; assert_in_delta(0.0, (worksheet.costpercapita_l68||0), 0.002); end
  def test_costpercapita_m68; assert_in_delta(0.0, (worksheet.costpercapita_m68||0), 0.002); end
  def test_costpercapita_o68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_o68, 0.002); end
  def test_costpercapita_p68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_p68, 0.002); end
  def test_costpercapita_q68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_q68, 0.002); end
  def test_costpercapita_r68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_r68, 0.002); end
  def test_costpercapita_s68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_s68, 0.002); end
  def test_costpercapita_t68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_t68, 0.002); end
  def test_costpercapita_u68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_u68, 0.002); end
  def test_costpercapita_v68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_v68, 0.002); end
  def test_costpercapita_w68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_w68, 0.002); end
  def test_costpercapita_y68; assert_in_delta(0.0, (worksheet.costpercapita_y68||0), 0.002); end
  def test_costpercapita_z68; assert_in_delta(0.0, (worksheet.costpercapita_z68||0), 0.002); end
  def test_costpercapita_aa68; assert_in_delta(0.0, (worksheet.costpercapita_aa68||0), 0.002); end
  def test_costpercapita_ab68; assert_in_delta(0.0, (worksheet.costpercapita_ab68||0), 0.002); end
  def test_costpercapita_ac68; assert_in_delta(0.0, (worksheet.costpercapita_ac68||0), 0.002); end
  def test_costpercapita_ad68; assert_in_delta(0.0, (worksheet.costpercapita_ad68||0), 0.002); end
  def test_costpercapita_ae68; assert_in_delta(0.0, (worksheet.costpercapita_ae68||0), 0.002); end
  def test_costpercapita_af68; assert_in_delta(0.0, (worksheet.costpercapita_af68||0), 0.002); end
  def test_costpercapita_ag68; assert_in_delta(0.0, (worksheet.costpercapita_ag68||0), 0.002); end
  def test_costpercapita_ai68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ai68, 0.002); end
  def test_costpercapita_aj68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_aj68, 0.002); end
  def test_costpercapita_ak68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ak68, 0.002); end
  def test_costpercapita_al68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_al68, 0.002); end
  def test_costpercapita_am68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_am68, 0.002); end
  def test_costpercapita_an68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_an68, 0.002); end
  def test_costpercapita_ao68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ao68, 0.002); end
  def test_costpercapita_ap68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ap68, 0.002); end
  def test_costpercapita_aq68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_aq68, 0.002); end
  def test_costpercapita_as68; assert_in_epsilon(31.21853385916763, worksheet.costpercapita_as68, 0.002); end
  def test_costpercapita_at68; assert_in_epsilon(655.9337649288497, worksheet.costpercapita_at68, 0.002); end
  def test_costpercapita_av68; assert_in_delta(0.0, (worksheet.costpercapita_av68||0), 0.002); end
  def test_costpercapita_aw68; assert_in_epsilon(5.0, worksheet.costpercapita_aw68, 0.002); end
  def test_costpercapita_ay68; assert_in_delta(0.0, (worksheet.costpercapita_ay68||0), 0.002); end
  def test_costpercapita_az68; assert_in_delta(0.0, (worksheet.costpercapita_az68||0), 0.002); end
  def test_costpercapita_ba68; assert_in_delta(0.0, (worksheet.costpercapita_ba68||0), 0.002); end
  def test_costpercapita_bb68; assert_in_delta(0.0, (worksheet.costpercapita_bb68||0), 0.002); end
  def test_costpercapita_bc68; assert_in_delta(0.0, (worksheet.costpercapita_bc68||0), 0.002); end
  def test_costpercapita_bd68; assert_in_delta(0.0, (worksheet.costpercapita_bd68||0), 0.002); end
  def test_costpercapita_be68; assert_in_delta(0.0, (worksheet.costpercapita_be68||0), 0.002); end
  def test_costpercapita_bf68; assert_in_delta(0.0, (worksheet.costpercapita_bf68||0), 0.002); end
  def test_costpercapita_bg68; assert_in_delta(0.0, (worksheet.costpercapita_bg68||0), 0.002); end
  def test_costpercapita_bi68; assert_in_delta(0.0, (worksheet.costpercapita_bi68||0), 0.002); end
  def test_costpercapita_bj68; assert_in_delta(0.0, (worksheet.costpercapita_bj68||0), 0.002); end
  def test_costpercapita_bk68; assert_in_delta(0.0, (worksheet.costpercapita_bk68||0), 0.002); end
  def test_costpercapita_bl68; assert_in_delta(0.0, (worksheet.costpercapita_bl68||0), 0.002); end
  def test_costpercapita_bm68; assert_in_delta(0.0, (worksheet.costpercapita_bm68||0), 0.002); end
  def test_costpercapita_bn68; assert_in_delta(0.0, (worksheet.costpercapita_bn68||0), 0.002); end
  def test_costpercapita_bo68; assert_in_delta(0.0, (worksheet.costpercapita_bo68||0), 0.002); end
  def test_costpercapita_bp68; assert_in_delta(0.0, (worksheet.costpercapita_bp68||0), 0.002); end
  def test_costpercapita_bq68; assert_in_delta(0.0, (worksheet.costpercapita_bq68||0), 0.002); end
  def test_costpercapita_bs68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bs68, 0.002); end
  def test_costpercapita_bt68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bt68, 0.002); end
  def test_costpercapita_bu68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bu68, 0.002); end
  def test_costpercapita_bv68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bv68, 0.002); end
  def test_costpercapita_bw68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bw68, 0.002); end
  def test_costpercapita_bx68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bx68, 0.002); end
  def test_costpercapita_by68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_by68, 0.002); end
  def test_costpercapita_bz68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bz68, 0.002); end
  def test_costpercapita_ca68; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ca68, 0.002); end
  def test_costpercapita_cc68; assert_in_epsilon(31.21853385916763, worksheet.costpercapita_cc68, 0.002); end
  def test_costpercapita_cd68; assert_in_epsilon(655.9337649288497, worksheet.costpercapita_cd68, 0.002); end
  def test_costpercapita_cf68; assert_in_delta(0.0, (worksheet.costpercapita_cf68||0), 0.002); end
  def test_costpercapita_cg68; assert_in_delta(0.0, (worksheet.costpercapita_cg68||0), 0.002); end
  def test_costpercapita_ch68; assert_in_delta(0.0, (worksheet.costpercapita_ch68||0), 0.002); end
  def test_costpercapita_ci68; assert_in_delta(0.0, (worksheet.costpercapita_ci68||0), 0.002); end
  def test_costpercapita_cj68; assert_in_delta(0.0, (worksheet.costpercapita_cj68||0), 0.002); end
  def test_costpercapita_ck68; assert_in_delta(0.0, (worksheet.costpercapita_ck68||0), 0.002); end
  def test_costpercapita_cl68; assert_in_delta(0.0, (worksheet.costpercapita_cl68||0), 0.002); end
  def test_costpercapita_cm68; assert_in_delta(0.0, (worksheet.costpercapita_cm68||0), 0.002); end
  def test_costpercapita_cn68; assert_in_delta(0.0, (worksheet.costpercapita_cn68||0), 0.002); end
  def test_costpercapita_cp68; assert_in_delta(0.0, (worksheet.costpercapita_cp68||0), 0.002); end
  def test_costpercapita_cq68; assert_in_delta(0.0, (worksheet.costpercapita_cq68||0), 0.002); end
  def test_costpercapita_cr68; assert_equal("ok", worksheet.costpercapita_cr68); end
  def test_costpercapita_a69; assert_equal("FOS.REF", worksheet.costpercapita_a69); end
  def test_costpercapita_b69; assert_equal("Refineries", worksheet.costpercapita_b69); end
  def test_costpercapita_c69; assert_equal("Fossil Fuels", worksheet.costpercapita_c69); end
  def test_costpercapita_e69; assert_in_delta(0.0, (worksheet.costpercapita_e69||0), 0.002); end
  def test_costpercapita_f69; assert_in_delta(0.0, (worksheet.costpercapita_f69||0), 0.002); end
  def test_costpercapita_g69; assert_in_delta(0.0, (worksheet.costpercapita_g69||0), 0.002); end
  def test_costpercapita_h69; assert_in_delta(0.0, (worksheet.costpercapita_h69||0), 0.002); end
  def test_costpercapita_i69; assert_in_delta(0.0, (worksheet.costpercapita_i69||0), 0.002); end
  def test_costpercapita_j69; assert_in_delta(0.0, (worksheet.costpercapita_j69||0), 0.002); end
  def test_costpercapita_k69; assert_in_delta(0.0, (worksheet.costpercapita_k69||0), 0.002); end
  def test_costpercapita_l69; assert_in_delta(0.0, (worksheet.costpercapita_l69||0), 0.002); end
  def test_costpercapita_m69; assert_in_delta(0.0, (worksheet.costpercapita_m69||0), 0.002); end
  def test_costpercapita_o69; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_o69, 0.002); end
  def test_costpercapita_p69; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_p69, 0.002); end
  def test_costpercapita_q69; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_q69, 0.002); end
  def test_costpercapita_r69; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_r69, 0.002); end
  def test_costpercapita_s69; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_s69, 0.002); end
  def test_costpercapita_t69; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_t69, 0.002); end
  def test_costpercapita_u69; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_u69, 0.002); end
  def test_costpercapita_v69; assert_in_delta(0.0, (worksheet.costpercapita_v69||0), 0.002); end
  def test_costpercapita_w69; assert_in_delta(0.0, (worksheet.costpercapita_w69||0), 0.002); end
  def test_costpercapita_y69; assert_in_delta(0.0, (worksheet.costpercapita_y69||0), 0.002); end
  def test_costpercapita_z69; assert_in_delta(0.0, (worksheet.costpercapita_z69||0), 0.002); end
  def test_costpercapita_aa69; assert_in_delta(0.0, (worksheet.costpercapita_aa69||0), 0.002); end
  def test_costpercapita_ab69; assert_in_delta(0.0, (worksheet.costpercapita_ab69||0), 0.002); end
  def test_costpercapita_ac69; assert_in_delta(0.0, (worksheet.costpercapita_ac69||0), 0.002); end
  def test_costpercapita_ad69; assert_in_delta(0.0, (worksheet.costpercapita_ad69||0), 0.002); end
  def test_costpercapita_ae69; assert_in_delta(0.0, (worksheet.costpercapita_ae69||0), 0.002); end
  def test_costpercapita_af69; assert_in_delta(0.0, (worksheet.costpercapita_af69||0), 0.002); end
  def test_costpercapita_ag69; assert_in_delta(0.0, (worksheet.costpercapita_ag69||0), 0.002); end
  def test_costpercapita_ai69; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_ai69, 0.002); end
  def test_costpercapita_aj69; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_aj69, 0.002); end
  def test_costpercapita_ak69; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_ak69, 0.002); end
  def test_costpercapita_al69; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_al69, 0.002); end
  def test_costpercapita_am69; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_am69, 0.002); end
  def test_costpercapita_an69; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_an69, 0.002); end
  def test_costpercapita_ao69; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_ao69, 0.002); end
  def test_costpercapita_ap69; assert_in_delta(0.0, (worksheet.costpercapita_ap69||0), 0.002); end
  def test_costpercapita_aq69; assert_in_delta(0.0, (worksheet.costpercapita_aq69||0), 0.002); end
  def test_costpercapita_as69; assert_in_epsilon(104.20766539793755, worksheet.costpercapita_as69, 0.002); end
  def test_costpercapita_at69; assert_in_epsilon(2489.272496400997, worksheet.costpercapita_at69, 0.002); end
  def test_costpercapita_av69; assert_in_delta(0.0, (worksheet.costpercapita_av69||0), 0.002); end
  def test_costpercapita_aw69; assert_in_epsilon(5.0, worksheet.costpercapita_aw69, 0.002); end
  def test_costpercapita_ay69; assert_in_delta(0.0, (worksheet.costpercapita_ay69||0), 0.002); end
  def test_costpercapita_az69; assert_in_delta(0.0, (worksheet.costpercapita_az69||0), 0.002); end
  def test_costpercapita_ba69; assert_in_delta(0.0, (worksheet.costpercapita_ba69||0), 0.002); end
  def test_costpercapita_bb69; assert_in_delta(0.0, (worksheet.costpercapita_bb69||0), 0.002); end
  def test_costpercapita_bc69; assert_in_delta(0.0, (worksheet.costpercapita_bc69||0), 0.002); end
  def test_costpercapita_bd69; assert_in_delta(0.0, (worksheet.costpercapita_bd69||0), 0.002); end
  def test_costpercapita_be69; assert_in_delta(0.0, (worksheet.costpercapita_be69||0), 0.002); end
  def test_costpercapita_bf69; assert_in_delta(0.0, (worksheet.costpercapita_bf69||0), 0.002); end
  def test_costpercapita_bg69; assert_in_delta(0.0, (worksheet.costpercapita_bg69||0), 0.002); end
  def test_costpercapita_bi69; assert_in_delta(0.0, (worksheet.costpercapita_bi69||0), 0.002); end
  def test_costpercapita_bj69; assert_in_delta(0.0, (worksheet.costpercapita_bj69||0), 0.002); end
  def test_costpercapita_bk69; assert_in_delta(0.0, (worksheet.costpercapita_bk69||0), 0.002); end
  def test_costpercapita_bl69; assert_in_delta(0.0, (worksheet.costpercapita_bl69||0), 0.002); end
  def test_costpercapita_bm69; assert_in_delta(0.0, (worksheet.costpercapita_bm69||0), 0.002); end
  def test_costpercapita_bn69; assert_in_delta(0.0, (worksheet.costpercapita_bn69||0), 0.002); end
  def test_costpercapita_bo69; assert_in_delta(0.0, (worksheet.costpercapita_bo69||0), 0.002); end
  def test_costpercapita_bp69; assert_in_delta(0.0, (worksheet.costpercapita_bp69||0), 0.002); end
  def test_costpercapita_bq69; assert_in_delta(0.0, (worksheet.costpercapita_bq69||0), 0.002); end
  def test_costpercapita_bs69; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_bs69, 0.002); end
  def test_costpercapita_bt69; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_bt69, 0.002); end
  def test_costpercapita_bu69; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_bu69, 0.002); end
  def test_costpercapita_bv69; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_bv69, 0.002); end
  def test_costpercapita_bw69; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_bw69, 0.002); end
  def test_costpercapita_bx69; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_bx69, 0.002); end
  def test_costpercapita_by69; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_by69, 0.002); end
  def test_costpercapita_bz69; assert_in_delta(0.0, (worksheet.costpercapita_bz69||0), 0.002); end
  def test_costpercapita_ca69; assert_in_delta(0.0, (worksheet.costpercapita_ca69||0), 0.002); end
  def test_costpercapita_cc69; assert_in_epsilon(104.20766539793755, worksheet.costpercapita_cc69, 0.002); end
  def test_costpercapita_cd69; assert_in_epsilon(2489.272496400997, worksheet.costpercapita_cd69, 0.002); end
  def test_costpercapita_cf69; assert_in_delta(0.0, (worksheet.costpercapita_cf69||0), 0.002); end
  def test_costpercapita_cg69; assert_in_delta(0.0, (worksheet.costpercapita_cg69||0), 0.002); end
  def test_costpercapita_ch69; assert_in_delta(0.0, (worksheet.costpercapita_ch69||0), 0.002); end
  def test_costpercapita_ci69; assert_in_delta(0.0, (worksheet.costpercapita_ci69||0), 0.002); end
  def test_costpercapita_cj69; assert_in_delta(0.0, (worksheet.costpercapita_cj69||0), 0.002); end
  def test_costpercapita_ck69; assert_in_delta(0.0, (worksheet.costpercapita_ck69||0), 0.002); end
  def test_costpercapita_cl69; assert_in_delta(0.0, (worksheet.costpercapita_cl69||0), 0.002); end
  def test_costpercapita_cm69; assert_in_delta(0.0, (worksheet.costpercapita_cm69||0), 0.002); end
  def test_costpercapita_cn69; assert_in_delta(0.0, (worksheet.costpercapita_cn69||0), 0.002); end
  def test_costpercapita_cp69; assert_in_delta(0.0, (worksheet.costpercapita_cp69||0), 0.002); end
  def test_costpercapita_cq69; assert_in_delta(0.0, (worksheet.costpercapita_cq69||0), 0.002); end
  def test_costpercapita_cr69; assert_equal("ok", worksheet.costpercapita_cr69); end
  def test_costpercapita_a70; assert_equal("AGL", worksheet.costpercapita_a70); end
  def test_costpercapita_b70; assert_equal("place holder", worksheet.costpercapita_b70); end
  def test_costpercapita_c70; assert_equal("Bioenergy", worksheet.costpercapita_c70); end
  def test_costpercapita_e70; assert_in_delta(0.0, (worksheet.costpercapita_e70||0), 0.002); end
  def test_costpercapita_f70; assert_in_delta(0.0, (worksheet.costpercapita_f70||0), 0.002); end
  def test_costpercapita_g70; assert_in_delta(0.0, (worksheet.costpercapita_g70||0), 0.002); end
  def test_costpercapita_h70; assert_in_delta(0.0, (worksheet.costpercapita_h70||0), 0.002); end
  def test_costpercapita_i70; assert_in_delta(0.0, (worksheet.costpercapita_i70||0), 0.002); end
  def test_costpercapita_j70; assert_in_delta(0.0, (worksheet.costpercapita_j70||0), 0.002); end
  def test_costpercapita_k70; assert_in_delta(0.0, (worksheet.costpercapita_k70||0), 0.002); end
  def test_costpercapita_l70; assert_in_delta(0.0, (worksheet.costpercapita_l70||0), 0.002); end
  def test_costpercapita_m70; assert_in_delta(0.0, (worksheet.costpercapita_m70||0), 0.002); end
  def test_costpercapita_o70; assert_in_delta(0.0, (worksheet.costpercapita_o70||0), 0.002); end
  def test_costpercapita_p70; assert_in_delta(0.0, (worksheet.costpercapita_p70||0), 0.002); end
  def test_costpercapita_q70; assert_in_delta(0.0, (worksheet.costpercapita_q70||0), 0.002); end
  def test_costpercapita_r70; assert_in_delta(0.0, (worksheet.costpercapita_r70||0), 0.002); end
  def test_costpercapita_s70; assert_in_delta(0.0, (worksheet.costpercapita_s70||0), 0.002); end
  def test_costpercapita_t70; assert_in_delta(0.0, (worksheet.costpercapita_t70||0), 0.002); end
  def test_costpercapita_u70; assert_in_delta(0.0, (worksheet.costpercapita_u70||0), 0.002); end
  def test_costpercapita_v70; assert_in_delta(0.0, (worksheet.costpercapita_v70||0), 0.002); end
  def test_costpercapita_w70; assert_in_delta(0.0, (worksheet.costpercapita_w70||0), 0.002); end
  def test_costpercapita_y70; assert_in_delta(0.0, (worksheet.costpercapita_y70||0), 0.002); end
  def test_costpercapita_z70; assert_in_delta(0.0, (worksheet.costpercapita_z70||0), 0.002); end
  def test_costpercapita_aa70; assert_in_delta(0.0, (worksheet.costpercapita_aa70||0), 0.002); end
  def test_costpercapita_ab70; assert_in_delta(0.0, (worksheet.costpercapita_ab70||0), 0.002); end
  def test_costpercapita_ac70; assert_in_delta(0.0, (worksheet.costpercapita_ac70||0), 0.002); end
  def test_costpercapita_ad70; assert_in_delta(0.0, (worksheet.costpercapita_ad70||0), 0.002); end
  def test_costpercapita_ae70; assert_in_delta(0.0, (worksheet.costpercapita_ae70||0), 0.002); end
  def test_costpercapita_af70; assert_in_delta(0.0, (worksheet.costpercapita_af70||0), 0.002); end
  def test_costpercapita_ag70; assert_in_delta(0.0, (worksheet.costpercapita_ag70||0), 0.002); end
  def test_costpercapita_ai70; assert_in_delta(0.0, (worksheet.costpercapita_ai70||0), 0.002); end
  def test_costpercapita_aj70; assert_in_delta(0.0, (worksheet.costpercapita_aj70||0), 0.002); end
  def test_costpercapita_ak70; assert_in_delta(0.0, (worksheet.costpercapita_ak70||0), 0.002); end
  def test_costpercapita_al70; assert_in_delta(0.0, (worksheet.costpercapita_al70||0), 0.002); end
  def test_costpercapita_am70; assert_in_delta(0.0, (worksheet.costpercapita_am70||0), 0.002); end
  def test_costpercapita_an70; assert_in_delta(0.0, (worksheet.costpercapita_an70||0), 0.002); end
  def test_costpercapita_ao70; assert_in_delta(0.0, (worksheet.costpercapita_ao70||0), 0.002); end
  def test_costpercapita_ap70; assert_in_delta(0.0, (worksheet.costpercapita_ap70||0), 0.002); end
  def test_costpercapita_aq70; assert_in_delta(0.0, (worksheet.costpercapita_aq70||0), 0.002); end
  def test_costpercapita_as70; assert_in_delta(0.0, (worksheet.costpercapita_as70||0), 0.002); end
  def test_costpercapita_at70; assert_in_delta(0.0, (worksheet.costpercapita_at70||0), 0.002); end
  def test_costpercapita_av70; assert_in_delta(0.0, (worksheet.costpercapita_av70||0), 0.002); end
  def test_costpercapita_aw70; assert_in_epsilon(5.0, worksheet.costpercapita_aw70, 0.002); end
  def test_costpercapita_ay70; assert_in_delta(0.0, (worksheet.costpercapita_ay70||0), 0.002); end
  def test_costpercapita_az70; assert_in_delta(0.0, (worksheet.costpercapita_az70||0), 0.002); end
  def test_costpercapita_ba70; assert_in_delta(0.0, (worksheet.costpercapita_ba70||0), 0.002); end
  def test_costpercapita_bb70; assert_in_delta(0.0, (worksheet.costpercapita_bb70||0), 0.002); end
  def test_costpercapita_bc70; assert_in_delta(0.0, (worksheet.costpercapita_bc70||0), 0.002); end
  def test_costpercapita_bd70; assert_in_delta(0.0, (worksheet.costpercapita_bd70||0), 0.002); end
  def test_costpercapita_be70; assert_in_delta(0.0, (worksheet.costpercapita_be70||0), 0.002); end
  def test_costpercapita_bf70; assert_in_delta(0.0, (worksheet.costpercapita_bf70||0), 0.002); end
  def test_costpercapita_bg70; assert_in_delta(0.0, (worksheet.costpercapita_bg70||0), 0.002); end
  def test_costpercapita_bi70; assert_in_delta(0.0, (worksheet.costpercapita_bi70||0), 0.002); end
  def test_costpercapita_bj70; assert_in_delta(0.0, (worksheet.costpercapita_bj70||0), 0.002); end
  def test_costpercapita_bk70; assert_in_delta(0.0, (worksheet.costpercapita_bk70||0), 0.002); end
  def test_costpercapita_bl70; assert_in_delta(0.0, (worksheet.costpercapita_bl70||0), 0.002); end
  def test_costpercapita_bm70; assert_in_delta(0.0, (worksheet.costpercapita_bm70||0), 0.002); end
  def test_costpercapita_bn70; assert_in_delta(0.0, (worksheet.costpercapita_bn70||0), 0.002); end
  def test_costpercapita_bo70; assert_in_delta(0.0, (worksheet.costpercapita_bo70||0), 0.002); end
  def test_costpercapita_bp70; assert_in_delta(0.0, (worksheet.costpercapita_bp70||0), 0.002); end
  def test_costpercapita_bq70; assert_in_delta(0.0, (worksheet.costpercapita_bq70||0), 0.002); end
  def test_costpercapita_bs70; assert_in_delta(0.0, (worksheet.costpercapita_bs70||0), 0.002); end
  def test_costpercapita_bt70; assert_in_delta(0.0, (worksheet.costpercapita_bt70||0), 0.002); end
  def test_costpercapita_bu70; assert_in_delta(0.0, (worksheet.costpercapita_bu70||0), 0.002); end
  def test_costpercapita_bv70; assert_in_delta(0.0, (worksheet.costpercapita_bv70||0), 0.002); end
  def test_costpercapita_bw70; assert_in_delta(0.0, (worksheet.costpercapita_bw70||0), 0.002); end
  def test_costpercapita_bx70; assert_in_delta(0.0, (worksheet.costpercapita_bx70||0), 0.002); end
  def test_costpercapita_by70; assert_in_delta(0.0, (worksheet.costpercapita_by70||0), 0.002); end
  def test_costpercapita_bz70; assert_in_delta(0.0, (worksheet.costpercapita_bz70||0), 0.002); end
  def test_costpercapita_ca70; assert_in_delta(0.0, (worksheet.costpercapita_ca70||0), 0.002); end
  def test_costpercapita_cc70; assert_in_delta(0.0, (worksheet.costpercapita_cc70||0), 0.002); end
  def test_costpercapita_cd70; assert_in_delta(0.0, (worksheet.costpercapita_cd70||0), 0.002); end
  def test_costpercapita_cf70; assert_in_delta(0.0, (worksheet.costpercapita_cf70||0), 0.002); end
  def test_costpercapita_cg70; assert_in_delta(0.0, (worksheet.costpercapita_cg70||0), 0.002); end
  def test_costpercapita_ch70; assert_in_delta(0.0, (worksheet.costpercapita_ch70||0), 0.002); end
  def test_costpercapita_ci70; assert_in_delta(0.0, (worksheet.costpercapita_ci70||0), 0.002); end
  def test_costpercapita_cj70; assert_in_delta(0.0, (worksheet.costpercapita_cj70||0), 0.002); end
  def test_costpercapita_ck70; assert_in_delta(0.0, (worksheet.costpercapita_ck70||0), 0.002); end
  def test_costpercapita_cl70; assert_in_delta(0.0, (worksheet.costpercapita_cl70||0), 0.002); end
  def test_costpercapita_cm70; assert_in_delta(0.0, (worksheet.costpercapita_cm70||0), 0.002); end
  def test_costpercapita_cn70; assert_in_delta(0.0, (worksheet.costpercapita_cn70||0), 0.002); end
  def test_costpercapita_cp70; assert_in_delta(0.0, (worksheet.costpercapita_cp70||0), 0.002); end
  def test_costpercapita_cq70; assert_in_delta(0.0, (worksheet.costpercapita_cq70||0), 0.002); end
  def test_costpercapita_cr70; assert_equal("ok", worksheet.costpercapita_cr70); end
  def test_costpercapita_a71; assert_equal("TRA.a.ICE", worksheet.costpercapita_a71); end
  def test_costpercapita_b71; assert_equal("Conventional cars, SUVs, buses, minibuses, BRT", worksheet.costpercapita_b71); end
  def test_costpercapita_c71; assert_equal("Transport", worksheet.costpercapita_c71); end
  def test_costpercapita_e71; assert_in_epsilon(1692.1133869269772, worksheet.costpercapita_e71, 0.002); end
  def test_costpercapita_f71; assert_in_epsilon(1794.2870568593835, worksheet.costpercapita_f71, 0.002); end
  def test_costpercapita_g71; assert_in_epsilon(1871.7740629234104, worksheet.costpercapita_g71, 0.002); end
  def test_costpercapita_h71; assert_in_epsilon(1895.259656544691, worksheet.costpercapita_h71, 0.002); end
  def test_costpercapita_i71; assert_in_epsilon(1846.5844387072077, worksheet.costpercapita_i71, 0.002); end
  def test_costpercapita_j71; assert_in_epsilon(1851.0862874280547, worksheet.costpercapita_j71, 0.002); end
  def test_costpercapita_k71; assert_in_epsilon(1823.3397629321043, worksheet.costpercapita_k71, 0.002); end
  def test_costpercapita_l71; assert_in_epsilon(1836.8898770631222, worksheet.costpercapita_l71, 0.002); end
  def test_costpercapita_m71; assert_in_epsilon(1849.9897497300944, worksheet.costpercapita_m71, 0.002); end
  def test_costpercapita_o71; assert_in_epsilon(1482.049718574035, worksheet.costpercapita_o71, 0.002); end
  def test_costpercapita_p71; assert_in_epsilon(2092.85804532153, worksheet.costpercapita_p71, 0.002); end
  def test_costpercapita_q71; assert_in_epsilon(2411.58112436876, worksheet.costpercapita_q71, 0.002); end
  def test_costpercapita_r71; assert_in_epsilon(2564.93540904868, worksheet.costpercapita_r71, 0.002); end
  def test_costpercapita_s71; assert_in_epsilon(2429.492866368396, worksheet.costpercapita_s71, 0.002); end
  def test_costpercapita_t71; assert_in_epsilon(2280.0908181324808, worksheet.costpercapita_t71, 0.002); end
  def test_costpercapita_u71; assert_in_epsilon(1962.3609317963626, worksheet.costpercapita_u71, 0.002); end
  def test_costpercapita_v71; assert_in_epsilon(1682.4760875568788, worksheet.costpercapita_v71, 0.002); end
  def test_costpercapita_w71; assert_in_epsilon(1342.7658625186498, worksheet.costpercapita_w71, 0.002); end
  def test_costpercapita_y71; assert_in_delta(0.0, (worksheet.costpercapita_y71||0), 0.002); end
  def test_costpercapita_z71; assert_in_delta(0.0, (worksheet.costpercapita_z71||0), 0.002); end
  def test_costpercapita_aa71; assert_in_delta(0.0, (worksheet.costpercapita_aa71||0), 0.002); end
  def test_costpercapita_ab71; assert_in_delta(0.0, (worksheet.costpercapita_ab71||0), 0.002); end
  def test_costpercapita_ac71; assert_in_delta(0.0, (worksheet.costpercapita_ac71||0), 0.002); end
  def test_costpercapita_ad71; assert_in_delta(0.0, (worksheet.costpercapita_ad71||0), 0.002); end
  def test_costpercapita_ae71; assert_in_delta(0.0, (worksheet.costpercapita_ae71||0), 0.002); end
  def test_costpercapita_af71; assert_in_delta(0.0, (worksheet.costpercapita_af71||0), 0.002); end
  def test_costpercapita_ag71; assert_in_delta(0.0, (worksheet.costpercapita_ag71||0), 0.002); end
  def test_costpercapita_ai71; assert_in_epsilon(3174.163105501012, worksheet.costpercapita_ai71, 0.002); end
  def test_costpercapita_aj71; assert_in_epsilon(3887.1451021809135, worksheet.costpercapita_aj71, 0.002); end
  def test_costpercapita_ak71; assert_in_epsilon(4283.355187292171, worksheet.costpercapita_ak71, 0.002); end
  def test_costpercapita_al71; assert_in_epsilon(4460.195065593371, worksheet.costpercapita_al71, 0.002); end
  def test_costpercapita_am71; assert_in_epsilon(4276.077305075603, worksheet.costpercapita_am71, 0.002); end
  def test_costpercapita_an71; assert_in_epsilon(4131.177105560536, worksheet.costpercapita_an71, 0.002); end
  def test_costpercapita_ao71; assert_in_epsilon(3785.700694728467, worksheet.costpercapita_ao71, 0.002); end
  def test_costpercapita_ap71; assert_in_epsilon(3519.365964620001, worksheet.costpercapita_ap71, 0.002); end
  def test_costpercapita_aq71; assert_in_epsilon(3192.755612248744, worksheet.costpercapita_aq71, 0.002); end
  def test_costpercapita_as71; assert_in_epsilon(3856.6594603112026, worksheet.costpercapita_as71, 0.002); end
  def test_costpercapita_at71; assert_in_epsilon(83901.9516554158, worksheet.costpercapita_at71, 0.002); end
  def test_costpercapita_av71; assert_in_delta(0.0, (worksheet.costpercapita_av71||0), 0.002); end
  def test_costpercapita_aw71; assert_in_epsilon(5.0, worksheet.costpercapita_aw71, 0.002); end
  def test_costpercapita_ay71; assert_in_epsilon(3194.4706656273415, worksheet.costpercapita_ay71, 0.002); end
  def test_costpercapita_az71; assert_in_epsilon(3387.360098404252, worksheet.costpercapita_az71, 0.002); end
  def test_costpercapita_ba71; assert_in_epsilon(3533.64460259363, worksheet.costpercapita_ba71, 0.002); end
  def test_costpercapita_bb71; assert_in_epsilon(3577.9820804882265, worksheet.costpercapita_bb71, 0.002); end
  def test_costpercapita_bc71; assert_in_epsilon(3486.090156030819, worksheet.costpercapita_bc71, 0.002); end
  def test_costpercapita_bd71; assert_in_epsilon(3494.5890094711044, worksheet.costpercapita_bd71, 0.002); end
  def test_costpercapita_be71; assert_in_epsilon(3442.2074969435116, worksheet.costpercapita_be71, 0.002); end
  def test_costpercapita_bf71; assert_in_epsilon(3467.788195283147, worksheet.costpercapita_bf71, 0.002); end
  def test_costpercapita_bg71; assert_in_epsilon(3492.51890144114, worksheet.costpercapita_bg71, 0.002); end
  def test_costpercapita_bi71; assert_in_delta(0.0, (worksheet.costpercapita_bi71||0), 0.002); end
  def test_costpercapita_bj71; assert_in_delta(0.0, (worksheet.costpercapita_bj71||0), 0.002); end
  def test_costpercapita_bk71; assert_in_delta(0.0, (worksheet.costpercapita_bk71||0), 0.002); end
  def test_costpercapita_bl71; assert_in_delta(0.0, (worksheet.costpercapita_bl71||0), 0.002); end
  def test_costpercapita_bm71; assert_in_delta(0.0, (worksheet.costpercapita_bm71||0), 0.002); end
  def test_costpercapita_bn71; assert_in_delta(0.0, (worksheet.costpercapita_bn71||0), 0.002); end
  def test_costpercapita_bo71; assert_in_delta(0.0, (worksheet.costpercapita_bo71||0), 0.002); end
  def test_costpercapita_bp71; assert_in_delta(0.0, (worksheet.costpercapita_bp71||0), 0.002); end
  def test_costpercapita_bq71; assert_in_delta(0.0, (worksheet.costpercapita_bq71||0), 0.002); end
  def test_costpercapita_bs71; assert_in_epsilon(4676.520384201376, worksheet.costpercapita_bs71, 0.002); end
  def test_costpercapita_bt71; assert_in_epsilon(5480.218143725782, worksheet.costpercapita_bt71, 0.002); end
  def test_costpercapita_bu71; assert_in_epsilon(5945.22572696239, worksheet.costpercapita_bu71, 0.002); end
  def test_costpercapita_bv71; assert_in_epsilon(6142.917489536907, worksheet.costpercapita_bv71, 0.002); end
  def test_costpercapita_bw71; assert_in_epsilon(5915.583022399215, worksheet.costpercapita_bw71, 0.002); end
  def test_costpercapita_bx71; assert_in_epsilon(5774.679827603585, worksheet.costpercapita_bx71, 0.002); end
  def test_costpercapita_by71; assert_in_epsilon(5404.568428739874, worksheet.costpercapita_by71, 0.002); end
  def test_costpercapita_bz71; assert_in_epsilon(5150.264282840026, worksheet.costpercapita_bz71, 0.002); end
  def test_costpercapita_ca71; assert_in_epsilon(4835.284763959789, worksheet.costpercapita_ca71, 0.002); end
  def test_costpercapita_cc71; assert_in_epsilon(5480.584674440995, worksheet.costpercapita_cc71, 0.002); end
  def test_costpercapita_cd71; assert_in_epsilon(118187.76873681937, worksheet.costpercapita_cd71, 0.002); end
  def test_costpercapita_cf71; assert_in_epsilon(1502.357278700364, worksheet.costpercapita_cf71, 0.002); end
  def test_costpercapita_cg71; assert_in_epsilon(1593.0730415448684, worksheet.costpercapita_cg71, 0.002); end
  def test_costpercapita_ch71; assert_in_epsilon(1661.8705396702196, worksheet.costpercapita_ch71, 0.002); end
  def test_costpercapita_ci71; assert_in_epsilon(1682.7224239435357, worksheet.costpercapita_ci71, 0.002); end
  def test_costpercapita_cj71; assert_in_epsilon(1639.5057173236112, worksheet.costpercapita_cj71, 0.002); end
  def test_costpercapita_ck71; assert_in_epsilon(1643.50272204305, worksheet.costpercapita_ck71, 0.002); end
  def test_costpercapita_cl71; assert_in_epsilon(1618.8677340114073, worksheet.costpercapita_cl71, 0.002); end
  def test_costpercapita_cm71; assert_in_epsilon(1630.898318220025, worksheet.costpercapita_cm71, 0.002); end
  def test_costpercapita_cn71; assert_in_epsilon(1642.5291517110452, worksheet.costpercapita_cn71, 0.002); end
  def test_costpercapita_cp71; assert_in_epsilon(1623.9252141297916, worksheet.costpercapita_cp71, 0.002); end
  def test_costpercapita_cq71; assert_in_epsilon(34285.8170814036, worksheet.costpercapita_cq71, 0.002); end
  def test_costpercapita_cr71; assert_equal("ok", worksheet.costpercapita_cr71); end
  def test_costpercapita_a72; assert_equal("TRA.a.PHEV", worksheet.costpercapita_a72); end
  def test_costpercapita_b72; assert_equal("PHEV cars, SUVs, minibuses", worksheet.costpercapita_b72); end
  def test_costpercapita_c72; assert_equal("Transport", worksheet.costpercapita_c72); end
  def test_costpercapita_e72; assert_in_delta(0.5046542373832552, worksheet.costpercapita_e72, 0.002); end
  def test_costpercapita_f72; assert_in_epsilon(37.49979982833828, worksheet.costpercapita_f72, 0.002); end
  def test_costpercapita_g72; assert_in_epsilon(100.40166852093118, worksheet.costpercapita_g72, 0.002); end
  def test_costpercapita_h72; assert_in_epsilon(157.60105868499204, worksheet.costpercapita_h72, 0.002); end
  def test_costpercapita_i72; assert_in_epsilon(236.2898941337105, worksheet.costpercapita_i72, 0.002); end
  def test_costpercapita_j72; assert_in_epsilon(292.1960153840234, worksheet.costpercapita_j72, 0.002); end
  def test_costpercapita_k72; assert_in_epsilon(337.64985811625786, worksheet.costpercapita_k72, 0.002); end
  def test_costpercapita_l72; assert_in_epsilon(328.10212625550724, worksheet.costpercapita_l72, 0.002); end
  def test_costpercapita_m72; assert_in_epsilon(353.6801751204943, worksheet.costpercapita_m72, 0.002); end
  def test_costpercapita_o72; assert_in_delta(0.3058794517548485, worksheet.costpercapita_o72, 0.002); end
  def test_costpercapita_p72; assert_in_epsilon(19.84606290666081, worksheet.costpercapita_p72, 0.002); end
  def test_costpercapita_q72; assert_in_epsilon(59.648254962095585, worksheet.costpercapita_q72, 0.002); end
  def test_costpercapita_r72; assert_in_epsilon(109.67238743014126, worksheet.costpercapita_r72, 0.002); end
  def test_costpercapita_s72; assert_in_epsilon(177.7187693253919, worksheet.costpercapita_s72, 0.002); end
  def test_costpercapita_t72; assert_in_epsilon(239.3951578282867, worksheet.costpercapita_t72, 0.002); end
  def test_costpercapita_u72; assert_in_epsilon(296.04900726193836, worksheet.costpercapita_u72, 0.002); end
  def test_costpercapita_v72; assert_in_epsilon(315.2103382168343, worksheet.costpercapita_v72, 0.002); end
  def test_costpercapita_w72; assert_in_epsilon(358.0343965520375, worksheet.costpercapita_w72, 0.002); end
  def test_costpercapita_y72; assert_in_delta(0.0, (worksheet.costpercapita_y72||0), 0.002); end
  def test_costpercapita_z72; assert_in_delta(0.0, (worksheet.costpercapita_z72||0), 0.002); end
  def test_costpercapita_aa72; assert_in_delta(0.0, (worksheet.costpercapita_aa72||0), 0.002); end
  def test_costpercapita_ab72; assert_in_delta(0.0, (worksheet.costpercapita_ab72||0), 0.002); end
  def test_costpercapita_ac72; assert_in_delta(0.0, (worksheet.costpercapita_ac72||0), 0.002); end
  def test_costpercapita_ad72; assert_in_delta(0.0, (worksheet.costpercapita_ad72||0), 0.002); end
  def test_costpercapita_ae72; assert_in_delta(0.0, (worksheet.costpercapita_ae72||0), 0.002); end
  def test_costpercapita_af72; assert_in_delta(0.0, (worksheet.costpercapita_af72||0), 0.002); end
  def test_costpercapita_ag72; assert_in_delta(0.0, (worksheet.costpercapita_ag72||0), 0.002); end
  def test_costpercapita_ai72; assert_in_delta(0.8105336891381038, worksheet.costpercapita_ai72, 0.002); end
  def test_costpercapita_aj72; assert_in_epsilon(57.345862734999095, worksheet.costpercapita_aj72, 0.002); end
  def test_costpercapita_ak72; assert_in_epsilon(160.04992348302676, worksheet.costpercapita_ak72, 0.002); end
  def test_costpercapita_al72; assert_in_epsilon(267.2734461151333, worksheet.costpercapita_al72, 0.002); end
  def test_costpercapita_am72; assert_in_epsilon(414.00866345910237, worksheet.costpercapita_am72, 0.002); end
  def test_costpercapita_an72; assert_in_epsilon(531.5911732123101, worksheet.costpercapita_an72, 0.002); end
  def test_costpercapita_ao72; assert_in_epsilon(633.6988653781962, worksheet.costpercapita_ao72, 0.002); end
  def test_costpercapita_ap72; assert_in_epsilon(643.3124644723415, worksheet.costpercapita_ap72, 0.002); end
  def test_costpercapita_aq72; assert_in_epsilon(711.7145716725319, worksheet.costpercapita_aq72, 0.002); end
  def test_costpercapita_as72; assert_in_epsilon(379.9783893574199, worksheet.costpercapita_as72, 0.002); end
  def test_costpercapita_at72; assert_in_epsilon(6833.04783222268, worksheet.costpercapita_at72, 0.002); end
  def test_costpercapita_av72; assert_in_delta(0.0, (worksheet.costpercapita_av72||0), 0.002); end
  def test_costpercapita_aw72; assert_in_epsilon(5.0, worksheet.costpercapita_aw72, 0.002); end
  def test_costpercapita_ay72; assert_in_delta(0.9527157991067386, worksheet.costpercapita_ay72, 0.002); end
  def test_costpercapita_az72; assert_in_epsilon(70.79431641166578, worksheet.costpercapita_az72, 0.002); end
  def test_costpercapita_ba72; assert_in_epsilon(189.54414482390456, worksheet.costpercapita_ba72, 0.002); end
  def test_costpercapita_bb72; assert_in_epsilon(297.5285005902187, worksheet.costpercapita_bb72, 0.002); end
  def test_costpercapita_bc72; assert_in_epsilon(446.0818886169016, worksheet.costpercapita_bc72, 0.002); end
  def test_costpercapita_bd72; assert_in_epsilon(551.6247356523863, worksheet.costpercapita_bd72, 0.002); end
  def test_costpercapita_be72; assert_in_epsilon(637.435159687775, worksheet.costpercapita_be72, 0.002); end
  def test_costpercapita_bf72; assert_in_epsilon(619.410392796808, worksheet.costpercapita_bf72, 0.002); end
  def test_costpercapita_bg72; assert_in_epsilon(667.6981301402097, worksheet.costpercapita_bg72, 0.002); end
  def test_costpercapita_bi72; assert_in_delta(0.0, (worksheet.costpercapita_bi72||0), 0.002); end
  def test_costpercapita_bj72; assert_in_delta(0.0, (worksheet.costpercapita_bj72||0), 0.002); end
  def test_costpercapita_bk72; assert_in_delta(0.0, (worksheet.costpercapita_bk72||0), 0.002); end
  def test_costpercapita_bl72; assert_in_delta(0.0, (worksheet.costpercapita_bl72||0), 0.002); end
  def test_costpercapita_bm72; assert_in_delta(0.0, (worksheet.costpercapita_bm72||0), 0.002); end
  def test_costpercapita_bn72; assert_in_delta(0.0, (worksheet.costpercapita_bn72||0), 0.002); end
  def test_costpercapita_bo72; assert_in_delta(0.0, (worksheet.costpercapita_bo72||0), 0.002); end
  def test_costpercapita_bp72; assert_in_delta(0.0, (worksheet.costpercapita_bp72||0), 0.002); end
  def test_costpercapita_bq72; assert_in_delta(0.0, (worksheet.costpercapita_bq72||0), 0.002); end
  def test_costpercapita_bs72; assert_in_epsilon(1.2585952508615872, worksheet.costpercapita_bs72, 0.002); end
  def test_costpercapita_bt72; assert_in_epsilon(90.6403793183266, worksheet.costpercapita_bt72, 0.002); end
  def test_costpercapita_bu72; assert_in_epsilon(249.19239978600015, worksheet.costpercapita_bu72, 0.002); end
  def test_costpercapita_bv72; assert_in_epsilon(407.20088802035997, worksheet.costpercapita_bv72, 0.002); end
  def test_costpercapita_bw72; assert_in_epsilon(623.8006579422935, worksheet.costpercapita_bw72, 0.002); end
  def test_costpercapita_bx72; assert_in_epsilon(791.019893480673, worksheet.costpercapita_bx72, 0.002); end
  def test_costpercapita_by72; assert_in_epsilon(933.4841669497133, worksheet.costpercapita_by72, 0.002); end
  def test_costpercapita_bz72; assert_in_epsilon(934.6207310136422, worksheet.costpercapita_bz72, 0.002); end
  def test_costpercapita_ca72; assert_in_epsilon(1025.7325266922473, worksheet.costpercapita_ca72, 0.002); end
  def test_costpercapita_cc72; assert_in_epsilon(561.8833598282353, worksheet.costpercapita_cc72, 0.002); end
  def test_costpercapita_cd72; assert_in_epsilon(10181.206424627348, worksheet.costpercapita_cd72, 0.002); end
  def test_costpercapita_cf72; assert_in_delta(0.44806156172348344, worksheet.costpercapita_cf72, 0.002); end
  def test_costpercapita_cg72; assert_in_epsilon(33.29451658332749, worksheet.costpercapita_cg72, 0.002); end
  def test_costpercapita_ch72; assert_in_epsilon(89.14247630297339, worksheet.costpercapita_ch72, 0.002); end
  def test_costpercapita_ci72; assert_in_epsilon(139.9274419052267, worksheet.costpercapita_ci72, 0.002); end
  def test_costpercapita_cj72; assert_in_epsilon(209.79199448319113, worksheet.costpercapita_cj72, 0.002); end
  def test_costpercapita_ck72; assert_in_epsilon(259.42872026836295, worksheet.costpercapita_ck72, 0.002); end
  def test_costpercapita_cl72; assert_in_epsilon(299.78530157151715, worksheet.costpercapita_cl72, 0.002); end
  def test_costpercapita_cm72; assert_in_epsilon(291.30826654130067, worksheet.costpercapita_cm72, 0.002); end
  def test_costpercapita_cn72; assert_in_epsilon(314.01795501971543, worksheet.costpercapita_cn72, 0.002); end
  def test_costpercapita_cp72; assert_in_epsilon(181.90497047081539, worksheet.costpercapita_cp72, 0.002); end
  def test_costpercapita_cq72; assert_in_epsilon(3348.158592404667, worksheet.costpercapita_cq72, 0.002); end
  def test_costpercapita_cr72; assert_equal("ok", worksheet.costpercapita_cr72); end
  def test_costpercapita_a73; assert_equal("TRA.a.EV", worksheet.costpercapita_a73); end
  def test_costpercapita_b73; assert_equal("Electric cars, buses, minibuses, BRT", worksheet.costpercapita_b73); end
  def test_costpercapita_c73; assert_equal("Transport", worksheet.costpercapita_c73); end
  def test_costpercapita_e73; assert_in_delta(0.0, (worksheet.costpercapita_e73||0), 0.002); end
  def test_costpercapita_f73; assert_in_epsilon(162.1450363359377, worksheet.costpercapita_f73, 0.002); end
  def test_costpercapita_g73; assert_in_epsilon(391.00994977582434, worksheet.costpercapita_g73, 0.002); end
  def test_costpercapita_h73; assert_in_epsilon(671.9363078034759, worksheet.costpercapita_h73, 0.002); end
  def test_costpercapita_i73; assert_in_epsilon(995.2908580014176, worksheet.costpercapita_i73, 0.002); end
  def test_costpercapita_j73; assert_in_epsilon(1306.120920915757, worksheet.costpercapita_j73, 0.002); end
  def test_costpercapita_k73; assert_in_epsilon(1610.2638616295667, worksheet.costpercapita_k73, 0.002); end
  def test_costpercapita_l73; assert_in_epsilon(1897.6155603164716, worksheet.costpercapita_l73, 0.002); end
  def test_costpercapita_m73; assert_in_epsilon(2182.4022072998805, worksheet.costpercapita_m73, 0.002); end
  def test_costpercapita_o73; assert_in_delta(0.0, (worksheet.costpercapita_o73||0), 0.002); end
  def test_costpercapita_p73; assert_in_epsilon(136.65144087563445, worksheet.costpercapita_p73, 0.002); end
  def test_costpercapita_q73; assert_in_epsilon(409.0258436075325, worksheet.costpercapita_q73, 0.002); end
  def test_costpercapita_r73; assert_in_epsilon(698.5900531265588, worksheet.costpercapita_r73, 0.002); end
  def test_costpercapita_s73; assert_in_epsilon(1147.3522728754592, worksheet.costpercapita_s73, 0.002); end
  def test_costpercapita_t73; assert_in_epsilon(1628.717115539928, worksheet.costpercapita_t73, 0.002); end
  def test_costpercapita_u73; assert_in_epsilon(1826.4924235939848, worksheet.costpercapita_u73, 0.002); end
  def test_costpercapita_v73; assert_in_epsilon(2072.5601433325996, worksheet.costpercapita_v73, 0.002); end
  def test_costpercapita_w73; assert_in_epsilon(2466.8115034447915, worksheet.costpercapita_w73, 0.002); end
  def test_costpercapita_y73; assert_in_delta(0.0, (worksheet.costpercapita_y73||0), 0.002); end
  def test_costpercapita_z73; assert_in_delta(0.0, (worksheet.costpercapita_z73||0), 0.002); end
  def test_costpercapita_aa73; assert_in_delta(0.0, (worksheet.costpercapita_aa73||0), 0.002); end
  def test_costpercapita_ab73; assert_in_delta(0.0, (worksheet.costpercapita_ab73||0), 0.002); end
  def test_costpercapita_ac73; assert_in_delta(0.0, (worksheet.costpercapita_ac73||0), 0.002); end
  def test_costpercapita_ad73; assert_in_delta(0.0, (worksheet.costpercapita_ad73||0), 0.002); end
  def test_costpercapita_ae73; assert_in_delta(0.0, (worksheet.costpercapita_ae73||0), 0.002); end
  def test_costpercapita_af73; assert_in_delta(0.0, (worksheet.costpercapita_af73||0), 0.002); end
  def test_costpercapita_ag73; assert_in_delta(0.0, (worksheet.costpercapita_ag73||0), 0.002); end
  def test_costpercapita_ai73; assert_in_delta(0.0, (worksheet.costpercapita_ai73||0), 0.002); end
  def test_costpercapita_aj73; assert_in_epsilon(298.79647721157215, worksheet.costpercapita_aj73, 0.002); end
  def test_costpercapita_ak73; assert_in_epsilon(800.0357933833568, worksheet.costpercapita_ak73, 0.002); end
  def test_costpercapita_al73; assert_in_epsilon(1370.5263609300346, worksheet.costpercapita_al73, 0.002); end
  def test_costpercapita_am73; assert_in_epsilon(2142.643130876877, worksheet.costpercapita_am73, 0.002); end
  def test_costpercapita_an73; assert_in_epsilon(2934.838036455685, worksheet.costpercapita_an73, 0.002); end
  def test_costpercapita_ao73; assert_in_epsilon(3436.7562852235515, worksheet.costpercapita_ao73, 0.002); end
  def test_costpercapita_ap73; assert_in_epsilon(3970.1757036490717, worksheet.costpercapita_ap73, 0.002); end
  def test_costpercapita_aq73; assert_in_epsilon(4649.2137107446715, worksheet.costpercapita_aq73, 0.002); end
  def test_costpercapita_as73; assert_in_epsilon(2178.1094998305357, worksheet.costpercapita_as73, 0.002); end
  def test_costpercapita_at73; assert_in_epsilon(38163.00131455807, worksheet.costpercapita_at73, 0.002); end
  def test_costpercapita_av73; assert_in_delta(0.0, (worksheet.costpercapita_av73||0), 0.002); end
  def test_costpercapita_aw73; assert_in_epsilon(5.0, worksheet.costpercapita_aw73, 0.002); end
  def test_costpercapita_ay73; assert_in_delta(0.0, (worksheet.costpercapita_ay73||0), 0.002); end
  def test_costpercapita_az73; assert_in_epsilon(306.1068874899133, worksheet.costpercapita_az73, 0.002); end
  def test_costpercapita_ba73; assert_in_epsilon(738.1714630812703, worksheet.costpercapita_ba73, 0.002); end
  def test_costpercapita_bb73; assert_in_epsilon(1268.520680133818, worksheet.costpercapita_bb73, 0.002); end
  def test_costpercapita_bc73; assert_in_epsilon(1878.9683210453813, worksheet.costpercapita_bc73, 0.002); end
  def test_costpercapita_bd73; assert_in_epsilon(2465.771501994276, worksheet.costpercapita_bd73, 0.002); end
  def test_costpercapita_be73; assert_in_epsilon(3039.9503423569563, worksheet.costpercapita_be73, 0.002); end
  def test_costpercapita_bf73; assert_in_epsilon(3582.4296934839854, worksheet.costpercapita_bf73, 0.002); end
  def test_costpercapita_bg73; assert_in_epsilon(4120.066589911498, worksheet.costpercapita_bg73, 0.002); end
  def test_costpercapita_bi73; assert_in_delta(0.0, (worksheet.costpercapita_bi73||0), 0.002); end
  def test_costpercapita_bj73; assert_in_delta(0.0, (worksheet.costpercapita_bj73||0), 0.002); end
  def test_costpercapita_bk73; assert_in_delta(0.0, (worksheet.costpercapita_bk73||0), 0.002); end
  def test_costpercapita_bl73; assert_in_delta(0.0, (worksheet.costpercapita_bl73||0), 0.002); end
  def test_costpercapita_bm73; assert_in_delta(0.0, (worksheet.costpercapita_bm73||0), 0.002); end
  def test_costpercapita_bn73; assert_in_delta(0.0, (worksheet.costpercapita_bn73||0), 0.002); end
  def test_costpercapita_bo73; assert_in_delta(0.0, (worksheet.costpercapita_bo73||0), 0.002); end
  def test_costpercapita_bp73; assert_in_delta(0.0, (worksheet.costpercapita_bp73||0), 0.002); end
  def test_costpercapita_bq73; assert_in_delta(0.0, (worksheet.costpercapita_bq73||0), 0.002); end
  def test_costpercapita_bs73; assert_in_delta(0.0, (worksheet.costpercapita_bs73||0), 0.002); end
  def test_costpercapita_bt73; assert_in_epsilon(442.75832836554775, worksheet.costpercapita_bt73, 0.002); end
  def test_costpercapita_bu73; assert_in_epsilon(1147.1973066888029, worksheet.costpercapita_bu73, 0.002); end
  def test_costpercapita_bv73; assert_in_epsilon(1967.1107332603767, worksheet.costpercapita_bv73, 0.002); end
  def test_costpercapita_bw73; assert_in_epsilon(3026.320593920841, worksheet.costpercapita_bw73, 0.002); end
  def test_costpercapita_bx73; assert_in_epsilon(4094.488617534204, worksheet.costpercapita_bx73, 0.002); end
  def test_costpercapita_by73; assert_in_epsilon(4866.442765950941, worksheet.costpercapita_by73, 0.002); end
  def test_costpercapita_bz73; assert_in_epsilon(5654.989836816585, worksheet.costpercapita_bz73, 0.002); end
  def test_costpercapita_ca73; assert_in_epsilon(6586.878093356289, worksheet.costpercapita_ca73, 0.002); end
  def test_costpercapita_cc73; assert_in_epsilon(3087.354030654843, worksheet.costpercapita_cc73, 0.002); end
  def test_costpercapita_cd73; assert_in_epsilon(54158.34117184063, worksheet.costpercapita_cd73, 0.002); end
  def test_costpercapita_cf73; assert_in_delta(0.0, (worksheet.costpercapita_cf73||0), 0.002); end
  def test_costpercapita_cg73; assert_in_epsilon(143.96185115397554, worksheet.costpercapita_cg73, 0.002); end
  def test_costpercapita_ch73; assert_in_epsilon(347.161513305446, worksheet.costpercapita_ch73, 0.002); end
  def test_costpercapita_ci73; assert_in_epsilon(596.584372330342, worksheet.costpercapita_ci73, 0.002); end
  def test_costpercapita_cj73; assert_in_epsilon(883.6774630439637, worksheet.costpercapita_cj73, 0.002); end
  def test_costpercapita_ck73; assert_in_epsilon(1159.650581078519, worksheet.costpercapita_ck73, 0.002); end
  def test_costpercapita_cl73; assert_in_epsilon(1429.6864807273898, worksheet.costpercapita_cl73, 0.002); end
  def test_costpercapita_cm73; assert_in_epsilon(1684.8141331675138, worksheet.costpercapita_cm73, 0.002); end
  def test_costpercapita_cn73; assert_in_epsilon(1937.6643826116178, worksheet.costpercapita_cn73, 0.002); end
  def test_costpercapita_cp73; assert_in_epsilon(909.2445308243075, worksheet.costpercapita_cp73, 0.002); end
  def test_costpercapita_cq73; assert_in_epsilon(15995.339857282557, worksheet.costpercapita_cq73, 0.002); end
  def test_costpercapita_cr73; assert_equal("ok", worksheet.costpercapita_cr73); end
  def test_costpercapita_a74; assert_equal("TRA.a.FCV", worksheet.costpercapita_a74); end
  def test_costpercapita_b74; assert_equal("FCV cars, SUVs, buses, minibuses, BRT", worksheet.costpercapita_b74); end
  def test_costpercapita_c74; assert_equal("Transport", worksheet.costpercapita_c74); end
  def test_costpercapita_e74; assert_in_delta(0.0, (worksheet.costpercapita_e74||0), 0.002); end
  def test_costpercapita_f74; assert_in_epsilon(207.69217789033542, worksheet.costpercapita_f74, 0.002); end
  def test_costpercapita_g74; assert_in_epsilon(503.99152785573114, worksheet.costpercapita_g74, 0.002); end
  def test_costpercapita_h74; assert_in_epsilon(861.0181350993411, worksheet.costpercapita_h74, 0.002); end
  def test_costpercapita_i74; assert_in_epsilon(1276.337923118025, worksheet.costpercapita_i74, 0.002); end
  def test_costpercapita_j74; assert_in_epsilon(1668.0942830653873, worksheet.costpercapita_j74, 0.002); end
  def test_costpercapita_k74; assert_in_epsilon(2048.018871528105, worksheet.costpercapita_k74, 0.002); end
  def test_costpercapita_l74; assert_in_epsilon(2388.9835881140316, worksheet.costpercapita_l74, 0.002); end
  def test_costpercapita_m74; assert_in_epsilon(2739.6367968201134, worksheet.costpercapita_m74, 0.002); end
  def test_costpercapita_o74; assert_in_delta(0.0, (worksheet.costpercapita_o74||0), 0.002); end
  def test_costpercapita_p74; assert_in_epsilon(78.7389487289408, worksheet.costpercapita_p74, 0.002); end
  def test_costpercapita_q74; assert_in_epsilon(146.7730020801155, worksheet.costpercapita_q74, 0.002); end
  def test_costpercapita_r74; assert_in_epsilon(282.96880749842313, worksheet.costpercapita_r74, 0.002); end
  def test_costpercapita_s74; assert_in_epsilon(464.1004909233376, worksheet.costpercapita_s74, 0.002); end
  def test_costpercapita_t74; assert_in_epsilon(656.0778396101498, worksheet.costpercapita_t74, 0.002); end
  def test_costpercapita_u74; assert_in_epsilon(854.0149410042718, worksheet.costpercapita_u74, 0.002); end
  def test_costpercapita_v74; assert_in_epsilon(954.9925523617504, worksheet.costpercapita_v74, 0.002); end
  def test_costpercapita_w74; assert_in_epsilon(1136.623060956598, worksheet.costpercapita_w74, 0.002); end
  def test_costpercapita_y74; assert_in_delta(0.0, (worksheet.costpercapita_y74||0), 0.002); end
  def test_costpercapita_z74; assert_in_delta(0.0, (worksheet.costpercapita_z74||0), 0.002); end
  def test_costpercapita_aa74; assert_in_delta(0.0, (worksheet.costpercapita_aa74||0), 0.002); end
  def test_costpercapita_ab74; assert_in_delta(0.0, (worksheet.costpercapita_ab74||0), 0.002); end
  def test_costpercapita_ac74; assert_in_delta(0.0, (worksheet.costpercapita_ac74||0), 0.002); end
  def test_costpercapita_ad74; assert_in_delta(0.0, (worksheet.costpercapita_ad74||0), 0.002); end
  def test_costpercapita_ae74; assert_in_delta(0.0, (worksheet.costpercapita_ae74||0), 0.002); end
  def test_costpercapita_af74; assert_in_delta(0.0, (worksheet.costpercapita_af74||0), 0.002); end
  def test_costpercapita_ag74; assert_in_delta(0.0, (worksheet.costpercapita_ag74||0), 0.002); end
  def test_costpercapita_ai74; assert_in_delta(0.0, (worksheet.costpercapita_ai74||0), 0.002); end
  def test_costpercapita_aj74; assert_in_epsilon(286.4311266192762, worksheet.costpercapita_aj74, 0.002); end
  def test_costpercapita_ak74; assert_in_epsilon(650.7645299358467, worksheet.costpercapita_ak74, 0.002); end
  def test_costpercapita_al74; assert_in_epsilon(1143.986942597764, worksheet.costpercapita_al74, 0.002); end
  def test_costpercapita_am74; assert_in_epsilon(1740.4384140413626, worksheet.costpercapita_am74, 0.002); end
  def test_costpercapita_an74; assert_in_epsilon(2324.172122675537, worksheet.costpercapita_an74, 0.002); end
  def test_costpercapita_ao74; assert_in_epsilon(2902.0338125323765, worksheet.costpercapita_ao74, 0.002); end
  def test_costpercapita_ap74; assert_in_epsilon(3343.9761404757824, worksheet.costpercapita_ap74, 0.002); end
  def test_costpercapita_aq74; assert_in_epsilon(3876.259857776711, worksheet.costpercapita_aq74, 0.002); end
  def test_costpercapita_as74; assert_in_epsilon(1807.562549628295, worksheet.costpercapita_as74, 0.002); end
  def test_costpercapita_at74; assert_in_epsilon(31663.698948166937, worksheet.costpercapita_at74, 0.002); end
  def test_costpercapita_av74; assert_in_delta(0.0, (worksheet.costpercapita_av74||0), 0.002); end
  def test_costpercapita_aw74; assert_in_epsilon(5.0, worksheet.costpercapita_aw74, 0.002); end
  def test_costpercapita_ay74; assert_in_delta(0.0, (worksheet.costpercapita_ay74||0), 0.002); end
  def test_costpercapita_az74; assert_in_epsilon(392.09344650114963, worksheet.costpercapita_az74, 0.002); end
  def test_costpercapita_ba74; assert_in_epsilon(951.4646972823202, worksheet.costpercapita_ba74, 0.002); end
  def test_costpercapita_bb74; assert_in_epsilon(1625.480417800572, worksheet.costpercapita_bb74, 0.002); end
  def test_costpercapita_bc74; assert_in_epsilon(2409.5454160036184, worksheet.costpercapita_bc74, 0.002); end
  def test_costpercapita_bd74; assert_in_epsilon(3149.125995882808, worksheet.costpercapita_bd74, 0.002); end
  def test_costpercapita_be74; assert_in_epsilon(3866.3698652187754, worksheet.costpercapita_be74, 0.002); end
  def test_costpercapita_bf74; assert_in_epsilon(4510.063008694086, worksheet.costpercapita_bf74, 0.002); end
  def test_costpercapita_bg74; assert_in_epsilon(5172.046654514636, worksheet.costpercapita_bg74, 0.002); end
  def test_costpercapita_bi74; assert_in_delta(0.0, (worksheet.costpercapita_bi74||0), 0.002); end
  def test_costpercapita_bj74; assert_in_delta(0.0, (worksheet.costpercapita_bj74||0), 0.002); end
  def test_costpercapita_bk74; assert_in_delta(0.0, (worksheet.costpercapita_bk74||0), 0.002); end
  def test_costpercapita_bl74; assert_in_delta(0.0, (worksheet.costpercapita_bl74||0), 0.002); end
  def test_costpercapita_bm74; assert_in_delta(0.0, (worksheet.costpercapita_bm74||0), 0.002); end
  def test_costpercapita_bn74; assert_in_delta(0.0, (worksheet.costpercapita_bn74||0), 0.002); end
  def test_costpercapita_bo74; assert_in_delta(0.0, (worksheet.costpercapita_bo74||0), 0.002); end
  def test_costpercapita_bp74; assert_in_delta(0.0, (worksheet.costpercapita_bp74||0), 0.002); end
  def test_costpercapita_bq74; assert_in_delta(0.0, (worksheet.costpercapita_bq74||0), 0.002); end
  def test_costpercapita_bs74; assert_in_delta(0.0, (worksheet.costpercapita_bs74||0), 0.002); end
  def test_costpercapita_bt74; assert_in_epsilon(470.83239523009047, worksheet.costpercapita_bt74, 0.002); end
  def test_costpercapita_bu74; assert_in_epsilon(1098.2376993624357, worksheet.costpercapita_bu74, 0.002); end
  def test_costpercapita_bv74; assert_in_epsilon(1908.449225298995, worksheet.costpercapita_bv74, 0.002); end
  def test_costpercapita_bw74; assert_in_epsilon(2873.645906926956, worksheet.costpercapita_bw74, 0.002); end
  def test_costpercapita_bx74; assert_in_epsilon(3805.2038354929578, worksheet.costpercapita_bx74, 0.002); end
  def test_costpercapita_by74; assert_in_epsilon(4720.384806223047, worksheet.costpercapita_by74, 0.002); end
  def test_costpercapita_bz74; assert_in_epsilon(5465.055561055838, worksheet.costpercapita_bz74, 0.002); end
  def test_costpercapita_ca74; assert_in_epsilon(6308.669715471234, worksheet.costpercapita_ca74, 0.002); end
  def test_costpercapita_cc74; assert_in_epsilon(2961.1643494512837, worksheet.costpercapita_cc74, 0.002); end
  def test_costpercapita_cd74; assert_in_epsilon(52011.39986957713, worksheet.costpercapita_cd74, 0.002); end
  def test_costpercapita_cf74; assert_in_delta(0.0, (worksheet.costpercapita_cf74||0), 0.002); end
  def test_costpercapita_cg74; assert_in_epsilon(184.4012686108142, worksheet.costpercapita_cg74, 0.002); end
  def test_costpercapita_ch74; assert_in_epsilon(447.47316942658915, worksheet.costpercapita_ch74, 0.002); end
  def test_costpercapita_ci74; assert_in_epsilon(764.462282701231, worksheet.costpercapita_ci74, 0.002); end
  def test_costpercapita_cj74; assert_in_epsilon(1133.2074928855934, worksheet.costpercapita_cj74, 0.002); end
  def test_costpercapita_ck74; assert_in_epsilon(1481.031712817421, worksheet.costpercapita_ck74, 0.002); end
  def test_costpercapita_cl74; assert_in_epsilon(1818.3509936906703, worksheet.costpercapita_cl74, 0.002); end
  def test_costpercapita_cm74; assert_in_epsilon(2121.079420580055, worksheet.costpercapita_cm74, 0.002); end
  def test_costpercapita_cn74; assert_in_epsilon(2432.409857694523, worksheet.costpercapita_cn74, 0.002); end
  def test_costpercapita_cp74; assert_in_epsilon(1153.6017998229884, worksheet.costpercapita_cp74, 0.002); end
  def test_costpercapita_cq74; assert_in_epsilon(20347.700921410178, worksheet.costpercapita_cq74, 0.002); end
  def test_costpercapita_cr74; assert_equal("ok", worksheet.costpercapita_cr74); end
  def test_costpercapita_a75; assert_equal("TRA.a.GAS", worksheet.costpercapita_a75); end
  def test_costpercapita_b75; assert_equal("Natural gas buses, minibuses, BRT", worksheet.costpercapita_b75); end
  def test_costpercapita_c75; assert_equal("Transport", worksheet.costpercapita_c75); end
  def test_costpercapita_e75; assert_in_delta(0.0, (worksheet.costpercapita_e75||0), 0.002); end
  def test_costpercapita_f75; assert_in_epsilon(5.894350469096807, worksheet.costpercapita_f75, 0.002); end
  def test_costpercapita_g75; assert_in_epsilon(12.280585879530225, worksheet.costpercapita_g75, 0.002); end
  def test_costpercapita_h75; assert_in_epsilon(20.708221790988986, worksheet.costpercapita_h75, 0.002); end
  def test_costpercapita_i75; assert_in_epsilon(29.974413133673693, worksheet.costpercapita_i75, 0.002); end
  def test_costpercapita_j75; assert_in_epsilon(38.474827536418324, worksheet.costpercapita_j75, 0.002); end
  def test_costpercapita_k75; assert_in_epsilon(46.858061553329016, worksheet.costpercapita_k75, 0.002); end
  def test_costpercapita_l75; assert_in_epsilon(56.72821331637865, worksheet.costpercapita_l75, 0.002); end
  def test_costpercapita_m75; assert_in_epsilon(67.13662144829233, worksheet.costpercapita_m75, 0.002); end
  def test_costpercapita_o75; assert_in_delta(0.0, (worksheet.costpercapita_o75||0), 0.002); end
  def test_costpercapita_p75; assert_in_epsilon(11.755502026584574, worksheet.costpercapita_p75, 0.002); end
  def test_costpercapita_q75; assert_in_epsilon(30.18666607320282, worksheet.costpercapita_q75, 0.002); end
  def test_costpercapita_r75; assert_in_epsilon(59.224704820297795, worksheet.costpercapita_r75, 0.002); end
  def test_costpercapita_s75; assert_in_epsilon(95.13338533514714, worksheet.costpercapita_s75, 0.002); end
  def test_costpercapita_t75; assert_in_epsilon(131.41671369820693, worksheet.costpercapita_t75, 0.002); end
  def test_costpercapita_u75; assert_in_epsilon(168.9093173280002, worksheet.costpercapita_u75, 0.002); end
  def test_costpercapita_v75; assert_in_epsilon(214.1008870805364, worksheet.costpercapita_v75, 0.002); end
  def test_costpercapita_w75; assert_in_epsilon(262.5179966837489, worksheet.costpercapita_w75, 0.002); end
  def test_costpercapita_y75; assert_in_delta(0.0, (worksheet.costpercapita_y75||0), 0.002); end
  def test_costpercapita_z75; assert_in_delta(0.0, (worksheet.costpercapita_z75||0), 0.002); end
  def test_costpercapita_aa75; assert_in_delta(0.0, (worksheet.costpercapita_aa75||0), 0.002); end
  def test_costpercapita_ab75; assert_in_delta(0.0, (worksheet.costpercapita_ab75||0), 0.002); end
  def test_costpercapita_ac75; assert_in_delta(0.0, (worksheet.costpercapita_ac75||0), 0.002); end
  def test_costpercapita_ad75; assert_in_delta(0.0, (worksheet.costpercapita_ad75||0), 0.002); end
  def test_costpercapita_ae75; assert_in_delta(0.0, (worksheet.costpercapita_ae75||0), 0.002); end
  def test_costpercapita_af75; assert_in_delta(0.0, (worksheet.costpercapita_af75||0), 0.002); end
  def test_costpercapita_ag75; assert_in_delta(0.0, (worksheet.costpercapita_ag75||0), 0.002); end
  def test_costpercapita_ai75; assert_in_delta(0.0, (worksheet.costpercapita_ai75||0), 0.002); end
  def test_costpercapita_aj75; assert_in_epsilon(17.64985249568138, worksheet.costpercapita_aj75, 0.002); end
  def test_costpercapita_ak75; assert_in_epsilon(42.46725195273305, worksheet.costpercapita_ak75, 0.002); end
  def test_costpercapita_al75; assert_in_epsilon(79.93292661128677, worksheet.costpercapita_al75, 0.002); end
  def test_costpercapita_am75; assert_in_epsilon(125.10779846882082, worksheet.costpercapita_am75, 0.002); end
  def test_costpercapita_an75; assert_in_epsilon(169.89154123462527, worksheet.costpercapita_an75, 0.002); end
  def test_costpercapita_ao75; assert_in_epsilon(215.76737888132925, worksheet.costpercapita_ao75, 0.002); end
  def test_costpercapita_ap75; assert_in_epsilon(270.82910039691507, worksheet.costpercapita_ap75, 0.002); end
  def test_costpercapita_aq75; assert_in_epsilon(329.6546181320412, worksheet.costpercapita_aq75, 0.002); end
  def test_costpercapita_as75; assert_in_epsilon(139.03338535260366, worksheet.costpercapita_as75, 0.002); end
  def test_costpercapita_at75; assert_in_epsilon(2374.707875819923, worksheet.costpercapita_at75, 0.002); end
  def test_costpercapita_av75; assert_in_delta(0.0, (worksheet.costpercapita_av75||0), 0.002); end
  def test_costpercapita_aw75; assert_in_epsilon(5.0, worksheet.costpercapita_aw75, 0.002); end
  def test_costpercapita_ay75; assert_in_delta(0.0, (worksheet.costpercapita_ay75||0), 0.002); end
  def test_costpercapita_az75; assert_in_epsilon(11.127699722683586, worksheet.costpercapita_az75, 0.002); end
  def test_costpercapita_ba75; assert_in_epsilon(23.18400862020342, worksheet.costpercapita_ba75, 0.002); end
  def test_costpercapita_bb75; assert_in_epsilon(39.09419283583386, worksheet.costpercapita_bb75, 0.002); end
  def test_costpercapita_bc75; assert_in_epsilon(56.587451062490565, worksheet.costpercapita_bc75, 0.002); end
  def test_costpercapita_bd75; assert_in_epsilon(72.63503077259408, worksheet.costpercapita_bd75, 0.002); end
  def test_costpercapita_be75; assert_in_epsilon(88.46139049352581, worksheet.costpercapita_be75, 0.002); end
  def test_costpercapita_bf75; assert_in_epsilon(107.09484054240997, worksheet.costpercapita_bf75, 0.002); end
  def test_costpercapita_bg75; assert_in_epsilon(126.7444424604345, worksheet.costpercapita_bg75, 0.002); end
  def test_costpercapita_bi75; assert_in_delta(0.0, (worksheet.costpercapita_bi75||0), 0.002); end
  def test_costpercapita_bj75; assert_in_delta(0.0, (worksheet.costpercapita_bj75||0), 0.002); end
  def test_costpercapita_bk75; assert_in_delta(0.0, (worksheet.costpercapita_bk75||0), 0.002); end
  def test_costpercapita_bl75; assert_in_delta(0.0, (worksheet.costpercapita_bl75||0), 0.002); end
  def test_costpercapita_bm75; assert_in_delta(0.0, (worksheet.costpercapita_bm75||0), 0.002); end
  def test_costpercapita_bn75; assert_in_delta(0.0, (worksheet.costpercapita_bn75||0), 0.002); end
  def test_costpercapita_bo75; assert_in_delta(0.0, (worksheet.costpercapita_bo75||0), 0.002); end
  def test_costpercapita_bp75; assert_in_delta(0.0, (worksheet.costpercapita_bp75||0), 0.002); end
  def test_costpercapita_bq75; assert_in_delta(0.0, (worksheet.costpercapita_bq75||0), 0.002); end
  def test_costpercapita_bs75; assert_in_delta(0.0, (worksheet.costpercapita_bs75||0), 0.002); end
  def test_costpercapita_bt75; assert_in_epsilon(22.88320174926816, worksheet.costpercapita_bt75, 0.002); end
  def test_costpercapita_bu75; assert_in_epsilon(53.370674693406244, worksheet.costpercapita_bu75, 0.002); end
  def test_costpercapita_bv75; assert_in_epsilon(98.31889765613165, worksheet.costpercapita_bv75, 0.002); end
  def test_costpercapita_bw75; assert_in_epsilon(151.7208363976377, worksheet.costpercapita_bw75, 0.002); end
  def test_costpercapita_bx75; assert_in_epsilon(204.05174447080103, worksheet.costpercapita_bx75, 0.002); end
  def test_costpercapita_by75; assert_in_epsilon(257.370707821526, worksheet.costpercapita_by75, 0.002); end
  def test_costpercapita_bz75; assert_in_epsilon(321.1957276229463, worksheet.costpercapita_bz75, 0.002); end
  def test_costpercapita_ca75; assert_in_epsilon(389.26243914418336, worksheet.costpercapita_ca75, 0.002); end
  def test_costpercapita_cc75; assert_in_epsilon(166.46380328398897, worksheet.costpercapita_cc75, 0.002); end
  def test_costpercapita_cd75; assert_in_epsilon(2859.9267840966622, worksheet.costpercapita_cd75, 0.002); end
  def test_costpercapita_cf75; assert_in_delta(0.0, (worksheet.costpercapita_cf75||0), 0.002); end
  def test_costpercapita_cg75; assert_in_epsilon(5.233349253586778, worksheet.costpercapita_cg75, 0.002); end
  def test_costpercapita_ch75; assert_in_epsilon(10.903422740673197, worksheet.costpercapita_ch75, 0.002); end
  def test_costpercapita_ci75; assert_in_epsilon(18.385971044844872, worksheet.costpercapita_ci75, 0.002); end
  def test_costpercapita_cj75; assert_in_epsilon(26.613037928816876, worksheet.costpercapita_cj75, 0.002); end
  def test_costpercapita_ck75; assert_in_epsilon(34.160203236175754, worksheet.costpercapita_ck75, 0.002); end
  def test_costpercapita_cl75; assert_in_epsilon(41.60332894019679, worksheet.costpercapita_cl75, 0.002); end
  def test_costpercapita_cm75; assert_in_epsilon(50.36662722603132, worksheet.costpercapita_cm75, 0.002); end
  def test_costpercapita_cn75; assert_in_epsilon(59.60782101214217, worksheet.costpercapita_cn75, 0.002); end
  def test_costpercapita_cp75; assert_in_epsilon(27.4304179313853, worksheet.costpercapita_cp75, 0.002); end
  def test_costpercapita_cq75; assert_in_epsilon(485.21890827673883, worksheet.costpercapita_cq75, 0.002); end
  def test_costpercapita_cr75; assert_equal("ok", worksheet.costpercapita_cr75); end
  def test_costpercapita_a76; assert_equal("TRA.b.ROAD", worksheet.costpercapita_a76); end
  def test_costpercapita_b76; assert_equal("Road freight", worksheet.costpercapita_b76); end
  def test_costpercapita_c76; assert_equal("Transport", worksheet.costpercapita_c76); end
  def test_costpercapita_e76; assert_in_epsilon(491.65813639028113, worksheet.costpercapita_e76, 0.002); end
  def test_costpercapita_f76; assert_in_epsilon(512.2037233390492, worksheet.costpercapita_f76, 0.002); end
  def test_costpercapita_g76; assert_in_epsilon(547.4678206556347, worksheet.costpercapita_g76, 0.002); end
  def test_costpercapita_h76; assert_in_epsilon(584.3440667526681, worksheet.costpercapita_h76, 0.002); end
  def test_costpercapita_i76; assert_in_epsilon(622.799807100028, worksheet.costpercapita_i76, 0.002); end
  def test_costpercapita_j76; assert_in_epsilon(662.7334920978941, worksheet.costpercapita_j76, 0.002); end
  def test_costpercapita_k76; assert_in_epsilon(704.040433344404, worksheet.costpercapita_k76, 0.002); end
  def test_costpercapita_l76; assert_in_epsilon(746.5661612440731, worksheet.costpercapita_l76, 0.002); end
  def test_costpercapita_m76; assert_in_epsilon(790.1027333316252, worksheet.costpercapita_m76, 0.002); end
  def test_costpercapita_o76; assert_in_epsilon(2047.2655870049948, worksheet.costpercapita_o76, 0.002); end
  def test_costpercapita_p76; assert_in_epsilon(2142.682394442851, worksheet.costpercapita_p76, 0.002); end
  def test_costpercapita_q76; assert_in_epsilon(2300.9490846997783, worksheet.costpercapita_q76, 0.002); end
  def test_costpercapita_r76; assert_in_epsilon(2468.4419984304286, worksheet.costpercapita_r76, 0.002); end
  def test_costpercapita_s76; assert_in_epsilon(2645.322994852627, worksheet.costpercapita_s76, 0.002); end
  def test_costpercapita_t76; assert_in_epsilon(2831.770093694028, worksheet.costpercapita_t76, 0.002); end
  def test_costpercapita_u76; assert_in_epsilon(3027.720077901623, worksheet.costpercapita_u76, 0.002); end
  def test_costpercapita_v76; assert_in_epsilon(3233.077187036931, worksheet.costpercapita_v76, 0.002); end
  def test_costpercapita_w76; assert_in_epsilon(3447.6195156687277, worksheet.costpercapita_w76, 0.002); end
  def test_costpercapita_y76; assert_in_delta(0.0, (worksheet.costpercapita_y76||0), 0.002); end
  def test_costpercapita_z76; assert_in_delta(0.0, (worksheet.costpercapita_z76||0), 0.002); end
  def test_costpercapita_aa76; assert_in_delta(0.0, (worksheet.costpercapita_aa76||0), 0.002); end
  def test_costpercapita_ab76; assert_in_delta(0.0, (worksheet.costpercapita_ab76||0), 0.002); end
  def test_costpercapita_ac76; assert_in_delta(0.0, (worksheet.costpercapita_ac76||0), 0.002); end
  def test_costpercapita_ad76; assert_in_delta(0.0, (worksheet.costpercapita_ad76||0), 0.002); end
  def test_costpercapita_ae76; assert_in_delta(0.0, (worksheet.costpercapita_ae76||0), 0.002); end
  def test_costpercapita_af76; assert_in_delta(0.0, (worksheet.costpercapita_af76||0), 0.002); end
  def test_costpercapita_ag76; assert_in_delta(0.0, (worksheet.costpercapita_ag76||0), 0.002); end
  def test_costpercapita_ai76; assert_in_epsilon(2538.9237233952763, worksheet.costpercapita_ai76, 0.002); end
  def test_costpercapita_aj76; assert_in_epsilon(2654.8861177819003, worksheet.costpercapita_aj76, 0.002); end
  def test_costpercapita_ak76; assert_in_epsilon(2848.416905355413, worksheet.costpercapita_ak76, 0.002); end
  def test_costpercapita_al76; assert_in_epsilon(3052.7860651830965, worksheet.costpercapita_al76, 0.002); end
  def test_costpercapita_am76; assert_in_epsilon(3268.1228019526548, worksheet.costpercapita_am76, 0.002); end
  def test_costpercapita_an76; assert_in_epsilon(3494.5035857919224, worksheet.costpercapita_an76, 0.002); end
  def test_costpercapita_ao76; assert_in_epsilon(3731.7605112460265, worksheet.costpercapita_ao76, 0.002); end
  def test_costpercapita_ap76; assert_in_epsilon(3979.6433482810035, worksheet.costpercapita_ap76, 0.002); end
  def test_costpercapita_aq76; assert_in_epsilon(4237.722249000353, worksheet.costpercapita_aq76, 0.002); end
  def test_costpercapita_as76; assert_in_epsilon(3311.8628119986274, worksheet.costpercapita_as76, 0.002); end
  def test_costpercapita_at76; assert_in_epsilon(66908.91862415257, worksheet.costpercapita_at76, 0.002); end
  def test_costpercapita_av76; assert_in_delta(0.0, (worksheet.costpercapita_av76||0), 0.002); end
  def test_costpercapita_aw76; assert_in_epsilon(5.0, worksheet.costpercapita_aw76, 0.002); end
  def test_costpercapita_ay76; assert_in_epsilon(809.721308492508, worksheet.costpercapita_ay76, 0.002); end
  def test_costpercapita_az76; assert_in_epsilon(843.5582336170365, worksheet.costpercapita_az76, 0.002); end
  def test_costpercapita_ba76; assert_in_epsilon(901.6353585714505, worksheet.costpercapita_ba76, 0.002); end
  def test_costpercapita_bb76; assert_in_epsilon(962.3675625805367, worksheet.costpercapita_bb76, 0.002); end
  def test_costpercapita_bc76; assert_in_epsilon(1025.701066266103, worksheet.costpercapita_bc76, 0.002); end
  def test_costpercapita_bd76; assert_in_epsilon(1091.4686256251364, worksheet.costpercapita_bd76, 0.002); end
  def test_costpercapita_be76; assert_in_epsilon(1159.4978273007428, worksheet.costpercapita_be76, 0.002); end
  def test_costpercapita_bf76; assert_in_epsilon(1229.534272323962, worksheet.costpercapita_bf76, 0.002); end
  def test_costpercapita_bg76; assert_in_epsilon(1301.2354962207787, worksheet.costpercapita_bg76, 0.002); end
  def test_costpercapita_bi76; assert_in_delta(0.0, (worksheet.costpercapita_bi76||0), 0.002); end
  def test_costpercapita_bj76; assert_in_delta(0.0, (worksheet.costpercapita_bj76||0), 0.002); end
  def test_costpercapita_bk76; assert_in_delta(0.0, (worksheet.costpercapita_bk76||0), 0.002); end
  def test_costpercapita_bl76; assert_in_delta(0.0, (worksheet.costpercapita_bl76||0), 0.002); end
  def test_costpercapita_bm76; assert_in_delta(0.0, (worksheet.costpercapita_bm76||0), 0.002); end
  def test_costpercapita_bn76; assert_in_delta(0.0, (worksheet.costpercapita_bn76||0), 0.002); end
  def test_costpercapita_bo76; assert_in_delta(0.0, (worksheet.costpercapita_bo76||0), 0.002); end
  def test_costpercapita_bp76; assert_in_delta(0.0, (worksheet.costpercapita_bp76||0), 0.002); end
  def test_costpercapita_bq76; assert_in_delta(0.0, (worksheet.costpercapita_bq76||0), 0.002); end
  def test_costpercapita_bs76; assert_in_epsilon(2856.9868954975027, worksheet.costpercapita_bs76, 0.002); end
  def test_costpercapita_bt76; assert_in_epsilon(2986.2406280598875, worksheet.costpercapita_bt76, 0.002); end
  def test_costpercapita_bu76; assert_in_epsilon(3202.584443271229, worksheet.costpercapita_bu76, 0.002); end
  def test_costpercapita_bv76; assert_in_epsilon(3430.8095610109654, worksheet.costpercapita_bv76, 0.002); end
  def test_costpercapita_bw76; assert_in_epsilon(3671.0240611187296, worksheet.costpercapita_bw76, 0.002); end
  def test_costpercapita_bx76; assert_in_epsilon(3923.2387193191644, worksheet.costpercapita_bx76, 0.002); end
  def test_costpercapita_by76; assert_in_epsilon(4187.217905202366, worksheet.costpercapita_by76, 0.002); end
  def test_costpercapita_bz76; assert_in_epsilon(4462.611459360893, worksheet.costpercapita_bz76, 0.002); end
  def test_costpercapita_ca76; assert_in_epsilon(4748.855011889506, worksheet.costpercapita_ca76, 0.002); end
  def test_costpercapita_cc76; assert_in_epsilon(3718.840964970027, worksheet.costpercapita_cc76, 0.002); end
  def test_costpercapita_cd76; assert_in_epsilon(75156.04208458858, worksheet.costpercapita_cd76, 0.002); end
  def test_costpercapita_cf76; assert_in_epsilon(318.06317210222693, worksheet.costpercapita_cf76, 0.002); end
  def test_costpercapita_cg76; assert_in_epsilon(331.35451027798723, worksheet.costpercapita_cg76, 0.002); end
  def test_costpercapita_ch76; assert_in_epsilon(354.1675379158158, worksheet.costpercapita_ch76, 0.002); end
  def test_costpercapita_ci76; assert_in_epsilon(378.0234958278686, worksheet.costpercapita_ci76, 0.002); end
  def test_costpercapita_cj76; assert_in_epsilon(402.90125916607485, worksheet.costpercapita_cj76, 0.002); end
  def test_costpercapita_ck76; assert_in_epsilon(428.7351335272424, worksheet.costpercapita_ck76, 0.002); end
  def test_costpercapita_cl76; assert_in_epsilon(455.45739395633876, worksheet.costpercapita_cl76, 0.002); end
  def test_costpercapita_cm76; assert_in_epsilon(482.968111079889, worksheet.costpercapita_cm76, 0.002); end
  def test_costpercapita_cn76; assert_in_epsilon(511.13276288915347, worksheet.costpercapita_cn76, 0.002); end
  def test_costpercapita_cp76; assert_in_epsilon(406.9781529713997, worksheet.costpercapita_cp76, 0.002); end
  def test_costpercapita_cq76; assert_in_epsilon(8247.12346043602, worksheet.costpercapita_cq76, 0.002); end
  def test_costpercapita_cr76; assert_equal("ok", worksheet.costpercapita_cr76); end
  def test_costpercapita_a77; assert_equal("TRA.b.RAIL", worksheet.costpercapita_a77); end
  def test_costpercapita_b77; assert_equal("Rail", worksheet.costpercapita_b77); end
  def test_costpercapita_c77; assert_equal("Transport", worksheet.costpercapita_c77); end
  def test_costpercapita_e77; assert_in_epsilon(865.899067705272, worksheet.costpercapita_e77, 0.002); end
  def test_costpercapita_f77; assert_in_epsilon(999.3965962333207, worksheet.costpercapita_f77, 0.002); end
  def test_costpercapita_g77; assert_in_epsilon(1179.328829212495, worksheet.costpercapita_g77, 0.002); end
  def test_costpercapita_h77; assert_in_epsilon(1386.1650825446761, worksheet.costpercapita_h77, 0.002); end
  def test_costpercapita_i77; assert_in_epsilon(1623.5629587587603, worksheet.costpercapita_i77, 0.002); end
  def test_costpercapita_j77; assert_in_epsilon(1895.7040259887938, worksheet.costpercapita_j77, 0.002); end
  def test_costpercapita_k77; assert_in_epsilon(2207.1999741394243, worksheet.costpercapita_k77, 0.002); end
  def test_costpercapita_l77; assert_in_epsilon(2563.289936674005, worksheet.costpercapita_l77, 0.002); end
  def test_costpercapita_m77; assert_in_epsilon(2969.8704222359843, worksheet.costpercapita_m77, 0.002); end
  def test_costpercapita_o77; assert_in_epsilon(27.47007258333573, worksheet.costpercapita_o77, 0.002); end
  def test_costpercapita_p77; assert_in_epsilon(31.705192974537766, worksheet.costpercapita_p77, 0.002); end
  def test_costpercapita_q77; assert_in_epsilon(37.413423511288926, worksheet.costpercapita_q77, 0.002); end
  def test_costpercapita_r77; assert_in_epsilon(43.97516621758106, worksheet.costpercapita_r77, 0.002); end
  def test_costpercapita_s77; assert_in_epsilon(51.50645610337907, worksheet.costpercapita_s77, 0.002); end
  def test_costpercapita_t77; assert_in_epsilon(60.139950639326536, worksheet.costpercapita_t77, 0.002); end
  def test_costpercapita_u77; assert_in_epsilon(70.02195262344846, worksheet.costpercapita_u77, 0.002); end
  def test_costpercapita_v77; assert_in_epsilon(81.31867008376992, worksheet.costpercapita_v77, 0.002); end
  def test_costpercapita_w77; assert_in_epsilon(94.21716583911703, worksheet.costpercapita_w77, 0.002); end
  def test_costpercapita_y77; assert_in_delta(0.0, (worksheet.costpercapita_y77||0), 0.002); end
  def test_costpercapita_z77; assert_in_delta(0.0, (worksheet.costpercapita_z77||0), 0.002); end
  def test_costpercapita_aa77; assert_in_delta(0.0, (worksheet.costpercapita_aa77||0), 0.002); end
  def test_costpercapita_ab77; assert_in_delta(0.0, (worksheet.costpercapita_ab77||0), 0.002); end
  def test_costpercapita_ac77; assert_in_delta(0.0, (worksheet.costpercapita_ac77||0), 0.002); end
  def test_costpercapita_ad77; assert_in_delta(0.0, (worksheet.costpercapita_ad77||0), 0.002); end
  def test_costpercapita_ae77; assert_in_delta(0.0, (worksheet.costpercapita_ae77||0), 0.002); end
  def test_costpercapita_af77; assert_in_delta(0.0, (worksheet.costpercapita_af77||0), 0.002); end
  def test_costpercapita_ag77; assert_in_delta(0.0, (worksheet.costpercapita_ag77||0), 0.002); end
  def test_costpercapita_ai77; assert_in_epsilon(893.3691402886077, worksheet.costpercapita_ai77, 0.002); end
  def test_costpercapita_aj77; assert_in_epsilon(1031.1017892078585, worksheet.costpercapita_aj77, 0.002); end
  def test_costpercapita_ak77; assert_in_epsilon(1216.742252723784, worksheet.costpercapita_ak77, 0.002); end
  def test_costpercapita_al77; assert_in_epsilon(1430.1402487622572, worksheet.costpercapita_al77, 0.002); end
  def test_costpercapita_am77; assert_in_epsilon(1675.0694148621392, worksheet.costpercapita_am77, 0.002); end
  def test_costpercapita_an77; assert_in_epsilon(1955.8439766281203, worksheet.costpercapita_an77, 0.002); end
  def test_costpercapita_ao77; assert_in_epsilon(2277.2219267628725, worksheet.costpercapita_ao77, 0.002); end
  def test_costpercapita_ap77; assert_in_epsilon(2644.608606757775, worksheet.costpercapita_ap77, 0.002); end
  def test_costpercapita_aq77; assert_in_epsilon(3064.0875880751014, worksheet.costpercapita_aq77, 0.002); end
  def test_costpercapita_as77; assert_in_epsilon(1798.6872160076127, worksheet.costpercapita_as77, 0.002); end
  def test_costpercapita_at77; assert_in_epsilon(34344.39102461105, worksheet.costpercapita_at77, 0.002); end
  def test_costpercapita_av77; assert_in_delta(0.0, (worksheet.costpercapita_av77||0), 0.002); end
  def test_costpercapita_aw77; assert_in_epsilon(5.0, worksheet.costpercapita_aw77, 0.002); end
  def test_costpercapita_ay77; assert_in_epsilon(3137.1458081205283, worksheet.costpercapita_ay77, 0.002); end
  def test_costpercapita_az77; assert_in_epsilon(3620.8063496731224, worksheet.costpercapita_az77, 0.002); end
  def test_costpercapita_ba77; assert_in_epsilon(4272.6994761229535, worksheet.costpercapita_ba77, 0.002); end
  def test_costpercapita_bb77; assert_in_epsilon(5022.065665912255, worksheet.costpercapita_bb77, 0.002); end
  def test_costpercapita_bc77; assert_in_epsilon(5882.156385487001, worksheet.costpercapita_bc77, 0.002); end
  def test_costpercapita_bd77; assert_in_epsilon(6868.121424738826, worksheet.costpercapita_bd77, 0.002); end
  def test_costpercapita_be77; assert_in_epsilon(7996.668901498433, worksheet.costpercapita_be77, 0.002); end
  def test_costpercapita_bf77; assert_in_epsilon(9286.780156889445, worksheet.costpercapita_bf77, 0.002); end
  def test_costpercapita_bg77; assert_in_epsilon(10759.818197367527, worksheet.costpercapita_bg77, 0.002); end
  def test_costpercapita_bi77; assert_in_delta(0.0, (worksheet.costpercapita_bi77||0), 0.002); end
  def test_costpercapita_bj77; assert_in_delta(0.0, (worksheet.costpercapita_bj77||0), 0.002); end
  def test_costpercapita_bk77; assert_in_delta(0.0, (worksheet.costpercapita_bk77||0), 0.002); end
  def test_costpercapita_bl77; assert_in_delta(0.0, (worksheet.costpercapita_bl77||0), 0.002); end
  def test_costpercapita_bm77; assert_in_delta(0.0, (worksheet.costpercapita_bm77||0), 0.002); end
  def test_costpercapita_bn77; assert_in_delta(0.0, (worksheet.costpercapita_bn77||0), 0.002); end
  def test_costpercapita_bo77; assert_in_delta(0.0, (worksheet.costpercapita_bo77||0), 0.002); end
  def test_costpercapita_bp77; assert_in_delta(0.0, (worksheet.costpercapita_bp77||0), 0.002); end
  def test_costpercapita_bq77; assert_in_delta(0.0, (worksheet.costpercapita_bq77||0), 0.002); end
  def test_costpercapita_bs77; assert_in_epsilon(3164.6158807038637, worksheet.costpercapita_bs77, 0.002); end
  def test_costpercapita_bt77; assert_in_epsilon(3652.5115426476605, worksheet.costpercapita_bt77, 0.002); end
  def test_costpercapita_bu77; assert_in_epsilon(4310.112899634243, worksheet.costpercapita_bu77, 0.002); end
  def test_costpercapita_bv77; assert_in_epsilon(5066.040832129836, worksheet.costpercapita_bv77, 0.002); end
  def test_costpercapita_bw77; assert_in_epsilon(5933.66284159038, worksheet.costpercapita_bw77, 0.002); end
  def test_costpercapita_bx77; assert_in_epsilon(6928.2613753781525, worksheet.costpercapita_bx77, 0.002); end
  def test_costpercapita_by77; assert_in_epsilon(8066.690854121882, worksheet.costpercapita_by77, 0.002); end
  def test_costpercapita_bz77; assert_in_epsilon(9368.098826973215, worksheet.costpercapita_bz77, 0.002); end
  def test_costpercapita_ca77; assert_in_epsilon(10854.035363206644, worksheet.costpercapita_ca77, 0.002); end
  def test_costpercapita_cc77; assert_in_epsilon(6371.558935153986, worksheet.costpercapita_cc77, 0.002); end
  def test_costpercapita_cd77; assert_in_epsilon(121659.45783002481, worksheet.costpercapita_cd77, 0.002); end
  def test_costpercapita_cf77; assert_in_epsilon(2271.246740415256, worksheet.costpercapita_cf77, 0.002); end
  def test_costpercapita_cg77; assert_in_epsilon(2621.409753439802, worksheet.costpercapita_cg77, 0.002); end
  def test_costpercapita_ch77; assert_in_epsilon(3093.3706469104586, worksheet.costpercapita_ch77, 0.002); end
  def test_costpercapita_ci77; assert_in_epsilon(3635.9005833675787, worksheet.costpercapita_ci77, 0.002); end
  def test_costpercapita_cj77; assert_in_epsilon(4258.593426728241, worksheet.costpercapita_cj77, 0.002); end
  def test_costpercapita_ck77; assert_in_epsilon(4972.417398750033, worksheet.costpercapita_ck77, 0.002); end
  def test_costpercapita_cl77; assert_in_epsilon(5789.468927359008, worksheet.costpercapita_cl77, 0.002); end
  def test_costpercapita_cm77; assert_in_epsilon(6723.490220215441, worksheet.costpercapita_cm77, 0.002); end
  def test_costpercapita_cn77; assert_in_epsilon(7789.947775131543, worksheet.costpercapita_cn77, 0.002); end
  def test_costpercapita_cp77; assert_in_epsilon(4572.871719146374, worksheet.costpercapita_cp77, 0.002); end
  def test_costpercapita_cq77; assert_in_epsilon(87315.06680541376, worksheet.costpercapita_cq77, 0.002); end
  def test_costpercapita_cr77; assert_equal("ok", worksheet.costpercapita_cr77); end
  def test_costpercapita_a78; assert_equal("XVI.b.Coal", worksheet.costpercapita_a78); end
  def test_costpercapita_b78; assert_equal("Coal Imports", worksheet.costpercapita_b78); end
  def test_costpercapita_c78; assert_equal("Fossil Fuels", worksheet.costpercapita_c78); end
  def test_costpercapita_e78; assert_in_delta(0.0, (worksheet.costpercapita_e78||0), 0.002); end
  def test_costpercapita_f78; assert_in_delta(0.0, (worksheet.costpercapita_f78||0), 0.002); end
  def test_costpercapita_g78; assert_in_delta(0.0, (worksheet.costpercapita_g78||0), 0.002); end
  def test_costpercapita_h78; assert_in_delta(0.0, (worksheet.costpercapita_h78||0), 0.002); end
  def test_costpercapita_i78; assert_in_delta(0.0, (worksheet.costpercapita_i78||0), 0.002); end
  def test_costpercapita_j78; assert_in_delta(0.0, (worksheet.costpercapita_j78||0), 0.002); end
  def test_costpercapita_k78; assert_in_delta(0.0, (worksheet.costpercapita_k78||0), 0.002); end
  def test_costpercapita_l78; assert_in_delta(0.0, (worksheet.costpercapita_l78||0), 0.002); end
  def test_costpercapita_m78; assert_in_delta(0.0, (worksheet.costpercapita_m78||0), 0.002); end
  def test_costpercapita_o78; assert_in_delta(0.0, (worksheet.costpercapita_o78||0), 0.002); end
  def test_costpercapita_p78; assert_in_delta(0.0, (worksheet.costpercapita_p78||0), 0.002); end
  def test_costpercapita_q78; assert_in_delta(0.0, (worksheet.costpercapita_q78||0), 0.002); end
  def test_costpercapita_r78; assert_in_delta(0.0, (worksheet.costpercapita_r78||0), 0.002); end
  def test_costpercapita_s78; assert_in_delta(0.0, (worksheet.costpercapita_s78||0), 0.002); end
  def test_costpercapita_t78; assert_in_delta(0.0, (worksheet.costpercapita_t78||0), 0.002); end
  def test_costpercapita_u78; assert_in_delta(0.0, (worksheet.costpercapita_u78||0), 0.002); end
  def test_costpercapita_v78; assert_in_delta(0.0, (worksheet.costpercapita_v78||0), 0.002); end
  def test_costpercapita_w78; assert_in_delta(0.0, (worksheet.costpercapita_w78||0), 0.002); end
  def test_costpercapita_y78; assert_in_delta(0.0, (worksheet.costpercapita_y78||0), 0.002); end
  def test_costpercapita_z78; assert_in_delta(0.0, (worksheet.costpercapita_z78||0), 0.002); end
  def test_costpercapita_aa78; assert_in_delta(0.0, (worksheet.costpercapita_aa78||0), 0.002); end
  def test_costpercapita_ab78; assert_in_delta(0.0, (worksheet.costpercapita_ab78||0), 0.002); end
  def test_costpercapita_ac78; assert_in_delta(0.0, (worksheet.costpercapita_ac78||0), 0.002); end
  def test_costpercapita_ad78; assert_in_delta(0.0, (worksheet.costpercapita_ad78||0), 0.002); end
  def test_costpercapita_ae78; assert_in_delta(0.0, (worksheet.costpercapita_ae78||0), 0.002); end
  def test_costpercapita_af78; assert_in_delta(0.0, (worksheet.costpercapita_af78||0), 0.002); end
  def test_costpercapita_ag78; assert_in_delta(0.0, (worksheet.costpercapita_ag78||0), 0.002); end
  def test_costpercapita_ai78; assert_in_delta(0.0, (worksheet.costpercapita_ai78||0), 0.002); end
  def test_costpercapita_aj78; assert_in_delta(0.0, (worksheet.costpercapita_aj78||0), 0.002); end
  def test_costpercapita_ak78; assert_in_delta(0.0, (worksheet.costpercapita_ak78||0), 0.002); end
  def test_costpercapita_al78; assert_in_delta(0.0, (worksheet.costpercapita_al78||0), 0.002); end
  def test_costpercapita_am78; assert_in_delta(0.0, (worksheet.costpercapita_am78||0), 0.002); end
  def test_costpercapita_an78; assert_in_delta(0.0, (worksheet.costpercapita_an78||0), 0.002); end
  def test_costpercapita_ao78; assert_in_delta(0.0, (worksheet.costpercapita_ao78||0), 0.002); end
  def test_costpercapita_ap78; assert_in_delta(0.0, (worksheet.costpercapita_ap78||0), 0.002); end
  def test_costpercapita_aq78; assert_in_delta(0.0, (worksheet.costpercapita_aq78||0), 0.002); end
  def test_costpercapita_as78; assert_in_delta(0.0, (worksheet.costpercapita_as78||0), 0.002); end
  def test_costpercapita_at78; assert_in_delta(0.0, (worksheet.costpercapita_at78||0), 0.002); end
  def test_costpercapita_av78; assert_in_delta(0.0, (worksheet.costpercapita_av78||0), 0.002); end
  def test_costpercapita_aw78; assert_in_epsilon(5.0, worksheet.costpercapita_aw78, 0.002); end
  def test_costpercapita_ay78; assert_in_delta(0.0, (worksheet.costpercapita_ay78||0), 0.002); end
  def test_costpercapita_az78; assert_in_delta(0.0, (worksheet.costpercapita_az78||0), 0.002); end
  def test_costpercapita_ba78; assert_in_delta(0.0, (worksheet.costpercapita_ba78||0), 0.002); end
  def test_costpercapita_bb78; assert_in_delta(0.0, (worksheet.costpercapita_bb78||0), 0.002); end
  def test_costpercapita_bc78; assert_in_delta(0.0, (worksheet.costpercapita_bc78||0), 0.002); end
  def test_costpercapita_bd78; assert_in_delta(0.0, (worksheet.costpercapita_bd78||0), 0.002); end
  def test_costpercapita_be78; assert_in_delta(0.0, (worksheet.costpercapita_be78||0), 0.002); end
  def test_costpercapita_bf78; assert_in_delta(0.0, (worksheet.costpercapita_bf78||0), 0.002); end
  def test_costpercapita_bg78; assert_in_delta(0.0, (worksheet.costpercapita_bg78||0), 0.002); end
  def test_costpercapita_bi78; assert_in_delta(0.0, (worksheet.costpercapita_bi78||0), 0.002); end
  def test_costpercapita_bj78; assert_in_delta(0.0, (worksheet.costpercapita_bj78||0), 0.002); end
  def test_costpercapita_bk78; assert_in_delta(0.0, (worksheet.costpercapita_bk78||0), 0.002); end
  def test_costpercapita_bl78; assert_in_delta(0.0, (worksheet.costpercapita_bl78||0), 0.002); end
  def test_costpercapita_bm78; assert_in_delta(0.0, (worksheet.costpercapita_bm78||0), 0.002); end
  def test_costpercapita_bn78; assert_in_delta(0.0, (worksheet.costpercapita_bn78||0), 0.002); end
  def test_costpercapita_bo78; assert_in_delta(0.0, (worksheet.costpercapita_bo78||0), 0.002); end
  def test_costpercapita_bp78; assert_in_delta(0.0, (worksheet.costpercapita_bp78||0), 0.002); end
  def test_costpercapita_bq78; assert_in_delta(0.0, (worksheet.costpercapita_bq78||0), 0.002); end
  def test_costpercapita_bs78; assert_in_delta(0.0, (worksheet.costpercapita_bs78||0), 0.002); end
  def test_costpercapita_bt78; assert_in_delta(0.0, (worksheet.costpercapita_bt78||0), 0.002); end
  def test_costpercapita_bu78; assert_in_delta(0.0, (worksheet.costpercapita_bu78||0), 0.002); end
  def test_costpercapita_bv78; assert_in_delta(0.0, (worksheet.costpercapita_bv78||0), 0.002); end
  def test_costpercapita_bw78; assert_in_delta(0.0, (worksheet.costpercapita_bw78||0), 0.002); end
  def test_costpercapita_bx78; assert_in_delta(0.0, (worksheet.costpercapita_bx78||0), 0.002); end
  def test_costpercapita_by78; assert_in_delta(0.0, (worksheet.costpercapita_by78||0), 0.002); end
  def test_costpercapita_bz78; assert_in_delta(0.0, (worksheet.costpercapita_bz78||0), 0.002); end
  def test_costpercapita_ca78; assert_in_delta(0.0, (worksheet.costpercapita_ca78||0), 0.002); end
  def test_costpercapita_cc78; assert_in_delta(0.0, (worksheet.costpercapita_cc78||0), 0.002); end
  def test_costpercapita_cd78; assert_in_delta(0.0, (worksheet.costpercapita_cd78||0), 0.002); end
  def test_costpercapita_cf78; assert_in_delta(0.0, (worksheet.costpercapita_cf78||0), 0.002); end
  def test_costpercapita_cg78; assert_in_delta(0.0, (worksheet.costpercapita_cg78||0), 0.002); end
  def test_costpercapita_ch78; assert_in_delta(0.0, (worksheet.costpercapita_ch78||0), 0.002); end
  def test_costpercapita_ci78; assert_in_delta(0.0, (worksheet.costpercapita_ci78||0), 0.002); end
  def test_costpercapita_cj78; assert_in_delta(0.0, (worksheet.costpercapita_cj78||0), 0.002); end
  def test_costpercapita_ck78; assert_in_delta(0.0, (worksheet.costpercapita_ck78||0), 0.002); end
  def test_costpercapita_cl78; assert_in_delta(0.0, (worksheet.costpercapita_cl78||0), 0.002); end
  def test_costpercapita_cm78; assert_in_delta(0.0, (worksheet.costpercapita_cm78||0), 0.002); end
  def test_costpercapita_cn78; assert_in_delta(0.0, (worksheet.costpercapita_cn78||0), 0.002); end
  def test_costpercapita_cp78; assert_in_delta(0.0, (worksheet.costpercapita_cp78||0), 0.002); end
  def test_costpercapita_cq78; assert_in_delta(0.0, (worksheet.costpercapita_cq78||0), 0.002); end
  def test_costpercapita_cr78; assert_equal("ok", worksheet.costpercapita_cr78); end
  def test_costpercapita_a79; assert_equal("XVI.b.Oil", worksheet.costpercapita_a79); end
  def test_costpercapita_b79; assert_equal("Oil Imports", worksheet.costpercapita_b79); end
  def test_costpercapita_c79; assert_equal("Fossil Fuels", worksheet.costpercapita_c79); end
  def test_costpercapita_e79; assert_in_delta(0.0, (worksheet.costpercapita_e79||0), 0.002); end
  def test_costpercapita_f79; assert_in_delta(0.0, (worksheet.costpercapita_f79||0), 0.002); end
  def test_costpercapita_g79; assert_in_delta(0.0, (worksheet.costpercapita_g79||0), 0.002); end
  def test_costpercapita_h79; assert_in_delta(0.0, (worksheet.costpercapita_h79||0), 0.002); end
  def test_costpercapita_i79; assert_in_delta(0.0, (worksheet.costpercapita_i79||0), 0.002); end
  def test_costpercapita_j79; assert_in_delta(0.0, (worksheet.costpercapita_j79||0), 0.002); end
  def test_costpercapita_k79; assert_in_delta(0.0, (worksheet.costpercapita_k79||0), 0.002); end
  def test_costpercapita_l79; assert_in_delta(0.0, (worksheet.costpercapita_l79||0), 0.002); end
  def test_costpercapita_m79; assert_in_delta(0.0, (worksheet.costpercapita_m79||0), 0.002); end
  def test_costpercapita_o79; assert_in_delta(0.0, (worksheet.costpercapita_o79||0), 0.002); end
  def test_costpercapita_p79; assert_in_delta(0.0, (worksheet.costpercapita_p79||0), 0.002); end
  def test_costpercapita_q79; assert_in_delta(0.0, (worksheet.costpercapita_q79||0), 0.002); end
  def test_costpercapita_r79; assert_in_delta(0.0, (worksheet.costpercapita_r79||0), 0.002); end
  def test_costpercapita_s79; assert_in_delta(0.0, (worksheet.costpercapita_s79||0), 0.002); end
  def test_costpercapita_t79; assert_in_delta(0.0, (worksheet.costpercapita_t79||0), 0.002); end
  def test_costpercapita_u79; assert_in_delta(0.0, (worksheet.costpercapita_u79||0), 0.002); end
  def test_costpercapita_v79; assert_in_delta(0.0, (worksheet.costpercapita_v79||0), 0.002); end
  def test_costpercapita_w79; assert_in_delta(0.0, (worksheet.costpercapita_w79||0), 0.002); end
  def test_costpercapita_y79; assert_in_epsilon(-1176.1020157248945, worksheet.costpercapita_y79, 0.002); end
  def test_costpercapita_z79; assert_in_epsilon(-1412.5029045846597, worksheet.costpercapita_z79, 0.002); end
  def test_costpercapita_aa79; assert_in_epsilon(-1650.2602482157524, worksheet.costpercapita_aa79, 0.002); end
  def test_costpercapita_ab79; assert_in_epsilon(-1614.3657768233077, worksheet.costpercapita_ab79, 0.002); end
  def test_costpercapita_ac79; assert_in_epsilon(-1583.9172339423092, worksheet.costpercapita_ac79, 0.002); end
  def test_costpercapita_ad79; assert_in_epsilon(-1601.8359758344109, worksheet.costpercapita_ad79, 0.002); end
  def test_costpercapita_ae79; assert_in_epsilon(-1786.8107068188342, worksheet.costpercapita_ae79, 0.002); end
  def test_costpercapita_af79; assert_in_epsilon(-1710.5260126723797, worksheet.costpercapita_af79, 0.002); end
  def test_costpercapita_ag79; assert_in_epsilon(-1873.710436942218, worksheet.costpercapita_ag79, 0.002); end
  def test_costpercapita_ai79; assert_in_epsilon(-1176.1020157248945, worksheet.costpercapita_ai79, 0.002); end
  def test_costpercapita_aj79; assert_in_epsilon(-1412.5029045846597, worksheet.costpercapita_aj79, 0.002); end
  def test_costpercapita_ak79; assert_in_epsilon(-1650.2602482157524, worksheet.costpercapita_ak79, 0.002); end
  def test_costpercapita_al79; assert_in_epsilon(-1614.3657768233077, worksheet.costpercapita_al79, 0.002); end
  def test_costpercapita_am79; assert_in_epsilon(-1583.9172339423092, worksheet.costpercapita_am79, 0.002); end
  def test_costpercapita_an79; assert_in_epsilon(-1601.8359758344109, worksheet.costpercapita_an79, 0.002); end
  def test_costpercapita_ao79; assert_in_epsilon(-1786.8107068188342, worksheet.costpercapita_ao79, 0.002); end
  def test_costpercapita_ap79; assert_in_epsilon(-1710.5260126723797, worksheet.costpercapita_ap79, 0.002); end
  def test_costpercapita_aq79; assert_in_epsilon(-1873.710436942218, worksheet.costpercapita_aq79, 0.002); end
  def test_costpercapita_as79; assert_in_epsilon(-1601.1145901731966, worksheet.costpercapita_as79, 0.002); end
  def test_costpercapita_at79; assert_in_epsilon(-33454.352461567134, worksheet.costpercapita_at79, 0.002); end
  def test_costpercapita_av79; assert_in_delta(0.0, (worksheet.costpercapita_av79||0), 0.002); end
  def test_costpercapita_aw79; assert_in_epsilon(5.0, worksheet.costpercapita_aw79, 0.002); end
  def test_costpercapita_ay79; assert_in_delta(0.0, (worksheet.costpercapita_ay79||0), 0.002); end
  def test_costpercapita_az79; assert_in_delta(0.0, (worksheet.costpercapita_az79||0), 0.002); end
  def test_costpercapita_ba79; assert_in_delta(0.0, (worksheet.costpercapita_ba79||0), 0.002); end
  def test_costpercapita_bb79; assert_in_delta(0.0, (worksheet.costpercapita_bb79||0), 0.002); end
  def test_costpercapita_bc79; assert_in_delta(0.0, (worksheet.costpercapita_bc79||0), 0.002); end
  def test_costpercapita_bd79; assert_in_delta(0.0, (worksheet.costpercapita_bd79||0), 0.002); end
  def test_costpercapita_be79; assert_in_delta(0.0, (worksheet.costpercapita_be79||0), 0.002); end
  def test_costpercapita_bf79; assert_in_delta(0.0, (worksheet.costpercapita_bf79||0), 0.002); end
  def test_costpercapita_bg79; assert_in_delta(0.0, (worksheet.costpercapita_bg79||0), 0.002); end
  def test_costpercapita_bi79; assert_in_delta(0.0, (worksheet.costpercapita_bi79||0), 0.002); end
  def test_costpercapita_bj79; assert_in_delta(0.0, (worksheet.costpercapita_bj79||0), 0.002); end
  def test_costpercapita_bk79; assert_in_delta(0.0, (worksheet.costpercapita_bk79||0), 0.002); end
  def test_costpercapita_bl79; assert_in_delta(0.0, (worksheet.costpercapita_bl79||0), 0.002); end
  def test_costpercapita_bm79; assert_in_delta(0.0, (worksheet.costpercapita_bm79||0), 0.002); end
  def test_costpercapita_bn79; assert_in_delta(0.0, (worksheet.costpercapita_bn79||0), 0.002); end
  def test_costpercapita_bo79; assert_in_delta(0.0, (worksheet.costpercapita_bo79||0), 0.002); end
  def test_costpercapita_bp79; assert_in_delta(0.0, (worksheet.costpercapita_bp79||0), 0.002); end
  def test_costpercapita_bq79; assert_in_delta(0.0, (worksheet.costpercapita_bq79||0), 0.002); end
  def test_costpercapita_bs79; assert_in_delta(0.0, (worksheet.costpercapita_bs79||0), 0.002); end
  def test_costpercapita_bt79; assert_in_delta(0.0, (worksheet.costpercapita_bt79||0), 0.002); end
  def test_costpercapita_bu79; assert_in_delta(0.0, (worksheet.costpercapita_bu79||0), 0.002); end
  def test_costpercapita_bv79; assert_in_delta(0.0, (worksheet.costpercapita_bv79||0), 0.002); end
  def test_costpercapita_bw79; assert_in_delta(0.0, (worksheet.costpercapita_bw79||0), 0.002); end
  def test_costpercapita_bx79; assert_in_delta(0.0, (worksheet.costpercapita_bx79||0), 0.002); end
  def test_costpercapita_by79; assert_in_delta(0.0, (worksheet.costpercapita_by79||0), 0.002); end
  def test_costpercapita_bz79; assert_in_delta(0.0, (worksheet.costpercapita_bz79||0), 0.002); end
  def test_costpercapita_ca79; assert_in_delta(0.0, (worksheet.costpercapita_ca79||0), 0.002); end
  def test_costpercapita_cc79; assert_in_delta(0.0, (worksheet.costpercapita_cc79||0), 0.002); end
  def test_costpercapita_cd79; assert_in_delta(0.0, (worksheet.costpercapita_cd79||0), 0.002); end
  def test_costpercapita_cf79; assert_in_delta(0.0, (worksheet.costpercapita_cf79||0), 0.002); end
  def test_costpercapita_cg79; assert_in_delta(0.0, (worksheet.costpercapita_cg79||0), 0.002); end
  def test_costpercapita_ch79; assert_in_delta(0.0, (worksheet.costpercapita_ch79||0), 0.002); end
  def test_costpercapita_ci79; assert_in_delta(0.0, (worksheet.costpercapita_ci79||0), 0.002); end
  def test_costpercapita_cj79; assert_in_delta(0.0, (worksheet.costpercapita_cj79||0), 0.002); end
  def test_costpercapita_ck79; assert_in_delta(0.0, (worksheet.costpercapita_ck79||0), 0.002); end
  def test_costpercapita_cl79; assert_in_delta(0.0, (worksheet.costpercapita_cl79||0), 0.002); end
  def test_costpercapita_cm79; assert_in_delta(0.0, (worksheet.costpercapita_cm79||0), 0.002); end
  def test_costpercapita_cn79; assert_in_delta(0.0, (worksheet.costpercapita_cn79||0), 0.002); end
  def test_costpercapita_cp79; assert_in_delta(0.0, (worksheet.costpercapita_cp79||0), 0.002); end
  def test_costpercapita_cq79; assert_in_delta(0.0, (worksheet.costpercapita_cq79||0), 0.002); end
  def test_costpercapita_cr79; assert_equal("err", worksheet.costpercapita_cr79); end
  def test_costpercapita_a80; assert_equal("XVI.b.Gas", worksheet.costpercapita_a80); end
  def test_costpercapita_b80; assert_equal("Gas Imports", worksheet.costpercapita_b80); end
  def test_costpercapita_c80; assert_equal("Fossil Fuels", worksheet.costpercapita_c80); end
  def test_costpercapita_e80; assert_in_delta(0.0, (worksheet.costpercapita_e80||0), 0.002); end
  def test_costpercapita_f80; assert_in_delta(0.0, (worksheet.costpercapita_f80||0), 0.002); end
  def test_costpercapita_g80; assert_in_delta(0.0, (worksheet.costpercapita_g80||0), 0.002); end
  def test_costpercapita_h80; assert_in_delta(0.0, (worksheet.costpercapita_h80||0), 0.002); end
  def test_costpercapita_i80; assert_in_delta(0.0, (worksheet.costpercapita_i80||0), 0.002); end
  def test_costpercapita_j80; assert_in_delta(0.0, (worksheet.costpercapita_j80||0), 0.002); end
  def test_costpercapita_k80; assert_in_delta(0.0, (worksheet.costpercapita_k80||0), 0.002); end
  def test_costpercapita_l80; assert_in_delta(0.0, (worksheet.costpercapita_l80||0), 0.002); end
  def test_costpercapita_m80; assert_in_delta(0.0, (worksheet.costpercapita_m80||0), 0.002); end
  def test_costpercapita_o80; assert_in_delta(0.0, (worksheet.costpercapita_o80||0), 0.002); end
  def test_costpercapita_p80; assert_in_delta(0.0, (worksheet.costpercapita_p80||0), 0.002); end
  def test_costpercapita_q80; assert_in_delta(0.0, (worksheet.costpercapita_q80||0), 0.002); end
  def test_costpercapita_r80; assert_in_delta(0.0, (worksheet.costpercapita_r80||0), 0.002); end
  def test_costpercapita_s80; assert_in_delta(0.0, (worksheet.costpercapita_s80||0), 0.002); end
  def test_costpercapita_t80; assert_in_delta(0.0, (worksheet.costpercapita_t80||0), 0.002); end
  def test_costpercapita_u80; assert_in_delta(0.0, (worksheet.costpercapita_u80||0), 0.002); end
  def test_costpercapita_v80; assert_in_delta(0.0, (worksheet.costpercapita_v80||0), 0.002); end
  def test_costpercapita_w80; assert_in_delta(0.0, (worksheet.costpercapita_w80||0), 0.002); end
  def test_costpercapita_y80; assert_in_epsilon(-338.41104341721575, worksheet.costpercapita_y80, 0.002); end
  def test_costpercapita_z80; assert_in_epsilon(-574.254016527021, worksheet.costpercapita_z80, 0.002); end
  def test_costpercapita_aa80; assert_in_epsilon(374.68537128589384, worksheet.costpercapita_aa80, 0.002); end
  def test_costpercapita_ab80; assert_in_epsilon(248.1831064997114, worksheet.costpercapita_ab80, 0.002); end
  def test_costpercapita_ac80; assert_in_epsilon(-723.6748705322791, worksheet.costpercapita_ac80, 0.002); end
  def test_costpercapita_ad80; assert_in_epsilon(-1185.78215211377, worksheet.costpercapita_ad80, 0.002); end
  def test_costpercapita_ae80; assert_in_epsilon(-1733.7283369599545, worksheet.costpercapita_ae80, 0.002); end
  def test_costpercapita_af80; assert_in_epsilon(-2519.8385526748525, worksheet.costpercapita_af80, 0.002); end
  def test_costpercapita_ag80; assert_in_epsilon(-3216.356110658211, worksheet.costpercapita_ag80, 0.002); end
  def test_costpercapita_ai80; assert_in_epsilon(-338.41104341721575, worksheet.costpercapita_ai80, 0.002); end
  def test_costpercapita_aj80; assert_in_epsilon(-574.254016527021, worksheet.costpercapita_aj80, 0.002); end
  def test_costpercapita_ak80; assert_in_epsilon(374.68537128589384, worksheet.costpercapita_ak80, 0.002); end
  def test_costpercapita_al80; assert_in_epsilon(248.1831064997114, worksheet.costpercapita_al80, 0.002); end
  def test_costpercapita_am80; assert_in_epsilon(-723.6748705322791, worksheet.costpercapita_am80, 0.002); end
  def test_costpercapita_an80; assert_in_epsilon(-1185.78215211377, worksheet.costpercapita_an80, 0.002); end
  def test_costpercapita_ao80; assert_in_epsilon(-1733.7283369599545, worksheet.costpercapita_ao80, 0.002); end
  def test_costpercapita_ap80; assert_in_epsilon(-2519.8385526748525, worksheet.costpercapita_ap80, 0.002); end
  def test_costpercapita_aq80; assert_in_epsilon(-3216.356110658211, worksheet.costpercapita_aq80, 0.002); end
  def test_costpercapita_as80; assert_in_epsilon(-1074.3529561219666, worksheet.costpercapita_as80, 0.002); end
  def test_costpercapita_at80; assert_in_epsilon(-16238.31699258579, worksheet.costpercapita_at80, 0.002); end
  def test_costpercapita_av80; assert_in_delta(0.0, (worksheet.costpercapita_av80||0), 0.002); end
  def test_costpercapita_aw80; assert_in_epsilon(5.0, worksheet.costpercapita_aw80, 0.002); end
  def test_costpercapita_ay80; assert_in_delta(0.0, (worksheet.costpercapita_ay80||0), 0.002); end
  def test_costpercapita_az80; assert_in_delta(0.0, (worksheet.costpercapita_az80||0), 0.002); end
  def test_costpercapita_ba80; assert_in_delta(0.0, (worksheet.costpercapita_ba80||0), 0.002); end
  def test_costpercapita_bb80; assert_in_delta(0.0, (worksheet.costpercapita_bb80||0), 0.002); end
  def test_costpercapita_bc80; assert_in_delta(0.0, (worksheet.costpercapita_bc80||0), 0.002); end
  def test_costpercapita_bd80; assert_in_delta(0.0, (worksheet.costpercapita_bd80||0), 0.002); end
  def test_costpercapita_be80; assert_in_delta(0.0, (worksheet.costpercapita_be80||0), 0.002); end
  def test_costpercapita_bf80; assert_in_delta(0.0, (worksheet.costpercapita_bf80||0), 0.002); end
  def test_costpercapita_bg80; assert_in_delta(0.0, (worksheet.costpercapita_bg80||0), 0.002); end
  def test_costpercapita_bi80; assert_in_delta(0.0, (worksheet.costpercapita_bi80||0), 0.002); end
  def test_costpercapita_bj80; assert_in_delta(0.0, (worksheet.costpercapita_bj80||0), 0.002); end
  def test_costpercapita_bk80; assert_in_delta(0.0, (worksheet.costpercapita_bk80||0), 0.002); end
  def test_costpercapita_bl80; assert_in_delta(0.0, (worksheet.costpercapita_bl80||0), 0.002); end
  def test_costpercapita_bm80; assert_in_delta(0.0, (worksheet.costpercapita_bm80||0), 0.002); end
  def test_costpercapita_bn80; assert_in_delta(0.0, (worksheet.costpercapita_bn80||0), 0.002); end
  def test_costpercapita_bo80; assert_in_delta(0.0, (worksheet.costpercapita_bo80||0), 0.002); end
  def test_costpercapita_bp80; assert_in_delta(0.0, (worksheet.costpercapita_bp80||0), 0.002); end
  def test_costpercapita_bq80; assert_in_delta(0.0, (worksheet.costpercapita_bq80||0), 0.002); end
  def test_costpercapita_bs80; assert_in_delta(0.0, (worksheet.costpercapita_bs80||0), 0.002); end
  def test_costpercapita_bt80; assert_in_delta(0.0, (worksheet.costpercapita_bt80||0), 0.002); end
  def test_costpercapita_bu80; assert_in_delta(0.0, (worksheet.costpercapita_bu80||0), 0.002); end
  def test_costpercapita_bv80; assert_in_delta(0.0, (worksheet.costpercapita_bv80||0), 0.002); end
  def test_costpercapita_bw80; assert_in_delta(0.0, (worksheet.costpercapita_bw80||0), 0.002); end
  def test_costpercapita_bx80; assert_in_delta(0.0, (worksheet.costpercapita_bx80||0), 0.002); end
  def test_costpercapita_by80; assert_in_delta(0.0, (worksheet.costpercapita_by80||0), 0.002); end
  def test_costpercapita_bz80; assert_in_delta(0.0, (worksheet.costpercapita_bz80||0), 0.002); end
  def test_costpercapita_ca80; assert_in_delta(0.0, (worksheet.costpercapita_ca80||0), 0.002); end
  def test_costpercapita_cc80; assert_in_delta(0.0, (worksheet.costpercapita_cc80||0), 0.002); end
  def test_costpercapita_cd80; assert_in_delta(0.0, (worksheet.costpercapita_cd80||0), 0.002); end
  def test_costpercapita_cf80; assert_in_delta(0.0, (worksheet.costpercapita_cf80||0), 0.002); end
  def test_costpercapita_cg80; assert_in_delta(0.0, (worksheet.costpercapita_cg80||0), 0.002); end
  def test_costpercapita_ch80; assert_in_delta(0.0, (worksheet.costpercapita_ch80||0), 0.002); end
  def test_costpercapita_ci80; assert_in_delta(0.0, (worksheet.costpercapita_ci80||0), 0.002); end
  def test_costpercapita_cj80; assert_in_delta(0.0, (worksheet.costpercapita_cj80||0), 0.002); end
  def test_costpercapita_ck80; assert_in_delta(0.0, (worksheet.costpercapita_ck80||0), 0.002); end
  def test_costpercapita_cl80; assert_in_delta(0.0, (worksheet.costpercapita_cl80||0), 0.002); end
  def test_costpercapita_cm80; assert_in_delta(0.0, (worksheet.costpercapita_cm80||0), 0.002); end
  def test_costpercapita_cn80; assert_in_delta(0.0, (worksheet.costpercapita_cn80||0), 0.002); end
  def test_costpercapita_cp80; assert_in_delta(0.0, (worksheet.costpercapita_cp80||0), 0.002); end
  def test_costpercapita_cq80; assert_in_delta(0.0, (worksheet.costpercapita_cq80||0), 0.002); end
  def test_costpercapita_cr80; assert_equal("err", worksheet.costpercapita_cr80); end
  def test_costpercapita_a81; assert_equal("Total", worksheet.costpercapita_a81); end
  def test_costpercapita_b81; assert_equal("Total", worksheet.costpercapita_b81); end
  def test_costpercapita_c81; assert_equal("Total", worksheet.costpercapita_c81); end
  def test_costpercapita_e81; assert_in_epsilon(4814.168098504833, worksheet.costpercapita_e81, 0.002); end
  def test_costpercapita_f81; assert_in_epsilon(5665.440161936964, worksheet.costpercapita_f81, 0.002); end
  def test_costpercapita_g81; assert_in_epsilon(7256.668185223399, worksheet.costpercapita_g81, 0.002); end
  def test_costpercapita_h81; assert_in_epsilon(8835.958619383448, worksheet.costpercapita_h81, 0.002); end
  def test_costpercapita_i81; assert_in_epsilon(10447.10726926458, worksheet.costpercapita_i81, 0.002); end
  def test_costpercapita_j81; assert_in_epsilon(12084.442962516852, worksheet.costpercapita_j81, 0.002); end
  def test_costpercapita_k81; assert_in_epsilon(13703.815024358844, worksheet.costpercapita_k81, 0.002); end
  def test_costpercapita_l81; assert_in_epsilon(15355.590011937224, worksheet.costpercapita_l81, 0.002); end
  def test_costpercapita_m81; assert_in_epsilon(17092.172720056755, worksheet.costpercapita_m81, 0.002); end
  def test_costpercapita_o81; assert_in_epsilon(4374.795581005306, worksheet.costpercapita_o81, 0.002); end
  def test_costpercapita_p81; assert_in_epsilon(5386.297468311301, worksheet.costpercapita_p81, 0.002); end
  def test_costpercapita_q81; assert_in_epsilon(6417.952713978905, worksheet.costpercapita_q81, 0.002); end
  def test_costpercapita_r81; assert_in_epsilon(7528.940786116863, worksheet.costpercapita_r81, 0.002); end
  def test_costpercapita_s81; assert_in_epsilon(8591.50837187882, worksheet.costpercapita_s81, 0.002); end
  def test_costpercapita_t81; assert_in_epsilon(9592.475074318592, worksheet.costpercapita_t81, 0.002); end
  def test_costpercapita_u81; assert_in_epsilon(10130.986147185626, worksheet.costpercapita_u81, 0.002); end
  def test_costpercapita_v81; assert_in_epsilon(10656.434669061888, worksheet.costpercapita_v81, 0.002); end
  def test_costpercapita_w81; assert_in_epsilon(11454.786256027222, worksheet.costpercapita_w81, 0.002); end
  def test_costpercapita_y81; assert_in_epsilon(151.4995283809722, worksheet.costpercapita_y81, 0.002); end
  def test_costpercapita_z81; assert_in_epsilon(-183.06575838779256, worksheet.costpercapita_z81, 0.002); end
  def test_costpercapita_aa81; assert_in_epsilon(-207.19537836851939, worksheet.costpercapita_aa81, 0.002); end
  def test_costpercapita_ab81; assert_in_epsilon(-175.11408789621802, worksheet.costpercapita_ab81, 0.002); end
  def test_costpercapita_ac81; assert_in_epsilon(-948.1751184040119, worksheet.costpercapita_ac81, 0.002); end
  def test_costpercapita_ad81; assert_in_epsilon(-1248.9033571441526, worksheet.costpercapita_ad81, 0.002); end
  def test_costpercapita_ae81; assert_in_epsilon(-1830.7779045169061, worksheet.costpercapita_ae81, 0.002); end
  def test_costpercapita_af81; assert_in_epsilon(-2143.894468219137, worksheet.costpercapita_af81, 0.002); end
  def test_costpercapita_ag81; assert_in_epsilon(-2715.504003821242, worksheet.costpercapita_ag81, 0.002); end
  def test_costpercapita_ai81; assert_in_epsilon(9340.46320789111, worksheet.costpercapita_ai81, 0.002); end
  def test_costpercapita_aj81; assert_in_epsilon(10868.671871860473, worksheet.costpercapita_aj81, 0.002); end
  def test_costpercapita_ak81; assert_in_epsilon(13467.425520833784, worksheet.costpercapita_ak81, 0.002); end
  def test_costpercapita_al81; assert_in_epsilon(16189.785317604094, worksheet.costpercapita_al81, 0.002); end
  def test_costpercapita_am81; assert_in_epsilon(18090.44052273939, worksheet.costpercapita_am81, 0.002); end
  def test_costpercapita_an81; assert_in_epsilon(20428.014679691296, worksheet.costpercapita_an81, 0.002); end
  def test_costpercapita_ao81; assert_in_epsilon(22004.02326702756, worksheet.costpercapita_ao81, 0.002); end
  def test_costpercapita_ap81; assert_in_epsilon(23868.130212779975, worksheet.costpercapita_ap81, 0.002); end
  def test_costpercapita_aq81; assert_in_epsilon(25831.454972262738, worksheet.costpercapita_aq81, 0.002); end
  def test_costpercapita_as81; assert_in_epsilon(17787.60106363227, worksheet.costpercapita_as81, 0.002); end
  def test_costpercapita_at81; assert_in_epsilon(349943.5897747545, worksheet.costpercapita_at81, 0.002); end
  def test_costpercapita_av81; assert_in_delta(0.0, (worksheet.costpercapita_av81||0), 0.002); end
  def test_costpercapita_aw81; assert_in_epsilon(5.0, worksheet.costpercapita_aw81, 0.002); end
  def test_costpercapita_ay81; assert_in_epsilon(10329.321046050303, worksheet.costpercapita_ay81, 0.002); end
  def test_costpercapita_az81; assert_in_epsilon(12211.406783549592, worksheet.costpercapita_az81, 0.002); end
  def test_costpercapita_ba81; assert_in_epsilon(15919.602657941708, worksheet.costpercapita_ba81, 0.002); end
  def test_costpercapita_bb81; assert_in_epsilon(19656.785939111684, worksheet.costpercapita_bb81, 0.002); end
  def test_costpercapita_bc81; assert_in_epsilon(23422.012089624965, worksheet.costpercapita_bc81, 0.002); end
  def test_costpercapita_bd81; assert_in_epsilon(27245.006214005687, worksheet.costpercapita_bd81, 0.002); end
  def test_costpercapita_be81; assert_in_epsilon(31061.965274969323, worksheet.costpercapita_be81, 0.002); end
  def test_costpercapita_bf81; assert_in_epsilon(35103.88573925721, worksheet.costpercapita_bf81, 0.002); end
  def test_costpercapita_bg81; assert_in_epsilon(39360.73643305992, worksheet.costpercapita_bg81, 0.002); end
  def test_costpercapita_bi81; assert_in_delta(0.0, (worksheet.costpercapita_bi81||0), 0.002); end
  def test_costpercapita_bj81; assert_in_delta(0.0, (worksheet.costpercapita_bj81||0), 0.002); end
  def test_costpercapita_bk81; assert_in_delta(0.0, (worksheet.costpercapita_bk81||0), 0.002); end
  def test_costpercapita_bl81; assert_in_delta(0.0, (worksheet.costpercapita_bl81||0), 0.002); end
  def test_costpercapita_bm81; assert_in_delta(0.0, (worksheet.costpercapita_bm81||0), 0.002); end
  def test_costpercapita_bn81; assert_in_delta(0.0, (worksheet.costpercapita_bn81||0), 0.002); end
  def test_costpercapita_bo81; assert_in_delta(0.0, (worksheet.costpercapita_bo81||0), 0.002); end
  def test_costpercapita_bp81; assert_in_delta(0.0, (worksheet.costpercapita_bp81||0), 0.002); end
  def test_costpercapita_bq81; assert_in_delta(0.0, (worksheet.costpercapita_bq81||0), 0.002); end
  def test_costpercapita_bs81; assert_in_epsilon(16370.129214578696, worksheet.costpercapita_bs81, 0.002); end
  def test_costpercapita_bt81; assert_in_epsilon(19401.395414584786, worksheet.costpercapita_bt81, 0.002); end
  def test_costpercapita_bu81; assert_in_epsilon(23405.93487048195, worksheet.costpercapita_bu81, 0.002); end
  def test_costpercapita_bv81; assert_in_epsilon(28376.795307655924, worksheet.costpercapita_bv81, 0.002); end
  def test_costpercapita_bw81; assert_in_epsilon(33372.93744757436, worksheet.costpercapita_bw81, 0.002); end
  def test_costpercapita_bx81; assert_in_epsilon(38376.196059128306, worksheet.costpercapita_bx81, 0.002); end
  def test_costpercapita_by81; assert_in_epsilon(42882.71256141683, worksheet.costpercapita_by81, 0.002); end
  def test_costpercapita_bz81; assert_in_epsilon(47846.7905054472, worksheet.costpercapita_bz81, 0.002); end
  def test_costpercapita_ca81; assert_in_epsilon(53190.08523286634, worksheet.costpercapita_ca81, 0.002); end
  def test_costpercapita_cc81; assert_in_epsilon(33691.44184597049, worksheet.costpercapita_cc81, 0.002); end
  def test_costpercapita_cd81; assert_in_epsilon(651174.6198731103, worksheet.costpercapita_cd81, 0.002); end
  def test_costpercapita_cf81; assert_in_epsilon(5515.152947545473, worksheet.costpercapita_cf81, 0.002); end
  def test_costpercapita_cg81; assert_in_epsilon(6545.966621612629, worksheet.costpercapita_cg81, 0.002); end
  def test_costpercapita_ch81; assert_in_epsilon(8662.934472718309, worksheet.costpercapita_ch81, 0.002); end
  def test_costpercapita_ci81; assert_in_epsilon(10820.827319728236, worksheet.costpercapita_ci81, 0.002); end
  def test_costpercapita_cj81; assert_in_epsilon(12974.904820360385, worksheet.costpercapita_cj81, 0.002); end
  def test_costpercapita_ck81; assert_in_epsilon(15160.563251488835, worksheet.costpercapita_ck81, 0.002); end
  def test_costpercapita_cl81; assert_in_epsilon(17358.150250610477, worksheet.costpercapita_cl81, 0.002); end
  def test_costpercapita_cm81; assert_in_epsilon(19748.295727319994, worksheet.costpercapita_cm81, 0.002); end
  def test_costpercapita_cn81; assert_in_epsilon(22268.563713003176, worksheet.costpercapita_cn81, 0.002); end
  def test_costpercapita_cp81; assert_in_epsilon(13228.373236043059, worksheet.costpercapita_cp81, 0.002); end
  def test_costpercapita_cq81; assert_in_epsilon(251538.36064420294, worksheet.costpercapita_cq81, 0.002); end
  def test_costpercapita_cr81; assert_equal("err", worksheet.costpercapita_cr81); end
  def test_costpercapita_cf83; assert_equal("ok", worksheet.costpercapita_cf83); end
  def test_costpercapita_cg83; assert_equal("ok", worksheet.costpercapita_cg83); end
  def test_costpercapita_ch83; assert_equal("ok", worksheet.costpercapita_ch83); end
  def test_costpercapita_ci83; assert_equal("ok", worksheet.costpercapita_ci83); end
  def test_costpercapita_cj83; assert_equal("ok", worksheet.costpercapita_cj83); end
  def test_costpercapita_ck83; assert_equal("ok", worksheet.costpercapita_ck83); end
  def test_costpercapita_cl83; assert_equal("ok", worksheet.costpercapita_cl83); end
  def test_costpercapita_cm83; assert_equal("ok", worksheet.costpercapita_cm83); end
  def test_costpercapita_cn83; assert_equal("ok", worksheet.costpercapita_cn83); end
  def test_costpercapita_cp83; assert_equal("ok", worksheet.costpercapita_cp83); end
  def test_costpercapita_cq83; assert_equal("ok", worksheet.costpercapita_cq83); end
  def test_costpercapita_b84; assert_equal("ZAR/Capita/yr", worksheet.costpercapita_b84); end
  def test_costpercapita_e84; assert_equal("C1.High", worksheet.costpercapita_e84); end
  def test_costpercapita_f84; assert_equal("High estimate of capital costs", worksheet.costpercapita_f84); end
  def test_costpercapita_o84; assert_equal("C2.High", worksheet.costpercapita_o84); end
  def test_costpercapita_p84; assert_equal("High estimate of operating costs", worksheet.costpercapita_p84); end
  def test_costpercapita_y84; assert_equal("C3.High", worksheet.costpercapita_y84); end
  def test_costpercapita_z84; assert_equal("High estimate of fuel costs", worksheet.costpercapita_z84); end
  def test_costpercapita_ai84; assert_equal("High estimate of total cost", worksheet.costpercapita_ai84); end
  def test_costpercapita_as84; assert_equal("Cashflow capital basis", worksheet.costpercapita_as84); end
  def test_costpercapita_av84; assert_equal("Loan", worksheet.costpercapita_av84); end
  def test_costpercapita_ay84; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay84); end
  def test_costpercapita_bi84; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi84); end
  def test_costpercapita_br84; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br84); end
  def test_costpercapita_cc84; assert_equal("Amortised Capital", worksheet.costpercapita_cc84); end
  def test_costpercapita_cf84; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf84); end
  def test_costpercapita_cp84; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp84); end
  def test_costpercapita_a85; assert_equal("Code", worksheet.costpercapita_a85); end
  def test_costpercapita_b85; assert_equal("Description", worksheet.costpercapita_b85); end
  def test_costpercapita_c85; assert_equal("Category", worksheet.costpercapita_c85); end
  def test_costpercapita_e85; assert_equal("2010", worksheet.costpercapita_e85); end
  def test_costpercapita_f85; assert_equal("2015", worksheet.costpercapita_f85); end
  def test_costpercapita_g85; assert_equal("2020", worksheet.costpercapita_g85); end
  def test_costpercapita_h85; assert_equal("2025", worksheet.costpercapita_h85); end
  def test_costpercapita_i85; assert_equal("2030", worksheet.costpercapita_i85); end
  def test_costpercapita_j85; assert_equal("2035", worksheet.costpercapita_j85); end
  def test_costpercapita_k85; assert_equal("2040", worksheet.costpercapita_k85); end
  def test_costpercapita_l85; assert_equal("2045", worksheet.costpercapita_l85); end
  def test_costpercapita_m85; assert_equal("2050", worksheet.costpercapita_m85); end
  def test_costpercapita_o85; assert_equal("2010", worksheet.costpercapita_o85); end
  def test_costpercapita_p85; assert_equal("2015", worksheet.costpercapita_p85); end
  def test_costpercapita_q85; assert_equal("2020", worksheet.costpercapita_q85); end
  def test_costpercapita_r85; assert_equal("2025", worksheet.costpercapita_r85); end
  def test_costpercapita_s85; assert_equal("2030", worksheet.costpercapita_s85); end
  def test_costpercapita_t85; assert_equal("2035", worksheet.costpercapita_t85); end
  def test_costpercapita_u85; assert_equal("2040", worksheet.costpercapita_u85); end
  def test_costpercapita_v85; assert_equal("2045", worksheet.costpercapita_v85); end
  def test_costpercapita_w85; assert_equal("2050", worksheet.costpercapita_w85); end
  def test_costpercapita_y85; assert_equal("2010", worksheet.costpercapita_y85); end
  def test_costpercapita_z85; assert_equal("2015", worksheet.costpercapita_z85); end
  def test_costpercapita_aa85; assert_equal("2020", worksheet.costpercapita_aa85); end
  def test_costpercapita_ab85; assert_equal("2025", worksheet.costpercapita_ab85); end
  def test_costpercapita_ac85; assert_equal("2030", worksheet.costpercapita_ac85); end
  def test_costpercapita_ad85; assert_equal("2035", worksheet.costpercapita_ad85); end
  def test_costpercapita_ae85; assert_equal("2040", worksheet.costpercapita_ae85); end
  def test_costpercapita_af85; assert_equal("2045", worksheet.costpercapita_af85); end
  def test_costpercapita_ag85; assert_equal("2050", worksheet.costpercapita_ag85); end
  def test_costpercapita_ai85; assert_equal("2010", worksheet.costpercapita_ai85); end
  def test_costpercapita_aj85; assert_equal("2015", worksheet.costpercapita_aj85); end
  def test_costpercapita_ak85; assert_equal("2020", worksheet.costpercapita_ak85); end
  def test_costpercapita_al85; assert_equal("2025", worksheet.costpercapita_al85); end
  def test_costpercapita_am85; assert_equal("2030", worksheet.costpercapita_am85); end
  def test_costpercapita_an85; assert_equal("2035", worksheet.costpercapita_an85); end
  def test_costpercapita_ao85; assert_equal("2040", worksheet.costpercapita_ao85); end
  def test_costpercapita_ap85; assert_equal("2045", worksheet.costpercapita_ap85); end
  def test_costpercapita_aq85; assert_equal("2050", worksheet.costpercapita_aq85); end
  def test_costpercapita_as85; assert_equal("Mean", worksheet.costpercapita_as85); end
  def test_costpercapita_at85; assert_equal("NPV", worksheet.costpercapita_at85); end
  def test_costpercapita_av85; assert_equal("Rate", worksheet.costpercapita_av85); end
  def test_costpercapita_aw85; assert_equal("Years", worksheet.costpercapita_aw85); end
  def test_costpercapita_ay85; assert_in_epsilon(2010.0, worksheet.costpercapita_ay85, 0.002); end
  def test_costpercapita_az85; assert_in_epsilon(2015.0, worksheet.costpercapita_az85, 0.002); end
  def test_costpercapita_ba85; assert_in_epsilon(2020.0, worksheet.costpercapita_ba85, 0.002); end
  def test_costpercapita_bb85; assert_in_epsilon(2025.0, worksheet.costpercapita_bb85, 0.002); end
  def test_costpercapita_bc85; assert_in_epsilon(2030.0, worksheet.costpercapita_bc85, 0.002); end
  def test_costpercapita_bd85; assert_in_epsilon(2035.0, worksheet.costpercapita_bd85, 0.002); end
  def test_costpercapita_be85; assert_in_epsilon(2040.0, worksheet.costpercapita_be85, 0.002); end
  def test_costpercapita_bf85; assert_in_epsilon(2045.0, worksheet.costpercapita_bf85, 0.002); end
  def test_costpercapita_bg85; assert_in_epsilon(2050.0, worksheet.costpercapita_bg85, 0.002); end
  def test_costpercapita_bi85; assert_in_epsilon(2010.0, worksheet.costpercapita_bi85, 0.002); end
  def test_costpercapita_bj85; assert_in_epsilon(2015.0, worksheet.costpercapita_bj85, 0.002); end
  def test_costpercapita_bk85; assert_in_epsilon(2020.0, worksheet.costpercapita_bk85, 0.002); end
  def test_costpercapita_bl85; assert_in_epsilon(2025.0, worksheet.costpercapita_bl85, 0.002); end
  def test_costpercapita_bm85; assert_in_epsilon(2030.0, worksheet.costpercapita_bm85, 0.002); end
  def test_costpercapita_bn85; assert_in_epsilon(2035.0, worksheet.costpercapita_bn85, 0.002); end
  def test_costpercapita_bo85; assert_in_epsilon(2040.0, worksheet.costpercapita_bo85, 0.002); end
  def test_costpercapita_bp85; assert_in_epsilon(2045.0, worksheet.costpercapita_bp85, 0.002); end
  def test_costpercapita_bq85; assert_in_epsilon(2050.0, worksheet.costpercapita_bq85, 0.002); end
  def test_costpercapita_bs85; assert_equal("2010", worksheet.costpercapita_bs85); end
  def test_costpercapita_bt85; assert_equal("2015", worksheet.costpercapita_bt85); end
  def test_costpercapita_bu85; assert_equal("2020", worksheet.costpercapita_bu85); end
  def test_costpercapita_bv85; assert_equal("2025", worksheet.costpercapita_bv85); end
  def test_costpercapita_bw85; assert_equal("2030", worksheet.costpercapita_bw85); end
  def test_costpercapita_bx85; assert_equal("2035", worksheet.costpercapita_bx85); end
  def test_costpercapita_by85; assert_equal("2040", worksheet.costpercapita_by85); end
  def test_costpercapita_bz85; assert_equal("2045", worksheet.costpercapita_bz85); end
  def test_costpercapita_ca85; assert_equal("2050", worksheet.costpercapita_ca85); end
  def test_costpercapita_cc85; assert_equal("Mean", worksheet.costpercapita_cc85); end
  def test_costpercapita_cd85; assert_equal("NPV", worksheet.costpercapita_cd85); end
  def test_costpercapita_cf85; assert_equal("2010", worksheet.costpercapita_cf85); end
  def test_costpercapita_cg85; assert_equal("2015", worksheet.costpercapita_cg85); end
  def test_costpercapita_ch85; assert_equal("2020", worksheet.costpercapita_ch85); end
  def test_costpercapita_ci85; assert_equal("2025", worksheet.costpercapita_ci85); end
  def test_costpercapita_cj85; assert_equal("2030", worksheet.costpercapita_cj85); end
  def test_costpercapita_ck85; assert_equal("2035", worksheet.costpercapita_ck85); end
  def test_costpercapita_cl85; assert_equal("2040", worksheet.costpercapita_cl85); end
  def test_costpercapita_cm85; assert_equal("2045", worksheet.costpercapita_cm85); end
  def test_costpercapita_cn85; assert_equal("2050", worksheet.costpercapita_cn85); end
  def test_costpercapita_cp85; assert_equal("Mean", worksheet.costpercapita_cp85); end
  def test_costpercapita_cq85; assert_equal("NPV", worksheet.costpercapita_cq85); end
  def test_costpercapita_a86; assert_equal("Therm.a", worksheet.costpercapita_a86); end
  def test_costpercapita_b86; assert_equal("Biomass/coal power stations", worksheet.costpercapita_b86); end
  def test_costpercapita_c86; assert_equal("Electricity", worksheet.costpercapita_c86); end
  def test_costpercapita_e86; assert_in_delta(0.0, (worksheet.costpercapita_e86||0), 0.002); end
  def test_costpercapita_f86; assert_in_delta(0.0, (worksheet.costpercapita_f86||0), 0.002); end
  def test_costpercapita_g86; assert_in_delta(0.0, (worksheet.costpercapita_g86||0), 0.002); end
  def test_costpercapita_h86; assert_in_delta(0.0, (worksheet.costpercapita_h86||0), 0.002); end
  def test_costpercapita_i86; assert_in_delta(0.0, (worksheet.costpercapita_i86||0), 0.002); end
  def test_costpercapita_j86; assert_in_delta(0.0, (worksheet.costpercapita_j86||0), 0.002); end
  def test_costpercapita_k86; assert_in_delta(0.0, (worksheet.costpercapita_k86||0), 0.002); end
  def test_costpercapita_l86; assert_in_delta(0.0, (worksheet.costpercapita_l86||0), 0.002); end
  def test_costpercapita_m86; assert_in_delta(0.0, (worksheet.costpercapita_m86||0), 0.002); end
  def test_costpercapita_o86; assert_in_delta(0.0, (worksheet.costpercapita_o86||0), 0.002); end
  def test_costpercapita_p86; assert_in_delta(0.0, (worksheet.costpercapita_p86||0), 0.002); end
  def test_costpercapita_q86; assert_in_delta(0.0, (worksheet.costpercapita_q86||0), 0.002); end
  def test_costpercapita_r86; assert_in_delta(0.0, (worksheet.costpercapita_r86||0), 0.002); end
  def test_costpercapita_s86; assert_in_delta(0.0, (worksheet.costpercapita_s86||0), 0.002); end
  def test_costpercapita_t86; assert_in_delta(0.0, (worksheet.costpercapita_t86||0), 0.002); end
  def test_costpercapita_u86; assert_in_delta(0.0, (worksheet.costpercapita_u86||0), 0.002); end
  def test_costpercapita_v86; assert_in_delta(0.0, (worksheet.costpercapita_v86||0), 0.002); end
  def test_costpercapita_w86; assert_in_delta(0.0, (worksheet.costpercapita_w86||0), 0.002); end
  def test_costpercapita_y86; assert_in_delta(0.0, (worksheet.costpercapita_y86||0), 0.002); end
  def test_costpercapita_z86; assert_in_delta(0.0, (worksheet.costpercapita_z86||0), 0.002); end
  def test_costpercapita_aa86; assert_in_delta(0.0, (worksheet.costpercapita_aa86||0), 0.002); end
  def test_costpercapita_ab86; assert_in_delta(0.0, (worksheet.costpercapita_ab86||0), 0.002); end
  def test_costpercapita_ac86; assert_in_delta(0.0, (worksheet.costpercapita_ac86||0), 0.002); end
  def test_costpercapita_ad86; assert_in_delta(0.0, (worksheet.costpercapita_ad86||0), 0.002); end
  def test_costpercapita_ae86; assert_in_delta(0.0, (worksheet.costpercapita_ae86||0), 0.002); end
  def test_costpercapita_af86; assert_in_delta(0.0, (worksheet.costpercapita_af86||0), 0.002); end
  def test_costpercapita_ag86; assert_in_delta(0.0, (worksheet.costpercapita_ag86||0), 0.002); end
  def test_costpercapita_ai86; assert_in_delta(0.0, (worksheet.costpercapita_ai86||0), 0.002); end
  def test_costpercapita_aj86; assert_in_delta(0.0, (worksheet.costpercapita_aj86||0), 0.002); end
  def test_costpercapita_ak86; assert_in_delta(0.0, (worksheet.costpercapita_ak86||0), 0.002); end
  def test_costpercapita_al86; assert_in_delta(0.0, (worksheet.costpercapita_al86||0), 0.002); end
  def test_costpercapita_am86; assert_in_delta(0.0, (worksheet.costpercapita_am86||0), 0.002); end
  def test_costpercapita_an86; assert_in_delta(0.0, (worksheet.costpercapita_an86||0), 0.002); end
  def test_costpercapita_ao86; assert_in_delta(0.0, (worksheet.costpercapita_ao86||0), 0.002); end
  def test_costpercapita_ap86; assert_in_delta(0.0, (worksheet.costpercapita_ap86||0), 0.002); end
  def test_costpercapita_aq86; assert_in_delta(0.0, (worksheet.costpercapita_aq86||0), 0.002); end
  def test_costpercapita_as86; assert_in_delta(0.0, (worksheet.costpercapita_as86||0), 0.002); end
  def test_costpercapita_at86; assert_in_delta(0.0, (worksheet.costpercapita_at86||0), 0.002); end
  def test_costpercapita_av86; assert_in_delta(0.0, (worksheet.costpercapita_av86||0), 0.002); end
  def test_costpercapita_aw86; assert_in_epsilon(5.0, worksheet.costpercapita_aw86, 0.002); end
  def test_costpercapita_ay86; assert_in_delta(0.0, (worksheet.costpercapita_ay86||0), 0.002); end
  def test_costpercapita_az86; assert_in_delta(0.0, (worksheet.costpercapita_az86||0), 0.002); end
  def test_costpercapita_ba86; assert_in_delta(0.0, (worksheet.costpercapita_ba86||0), 0.002); end
  def test_costpercapita_bb86; assert_in_delta(0.0, (worksheet.costpercapita_bb86||0), 0.002); end
  def test_costpercapita_bc86; assert_in_delta(0.0, (worksheet.costpercapita_bc86||0), 0.002); end
  def test_costpercapita_bd86; assert_in_delta(0.0, (worksheet.costpercapita_bd86||0), 0.002); end
  def test_costpercapita_be86; assert_in_delta(0.0, (worksheet.costpercapita_be86||0), 0.002); end
  def test_costpercapita_bf86; assert_in_delta(0.0, (worksheet.costpercapita_bf86||0), 0.002); end
  def test_costpercapita_bg86; assert_in_delta(0.0, (worksheet.costpercapita_bg86||0), 0.002); end
  def test_costpercapita_bi86; assert_in_delta(0.0, (worksheet.costpercapita_bi86||0), 0.002); end
  def test_costpercapita_bj86; assert_in_delta(0.0, (worksheet.costpercapita_bj86||0), 0.002); end
  def test_costpercapita_bk86; assert_in_delta(0.0, (worksheet.costpercapita_bk86||0), 0.002); end
  def test_costpercapita_bl86; assert_in_delta(0.0, (worksheet.costpercapita_bl86||0), 0.002); end
  def test_costpercapita_bm86; assert_in_delta(0.0, (worksheet.costpercapita_bm86||0), 0.002); end
  def test_costpercapita_bn86; assert_in_delta(0.0, (worksheet.costpercapita_bn86||0), 0.002); end
  def test_costpercapita_bo86; assert_in_delta(0.0, (worksheet.costpercapita_bo86||0), 0.002); end
  def test_costpercapita_bp86; assert_in_delta(0.0, (worksheet.costpercapita_bp86||0), 0.002); end
  def test_costpercapita_bq86; assert_in_delta(0.0, (worksheet.costpercapita_bq86||0), 0.002); end
  def test_costpercapita_bs86; assert_in_delta(0.0, (worksheet.costpercapita_bs86||0), 0.002); end
  def test_costpercapita_bt86; assert_in_delta(0.0, (worksheet.costpercapita_bt86||0), 0.002); end
  def test_costpercapita_bu86; assert_in_delta(0.0, (worksheet.costpercapita_bu86||0), 0.002); end
  def test_costpercapita_bv86; assert_in_delta(0.0, (worksheet.costpercapita_bv86||0), 0.002); end
  def test_costpercapita_bw86; assert_in_delta(0.0, (worksheet.costpercapita_bw86||0), 0.002); end
  def test_costpercapita_bx86; assert_in_delta(0.0, (worksheet.costpercapita_bx86||0), 0.002); end
  def test_costpercapita_by86; assert_in_delta(0.0, (worksheet.costpercapita_by86||0), 0.002); end
  def test_costpercapita_bz86; assert_in_delta(0.0, (worksheet.costpercapita_bz86||0), 0.002); end
  def test_costpercapita_ca86; assert_in_delta(0.0, (worksheet.costpercapita_ca86||0), 0.002); end
  def test_costpercapita_cc86; assert_in_delta(0.0, (worksheet.costpercapita_cc86||0), 0.002); end
  def test_costpercapita_cd86; assert_in_delta(0.0, (worksheet.costpercapita_cd86||0), 0.002); end
  def test_costpercapita_cf86; assert_in_delta(0.0, (worksheet.costpercapita_cf86||0), 0.002); end
  def test_costpercapita_cg86; assert_in_delta(0.0, (worksheet.costpercapita_cg86||0), 0.002); end
  def test_costpercapita_ch86; assert_in_delta(0.0, (worksheet.costpercapita_ch86||0), 0.002); end
  def test_costpercapita_ci86; assert_in_delta(0.0, (worksheet.costpercapita_ci86||0), 0.002); end
  def test_costpercapita_cj86; assert_in_delta(0.0, (worksheet.costpercapita_cj86||0), 0.002); end
  def test_costpercapita_ck86; assert_in_delta(0.0, (worksheet.costpercapita_ck86||0), 0.002); end
  def test_costpercapita_cl86; assert_in_delta(0.0, (worksheet.costpercapita_cl86||0), 0.002); end
  def test_costpercapita_cm86; assert_in_delta(0.0, (worksheet.costpercapita_cm86||0), 0.002); end
  def test_costpercapita_cn86; assert_in_delta(0.0, (worksheet.costpercapita_cn86||0), 0.002); end
  def test_costpercapita_cp86; assert_in_delta(0.0, (worksheet.costpercapita_cp86||0), 0.002); end
  def test_costpercapita_cq86; assert_in_delta(0.0, (worksheet.costpercapita_cq86||0), 0.002); end
  def test_costpercapita_cr86; assert_equal("ok", worksheet.costpercapita_cr86); end
  def test_costpercapita_a87; assert_equal("Therm.b.CCGT", worksheet.costpercapita_a87); end
  def test_costpercapita_b87; assert_equal("CCGT", worksheet.costpercapita_b87); end
  def test_costpercapita_c87; assert_equal("Electricity", worksheet.costpercapita_c87); end
  def test_costpercapita_e87; assert_in_delta(0.0, (worksheet.costpercapita_e87||0), 0.002); end
  def test_costpercapita_f87; assert_in_delta(0.0, (worksheet.costpercapita_f87||0), 0.002); end
  def test_costpercapita_g87; assert_in_delta(0.0, (worksheet.costpercapita_g87||0), 0.002); end
  def test_costpercapita_h87; assert_in_delta(0.0, (worksheet.costpercapita_h87||0), 0.002); end
  def test_costpercapita_i87; assert_in_delta(0.0, (worksheet.costpercapita_i87||0), 0.002); end
  def test_costpercapita_j87; assert_in_delta(0.0, (worksheet.costpercapita_j87||0), 0.002); end
  def test_costpercapita_k87; assert_in_delta(0.0, (worksheet.costpercapita_k87||0), 0.002); end
  def test_costpercapita_l87; assert_in_delta(0.0, (worksheet.costpercapita_l87||0), 0.002); end
  def test_costpercapita_m87; assert_in_delta(0.0, (worksheet.costpercapita_m87||0), 0.002); end
  def test_costpercapita_o87; assert_in_delta(0.0, (worksheet.costpercapita_o87||0), 0.002); end
  def test_costpercapita_p87; assert_in_delta(0.0, (worksheet.costpercapita_p87||0), 0.002); end
  def test_costpercapita_q87; assert_in_delta(0.0, (worksheet.costpercapita_q87||0), 0.002); end
  def test_costpercapita_r87; assert_in_delta(0.0, (worksheet.costpercapita_r87||0), 0.002); end
  def test_costpercapita_s87; assert_in_delta(0.0, (worksheet.costpercapita_s87||0), 0.002); end
  def test_costpercapita_t87; assert_in_delta(0.0, (worksheet.costpercapita_t87||0), 0.002); end
  def test_costpercapita_u87; assert_in_delta(0.0, (worksheet.costpercapita_u87||0), 0.002); end
  def test_costpercapita_v87; assert_in_delta(0.0, (worksheet.costpercapita_v87||0), 0.002); end
  def test_costpercapita_w87; assert_in_delta(0.0, (worksheet.costpercapita_w87||0), 0.002); end
  def test_costpercapita_y87; assert_in_delta(0.0, (worksheet.costpercapita_y87||0), 0.002); end
  def test_costpercapita_z87; assert_in_delta(0.0, (worksheet.costpercapita_z87||0), 0.002); end
  def test_costpercapita_aa87; assert_in_delta(0.0, (worksheet.costpercapita_aa87||0), 0.002); end
  def test_costpercapita_ab87; assert_in_delta(0.0, (worksheet.costpercapita_ab87||0), 0.002); end
  def test_costpercapita_ac87; assert_in_delta(0.0, (worksheet.costpercapita_ac87||0), 0.002); end
  def test_costpercapita_ad87; assert_in_delta(0.0, (worksheet.costpercapita_ad87||0), 0.002); end
  def test_costpercapita_ae87; assert_in_delta(0.0, (worksheet.costpercapita_ae87||0), 0.002); end
  def test_costpercapita_af87; assert_in_delta(0.0, (worksheet.costpercapita_af87||0), 0.002); end
  def test_costpercapita_ag87; assert_in_delta(0.0, (worksheet.costpercapita_ag87||0), 0.002); end
  def test_costpercapita_ai87; assert_in_delta(0.0, (worksheet.costpercapita_ai87||0), 0.002); end
  def test_costpercapita_aj87; assert_in_delta(0.0, (worksheet.costpercapita_aj87||0), 0.002); end
  def test_costpercapita_ak87; assert_in_delta(0.0, (worksheet.costpercapita_ak87||0), 0.002); end
  def test_costpercapita_al87; assert_in_delta(0.0, (worksheet.costpercapita_al87||0), 0.002); end
  def test_costpercapita_am87; assert_in_delta(0.0, (worksheet.costpercapita_am87||0), 0.002); end
  def test_costpercapita_an87; assert_in_delta(0.0, (worksheet.costpercapita_an87||0), 0.002); end
  def test_costpercapita_ao87; assert_in_delta(0.0, (worksheet.costpercapita_ao87||0), 0.002); end
  def test_costpercapita_ap87; assert_in_delta(0.0, (worksheet.costpercapita_ap87||0), 0.002); end
  def test_costpercapita_aq87; assert_in_delta(0.0, (worksheet.costpercapita_aq87||0), 0.002); end
  def test_costpercapita_as87; assert_in_delta(0.0, (worksheet.costpercapita_as87||0), 0.002); end
  def test_costpercapita_at87; assert_in_delta(0.0, (worksheet.costpercapita_at87||0), 0.002); end
  def test_costpercapita_av87; assert_in_delta(0.0, (worksheet.costpercapita_av87||0), 0.002); end
  def test_costpercapita_aw87; assert_in_epsilon(5.0, worksheet.costpercapita_aw87, 0.002); end
  def test_costpercapita_ay87; assert_in_delta(0.0, (worksheet.costpercapita_ay87||0), 0.002); end
  def test_costpercapita_az87; assert_in_delta(0.0, (worksheet.costpercapita_az87||0), 0.002); end
  def test_costpercapita_ba87; assert_in_delta(0.0, (worksheet.costpercapita_ba87||0), 0.002); end
  def test_costpercapita_bb87; assert_in_delta(0.0, (worksheet.costpercapita_bb87||0), 0.002); end
  def test_costpercapita_bc87; assert_in_delta(0.0, (worksheet.costpercapita_bc87||0), 0.002); end
  def test_costpercapita_bd87; assert_in_delta(0.0, (worksheet.costpercapita_bd87||0), 0.002); end
  def test_costpercapita_be87; assert_in_delta(0.0, (worksheet.costpercapita_be87||0), 0.002); end
  def test_costpercapita_bf87; assert_in_delta(0.0, (worksheet.costpercapita_bf87||0), 0.002); end
  def test_costpercapita_bg87; assert_in_delta(0.0, (worksheet.costpercapita_bg87||0), 0.002); end
  def test_costpercapita_bi87; assert_in_delta(0.0, (worksheet.costpercapita_bi87||0), 0.002); end
  def test_costpercapita_bj87; assert_in_delta(0.0, (worksheet.costpercapita_bj87||0), 0.002); end
  def test_costpercapita_bk87; assert_in_delta(0.0, (worksheet.costpercapita_bk87||0), 0.002); end
  def test_costpercapita_bl87; assert_in_delta(0.0, (worksheet.costpercapita_bl87||0), 0.002); end
  def test_costpercapita_bm87; assert_in_delta(0.0, (worksheet.costpercapita_bm87||0), 0.002); end
  def test_costpercapita_bn87; assert_in_delta(0.0, (worksheet.costpercapita_bn87||0), 0.002); end
  def test_costpercapita_bo87; assert_in_delta(0.0, (worksheet.costpercapita_bo87||0), 0.002); end
  def test_costpercapita_bp87; assert_in_delta(0.0, (worksheet.costpercapita_bp87||0), 0.002); end
  def test_costpercapita_bq87; assert_in_delta(0.0, (worksheet.costpercapita_bq87||0), 0.002); end
  def test_costpercapita_bs87; assert_in_delta(0.0, (worksheet.costpercapita_bs87||0), 0.002); end
  def test_costpercapita_bt87; assert_in_delta(0.0, (worksheet.costpercapita_bt87||0), 0.002); end
  def test_costpercapita_bu87; assert_in_delta(0.0, (worksheet.costpercapita_bu87||0), 0.002); end
  def test_costpercapita_bv87; assert_in_delta(0.0, (worksheet.costpercapita_bv87||0), 0.002); end
  def test_costpercapita_bw87; assert_in_delta(0.0, (worksheet.costpercapita_bw87||0), 0.002); end
  def test_costpercapita_bx87; assert_in_delta(0.0, (worksheet.costpercapita_bx87||0), 0.002); end
  def test_costpercapita_by87; assert_in_delta(0.0, (worksheet.costpercapita_by87||0), 0.002); end
  def test_costpercapita_bz87; assert_in_delta(0.0, (worksheet.costpercapita_bz87||0), 0.002); end
  def test_costpercapita_ca87; assert_in_delta(0.0, (worksheet.costpercapita_ca87||0), 0.002); end
  def test_costpercapita_cc87; assert_in_delta(0.0, (worksheet.costpercapita_cc87||0), 0.002); end
  def test_costpercapita_cd87; assert_in_delta(0.0, (worksheet.costpercapita_cd87||0), 0.002); end
  def test_costpercapita_cf87; assert_in_delta(0.0, (worksheet.costpercapita_cf87||0), 0.002); end
  def test_costpercapita_cg87; assert_in_delta(0.0, (worksheet.costpercapita_cg87||0), 0.002); end
  def test_costpercapita_ch87; assert_in_delta(0.0, (worksheet.costpercapita_ch87||0), 0.002); end
  def test_costpercapita_ci87; assert_in_delta(0.0, (worksheet.costpercapita_ci87||0), 0.002); end
  def test_costpercapita_cj87; assert_in_delta(0.0, (worksheet.costpercapita_cj87||0), 0.002); end
  def test_costpercapita_ck87; assert_in_delta(0.0, (worksheet.costpercapita_ck87||0), 0.002); end
  def test_costpercapita_cl87; assert_in_delta(0.0, (worksheet.costpercapita_cl87||0), 0.002); end
  def test_costpercapita_cm87; assert_in_delta(0.0, (worksheet.costpercapita_cm87||0), 0.002); end
  def test_costpercapita_cn87; assert_in_delta(0.0, (worksheet.costpercapita_cn87||0), 0.002); end
  def test_costpercapita_cp87; assert_in_delta(0.0, (worksheet.costpercapita_cp87||0), 0.002); end
  def test_costpercapita_cq87; assert_in_delta(0.0, (worksheet.costpercapita_cq87||0), 0.002); end
  def test_costpercapita_cr87; assert_equal("ok", worksheet.costpercapita_cr87); end
  def test_costpercapita_a88; assert_equal("Therm.b.OCGT", worksheet.costpercapita_a88); end
  def test_costpercapita_b88; assert_equal("OCGT", worksheet.costpercapita_b88); end
  def test_costpercapita_c88; assert_equal("Electricity", worksheet.costpercapita_c88); end
  def test_costpercapita_e88; assert_in_delta(0.0, (worksheet.costpercapita_e88||0), 0.002); end
  def test_costpercapita_f88; assert_in_delta(0.0, (worksheet.costpercapita_f88||0), 0.002); end
  def test_costpercapita_g88; assert_in_delta(0.0, (worksheet.costpercapita_g88||0), 0.002); end
  def test_costpercapita_h88; assert_in_delta(0.0, (worksheet.costpercapita_h88||0), 0.002); end
  def test_costpercapita_i88; assert_in_delta(0.0, (worksheet.costpercapita_i88||0), 0.002); end
  def test_costpercapita_j88; assert_in_delta(0.0, (worksheet.costpercapita_j88||0), 0.002); end
  def test_costpercapita_k88; assert_in_delta(0.0, (worksheet.costpercapita_k88||0), 0.002); end
  def test_costpercapita_l88; assert_in_delta(0.0, (worksheet.costpercapita_l88||0), 0.002); end
  def test_costpercapita_m88; assert_in_delta(0.0, (worksheet.costpercapita_m88||0), 0.002); end
  def test_costpercapita_o88; assert_in_delta(0.0, (worksheet.costpercapita_o88||0), 0.002); end
  def test_costpercapita_p88; assert_in_delta(0.0, (worksheet.costpercapita_p88||0), 0.002); end
  def test_costpercapita_q88; assert_in_delta(0.0, (worksheet.costpercapita_q88||0), 0.002); end
  def test_costpercapita_r88; assert_in_delta(0.0, (worksheet.costpercapita_r88||0), 0.002); end
  def test_costpercapita_s88; assert_in_delta(0.0, (worksheet.costpercapita_s88||0), 0.002); end
  def test_costpercapita_t88; assert_in_delta(0.0, (worksheet.costpercapita_t88||0), 0.002); end
  def test_costpercapita_u88; assert_in_delta(0.0, (worksheet.costpercapita_u88||0), 0.002); end
  def test_costpercapita_v88; assert_in_delta(0.0, (worksheet.costpercapita_v88||0), 0.002); end
  def test_costpercapita_w88; assert_in_delta(0.0, (worksheet.costpercapita_w88||0), 0.002); end
  def test_costpercapita_y88; assert_in_delta(0.0, (worksheet.costpercapita_y88||0), 0.002); end
  def test_costpercapita_z88; assert_in_delta(0.0, (worksheet.costpercapita_z88||0), 0.002); end
  def test_costpercapita_aa88; assert_in_delta(0.0, (worksheet.costpercapita_aa88||0), 0.002); end
  def test_costpercapita_ab88; assert_in_delta(0.0, (worksheet.costpercapita_ab88||0), 0.002); end
  def test_costpercapita_ac88; assert_in_delta(0.0, (worksheet.costpercapita_ac88||0), 0.002); end
  def test_costpercapita_ad88; assert_in_delta(0.0, (worksheet.costpercapita_ad88||0), 0.002); end
  def test_costpercapita_ae88; assert_in_delta(0.0, (worksheet.costpercapita_ae88||0), 0.002); end
  def test_costpercapita_af88; assert_in_delta(0.0, (worksheet.costpercapita_af88||0), 0.002); end
  def test_costpercapita_ag88; assert_in_delta(0.0, (worksheet.costpercapita_ag88||0), 0.002); end
  def test_costpercapita_ai88; assert_in_delta(0.0, (worksheet.costpercapita_ai88||0), 0.002); end
  def test_costpercapita_aj88; assert_in_delta(0.0, (worksheet.costpercapita_aj88||0), 0.002); end
  def test_costpercapita_ak88; assert_in_delta(0.0, (worksheet.costpercapita_ak88||0), 0.002); end
  def test_costpercapita_al88; assert_in_delta(0.0, (worksheet.costpercapita_al88||0), 0.002); end
  def test_costpercapita_am88; assert_in_delta(0.0, (worksheet.costpercapita_am88||0), 0.002); end
  def test_costpercapita_an88; assert_in_delta(0.0, (worksheet.costpercapita_an88||0), 0.002); end
  def test_costpercapita_ao88; assert_in_delta(0.0, (worksheet.costpercapita_ao88||0), 0.002); end
  def test_costpercapita_ap88; assert_in_delta(0.0, (worksheet.costpercapita_ap88||0), 0.002); end
  def test_costpercapita_aq88; assert_in_delta(0.0, (worksheet.costpercapita_aq88||0), 0.002); end
  def test_costpercapita_as88; assert_in_delta(0.0, (worksheet.costpercapita_as88||0), 0.002); end
  def test_costpercapita_at88; assert_in_delta(0.0, (worksheet.costpercapita_at88||0), 0.002); end
  def test_costpercapita_av88; assert_in_delta(0.0, (worksheet.costpercapita_av88||0), 0.002); end
  def test_costpercapita_aw88; assert_in_epsilon(5.0, worksheet.costpercapita_aw88, 0.002); end
  def test_costpercapita_ay88; assert_in_delta(0.0, (worksheet.costpercapita_ay88||0), 0.002); end
  def test_costpercapita_az88; assert_in_delta(0.0, (worksheet.costpercapita_az88||0), 0.002); end
  def test_costpercapita_ba88; assert_in_delta(0.0, (worksheet.costpercapita_ba88||0), 0.002); end
  def test_costpercapita_bb88; assert_in_delta(0.0, (worksheet.costpercapita_bb88||0), 0.002); end
  def test_costpercapita_bc88; assert_in_delta(0.0, (worksheet.costpercapita_bc88||0), 0.002); end
  def test_costpercapita_bd88; assert_in_delta(0.0, (worksheet.costpercapita_bd88||0), 0.002); end
  def test_costpercapita_be88; assert_in_delta(0.0, (worksheet.costpercapita_be88||0), 0.002); end
  def test_costpercapita_bf88; assert_in_delta(0.0, (worksheet.costpercapita_bf88||0), 0.002); end
  def test_costpercapita_bg88; assert_in_delta(0.0, (worksheet.costpercapita_bg88||0), 0.002); end
  def test_costpercapita_bi88; assert_in_delta(0.0, (worksheet.costpercapita_bi88||0), 0.002); end
  def test_costpercapita_bj88; assert_in_delta(0.0, (worksheet.costpercapita_bj88||0), 0.002); end
  def test_costpercapita_bk88; assert_in_delta(0.0, (worksheet.costpercapita_bk88||0), 0.002); end
  def test_costpercapita_bl88; assert_in_delta(0.0, (worksheet.costpercapita_bl88||0), 0.002); end
  def test_costpercapita_bm88; assert_in_delta(0.0, (worksheet.costpercapita_bm88||0), 0.002); end
  def test_costpercapita_bn88; assert_in_delta(0.0, (worksheet.costpercapita_bn88||0), 0.002); end
  def test_costpercapita_bo88; assert_in_delta(0.0, (worksheet.costpercapita_bo88||0), 0.002); end
  def test_costpercapita_bp88; assert_in_delta(0.0, (worksheet.costpercapita_bp88||0), 0.002); end
  def test_costpercapita_bq88; assert_in_delta(0.0, (worksheet.costpercapita_bq88||0), 0.002); end
  def test_costpercapita_bs88; assert_in_delta(0.0, (worksheet.costpercapita_bs88||0), 0.002); end
  def test_costpercapita_bt88; assert_in_delta(0.0, (worksheet.costpercapita_bt88||0), 0.002); end
  def test_costpercapita_bu88; assert_in_delta(0.0, (worksheet.costpercapita_bu88||0), 0.002); end
  def test_costpercapita_bv88; assert_in_delta(0.0, (worksheet.costpercapita_bv88||0), 0.002); end
  def test_costpercapita_bw88; assert_in_delta(0.0, (worksheet.costpercapita_bw88||0), 0.002); end
  def test_costpercapita_bx88; assert_in_delta(0.0, (worksheet.costpercapita_bx88||0), 0.002); end
  def test_costpercapita_by88; assert_in_delta(0.0, (worksheet.costpercapita_by88||0), 0.002); end
  def test_costpercapita_bz88; assert_in_delta(0.0, (worksheet.costpercapita_bz88||0), 0.002); end
  def test_costpercapita_ca88; assert_in_delta(0.0, (worksheet.costpercapita_ca88||0), 0.002); end
  def test_costpercapita_cc88; assert_in_delta(0.0, (worksheet.costpercapita_cc88||0), 0.002); end
  def test_costpercapita_cd88; assert_in_delta(0.0, (worksheet.costpercapita_cd88||0), 0.002); end
  def test_costpercapita_cf88; assert_in_delta(0.0, (worksheet.costpercapita_cf88||0), 0.002); end
  def test_costpercapita_cg88; assert_in_delta(0.0, (worksheet.costpercapita_cg88||0), 0.002); end
  def test_costpercapita_ch88; assert_in_delta(0.0, (worksheet.costpercapita_ch88||0), 0.002); end
  def test_costpercapita_ci88; assert_in_delta(0.0, (worksheet.costpercapita_ci88||0), 0.002); end
  def test_costpercapita_cj88; assert_in_delta(0.0, (worksheet.costpercapita_cj88||0), 0.002); end
  def test_costpercapita_ck88; assert_in_delta(0.0, (worksheet.costpercapita_ck88||0), 0.002); end
  def test_costpercapita_cl88; assert_in_delta(0.0, (worksheet.costpercapita_cl88||0), 0.002); end
  def test_costpercapita_cm88; assert_in_delta(0.0, (worksheet.costpercapita_cm88||0), 0.002); end
  def test_costpercapita_cn88; assert_in_delta(0.0, (worksheet.costpercapita_cn88||0), 0.002); end
  def test_costpercapita_cp88; assert_in_delta(0.0, (worksheet.costpercapita_cp88||0), 0.002); end
  def test_costpercapita_cq88; assert_in_delta(0.0, (worksheet.costpercapita_cq88||0), 0.002); end
  def test_costpercapita_cr88; assert_equal("ok", worksheet.costpercapita_cr88); end
  def test_costpercapita_a89; assert_equal("RE.a", worksheet.costpercapita_a89); end
  def test_costpercapita_b89; assert_equal("Onshore wind", worksheet.costpercapita_b89); end
  def test_costpercapita_c89; assert_equal("Electricity", worksheet.costpercapita_c89); end
  def test_costpercapita_e89; assert_in_delta(0.033775440829615526, worksheet.costpercapita_e89, 0.002); end
  def test_costpercapita_f89; assert_in_epsilon(4.926180882580363, worksheet.costpercapita_f89, 0.002); end
  def test_costpercapita_g89; assert_in_epsilon(45.69664964728478, worksheet.costpercapita_g89, 0.002); end
  def test_costpercapita_h89; assert_in_epsilon(76.12589574415968, worksheet.costpercapita_h89, 0.002); end
  def test_costpercapita_i89; assert_in_epsilon(111.8537852818325, worksheet.costpercapita_i89, 0.002); end
  def test_costpercapita_j89; assert_in_epsilon(116.51435966857552, worksheet.costpercapita_j89, 0.002); end
  def test_costpercapita_k89; assert_in_epsilon(139.81723160229063, worksheet.costpercapita_k89, 0.002); end
  def test_costpercapita_l89; assert_in_epsilon(163.12010353600573, worksheet.costpercapita_l89, 0.002); end
  def test_costpercapita_m89; assert_in_epsilon(186.42297546972085, worksheet.costpercapita_m89, 0.002); end
  def test_costpercapita_o89; assert_in_delta(0.012097706026837164, worksheet.costpercapita_o89, 0.002); end
  def test_costpercapita_p89; assert_in_epsilon(1.8948786620702502, worksheet.costpercapita_p89, 0.002); end
  def test_costpercapita_q89; assert_in_epsilon(17.663651361334857, worksheet.costpercapita_q89, 0.002); end
  def test_costpercapita_r89; assert_in_epsilon(29.499197700528928, worksheet.costpercapita_r89, 0.002); end
  def test_costpercapita_s89; assert_in_epsilon(43.412820670468285, worksheet.costpercapita_s89, 0.002); end
  def test_costpercapita_t89; assert_in_epsilon(45.221688198404465, worksheet.costpercapita_t89, 0.002); end
  def test_costpercapita_u89; assert_in_epsilon(54.266025838085355, worksheet.costpercapita_u89, 0.002); end
  def test_costpercapita_v89; assert_in_epsilon(63.31036347776625, worksheet.costpercapita_v89, 0.002); end
  def test_costpercapita_w89; assert_in_epsilon(72.35470111744714, worksheet.costpercapita_w89, 0.002); end
  def test_costpercapita_y89; assert_in_delta(0.0, (worksheet.costpercapita_y89||0), 0.002); end
  def test_costpercapita_z89; assert_in_delta(0.0, (worksheet.costpercapita_z89||0), 0.002); end
  def test_costpercapita_aa89; assert_in_delta(0.0, (worksheet.costpercapita_aa89||0), 0.002); end
  def test_costpercapita_ab89; assert_in_delta(0.0, (worksheet.costpercapita_ab89||0), 0.002); end
  def test_costpercapita_ac89; assert_in_delta(0.0, (worksheet.costpercapita_ac89||0), 0.002); end
  def test_costpercapita_ad89; assert_in_delta(0.0, (worksheet.costpercapita_ad89||0), 0.002); end
  def test_costpercapita_ae89; assert_in_delta(0.0, (worksheet.costpercapita_ae89||0), 0.002); end
  def test_costpercapita_af89; assert_in_delta(0.0, (worksheet.costpercapita_af89||0), 0.002); end
  def test_costpercapita_ag89; assert_in_delta(0.0, (worksheet.costpercapita_ag89||0), 0.002); end
  def test_costpercapita_ai89; assert_in_delta(0.04587314685645268, worksheet.costpercapita_ai89, 0.002); end
  def test_costpercapita_aj89; assert_in_epsilon(6.821059544650613, worksheet.costpercapita_aj89, 0.002); end
  def test_costpercapita_ak89; assert_in_epsilon(63.36030100861963, worksheet.costpercapita_ak89, 0.002); end
  def test_costpercapita_al89; assert_in_epsilon(105.6250934446886, worksheet.costpercapita_al89, 0.002); end
  def test_costpercapita_am89; assert_in_epsilon(155.26660595230078, worksheet.costpercapita_am89, 0.002); end
  def test_costpercapita_an89; assert_in_epsilon(161.73604786698, worksheet.costpercapita_an89, 0.002); end
  def test_costpercapita_ao89; assert_in_epsilon(194.08325744037597, worksheet.costpercapita_ao89, 0.002); end
  def test_costpercapita_ap89; assert_in_epsilon(226.43046701377196, worksheet.costpercapita_ap89, 0.002); end
  def test_costpercapita_aq89; assert_in_epsilon(258.777676587168, worksheet.costpercapita_aq89, 0.002); end
  def test_costpercapita_as89; assert_in_epsilon(130.23848688949022, worksheet.costpercapita_as89, 0.002); end
  def test_costpercapita_at89; assert_in_epsilon(2337.627654794508, worksheet.costpercapita_at89, 0.002); end
  def test_costpercapita_av89; assert_in_delta(0.0, (worksheet.costpercapita_av89||0), 0.002); end
  def test_costpercapita_aw89; assert_in_epsilon(5.0, worksheet.costpercapita_aw89, 0.002); end
  def test_costpercapita_ay89; assert_in_delta(0.08787063368057692, worksheet.costpercapita_ay89, 0.002); end
  def test_costpercapita_az89; assert_in_epsilon(12.81601735299712, worksheet.costpercapita_az89, 0.002); end
  def test_costpercapita_ba89; assert_in_epsilon(118.8850082473352, worksheet.costpercapita_ba89, 0.002); end
  def test_costpercapita_bb89; assert_in_epsilon(198.05013744411247, worksheet.costpercapita_bb89, 0.002); end
  def test_costpercapita_bc89; assert_in_epsilon(291.00028751268525, worksheet.costpercapita_bc89, 0.002); end
  def test_costpercapita_bd89; assert_in_epsilon(303.12529949238046, worksheet.costpercapita_bd89, 0.002); end
  def test_costpercapita_be89; assert_in_epsilon(363.75035939085654, worksheet.costpercapita_be89, 0.002); end
  def test_costpercapita_bf89; assert_in_epsilon(424.3754192893327, worksheet.costpercapita_bf89, 0.002); end
  def test_costpercapita_bg89; assert_in_epsilon(485.0004791878089, worksheet.costpercapita_bg89, 0.002); end
  def test_costpercapita_bi89; assert_in_delta(0.0, (worksheet.costpercapita_bi89||0), 0.002); end
  def test_costpercapita_bj89; assert_in_delta(0.0, (worksheet.costpercapita_bj89||0), 0.002); end
  def test_costpercapita_bk89; assert_in_delta(0.0, (worksheet.costpercapita_bk89||0), 0.002); end
  def test_costpercapita_bl89; assert_in_delta(0.0, (worksheet.costpercapita_bl89||0), 0.002); end
  def test_costpercapita_bm89; assert_in_delta(0.0, (worksheet.costpercapita_bm89||0), 0.002); end
  def test_costpercapita_bn89; assert_in_delta(0.0, (worksheet.costpercapita_bn89||0), 0.002); end
  def test_costpercapita_bo89; assert_in_delta(0.0, (worksheet.costpercapita_bo89||0), 0.002); end
  def test_costpercapita_bp89; assert_in_delta(0.0, (worksheet.costpercapita_bp89||0), 0.002); end
  def test_costpercapita_bq89; assert_in_delta(0.0, (worksheet.costpercapita_bq89||0), 0.002); end
  def test_costpercapita_bs89; assert_in_delta(0.09996833970741408, worksheet.costpercapita_bs89, 0.002); end
  def test_costpercapita_bt89; assert_in_epsilon(14.71089601506737, worksheet.costpercapita_bt89, 0.002); end
  def test_costpercapita_bu89; assert_in_epsilon(136.54865960867005, worksheet.costpercapita_bu89, 0.002); end
  def test_costpercapita_bv89; assert_in_epsilon(227.5493351446414, worksheet.costpercapita_bv89, 0.002); end
  def test_costpercapita_bw89; assert_in_epsilon(334.41310818315355, worksheet.costpercapita_bw89, 0.002); end
  def test_costpercapita_bx89; assert_in_epsilon(348.34698769078494, worksheet.costpercapita_bx89, 0.002); end
  def test_costpercapita_by89; assert_in_epsilon(418.01638522894194, worksheet.costpercapita_by89, 0.002); end
  def test_costpercapita_bz89; assert_in_epsilon(487.6857827670989, worksheet.costpercapita_bz89, 0.002); end
  def test_costpercapita_ca89; assert_in_epsilon(557.355180305256, worksheet.costpercapita_ca89, 0.002); end
  def test_costpercapita_cc89; assert_in_epsilon(280.52514480925794, worksheet.costpercapita_cc89, 0.002); end
  def test_costpercapita_cd89; assert_in_epsilon(5035.321558843794, worksheet.costpercapita_cd89, 0.002); end
  def test_costpercapita_cf89; assert_in_delta(0.05409519285096139, worksheet.costpercapita_cf89, 0.002); end
  def test_costpercapita_cg89; assert_in_epsilon(7.889836470416757, worksheet.costpercapita_cg89, 0.002); end
  def test_costpercapita_ch89; assert_in_epsilon(73.18835860005042, worksheet.costpercapita_ch89, 0.002); end
  def test_costpercapita_ci89; assert_in_epsilon(121.92424169995279, worksheet.costpercapita_ci89, 0.002); end
  def test_costpercapita_cj89; assert_in_epsilon(179.14650223085278, worksheet.costpercapita_cj89, 0.002); end
  def test_costpercapita_ck89; assert_in_epsilon(186.61093982380496, worksheet.costpercapita_ck89, 0.002); end
  def test_costpercapita_cl89; assert_in_epsilon(223.93312778856594, worksheet.costpercapita_cl89, 0.002); end
  def test_costpercapita_cm89; assert_in_epsilon(261.25531575332695, worksheet.costpercapita_cm89, 0.002); end
  def test_costpercapita_cn89; assert_in_epsilon(298.57750371808805, worksheet.costpercapita_cn89, 0.002); end
  def test_costpercapita_cp89; assert_in_epsilon(150.28665791976772, worksheet.costpercapita_cp89, 0.002); end
  def test_costpercapita_cq89; assert_in_epsilon(2697.6939040492857, worksheet.costpercapita_cq89, 0.002); end
  def test_costpercapita_cr89; assert_equal("ok", worksheet.costpercapita_cr89); end
  def test_costpercapita_a90; assert_equal("RE.b", worksheet.costpercapita_a90); end
  def test_costpercapita_b90; assert_equal("Hydroelectric", worksheet.costpercapita_b90); end
  def test_costpercapita_c90; assert_equal("Electricity", worksheet.costpercapita_c90); end
  def test_costpercapita_e90; assert_in_delta(0.0, (worksheet.costpercapita_e90||0), 0.002); end
  def test_costpercapita_f90; assert_in_delta(0.0, (worksheet.costpercapita_f90||0), 0.002); end
  def test_costpercapita_g90; assert_in_delta(0.0, (worksheet.costpercapita_g90||0), 0.002); end
  def test_costpercapita_h90; assert_in_epsilon(13.598715052396141, worksheet.costpercapita_h90, 0.002); end
  def test_costpercapita_i90; assert_in_epsilon(25.36480909581471, worksheet.costpercapita_i90, 0.002); end
  def test_costpercapita_j90; assert_in_epsilon(37.130903139233276, worksheet.costpercapita_j90, 0.002); end
  def test_costpercapita_k90; assert_in_epsilon(48.89699718265184, worksheet.costpercapita_k90, 0.002); end
  def test_costpercapita_l90; assert_in_epsilon(60.66309122607041, worksheet.costpercapita_l90, 0.002); end
  def test_costpercapita_m90; assert_in_epsilon(72.42918526948898, worksheet.costpercapita_m90, 0.002); end
  def test_costpercapita_o90; assert_in_delta(0.0, (worksheet.costpercapita_o90||0), 0.002); end
  def test_costpercapita_p90; assert_in_delta(0.0, (worksheet.costpercapita_p90||0), 0.002); end
  def test_costpercapita_q90; assert_in_delta(0.0, (worksheet.costpercapita_q90||0), 0.002); end
  def test_costpercapita_r90; assert_in_epsilon(21.040123304622337, worksheet.costpercapita_r90, 0.002); end
  def test_costpercapita_s90; assert_in_epsilon(39.24478959356616, worksheet.costpercapita_s90, 0.002); end
  def test_costpercapita_t90; assert_in_epsilon(57.44945588250999, worksheet.costpercapita_t90, 0.002); end
  def test_costpercapita_u90; assert_in_epsilon(75.6541221714538, worksheet.costpercapita_u90, 0.002); end
  def test_costpercapita_v90; assert_in_epsilon(93.85878846039765, worksheet.costpercapita_v90, 0.002); end
  def test_costpercapita_w90; assert_in_epsilon(112.06345474934147, worksheet.costpercapita_w90, 0.002); end
  def test_costpercapita_y90; assert_in_delta(0.0, (worksheet.costpercapita_y90||0), 0.002); end
  def test_costpercapita_z90; assert_in_delta(0.0, (worksheet.costpercapita_z90||0), 0.002); end
  def test_costpercapita_aa90; assert_in_delta(0.0, (worksheet.costpercapita_aa90||0), 0.002); end
  def test_costpercapita_ab90; assert_in_delta(0.0, (worksheet.costpercapita_ab90||0), 0.002); end
  def test_costpercapita_ac90; assert_in_delta(0.0, (worksheet.costpercapita_ac90||0), 0.002); end
  def test_costpercapita_ad90; assert_in_delta(0.0, (worksheet.costpercapita_ad90||0), 0.002); end
  def test_costpercapita_ae90; assert_in_delta(0.0, (worksheet.costpercapita_ae90||0), 0.002); end
  def test_costpercapita_af90; assert_in_delta(0.0, (worksheet.costpercapita_af90||0), 0.002); end
  def test_costpercapita_ag90; assert_in_delta(0.0, (worksheet.costpercapita_ag90||0), 0.002); end
  def test_costpercapita_ai90; assert_in_delta(0.0, (worksheet.costpercapita_ai90||0), 0.002); end
  def test_costpercapita_aj90; assert_in_delta(0.0, (worksheet.costpercapita_aj90||0), 0.002); end
  def test_costpercapita_ak90; assert_in_delta(0.0, (worksheet.costpercapita_ak90||0), 0.002); end
  def test_costpercapita_al90; assert_in_epsilon(34.63883835701848, worksheet.costpercapita_al90, 0.002); end
  def test_costpercapita_am90; assert_in_epsilon(64.60959868938087, worksheet.costpercapita_am90, 0.002); end
  def test_costpercapita_an90; assert_in_epsilon(94.58035902174326, worksheet.costpercapita_an90, 0.002); end
  def test_costpercapita_ao90; assert_in_epsilon(124.55111935410567, worksheet.costpercapita_ao90, 0.002); end
  def test_costpercapita_ap90; assert_in_epsilon(154.52187968646805, worksheet.costpercapita_ap90, 0.002); end
  def test_costpercapita_aq90; assert_in_epsilon(184.49264001883046, worksheet.costpercapita_aq90, 0.002); end
  def test_costpercapita_as90; assert_in_epsilon(73.04382612528298, worksheet.costpercapita_as90, 0.002); end
  def test_costpercapita_at90; assert_in_epsilon(1169.7066553218942, worksheet.costpercapita_at90, 0.002); end
  def test_costpercapita_av90; assert_in_delta(0.0, (worksheet.costpercapita_av90||0), 0.002); end
  def test_costpercapita_aw90; assert_in_epsilon(5.0, worksheet.costpercapita_aw90, 0.002); end
  def test_costpercapita_ay90; assert_in_delta(0.0, (worksheet.costpercapita_ay90||0), 0.002); end
  def test_costpercapita_az90; assert_in_delta(0.0, (worksheet.costpercapita_az90||0), 0.002); end
  def test_costpercapita_ba90; assert_in_delta(0.0, (worksheet.costpercapita_ba90||0), 0.002); end
  def test_costpercapita_bb90; assert_in_epsilon(93.86589026079699, worksheet.costpercapita_bb90, 0.002); end
  def test_costpercapita_bc90; assert_in_epsilon(175.08201163861347, worksheet.costpercapita_bc90, 0.002); end
  def test_costpercapita_bd90; assert_in_epsilon(256.2981330164299, worksheet.costpercapita_bd90, 0.002); end
  def test_costpercapita_be90; assert_in_epsilon(337.5142543942464, worksheet.costpercapita_be90, 0.002); end
  def test_costpercapita_bf90; assert_in_epsilon(418.73037577206276, worksheet.costpercapita_bf90, 0.002); end
  def test_costpercapita_bg90; assert_in_epsilon(499.9464971498794, worksheet.costpercapita_bg90, 0.002); end
  def test_costpercapita_bi90; assert_in_delta(0.0, (worksheet.costpercapita_bi90||0), 0.002); end
  def test_costpercapita_bj90; assert_in_delta(0.0, (worksheet.costpercapita_bj90||0), 0.002); end
  def test_costpercapita_bk90; assert_in_delta(0.0, (worksheet.costpercapita_bk90||0), 0.002); end
  def test_costpercapita_bl90; assert_in_delta(0.0, (worksheet.costpercapita_bl90||0), 0.002); end
  def test_costpercapita_bm90; assert_in_delta(0.0, (worksheet.costpercapita_bm90||0), 0.002); end
  def test_costpercapita_bn90; assert_in_delta(0.0, (worksheet.costpercapita_bn90||0), 0.002); end
  def test_costpercapita_bo90; assert_in_delta(0.0, (worksheet.costpercapita_bo90||0), 0.002); end
  def test_costpercapita_bp90; assert_in_delta(0.0, (worksheet.costpercapita_bp90||0), 0.002); end
  def test_costpercapita_bq90; assert_in_delta(0.0, (worksheet.costpercapita_bq90||0), 0.002); end
  def test_costpercapita_bs90; assert_in_delta(0.0, (worksheet.costpercapita_bs90||0), 0.002); end
  def test_costpercapita_bt90; assert_in_delta(0.0, (worksheet.costpercapita_bt90||0), 0.002); end
  def test_costpercapita_bu90; assert_in_delta(0.0, (worksheet.costpercapita_bu90||0), 0.002); end
  def test_costpercapita_bv90; assert_in_epsilon(114.90601356541933, worksheet.costpercapita_bv90, 0.002); end
  def test_costpercapita_bw90; assert_in_epsilon(214.32680123217963, worksheet.costpercapita_bw90, 0.002); end
  def test_costpercapita_bx90; assert_in_epsilon(313.7475888989399, worksheet.costpercapita_bx90, 0.002); end
  def test_costpercapita_by90; assert_in_epsilon(413.16837656570016, worksheet.costpercapita_by90, 0.002); end
  def test_costpercapita_bz90; assert_in_epsilon(512.5891642324605, worksheet.costpercapita_bz90, 0.002); end
  def test_costpercapita_ca90; assert_in_epsilon(612.0099518992209, worksheet.costpercapita_ca90, 0.002); end
  def test_costpercapita_cc90; assert_in_epsilon(242.3053218215467, worksheet.costpercapita_cc90, 0.002); end
  def test_costpercapita_cd90; assert_in_epsilon(3880.220445578125, worksheet.costpercapita_cd90, 0.002); end
  def test_costpercapita_cf90; assert_in_delta(0.0, (worksheet.costpercapita_cf90||0), 0.002); end
  def test_costpercapita_cg90; assert_in_delta(0.0, (worksheet.costpercapita_cg90||0), 0.002); end
  def test_costpercapita_ch90; assert_in_delta(0.0, (worksheet.costpercapita_ch90||0), 0.002); end
  def test_costpercapita_ci90; assert_in_epsilon(80.26717520840084, worksheet.costpercapita_ci90, 0.002); end
  def test_costpercapita_cj90; assert_in_epsilon(149.71720254279876, worksheet.costpercapita_cj90, 0.002); end
  def test_costpercapita_ck90; assert_in_epsilon(219.16722987719666, worksheet.costpercapita_ck90, 0.002); end
  def test_costpercapita_cl90; assert_in_epsilon(288.61725721159456, worksheet.costpercapita_cl90, 0.002); end
  def test_costpercapita_cm90; assert_in_epsilon(358.0672845459924, worksheet.costpercapita_cm90, 0.002); end
  def test_costpercapita_cn90; assert_in_epsilon(427.51731188039037, worksheet.costpercapita_cn90, 0.002); end
  def test_costpercapita_cp90; assert_in_epsilon(169.26149569626372, worksheet.costpercapita_cp90, 0.002); end
  def test_costpercapita_cq90; assert_in_epsilon(2710.513790256231, worksheet.costpercapita_cq90, 0.002); end
  def test_costpercapita_cr90; assert_equal("ok", worksheet.costpercapita_cr90); end
  def test_costpercapita_a91; assert_equal("RE.c", worksheet.costpercapita_a91); end
  def test_costpercapita_b91; assert_equal("CSP", worksheet.costpercapita_b91); end
  def test_costpercapita_c91; assert_equal("Electricity", worksheet.costpercapita_c91); end
  def test_costpercapita_e91; assert_in_delta(0.0, (worksheet.costpercapita_e91||0), 0.002); end
  def test_costpercapita_f91; assert_in_epsilon(1.4376929977935653, worksheet.costpercapita_f91, 0.002); end
  def test_costpercapita_g91; assert_in_epsilon(381.5374006297809, worksheet.costpercapita_g91, 0.002); end
  def test_costpercapita_h91; assert_in_epsilon(733.2753987721716, worksheet.costpercapita_h91, 0.002); end
  def test_costpercapita_i91; assert_in_epsilon(1073.0899468308464, worksheet.costpercapita_i91, 0.002); end
  def test_costpercapita_j91; assert_in_epsilon(1341.3626197295089, worksheet.costpercapita_j91, 0.002); end
  def test_costpercapita_k91; assert_in_epsilon(1609.6351436754107, worksheet.costpercapita_k91, 0.002); end
  def test_costpercapita_l91; assert_in_epsilon(1877.9076676213124, worksheet.costpercapita_l91, 0.002); end
  def test_costpercapita_m91; assert_in_epsilon(2146.180191567214, worksheet.costpercapita_m91, 0.002); end
  def test_costpercapita_o91; assert_in_delta(0.0, (worksheet.costpercapita_o91||0), 0.002); end
  def test_costpercapita_p91; assert_in_delta(0.6579245613828018, worksheet.costpercapita_p91, 0.002); end
  def test_costpercapita_q91; assert_in_epsilon(200.59388849271198, worksheet.costpercapita_q91, 0.002); end
  def test_costpercapita_r91; assert_in_epsilon(400.5298524240412, worksheet.costpercapita_r91, 0.002); end
  def test_costpercapita_s91; assert_in_epsilon(600.4658163553704, worksheet.costpercapita_s91, 0.002); end
  def test_costpercapita_t91; assert_in_epsilon(750.582270444213, worksheet.costpercapita_t91, 0.002); end
  def test_costpercapita_u91; assert_in_epsilon(900.6987245330556, worksheet.costpercapita_u91, 0.002); end
  def test_costpercapita_v91; assert_in_epsilon(1050.8151786218982, worksheet.costpercapita_v91, 0.002); end
  def test_costpercapita_w91; assert_in_epsilon(1200.9316327107408, worksheet.costpercapita_w91, 0.002); end
  def test_costpercapita_y91; assert_in_delta(0.0, (worksheet.costpercapita_y91||0), 0.002); end
  def test_costpercapita_z91; assert_in_delta(0.0, (worksheet.costpercapita_z91||0), 0.002); end
  def test_costpercapita_aa91; assert_in_delta(0.0, (worksheet.costpercapita_aa91||0), 0.002); end
  def test_costpercapita_ab91; assert_in_delta(0.0, (worksheet.costpercapita_ab91||0), 0.002); end
  def test_costpercapita_ac91; assert_in_delta(0.0, (worksheet.costpercapita_ac91||0), 0.002); end
  def test_costpercapita_ad91; assert_in_delta(0.0, (worksheet.costpercapita_ad91||0), 0.002); end
  def test_costpercapita_ae91; assert_in_delta(0.0, (worksheet.costpercapita_ae91||0), 0.002); end
  def test_costpercapita_af91; assert_in_delta(0.0, (worksheet.costpercapita_af91||0), 0.002); end
  def test_costpercapita_ag91; assert_in_delta(0.0, (worksheet.costpercapita_ag91||0), 0.002); end
  def test_costpercapita_ai91; assert_in_delta(0.0, (worksheet.costpercapita_ai91||0), 0.002); end
  def test_costpercapita_aj91; assert_in_epsilon(2.0956175591763673, worksheet.costpercapita_aj91, 0.002); end
  def test_costpercapita_ak91; assert_in_epsilon(582.1312891224928, worksheet.costpercapita_ak91, 0.002); end
  def test_costpercapita_al91; assert_in_epsilon(1133.8052511962128, worksheet.costpercapita_al91, 0.002); end
  def test_costpercapita_am91; assert_in_epsilon(1673.5557631862168, worksheet.costpercapita_am91, 0.002); end
  def test_costpercapita_an91; assert_in_epsilon(2091.944890173722, worksheet.costpercapita_an91, 0.002); end
  def test_costpercapita_ao91; assert_in_epsilon(2510.3338682084664, worksheet.costpercapita_ao91, 0.002); end
  def test_costpercapita_ap91; assert_in_epsilon(2928.7228462432104, worksheet.costpercapita_ap91, 0.002); end
  def test_costpercapita_aq91; assert_in_epsilon(3347.111824277955, worksheet.costpercapita_aq91, 0.002); end
  def test_costpercapita_as91; assert_in_epsilon(1585.522372218606, worksheet.costpercapita_as91, 0.002); end
  def test_costpercapita_at91; assert_in_epsilon(27496.35916744518, worksheet.costpercapita_at91, 0.002); end
  def test_costpercapita_av91; assert_in_delta(0.0, (worksheet.costpercapita_av91||0), 0.002); end
  def test_costpercapita_aw91; assert_in_epsilon(5.0, worksheet.costpercapita_aw91, 0.002); end
  def test_costpercapita_ay91; assert_in_delta(0.0, (worksheet.costpercapita_ay91||0), 0.002); end
  def test_costpercapita_az91; assert_in_epsilon(5.246236169032507, worksheet.costpercapita_az91, 0.002); end
  def test_costpercapita_ba91; assert_in_epsilon(1392.2550322596842, worksheet.costpercapita_ba91, 0.002); end
  def test_costpercapita_bb91; assert_in_epsilon(2675.7700877754933, worksheet.costpercapita_bb91, 0.002); end
  def test_costpercapita_bc91; assert_in_epsilon(3915.775690866589, worksheet.costpercapita_bc91, 0.002); end
  def test_costpercapita_bd91; assert_in_epsilon(4894.720293006243, worksheet.costpercapita_bd91, 0.002); end
  def test_costpercapita_be91; assert_in_epsilon(5873.664351607493, worksheet.costpercapita_be91, 0.002); end
  def test_costpercapita_bf91; assert_in_epsilon(6852.608410208742, worksheet.costpercapita_bf91, 0.002); end
  def test_costpercapita_bg91; assert_in_epsilon(7831.55246880999, worksheet.costpercapita_bg91, 0.002); end
  def test_costpercapita_bi91; assert_in_delta(0.0, (worksheet.costpercapita_bi91||0), 0.002); end
  def test_costpercapita_bj91; assert_in_delta(0.0, (worksheet.costpercapita_bj91||0), 0.002); end
  def test_costpercapita_bk91; assert_in_delta(0.0, (worksheet.costpercapita_bk91||0), 0.002); end
  def test_costpercapita_bl91; assert_in_delta(0.0, (worksheet.costpercapita_bl91||0), 0.002); end
  def test_costpercapita_bm91; assert_in_delta(0.0, (worksheet.costpercapita_bm91||0), 0.002); end
  def test_costpercapita_bn91; assert_in_delta(0.0, (worksheet.costpercapita_bn91||0), 0.002); end
  def test_costpercapita_bo91; assert_in_delta(0.0, (worksheet.costpercapita_bo91||0), 0.002); end
  def test_costpercapita_bp91; assert_in_delta(0.0, (worksheet.costpercapita_bp91||0), 0.002); end
  def test_costpercapita_bq91; assert_in_delta(0.0, (worksheet.costpercapita_bq91||0), 0.002); end
  def test_costpercapita_bs91; assert_in_delta(0.0, (worksheet.costpercapita_bs91||0), 0.002); end
  def test_costpercapita_bt91; assert_in_epsilon(5.904160730415309, worksheet.costpercapita_bt91, 0.002); end
  def test_costpercapita_bu91; assert_in_epsilon(1592.8489207523962, worksheet.costpercapita_bu91, 0.002); end
  def test_costpercapita_bv91; assert_in_epsilon(3076.2999401995344, worksheet.costpercapita_bv91, 0.002); end
  def test_costpercapita_bw91; assert_in_epsilon(4516.241507221959, worksheet.costpercapita_bw91, 0.002); end
  def test_costpercapita_bx91; assert_in_epsilon(5645.302563450457, worksheet.costpercapita_bx91, 0.002); end
  def test_costpercapita_by91; assert_in_epsilon(6774.363076140548, worksheet.costpercapita_by91, 0.002); end
  def test_costpercapita_bz91; assert_in_epsilon(7903.42358883064, worksheet.costpercapita_bz91, 0.002); end
  def test_costpercapita_ca91; assert_in_epsilon(9032.484101520731, worksheet.costpercapita_ca91, 0.002); end
  def test_costpercapita_cc91; assert_in_epsilon(4282.985317649631, worksheet.costpercapita_cc91, 0.002); end
  def test_costpercapita_cd91; assert_in_epsilon(74329.75359997156, worksheet.costpercapita_cd91, 0.002); end
  def test_costpercapita_cf91; assert_in_delta(0.0, (worksheet.costpercapita_cf91||0), 0.002); end
  def test_costpercapita_cg91; assert_in_epsilon(3.808543171238942, worksheet.costpercapita_cg91, 0.002); end
  def test_costpercapita_ch91; assert_in_epsilon(1010.7176316299032, worksheet.costpercapita_ch91, 0.002); end
  def test_costpercapita_ci91; assert_in_epsilon(1942.4946890033218, worksheet.costpercapita_ci91, 0.002); end
  def test_costpercapita_cj91; assert_in_epsilon(2842.685744035742, worksheet.costpercapita_cj91, 0.002); end
  def test_costpercapita_ck91; assert_in_epsilon(3553.357673276734, worksheet.costpercapita_ck91, 0.002); end
  def test_costpercapita_cl91; assert_in_epsilon(4264.029207932082, worksheet.costpercapita_cl91, 0.002); end
  def test_costpercapita_cm91; assert_in_epsilon(4974.700742587429, worksheet.costpercapita_cm91, 0.002); end
  def test_costpercapita_cn91; assert_in_epsilon(5685.372277242776, worksheet.costpercapita_cn91, 0.002); end
  def test_costpercapita_cp91; assert_in_epsilon(2697.462945431025, worksheet.costpercapita_cp91, 0.002); end
  def test_costpercapita_cq91; assert_in_epsilon(46833.39443252637, worksheet.costpercapita_cq91, 0.002); end
  def test_costpercapita_cr91; assert_equal("ok", worksheet.costpercapita_cr91); end
  def test_costpercapita_a92; assert_equal("RE.d", worksheet.costpercapita_a92); end
  def test_costpercapita_b92; assert_equal("Decentralized PV", worksheet.costpercapita_b92); end
  def test_costpercapita_c92; assert_equal("Electricity", worksheet.costpercapita_c92); end
  def test_costpercapita_e92; assert_in_delta(0.3382177619391267, worksheet.costpercapita_e92, 0.002); end
  def test_costpercapita_f92; assert_in_epsilon(3.4946890433718054, worksheet.costpercapita_f92, 0.002); end
  def test_costpercapita_g92; assert_in_epsilon(15.590777081569376, worksheet.costpercapita_g92, 0.002); end
  def test_costpercapita_h92; assert_in_epsilon(39.66763975683452, worksheet.costpercapita_h92, 0.002); end
  def test_costpercapita_i92; assert_in_epsilon(67.91633683918596, worksheet.costpercapita_i92, 0.002); end
  def test_costpercapita_j92; assert_in_epsilon(98.59579359344906, worksheet.costpercapita_j92, 0.002); end
  def test_costpercapita_k92; assert_in_epsilon(123.60785702501441, worksheet.costpercapita_k92, 0.002); end
  def test_costpercapita_l92; assert_in_epsilon(141.7750867500924, worksheet.costpercapita_l92, 0.002); end
  def test_costpercapita_m92; assert_in_epsilon(154.07108972971545, worksheet.costpercapita_m92, 0.002); end
  def test_costpercapita_o92; assert_in_delta(0.06466069960227284, worksheet.costpercapita_o92, 0.002); end
  def test_costpercapita_p92; assert_in_delta(0.9002156382932025, worksheet.costpercapita_p92, 0.002); end
  def test_costpercapita_q92; assert_in_epsilon(4.784768213659149, worksheet.costpercapita_q92, 0.002); end
  def test_costpercapita_r92; assert_in_epsilon(13.17976304710475, worksheet.costpercapita_r92, 0.002); end
  def test_costpercapita_s92; assert_in_epsilon(24.367412565902182, worksheet.costpercapita_s92, 0.002); end
  def test_costpercapita_t92; assert_in_epsilon(35.37476388696974, worksheet.costpercapita_t92, 0.002); end
  def test_costpercapita_u92; assert_in_epsilon(44.34873535137025, worksheet.costpercapita_u92, 0.002); end
  def test_costpercapita_v92; assert_in_epsilon(50.86687815018914, worksheet.costpercapita_v92, 0.002); end
  def test_costpercapita_w92; assert_in_epsilon(55.27850856873613, worksheet.costpercapita_w92, 0.002); end
  def test_costpercapita_y92; assert_in_delta(0.0, (worksheet.costpercapita_y92||0), 0.002); end
  def test_costpercapita_z92; assert_in_delta(0.0, (worksheet.costpercapita_z92||0), 0.002); end
  def test_costpercapita_aa92; assert_in_delta(0.0, (worksheet.costpercapita_aa92||0), 0.002); end
  def test_costpercapita_ab92; assert_in_delta(0.0, (worksheet.costpercapita_ab92||0), 0.002); end
  def test_costpercapita_ac92; assert_in_delta(0.0, (worksheet.costpercapita_ac92||0), 0.002); end
  def test_costpercapita_ad92; assert_in_delta(0.0, (worksheet.costpercapita_ad92||0), 0.002); end
  def test_costpercapita_ae92; assert_in_delta(0.0, (worksheet.costpercapita_ae92||0), 0.002); end
  def test_costpercapita_af92; assert_in_delta(0.0, (worksheet.costpercapita_af92||0), 0.002); end
  def test_costpercapita_ag92; assert_in_delta(0.0, (worksheet.costpercapita_ag92||0), 0.002); end
  def test_costpercapita_ai92; assert_in_delta(0.40287846154139956, worksheet.costpercapita_ai92, 0.002); end
  def test_costpercapita_aj92; assert_in_epsilon(4.394904681665008, worksheet.costpercapita_aj92, 0.002); end
  def test_costpercapita_ak92; assert_in_epsilon(20.375545295228527, worksheet.costpercapita_ak92, 0.002); end
  def test_costpercapita_al92; assert_in_epsilon(52.84740280393927, worksheet.costpercapita_al92, 0.002); end
  def test_costpercapita_am92; assert_in_epsilon(92.28374940508814, worksheet.costpercapita_am92, 0.002); end
  def test_costpercapita_an92; assert_in_epsilon(133.9705574804188, worksheet.costpercapita_an92, 0.002); end
  def test_costpercapita_ao92; assert_in_epsilon(167.95659237638463, worksheet.costpercapita_ao92, 0.002); end
  def test_costpercapita_ap92; assert_in_epsilon(192.64196490028155, worksheet.costpercapita_ap92, 0.002); end
  def test_costpercapita_aq92; assert_in_epsilon(209.34959829845158, worksheet.costpercapita_aq92, 0.002); end
  def test_costpercapita_as92; assert_in_epsilon(97.13591041144433, worksheet.costpercapita_as92, 0.002); end
  def test_costpercapita_at92; assert_in_epsilon(1636.9044269249468, worksheet.costpercapita_at92, 0.002); end
  def test_costpercapita_av92; assert_in_delta(0.0, (worksheet.costpercapita_av92||0), 0.002); end
  def test_costpercapita_aw92; assert_in_epsilon(5.0, worksheet.costpercapita_aw92, 0.002); end
  def test_costpercapita_ay92; assert_in_delta(0.931519970331425, worksheet.costpercapita_ay92, 0.002); end
  def test_costpercapita_az92; assert_in_epsilon(9.6250788702965, worksheet.costpercapita_az92, 0.002); end
  def test_costpercapita_ba92; assert_in_epsilon(42.940146375521444, worksheet.costpercapita_ba92, 0.002); end
  def test_costpercapita_bb92; assert_in_epsilon(109.25268500846715, worksheet.costpercapita_bb92, 0.002); end
  def test_costpercapita_bc92; assert_in_epsilon(187.0552974945303, worksheet.costpercapita_bc92, 0.002); end
  def test_costpercapita_bd92; assert_in_epsilon(271.55271265588726, worksheet.costpercapita_bd92, 0.002); end
  def test_costpercapita_be92; assert_in_epsilon(340.44098289963904, worksheet.costpercapita_be92, 0.002); end
  def test_costpercapita_bf92; assert_in_epsilon(390.47719979576624, worksheet.costpercapita_bf92, 0.002); end
  def test_costpercapita_bg92; assert_in_epsilon(424.34287339346184, worksheet.costpercapita_bg92, 0.002); end
  def test_costpercapita_bi92; assert_in_delta(0.0, (worksheet.costpercapita_bi92||0), 0.002); end
  def test_costpercapita_bj92; assert_in_delta(0.0, (worksheet.costpercapita_bj92||0), 0.002); end
  def test_costpercapita_bk92; assert_in_delta(0.0, (worksheet.costpercapita_bk92||0), 0.002); end
  def test_costpercapita_bl92; assert_in_delta(0.0, (worksheet.costpercapita_bl92||0), 0.002); end
  def test_costpercapita_bm92; assert_in_delta(0.0, (worksheet.costpercapita_bm92||0), 0.002); end
  def test_costpercapita_bn92; assert_in_delta(0.0, (worksheet.costpercapita_bn92||0), 0.002); end
  def test_costpercapita_bo92; assert_in_delta(0.0, (worksheet.costpercapita_bo92||0), 0.002); end
  def test_costpercapita_bp92; assert_in_delta(0.0, (worksheet.costpercapita_bp92||0), 0.002); end
  def test_costpercapita_bq92; assert_in_delta(0.0, (worksheet.costpercapita_bq92||0), 0.002); end
  def test_costpercapita_bs92; assert_in_delta(0.9961806699336978, worksheet.costpercapita_bs92, 0.002); end
  def test_costpercapita_bt92; assert_in_epsilon(10.525294508589703, worksheet.costpercapita_bt92, 0.002); end
  def test_costpercapita_bu92; assert_in_epsilon(47.72491458918059, worksheet.costpercapita_bu92, 0.002); end
  def test_costpercapita_bv92; assert_in_epsilon(122.43244805557191, worksheet.costpercapita_bv92, 0.002); end
  def test_costpercapita_bw92; assert_in_epsilon(211.42271006043248, worksheet.costpercapita_bw92, 0.002); end
  def test_costpercapita_bx92; assert_in_epsilon(306.92747654285705, worksheet.costpercapita_bx92, 0.002); end
  def test_costpercapita_by92; assert_in_epsilon(384.7897182510093, worksheet.costpercapita_by92, 0.002); end
  def test_costpercapita_bz92; assert_in_epsilon(441.34407794595535, worksheet.costpercapita_bz92, 0.002); end
  def test_costpercapita_ca92; assert_in_epsilon(479.621381962198, worksheet.costpercapita_ca92, 0.002); end
  def test_costpercapita_cc92; assert_in_epsilon(222.86491139841425, worksheet.costpercapita_cc92, 0.002); end
  def test_costpercapita_cd92; assert_in_epsilon(3759.911433803959, worksheet.costpercapita_cd92, 0.002); end
  def test_costpercapita_cf92; assert_in_delta(0.5933022083922982, worksheet.costpercapita_cf92, 0.002); end
  def test_costpercapita_cg92; assert_in_epsilon(6.130389826924695, worksheet.costpercapita_cg92, 0.002); end
  def test_costpercapita_ch92; assert_in_epsilon(27.34936929395207, worksheet.costpercapita_ch92, 0.002); end
  def test_costpercapita_ci92; assert_in_epsilon(69.58504525163265, worksheet.costpercapita_ci92, 0.002); end
  def test_costpercapita_cj92; assert_in_epsilon(119.13896065534433, worksheet.costpercapita_cj92, 0.002); end
  def test_costpercapita_ck92; assert_in_epsilon(172.9569190624382, worksheet.costpercapita_ck92, 0.002); end
  def test_costpercapita_cl92; assert_in_epsilon(216.83312587462464, worksheet.costpercapita_cl92, 0.002); end
  def test_costpercapita_cm92; assert_in_epsilon(248.7021130456738, worksheet.costpercapita_cm92, 0.002); end
  def test_costpercapita_cn92; assert_in_epsilon(270.27178366374636, worksheet.costpercapita_cn92, 0.002); end
  def test_costpercapita_cp92; assert_in_epsilon(125.7290009869699, worksheet.costpercapita_cp92, 0.002); end
  def test_costpercapita_cq92; assert_in_epsilon(2123.0070068790114, worksheet.costpercapita_cq92, 0.002); end
  def test_costpercapita_cr92; assert_equal("ok", worksheet.costpercapita_cr92); end
  def test_costpercapita_a93; assert_equal("RE.e", worksheet.costpercapita_a93); end
  def test_costpercapita_b93; assert_equal("Centralized PV", worksheet.costpercapita_b93); end
  def test_costpercapita_c93; assert_equal("Electricity", worksheet.costpercapita_c93); end
  def test_costpercapita_e93; assert_in_delta(0.0, (worksheet.costpercapita_e93||0), 0.002); end
  def test_costpercapita_f93; assert_in_epsilon(4.208630432131795, worksheet.costpercapita_f93, 0.002); end
  def test_costpercapita_g93; assert_in_epsilon(112.7663755060329, worksheet.costpercapita_g93, 0.002); end
  def test_costpercapita_h93; assert_in_epsilon(205.05743793009057, worksheet.costpercapita_h93, 0.002); end
  def test_costpercapita_i93; assert_in_epsilon(283.33013241637536, worksheet.costpercapita_i93, 0.002); end
  def test_costpercapita_j93; assert_in_epsilon(354.16266552046926, worksheet.costpercapita_j93, 0.002); end
  def test_costpercapita_k93; assert_in_epsilon(424.99519862456316, worksheet.costpercapita_k93, 0.002); end
  def test_costpercapita_l93; assert_in_epsilon(495.82773172865694, worksheet.costpercapita_l93, 0.002); end
  def test_costpercapita_m93; assert_in_epsilon(566.6602648327507, worksheet.costpercapita_m93, 0.002); end
  def test_costpercapita_o93; assert_in_delta(0.0, (worksheet.costpercapita_o93||0), 0.002); end
  def test_costpercapita_p93; assert_in_epsilon(1.4093607737060392, worksheet.costpercapita_p93, 0.002); end
  def test_costpercapita_q93; assert_in_epsilon(44.990012227662824, worksheet.costpercapita_q93, 0.002); end
  def test_costpercapita_r93; assert_in_epsilon(88.5706636816196, worksheet.costpercapita_r93, 0.002); end
  def test_costpercapita_s93; assert_in_epsilon(132.1513151355764, worksheet.costpercapita_s93, 0.002); end
  def test_costpercapita_t93; assert_in_epsilon(165.18914391947052, worksheet.costpercapita_t93, 0.002); end
  def test_costpercapita_u93; assert_in_epsilon(198.22697270336462, worksheet.costpercapita_u93, 0.002); end
  def test_costpercapita_v93; assert_in_epsilon(231.26480148725872, worksheet.costpercapita_v93, 0.002); end
  def test_costpercapita_w93; assert_in_epsilon(264.3026302711528, worksheet.costpercapita_w93, 0.002); end
  def test_costpercapita_y93; assert_in_delta(0.0, (worksheet.costpercapita_y93||0), 0.002); end
  def test_costpercapita_z93; assert_in_delta(0.0, (worksheet.costpercapita_z93||0), 0.002); end
  def test_costpercapita_aa93; assert_in_delta(0.0, (worksheet.costpercapita_aa93||0), 0.002); end
  def test_costpercapita_ab93; assert_in_delta(0.0, (worksheet.costpercapita_ab93||0), 0.002); end
  def test_costpercapita_ac93; assert_in_delta(0.0, (worksheet.costpercapita_ac93||0), 0.002); end
  def test_costpercapita_ad93; assert_in_delta(0.0, (worksheet.costpercapita_ad93||0), 0.002); end
  def test_costpercapita_ae93; assert_in_delta(0.0, (worksheet.costpercapita_ae93||0), 0.002); end
  def test_costpercapita_af93; assert_in_delta(0.0, (worksheet.costpercapita_af93||0), 0.002); end
  def test_costpercapita_ag93; assert_in_delta(0.0, (worksheet.costpercapita_ag93||0), 0.002); end
  def test_costpercapita_ai93; assert_in_delta(0.0, (worksheet.costpercapita_ai93||0), 0.002); end
  def test_costpercapita_aj93; assert_in_epsilon(5.617991205837834, worksheet.costpercapita_aj93, 0.002); end
  def test_costpercapita_ak93; assert_in_epsilon(157.75638773369573, worksheet.costpercapita_ak93, 0.002); end
  def test_costpercapita_al93; assert_in_epsilon(293.6281016117102, worksheet.costpercapita_al93, 0.002); end
  def test_costpercapita_am93; assert_in_epsilon(415.48144755195176, worksheet.costpercapita_am93, 0.002); end
  def test_costpercapita_an93; assert_in_epsilon(519.3518094399398, worksheet.costpercapita_an93, 0.002); end
  def test_costpercapita_ao93; assert_in_epsilon(623.2221713279278, worksheet.costpercapita_ao93, 0.002); end
  def test_costpercapita_ap93; assert_in_epsilon(727.0925332159156, worksheet.costpercapita_ap93, 0.002); end
  def test_costpercapita_aq93; assert_in_epsilon(830.9628951039035, worksheet.costpercapita_aq93, 0.002); end
  def test_costpercapita_as93; assert_in_epsilon(397.0125930212091, worksheet.costpercapita_as93, 0.002); end
  def test_costpercapita_at93; assert_in_epsilon(6930.9435555218615, worksheet.costpercapita_at93, 0.002); end
  def test_costpercapita_av93; assert_in_delta(0.0, (worksheet.costpercapita_av93||0), 0.002); end
  def test_costpercapita_aw93; assert_in_epsilon(5.0, worksheet.costpercapita_aw93, 0.002); end
  def test_costpercapita_ay93; assert_in_delta(0.0, (worksheet.costpercapita_ay93||0), 0.002); end
  def test_costpercapita_az93; assert_in_epsilon(11.591417531705355, worksheet.costpercapita_az93, 0.002); end
  def test_costpercapita_ba93; assert_in_epsilon(310.5813549338908, worksheet.costpercapita_ba93, 0.002); end
  def test_costpercapita_bb93; assert_in_epsilon(564.7695656245735, worksheet.costpercapita_bb93, 0.002); end
  def test_costpercapita_bc93; assert_in_epsilon(780.3483620413853, worksheet.costpercapita_bc93, 0.002); end
  def test_costpercapita_bd93; assert_in_epsilon(975.4354525517317, worksheet.costpercapita_bd93, 0.002); end
  def test_costpercapita_be93; assert_in_epsilon(1170.522543062078, worksheet.costpercapita_be93, 0.002); end
  def test_costpercapita_bf93; assert_in_epsilon(1365.6096335724244, worksheet.costpercapita_bf93, 0.002); end
  def test_costpercapita_bg93; assert_in_epsilon(1560.6967240827705, worksheet.costpercapita_bg93, 0.002); end
  def test_costpercapita_bi93; assert_in_delta(0.0, (worksheet.costpercapita_bi93||0), 0.002); end
  def test_costpercapita_bj93; assert_in_delta(0.0, (worksheet.costpercapita_bj93||0), 0.002); end
  def test_costpercapita_bk93; assert_in_delta(0.0, (worksheet.costpercapita_bk93||0), 0.002); end
  def test_costpercapita_bl93; assert_in_delta(0.0, (worksheet.costpercapita_bl93||0), 0.002); end
  def test_costpercapita_bm93; assert_in_delta(0.0, (worksheet.costpercapita_bm93||0), 0.002); end
  def test_costpercapita_bn93; assert_in_delta(0.0, (worksheet.costpercapita_bn93||0), 0.002); end
  def test_costpercapita_bo93; assert_in_delta(0.0, (worksheet.costpercapita_bo93||0), 0.002); end
  def test_costpercapita_bp93; assert_in_delta(0.0, (worksheet.costpercapita_bp93||0), 0.002); end
  def test_costpercapita_bq93; assert_in_delta(0.0, (worksheet.costpercapita_bq93||0), 0.002); end
  def test_costpercapita_bs93; assert_in_delta(0.0, (worksheet.costpercapita_bs93||0), 0.002); end
  def test_costpercapita_bt93; assert_in_epsilon(13.000778305411394, worksheet.costpercapita_bt93, 0.002); end
  def test_costpercapita_bu93; assert_in_epsilon(355.57136716155367, worksheet.costpercapita_bu93, 0.002); end
  def test_costpercapita_bv93; assert_in_epsilon(653.3402293061931, worksheet.costpercapita_bv93, 0.002); end
  def test_costpercapita_bw93; assert_in_epsilon(912.4996771769617, worksheet.costpercapita_bw93, 0.002); end
  def test_costpercapita_bx93; assert_in_epsilon(1140.6245964712023, worksheet.costpercapita_bx93, 0.002); end
  def test_costpercapita_by93; assert_in_epsilon(1368.7495157654425, worksheet.costpercapita_by93, 0.002); end
  def test_costpercapita_bz93; assert_in_epsilon(1596.874435059683, worksheet.costpercapita_bz93, 0.002); end
  def test_costpercapita_ca93; assert_in_epsilon(1824.9993543539233, worksheet.costpercapita_ca93, 0.002); end
  def test_costpercapita_cc93; assert_in_epsilon(873.9622170667077, worksheet.costpercapita_cc93, 0.002); end
  def test_costpercapita_cd93; assert_in_epsilon(15282.35263179962, worksheet.costpercapita_cd93, 0.002); end
  def test_costpercapita_cf93; assert_in_delta(0.0, (worksheet.costpercapita_cf93||0), 0.002); end
  def test_costpercapita_cg93; assert_in_epsilon(7.382787099573561, worksheet.costpercapita_cg93, 0.002); end
  def test_costpercapita_ch93; assert_in_epsilon(197.8149794278579, worksheet.costpercapita_ch93, 0.002); end
  def test_costpercapita_ci93; assert_in_epsilon(359.712127694483, worksheet.costpercapita_ci93, 0.002); end
  def test_costpercapita_cj93; assert_in_epsilon(497.0182296250099, worksheet.costpercapita_cj93, 0.002); end
  def test_costpercapita_ck93; assert_in_epsilon(621.2727870312624, worksheet.costpercapita_ck93, 0.002); end
  def test_costpercapita_cl93; assert_in_epsilon(745.5273444375149, worksheet.costpercapita_cl93, 0.002); end
  def test_costpercapita_cm93; assert_in_epsilon(869.7819018437674, worksheet.costpercapita_cm93, 0.002); end
  def test_costpercapita_cn93; assert_in_epsilon(994.0364592500198, worksheet.costpercapita_cn93, 0.002); end
  def test_costpercapita_cp93; assert_in_epsilon(476.94962404549875, worksheet.costpercapita_cp93, 0.002); end
  def test_costpercapita_cq93; assert_in_epsilon(8351.409076277758, worksheet.costpercapita_cq93, 0.002); end
  def test_costpercapita_cr93; assert_equal("ok", worksheet.costpercapita_cr93); end
  def test_costpercapita_a94; assert_equal("ElcDSB.s", worksheet.costpercapita_a94); end
  def test_costpercapita_b94; assert_equal("Pumped Storage", worksheet.costpercapita_b94); end
  def test_costpercapita_c94; assert_equal("Electricity", worksheet.costpercapita_c94); end
  def test_costpercapita_e94; assert_in_delta(0.0, (worksheet.costpercapita_e94||0), 0.002); end
  def test_costpercapita_f94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_f94, 0.002); end
  def test_costpercapita_g94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_g94, 0.002); end
  def test_costpercapita_h94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_h94, 0.002); end
  def test_costpercapita_i94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_i94, 0.002); end
  def test_costpercapita_j94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_j94, 0.002); end
  def test_costpercapita_k94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_k94, 0.002); end
  def test_costpercapita_l94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_l94, 0.002); end
  def test_costpercapita_m94; assert_in_epsilon(4.095740832025899, worksheet.costpercapita_m94, 0.002); end
  def test_costpercapita_o94; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_o94, 0.002); end
  def test_costpercapita_p94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_p94, 0.002); end
  def test_costpercapita_q94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_q94, 0.002); end
  def test_costpercapita_r94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_r94, 0.002); end
  def test_costpercapita_s94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_s94, 0.002); end
  def test_costpercapita_t94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_t94, 0.002); end
  def test_costpercapita_u94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_u94, 0.002); end
  def test_costpercapita_v94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_v94, 0.002); end
  def test_costpercapita_w94; assert_in_epsilon(8.707371460191068, worksheet.costpercapita_w94, 0.002); end
  def test_costpercapita_y94; assert_in_delta(0.0, (worksheet.costpercapita_y94||0), 0.002); end
  def test_costpercapita_z94; assert_in_delta(0.0, (worksheet.costpercapita_z94||0), 0.002); end
  def test_costpercapita_aa94; assert_in_delta(0.0, (worksheet.costpercapita_aa94||0), 0.002); end
  def test_costpercapita_ab94; assert_in_delta(0.0, (worksheet.costpercapita_ab94||0), 0.002); end
  def test_costpercapita_ac94; assert_in_delta(0.0, (worksheet.costpercapita_ac94||0), 0.002); end
  def test_costpercapita_ad94; assert_in_delta(0.0, (worksheet.costpercapita_ad94||0), 0.002); end
  def test_costpercapita_ae94; assert_in_delta(0.0, (worksheet.costpercapita_ae94||0), 0.002); end
  def test_costpercapita_af94; assert_in_delta(0.0, (worksheet.costpercapita_af94||0), 0.002); end
  def test_costpercapita_ag94; assert_in_delta(0.0, (worksheet.costpercapita_ag94||0), 0.002); end
  def test_costpercapita_ai94; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_ai94, 0.002); end
  def test_costpercapita_aj94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_aj94, 0.002); end
  def test_costpercapita_ak94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ak94, 0.002); end
  def test_costpercapita_al94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_al94, 0.002); end
  def test_costpercapita_am94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_am94, 0.002); end
  def test_costpercapita_an94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_an94, 0.002); end
  def test_costpercapita_ao94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ao94, 0.002); end
  def test_costpercapita_ap94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_ap94, 0.002); end
  def test_costpercapita_aq94; assert_in_epsilon(12.803112292216966, worksheet.costpercapita_aq94, 0.002); end
  def test_costpercapita_as94; assert_in_epsilon(11.90548499948826, worksheet.costpercapita_as94, 0.002); end
  def test_costpercapita_at94; assert_in_epsilon(260.9280183723279, worksheet.costpercapita_at94, 0.002); end
  def test_costpercapita_av94; assert_in_delta(0.0, (worksheet.costpercapita_av94||0), 0.002); end
  def test_costpercapita_aw94; assert_in_epsilon(5.0, worksheet.costpercapita_aw94, 0.002); end
  def test_costpercapita_ay94; assert_in_delta(0.0, (worksheet.costpercapita_ay94||0), 0.002); end
  def test_costpercapita_az94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_az94, 0.002); end
  def test_costpercapita_ba94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_ba94, 0.002); end
  def test_costpercapita_bb94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_bb94, 0.002); end
  def test_costpercapita_bc94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_bc94, 0.002); end
  def test_costpercapita_bd94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_bd94, 0.002); end
  def test_costpercapita_be94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_be94, 0.002); end
  def test_costpercapita_bf94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_bf94, 0.002); end
  def test_costpercapita_bg94; assert_in_epsilon(23.68360837398686, worksheet.costpercapita_bg94, 0.002); end
  def test_costpercapita_bi94; assert_in_delta(0.0, (worksheet.costpercapita_bi94||0), 0.002); end
  def test_costpercapita_bj94; assert_in_delta(0.0, (worksheet.costpercapita_bj94||0), 0.002); end
  def test_costpercapita_bk94; assert_in_delta(0.0, (worksheet.costpercapita_bk94||0), 0.002); end
  def test_costpercapita_bl94; assert_in_delta(0.0, (worksheet.costpercapita_bl94||0), 0.002); end
  def test_costpercapita_bm94; assert_in_delta(0.0, (worksheet.costpercapita_bm94||0), 0.002); end
  def test_costpercapita_bn94; assert_in_delta(0.0, (worksheet.costpercapita_bn94||0), 0.002); end
  def test_costpercapita_bo94; assert_in_delta(0.0, (worksheet.costpercapita_bo94||0), 0.002); end
  def test_costpercapita_bp94; assert_in_delta(0.0, (worksheet.costpercapita_bp94||0), 0.002); end
  def test_costpercapita_bq94; assert_in_delta(0.0, (worksheet.costpercapita_bq94||0), 0.002); end
  def test_costpercapita_bs94; assert_in_epsilon(4.724466657658615, worksheet.costpercapita_bs94, 0.002); end
  def test_costpercapita_bt94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_bt94, 0.002); end
  def test_costpercapita_bu94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_bu94, 0.002); end
  def test_costpercapita_bv94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_bv94, 0.002); end
  def test_costpercapita_bw94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_bw94, 0.002); end
  def test_costpercapita_bx94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_bx94, 0.002); end
  def test_costpercapita_by94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_by94, 0.002); end
  def test_costpercapita_bz94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_bz94, 0.002); end
  def test_costpercapita_ca94; assert_in_epsilon(32.39097983417793, worksheet.costpercapita_ca94, 0.002); end
  def test_costpercapita_cc94; assert_in_epsilon(29.316922814564666, worksheet.costpercapita_cc94, 0.002); end
  def test_costpercapita_cd94; assert_in_epsilon(652.901557323293, worksheet.costpercapita_cd94, 0.002); end
  def test_costpercapita_cf94; assert_in_delta(0.0, (worksheet.costpercapita_cf94||0), 0.002); end
  def test_costpercapita_cg94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_cg94, 0.002); end
  def test_costpercapita_ch94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_ch94, 0.002); end
  def test_costpercapita_ci94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_ci94, 0.002); end
  def test_costpercapita_cj94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_cj94, 0.002); end
  def test_costpercapita_ck94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_ck94, 0.002); end
  def test_costpercapita_cl94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_cl94, 0.002); end
  def test_costpercapita_cm94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_cm94, 0.002); end
  def test_costpercapita_cn94; assert_in_epsilon(19.58786754196096, worksheet.costpercapita_cn94, 0.002); end
  def test_costpercapita_cp94; assert_in_epsilon(17.41143781507641, worksheet.costpercapita_cp94, 0.002); end
  def test_costpercapita_cq94; assert_in_epsilon(391.9735389509651, worksheet.costpercapita_cq94, 0.002); end
  def test_costpercapita_cr94; assert_equal("ok", worksheet.costpercapita_cr94); end
  def test_costpercapita_a95; assert_equal("ElcDSB.i", worksheet.costpercapita_a95); end
  def test_costpercapita_b95; assert_equal("place holder", worksheet.costpercapita_b95); end
  def test_costpercapita_c95; assert_equal("Electricity", worksheet.costpercapita_c95); end
  def test_costpercapita_e95; assert_in_delta(0.0, (worksheet.costpercapita_e95||0), 0.002); end
  def test_costpercapita_f95; assert_in_delta(0.0, (worksheet.costpercapita_f95||0), 0.002); end
  def test_costpercapita_g95; assert_in_delta(0.0, (worksheet.costpercapita_g95||0), 0.002); end
  def test_costpercapita_h95; assert_in_delta(0.0, (worksheet.costpercapita_h95||0), 0.002); end
  def test_costpercapita_i95; assert_in_delta(0.0, (worksheet.costpercapita_i95||0), 0.002); end
  def test_costpercapita_j95; assert_in_delta(0.0, (worksheet.costpercapita_j95||0), 0.002); end
  def test_costpercapita_k95; assert_in_delta(0.0, (worksheet.costpercapita_k95||0), 0.002); end
  def test_costpercapita_l95; assert_in_delta(0.0, (worksheet.costpercapita_l95||0), 0.002); end
  def test_costpercapita_m95; assert_in_delta(0.0, (worksheet.costpercapita_m95||0), 0.002); end
  def test_costpercapita_o95; assert_in_delta(0.0, (worksheet.costpercapita_o95||0), 0.002); end
  def test_costpercapita_p95; assert_in_delta(0.0, (worksheet.costpercapita_p95||0), 0.002); end
  def test_costpercapita_q95; assert_in_delta(0.0, (worksheet.costpercapita_q95||0), 0.002); end
  def test_costpercapita_r95; assert_in_delta(0.0, (worksheet.costpercapita_r95||0), 0.002); end
  def test_costpercapita_s95; assert_in_delta(0.0, (worksheet.costpercapita_s95||0), 0.002); end
  def test_costpercapita_t95; assert_in_delta(0.0, (worksheet.costpercapita_t95||0), 0.002); end
  def test_costpercapita_u95; assert_in_delta(0.0, (worksheet.costpercapita_u95||0), 0.002); end
  def test_costpercapita_v95; assert_in_delta(0.0, (worksheet.costpercapita_v95||0), 0.002); end
  def test_costpercapita_w95; assert_in_delta(0.0, (worksheet.costpercapita_w95||0), 0.002); end
  def test_costpercapita_y95; assert_in_delta(0.0, (worksheet.costpercapita_y95||0), 0.002); end
  def test_costpercapita_z95; assert_in_delta(0.0, (worksheet.costpercapita_z95||0), 0.002); end
  def test_costpercapita_aa95; assert_in_delta(0.0, (worksheet.costpercapita_aa95||0), 0.002); end
  def test_costpercapita_ab95; assert_in_delta(0.0, (worksheet.costpercapita_ab95||0), 0.002); end
  def test_costpercapita_ac95; assert_in_delta(0.0, (worksheet.costpercapita_ac95||0), 0.002); end
  def test_costpercapita_ad95; assert_in_delta(0.0, (worksheet.costpercapita_ad95||0), 0.002); end
  def test_costpercapita_ae95; assert_in_delta(0.0, (worksheet.costpercapita_ae95||0), 0.002); end
  def test_costpercapita_af95; assert_in_delta(0.0, (worksheet.costpercapita_af95||0), 0.002); end
  def test_costpercapita_ag95; assert_in_delta(0.0, (worksheet.costpercapita_ag95||0), 0.002); end
  def test_costpercapita_ai95; assert_in_delta(0.0, (worksheet.costpercapita_ai95||0), 0.002); end
  def test_costpercapita_aj95; assert_in_delta(0.0, (worksheet.costpercapita_aj95||0), 0.002); end
  def test_costpercapita_ak95; assert_in_delta(0.0, (worksheet.costpercapita_ak95||0), 0.002); end
  def test_costpercapita_al95; assert_in_delta(0.0, (worksheet.costpercapita_al95||0), 0.002); end
  def test_costpercapita_am95; assert_in_delta(0.0, (worksheet.costpercapita_am95||0), 0.002); end
  def test_costpercapita_an95; assert_in_delta(0.0, (worksheet.costpercapita_an95||0), 0.002); end
  def test_costpercapita_ao95; assert_in_delta(0.0, (worksheet.costpercapita_ao95||0), 0.002); end
  def test_costpercapita_ap95; assert_in_delta(0.0, (worksheet.costpercapita_ap95||0), 0.002); end
  def test_costpercapita_aq95; assert_in_delta(0.0, (worksheet.costpercapita_aq95||0), 0.002); end
  def test_costpercapita_as95; assert_in_delta(0.0, (worksheet.costpercapita_as95||0), 0.002); end
  def test_costpercapita_at95; assert_in_delta(0.0, (worksheet.costpercapita_at95||0), 0.002); end
  def test_costpercapita_av95; assert_in_delta(0.0, (worksheet.costpercapita_av95||0), 0.002); end
  def test_costpercapita_aw95; assert_in_epsilon(5.0, worksheet.costpercapita_aw95, 0.002); end
  def test_costpercapita_ay95; assert_in_delta(0.0, (worksheet.costpercapita_ay95||0), 0.002); end
  def test_costpercapita_az95; assert_in_delta(0.0, (worksheet.costpercapita_az95||0), 0.002); end
  def test_costpercapita_ba95; assert_in_delta(0.0, (worksheet.costpercapita_ba95||0), 0.002); end
  def test_costpercapita_bb95; assert_in_delta(0.0, (worksheet.costpercapita_bb95||0), 0.002); end
  def test_costpercapita_bc95; assert_in_delta(0.0, (worksheet.costpercapita_bc95||0), 0.002); end
  def test_costpercapita_bd95; assert_in_delta(0.0, (worksheet.costpercapita_bd95||0), 0.002); end
  def test_costpercapita_be95; assert_in_delta(0.0, (worksheet.costpercapita_be95||0), 0.002); end
  def test_costpercapita_bf95; assert_in_delta(0.0, (worksheet.costpercapita_bf95||0), 0.002); end
  def test_costpercapita_bg95; assert_in_delta(0.0, (worksheet.costpercapita_bg95||0), 0.002); end
  def test_costpercapita_bi95; assert_in_delta(0.0, (worksheet.costpercapita_bi95||0), 0.002); end
  def test_costpercapita_bj95; assert_in_delta(0.0, (worksheet.costpercapita_bj95||0), 0.002); end
  def test_costpercapita_bk95; assert_in_delta(0.0, (worksheet.costpercapita_bk95||0), 0.002); end
  def test_costpercapita_bl95; assert_in_delta(0.0, (worksheet.costpercapita_bl95||0), 0.002); end
  def test_costpercapita_bm95; assert_in_delta(0.0, (worksheet.costpercapita_bm95||0), 0.002); end
  def test_costpercapita_bn95; assert_in_delta(0.0, (worksheet.costpercapita_bn95||0), 0.002); end
  def test_costpercapita_bo95; assert_in_delta(0.0, (worksheet.costpercapita_bo95||0), 0.002); end
  def test_costpercapita_bp95; assert_in_delta(0.0, (worksheet.costpercapita_bp95||0), 0.002); end
  def test_costpercapita_bq95; assert_in_delta(0.0, (worksheet.costpercapita_bq95||0), 0.002); end
  def test_costpercapita_bs95; assert_in_delta(0.0, (worksheet.costpercapita_bs95||0), 0.002); end
  def test_costpercapita_bt95; assert_in_delta(0.0, (worksheet.costpercapita_bt95||0), 0.002); end
  def test_costpercapita_bu95; assert_in_delta(0.0, (worksheet.costpercapita_bu95||0), 0.002); end
  def test_costpercapita_bv95; assert_in_delta(0.0, (worksheet.costpercapita_bv95||0), 0.002); end
  def test_costpercapita_bw95; assert_in_delta(0.0, (worksheet.costpercapita_bw95||0), 0.002); end
  def test_costpercapita_bx95; assert_in_delta(0.0, (worksheet.costpercapita_bx95||0), 0.002); end
  def test_costpercapita_by95; assert_in_delta(0.0, (worksheet.costpercapita_by95||0), 0.002); end
  def test_costpercapita_bz95; assert_in_delta(0.0, (worksheet.costpercapita_bz95||0), 0.002); end
  def test_costpercapita_ca95; assert_in_delta(0.0, (worksheet.costpercapita_ca95||0), 0.002); end
  def test_costpercapita_cc95; assert_in_delta(0.0, (worksheet.costpercapita_cc95||0), 0.002); end
  def test_costpercapita_cd95; assert_in_delta(0.0, (worksheet.costpercapita_cd95||0), 0.002); end
  def test_costpercapita_cf95; assert_in_delta(0.0, (worksheet.costpercapita_cf95||0), 0.002); end
  def test_costpercapita_cg95; assert_in_delta(0.0, (worksheet.costpercapita_cg95||0), 0.002); end
  def test_costpercapita_ch95; assert_in_delta(0.0, (worksheet.costpercapita_ch95||0), 0.002); end
  def test_costpercapita_ci95; assert_in_delta(0.0, (worksheet.costpercapita_ci95||0), 0.002); end
  def test_costpercapita_cj95; assert_in_delta(0.0, (worksheet.costpercapita_cj95||0), 0.002); end
  def test_costpercapita_ck95; assert_in_delta(0.0, (worksheet.costpercapita_ck95||0), 0.002); end
  def test_costpercapita_cl95; assert_in_delta(0.0, (worksheet.costpercapita_cl95||0), 0.002); end
  def test_costpercapita_cm95; assert_in_delta(0.0, (worksheet.costpercapita_cm95||0), 0.002); end
  def test_costpercapita_cn95; assert_in_delta(0.0, (worksheet.costpercapita_cn95||0), 0.002); end
  def test_costpercapita_cp95; assert_in_delta(0.0, (worksheet.costpercapita_cp95||0), 0.002); end
  def test_costpercapita_cq95; assert_in_delta(0.0, (worksheet.costpercapita_cq95||0), 0.002); end
  def test_costpercapita_cr95; assert_equal("ok", worksheet.costpercapita_cr95); end
  def test_costpercapita_a96; assert_equal("ElcDSB.d", worksheet.costpercapita_a96); end
  def test_costpercapita_b96; assert_equal("Electricity Transmission and Distribution", worksheet.costpercapita_b96); end
  def test_costpercapita_c96; assert_equal("Electricity", worksheet.costpercapita_c96); end
  def test_costpercapita_e96; assert_in_epsilon(186.06524050531473, worksheet.costpercapita_e96, 0.002); end
  def test_costpercapita_f96; assert_in_epsilon(206.2939616142124, worksheet.costpercapita_f96, 0.002); end
  def test_costpercapita_g96; assert_in_epsilon(232.765133467527, worksheet.costpercapita_g96, 0.002); end
  def test_costpercapita_h96; assert_in_epsilon(266.2487473913931, worksheet.costpercapita_h96, 0.002); end
  def test_costpercapita_i96; assert_in_epsilon(249.483355848143, worksheet.costpercapita_i96, 0.002); end
  def test_costpercapita_j96; assert_in_epsilon(264.85861986525265, worksheet.costpercapita_j96, 0.002); end
  def test_costpercapita_k96; assert_in_epsilon(277.21344840182906, worksheet.costpercapita_k96, 0.002); end
  def test_costpercapita_l96; assert_in_epsilon(292.42695984071247, worksheet.costpercapita_l96, 0.002); end
  def test_costpercapita_m96; assert_in_epsilon(305.0291739836572, worksheet.costpercapita_m96, 0.002); end
  def test_costpercapita_o96; assert_in_delta(0.0, (worksheet.costpercapita_o96||0), 0.002); end
  def test_costpercapita_p96; assert_in_delta(0.0, (worksheet.costpercapita_p96||0), 0.002); end
  def test_costpercapita_q96; assert_in_delta(0.0, (worksheet.costpercapita_q96||0), 0.002); end
  def test_costpercapita_r96; assert_in_delta(0.0, (worksheet.costpercapita_r96||0), 0.002); end
  def test_costpercapita_s96; assert_in_delta(0.0, (worksheet.costpercapita_s96||0), 0.002); end
  def test_costpercapita_t96; assert_in_delta(0.0, (worksheet.costpercapita_t96||0), 0.002); end
  def test_costpercapita_u96; assert_in_delta(0.0, (worksheet.costpercapita_u96||0), 0.002); end
  def test_costpercapita_v96; assert_in_delta(0.0, (worksheet.costpercapita_v96||0), 0.002); end
  def test_costpercapita_w96; assert_in_delta(0.0, (worksheet.costpercapita_w96||0), 0.002); end
  def test_costpercapita_y96; assert_in_delta(0.0, (worksheet.costpercapita_y96||0), 0.002); end
  def test_costpercapita_z96; assert_in_delta(0.0, (worksheet.costpercapita_z96||0), 0.002); end
  def test_costpercapita_aa96; assert_in_delta(0.0, (worksheet.costpercapita_aa96||0), 0.002); end
  def test_costpercapita_ab96; assert_in_delta(0.0, (worksheet.costpercapita_ab96||0), 0.002); end
  def test_costpercapita_ac96; assert_in_delta(0.0, (worksheet.costpercapita_ac96||0), 0.002); end
  def test_costpercapita_ad96; assert_in_delta(0.0, (worksheet.costpercapita_ad96||0), 0.002); end
  def test_costpercapita_ae96; assert_in_delta(0.0, (worksheet.costpercapita_ae96||0), 0.002); end
  def test_costpercapita_af96; assert_in_delta(0.0, (worksheet.costpercapita_af96||0), 0.002); end
  def test_costpercapita_ag96; assert_in_delta(0.0, (worksheet.costpercapita_ag96||0), 0.002); end
  def test_costpercapita_ai96; assert_in_epsilon(186.06524050531473, worksheet.costpercapita_ai96, 0.002); end
  def test_costpercapita_aj96; assert_in_epsilon(206.2939616142124, worksheet.costpercapita_aj96, 0.002); end
  def test_costpercapita_ak96; assert_in_epsilon(232.765133467527, worksheet.costpercapita_ak96, 0.002); end
  def test_costpercapita_al96; assert_in_epsilon(266.2487473913931, worksheet.costpercapita_al96, 0.002); end
  def test_costpercapita_am96; assert_in_epsilon(249.483355848143, worksheet.costpercapita_am96, 0.002); end
  def test_costpercapita_an96; assert_in_epsilon(264.85861986525265, worksheet.costpercapita_an96, 0.002); end
  def test_costpercapita_ao96; assert_in_epsilon(277.21344840182906, worksheet.costpercapita_ao96, 0.002); end
  def test_costpercapita_ap96; assert_in_epsilon(292.42695984071247, worksheet.costpercapita_ap96, 0.002); end
  def test_costpercapita_aq96; assert_in_epsilon(305.0291739836572, worksheet.costpercapita_aq96, 0.002); end
  def test_costpercapita_as96; assert_in_epsilon(253.37607121311572, worksheet.costpercapita_as96, 0.002); end
  def test_costpercapita_at96; assert_in_epsilon(5208.984980978727, worksheet.costpercapita_at96, 0.002); end
  def test_costpercapita_av96; assert_in_delta(0.0, (worksheet.costpercapita_av96||0), 0.002); end
  def test_costpercapita_aw96; assert_in_epsilon(5.0, worksheet.costpercapita_aw96, 0.002); end
  def test_costpercapita_ay96; assert_in_epsilon(1120.0700558294166, worksheet.costpercapita_ay96, 0.002); end
  def test_costpercapita_az96; assert_in_epsilon(1241.8423154963348, worksheet.costpercapita_az96, 0.002); end
  def test_costpercapita_ba96; assert_in_epsilon(1401.192696336356, worksheet.costpercapita_ba96, 0.002); end
  def test_costpercapita_bb96; assert_in_epsilon(1602.756369461021, worksheet.costpercapita_bb96, 0.002); end
  def test_costpercapita_bc96; assert_in_epsilon(1501.8325591305588, worksheet.costpercapita_bc96, 0.002); end
  def test_costpercapita_bd96; assert_in_epsilon(1594.3881207135087, worksheet.costpercapita_bd96, 0.002); end
  def test_costpercapita_be96; assert_in_epsilon(1668.7613537319066, worksheet.costpercapita_be96, 0.002); end
  def test_costpercapita_bf96; assert_in_epsilon(1760.3432019074921, worksheet.costpercapita_bf96, 0.002); end
  def test_costpercapita_bg96; assert_in_epsilon(1836.2056395144737, worksheet.costpercapita_bg96, 0.002); end
  def test_costpercapita_bi96; assert_in_delta(0.0, (worksheet.costpercapita_bi96||0), 0.002); end
  def test_costpercapita_bj96; assert_in_delta(0.0, (worksheet.costpercapita_bj96||0), 0.002); end
  def test_costpercapita_bk96; assert_in_delta(0.0, (worksheet.costpercapita_bk96||0), 0.002); end
  def test_costpercapita_bl96; assert_in_delta(0.0, (worksheet.costpercapita_bl96||0), 0.002); end
  def test_costpercapita_bm96; assert_in_delta(0.0, (worksheet.costpercapita_bm96||0), 0.002); end
  def test_costpercapita_bn96; assert_in_delta(0.0, (worksheet.costpercapita_bn96||0), 0.002); end
  def test_costpercapita_bo96; assert_in_delta(0.0, (worksheet.costpercapita_bo96||0), 0.002); end
  def test_costpercapita_bp96; assert_in_delta(0.0, (worksheet.costpercapita_bp96||0), 0.002); end
  def test_costpercapita_bq96; assert_in_delta(0.0, (worksheet.costpercapita_bq96||0), 0.002); end
  def test_costpercapita_bs96; assert_in_epsilon(1120.0700558294166, worksheet.costpercapita_bs96, 0.002); end
  def test_costpercapita_bt96; assert_in_epsilon(1241.8423154963348, worksheet.costpercapita_bt96, 0.002); end
  def test_costpercapita_bu96; assert_in_epsilon(1401.192696336356, worksheet.costpercapita_bu96, 0.002); end
  def test_costpercapita_bv96; assert_in_epsilon(1602.756369461021, worksheet.costpercapita_bv96, 0.002); end
  def test_costpercapita_bw96; assert_in_epsilon(1501.8325591305588, worksheet.costpercapita_bw96, 0.002); end
  def test_costpercapita_bx96; assert_in_epsilon(1594.3881207135087, worksheet.costpercapita_bx96, 0.002); end
  def test_costpercapita_by96; assert_in_epsilon(1668.7613537319066, worksheet.costpercapita_by96, 0.002); end
  def test_costpercapita_bz96; assert_in_epsilon(1760.3432019074921, worksheet.costpercapita_bz96, 0.002); end
  def test_costpercapita_ca96; assert_in_epsilon(1836.2056395144737, worksheet.costpercapita_ca96, 0.002); end
  def test_costpercapita_cc96; assert_in_epsilon(1525.2658124578966, worksheet.costpercapita_cc96, 0.002); end
  def test_costpercapita_cd96; assert_in_epsilon(31356.894402277045, worksheet.costpercapita_cd96, 0.002); end
  def test_costpercapita_cf96; assert_in_epsilon(934.004815324102, worksheet.costpercapita_cf96, 0.002); end
  def test_costpercapita_cg96; assert_in_epsilon(1035.5483538821222, worksheet.costpercapita_cg96, 0.002); end
  def test_costpercapita_ch96; assert_in_epsilon(1168.427562868829, worksheet.costpercapita_ch96, 0.002); end
  def test_costpercapita_ci96; assert_in_epsilon(1336.5076220696278, worksheet.costpercapita_ci96, 0.002); end
  def test_costpercapita_cj96; assert_in_epsilon(1252.3492032824156, worksheet.costpercapita_cj96, 0.002); end
  def test_costpercapita_ck96; assert_in_epsilon(1329.529500848256, worksheet.costpercapita_ck96, 0.002); end
  def test_costpercapita_cl96; assert_in_epsilon(1391.5479053300776, worksheet.costpercapita_cl96, 0.002); end
  def test_costpercapita_cm96; assert_in_epsilon(1467.9162420667797, worksheet.costpercapita_cm96, 0.002); end
  def test_costpercapita_cn96; assert_in_epsilon(1531.1764655308166, worksheet.costpercapita_cn96, 0.002); end
  def test_costpercapita_cp96; assert_in_epsilon(1271.889741244781, worksheet.costpercapita_cp96, 0.002); end
  def test_costpercapita_cq96; assert_in_epsilon(26147.90942129831, worksheet.costpercapita_cq96, 0.002); end
  def test_costpercapita_cr96; assert_equal("ok", worksheet.costpercapita_cr96); end
  def test_costpercapita_a97; assert_equal("H2Prod", worksheet.costpercapita_a97); end
  def test_costpercapita_b97; assert_equal("H2 Production", worksheet.costpercapita_b97); end
  def test_costpercapita_c97; assert_equal("Transport", worksheet.costpercapita_c97); end
  def test_costpercapita_e97; assert_in_delta(0.0, (worksheet.costpercapita_e97||0), 0.002); end
  def test_costpercapita_f97; assert_in_delta(0.17783104209597705, worksheet.costpercapita_f97, 0.002); end
  def test_costpercapita_g97; assert_in_delta(0.5330857803716716, worksheet.costpercapita_g97, 0.002); end
  def test_costpercapita_h97; assert_in_delta(0.9099393112165712, worksheet.costpercapita_h97, 0.002); end
  def test_costpercapita_i97; assert_in_epsilon(1.3893607972917523, worksheet.costpercapita_i97, 0.002); end
  def test_costpercapita_j97; assert_in_epsilon(1.9257225118285977, worksheet.costpercapita_j97, 0.002); end
  def test_costpercapita_k97; assert_in_epsilon(2.582338963790666, worksheet.costpercapita_k97, 0.002); end
  def test_costpercapita_l97; assert_in_epsilon(3.353073026608355, worksheet.costpercapita_l97, 0.002); end
  def test_costpercapita_m97; assert_in_epsilon(4.323726688205867, worksheet.costpercapita_m97, 0.002); end
  def test_costpercapita_o97; assert_in_delta(0.0, (worksheet.costpercapita_o97||0), 0.002); end
  def test_costpercapita_p97; assert_in_delta(0.2689676976429293, worksheet.costpercapita_p97, 0.002); end
  def test_costpercapita_q97; assert_in_delta(0.9021451667828289, worksheet.costpercapita_q97, 0.002); end
  def test_costpercapita_r97; assert_in_epsilon(1.5781410007626409, worksheet.costpercapita_r97, 0.002); end
  def test_costpercapita_s97; assert_in_epsilon(2.468628592295038, worksheet.costpercapita_s97, 0.002); end
  def test_costpercapita_t97; assert_in_epsilon(3.5027048840844195, worksheet.costpercapita_t97, 0.002); end
  def test_costpercapita_u97; assert_in_epsilon(4.802617313131766, worksheet.costpercapita_u97, 0.002); end
  def test_costpercapita_v97; assert_in_epsilon(6.366692525569676, worksheet.costpercapita_v97, 0.002); end
  def test_costpercapita_w97; assert_in_epsilon(8.368503267495225, worksheet.costpercapita_w97, 0.002); end
  def test_costpercapita_y97; assert_in_delta(0.0, (worksheet.costpercapita_y97||0), 0.002); end
  def test_costpercapita_z97; assert_in_delta(0.0, (worksheet.costpercapita_z97||0), 0.002); end
  def test_costpercapita_aa97; assert_in_delta(0.0, (worksheet.costpercapita_aa97||0), 0.002); end
  def test_costpercapita_ab97; assert_in_delta(0.0, (worksheet.costpercapita_ab97||0), 0.002); end
  def test_costpercapita_ac97; assert_in_delta(0.0, (worksheet.costpercapita_ac97||0), 0.002); end
  def test_costpercapita_ad97; assert_in_delta(0.0, (worksheet.costpercapita_ad97||0), 0.002); end
  def test_costpercapita_ae97; assert_in_delta(0.0, (worksheet.costpercapita_ae97||0), 0.002); end
  def test_costpercapita_af97; assert_in_delta(0.0, (worksheet.costpercapita_af97||0), 0.002); end
  def test_costpercapita_ag97; assert_in_delta(0.0, (worksheet.costpercapita_ag97||0), 0.002); end
  def test_costpercapita_ai97; assert_in_delta(0.0, (worksheet.costpercapita_ai97||0), 0.002); end
  def test_costpercapita_aj97; assert_in_delta(0.4467987397389064, worksheet.costpercapita_aj97, 0.002); end
  def test_costpercapita_ak97; assert_in_epsilon(1.4352309471545006, worksheet.costpercapita_ak97, 0.002); end
  def test_costpercapita_al97; assert_in_epsilon(2.488080311979212, worksheet.costpercapita_al97, 0.002); end
  def test_costpercapita_am97; assert_in_epsilon(3.8579893895867903, worksheet.costpercapita_am97, 0.002); end
  def test_costpercapita_an97; assert_in_epsilon(5.428427395913017, worksheet.costpercapita_an97, 0.002); end
  def test_costpercapita_ao97; assert_in_epsilon(7.384956276922432, worksheet.costpercapita_ao97, 0.002); end
  def test_costpercapita_ap97; assert_in_epsilon(9.719765552178032, worksheet.costpercapita_ap97, 0.002); end
  def test_costpercapita_aq97; assert_in_epsilon(12.692229955701091, worksheet.costpercapita_aq97, 0.002); end
  def test_costpercapita_as97; assert_in_epsilon(4.828164285463775, worksheet.costpercapita_as97, 0.002); end
  def test_costpercapita_at97; assert_in_epsilon(80.48858423984339, worksheet.costpercapita_at97, 0.002); end
  def test_costpercapita_av97; assert_in_delta(0.0, (worksheet.costpercapita_av97||0), 0.002); end
  def test_costpercapita_aw97; assert_in_epsilon(5.0, worksheet.costpercapita_aw97, 0.002); end
  def test_costpercapita_ay97; assert_in_delta(0.0, (worksheet.costpercapita_ay97||0), 0.002); end
  def test_costpercapita_az97; assert_in_delta(0.3507017812826308, worksheet.costpercapita_az97, 0.002); end
  def test_costpercapita_ba97; assert_in_epsilon(1.051302014256238, worksheet.costpercapita_ba97, 0.002); end
  def test_costpercapita_bb97; assert_in_epsilon(1.7944973697590498, worksheet.costpercapita_bb97, 0.002); end
  def test_costpercapita_bc97; assert_in_epsilon(2.739967672187961, worksheet.costpercapita_bc97, 0.002); end
  def test_costpercapita_bd97; assert_in_epsilon(3.797730178007146, worksheet.costpercapita_bd97, 0.002); end
  def test_costpercapita_be97; assert_in_epsilon(5.092647851594731, worksheet.costpercapita_be97, 0.002); end
  def test_costpercapita_bf97; assert_in_epsilon(6.612617624810592, worksheet.costpercapita_bf97, 0.002); end
  def test_costpercapita_bg97; assert_in_epsilon(8.526850168907325, worksheet.costpercapita_bg97, 0.002); end
  def test_costpercapita_bi97; assert_in_delta(0.0, (worksheet.costpercapita_bi97||0), 0.002); end
  def test_costpercapita_bj97; assert_in_delta(0.0, (worksheet.costpercapita_bj97||0), 0.002); end
  def test_costpercapita_bk97; assert_in_delta(0.0, (worksheet.costpercapita_bk97||0), 0.002); end
  def test_costpercapita_bl97; assert_in_delta(0.0, (worksheet.costpercapita_bl97||0), 0.002); end
  def test_costpercapita_bm97; assert_in_delta(0.0, (worksheet.costpercapita_bm97||0), 0.002); end
  def test_costpercapita_bn97; assert_in_delta(0.0, (worksheet.costpercapita_bn97||0), 0.002); end
  def test_costpercapita_bo97; assert_in_delta(0.0, (worksheet.costpercapita_bo97||0), 0.002); end
  def test_costpercapita_bp97; assert_in_delta(0.0, (worksheet.costpercapita_bp97||0), 0.002); end
  def test_costpercapita_bq97; assert_in_delta(0.0, (worksheet.costpercapita_bq97||0), 0.002); end
  def test_costpercapita_bs97; assert_in_delta(0.0, (worksheet.costpercapita_bs97||0), 0.002); end
  def test_costpercapita_bt97; assert_in_delta(0.6196694789255601, worksheet.costpercapita_bt97, 0.002); end
  def test_costpercapita_bu97; assert_in_epsilon(1.953447181039067, worksheet.costpercapita_bu97, 0.002); end
  def test_costpercapita_bv97; assert_in_epsilon(3.372638370521691, worksheet.costpercapita_bv97, 0.002); end
  def test_costpercapita_bw97; assert_in_epsilon(5.208596264482999, worksheet.costpercapita_bw97, 0.002); end
  def test_costpercapita_bx97; assert_in_epsilon(7.300435062091565, worksheet.costpercapita_bx97, 0.002); end
  def test_costpercapita_by97; assert_in_epsilon(9.895265164726498, worksheet.costpercapita_by97, 0.002); end
  def test_costpercapita_bz97; assert_in_epsilon(12.979310150380268, worksheet.costpercapita_bz97, 0.002); end
  def test_costpercapita_ca97; assert_in_epsilon(16.89535343640255, worksheet.costpercapita_ca97, 0.002); end
  def test_costpercapita_cc97; assert_in_epsilon(6.469412789841133, worksheet.costpercapita_cc97, 0.002); end
  def test_costpercapita_cd97; assert_in_epsilon(108.09959396841506, worksheet.costpercapita_cd97, 0.002); end
  def test_costpercapita_cf97; assert_in_delta(0.0, (worksheet.costpercapita_cf97||0), 0.002); end
  def test_costpercapita_cg97; assert_in_delta(0.17287073918665374, worksheet.costpercapita_cg97, 0.002); end
  def test_costpercapita_ch97; assert_in_delta(0.5182162338845664, worksheet.costpercapita_ch97, 0.002); end
  def test_costpercapita_ci97; assert_in_delta(0.8845580585424787, worksheet.costpercapita_ci97, 0.002); end
  def test_costpercapita_cj97; assert_in_epsilon(1.3506068748962088, worksheet.costpercapita_cj97, 0.002); end
  def test_costpercapita_ck97; assert_in_epsilon(1.8720076661785483, worksheet.costpercapita_ck97, 0.002); end
  def test_costpercapita_cl97; assert_in_epsilon(2.5103088878040656, worksheet.costpercapita_cl97, 0.002); end
  def test_costpercapita_cm97; assert_in_epsilon(3.2595445982022375, worksheet.costpercapita_cm97, 0.002); end
  def test_costpercapita_cn97; assert_in_epsilon(4.203123480701457, worksheet.costpercapita_cn97, 0.002); end
  def test_costpercapita_cp97; assert_in_epsilon(1.6412485043773575, worksheet.costpercapita_cp97, 0.002); end
  def test_costpercapita_cq97; assert_in_epsilon(27.6110097285717, worksheet.costpercapita_cq97, 0.002); end
  def test_costpercapita_cr97; assert_equal("ok", worksheet.costpercapita_cr97); end
  def test_costpercapita_a98; assert_equal("COM.A", worksheet.costpercapita_a98); end
  def test_costpercapita_b98; assert_equal("Commercial", worksheet.costpercapita_b98); end
  def test_costpercapita_c98; assert_equal("Buildings", worksheet.costpercapita_c98); end
  def test_costpercapita_e98; assert_in_epsilon(1048.2516379110984, worksheet.costpercapita_e98, 0.002); end
  def test_costpercapita_f98; assert_in_epsilon(1048.0514634556869, worksheet.costpercapita_f98, 0.002); end
  def test_costpercapita_g98; assert_in_epsilon(1064.235667024063, worksheet.costpercapita_g98, 0.002); end
  def test_costpercapita_h98; assert_in_epsilon(1081.6747587387863, worksheet.costpercapita_h98, 0.002); end
  def test_costpercapita_i98; assert_in_epsilon(1092.3263894662139, worksheet.costpercapita_i98, 0.002); end
  def test_costpercapita_j98; assert_in_epsilon(1200.9308285136462, worksheet.costpercapita_j98, 0.002); end
  def test_costpercapita_k98; assert_in_epsilon(1323.6813750967972, worksheet.costpercapita_k98, 0.002); end
  def test_costpercapita_l98; assert_in_epsilon(1462.179388243107, worksheet.costpercapita_l98, 0.002); end
  def test_costpercapita_m98; assert_in_epsilon(1618.2123336877269, worksheet.costpercapita_m98, 0.002); end
  def test_costpercapita_o98; assert_in_epsilon(69.81986040301211, worksheet.costpercapita_o98, 0.002); end
  def test_costpercapita_p98; assert_in_epsilon(69.17582215222042, worksheet.costpercapita_p98, 0.002); end
  def test_costpercapita_q98; assert_in_epsilon(69.6290953707236, worksheet.costpercapita_q98, 0.002); end
  def test_costpercapita_r98; assert_in_epsilon(69.97173687557975, worksheet.costpercapita_r98, 0.002); end
  def test_costpercapita_s98; assert_in_epsilon(69.81472541748853, worksheet.costpercapita_s98, 0.002); end
  def test_costpercapita_t98; assert_in_epsilon(77.34265987654476, worksheet.costpercapita_t98, 0.002); end
  def test_costpercapita_u98; assert_in_epsilon(85.82834087141454, worksheet.costpercapita_u98, 0.002); end
  def test_costpercapita_v98; assert_in_epsilon(95.38399500460172, worksheet.costpercapita_v98, 0.002); end
  def test_costpercapita_w98; assert_in_epsilon(106.13520311206157, worksheet.costpercapita_w98, 0.002); end
  def test_costpercapita_y98; assert_in_delta(0.0, (worksheet.costpercapita_y98||0), 0.002); end
  def test_costpercapita_z98; assert_in_delta(0.0, (worksheet.costpercapita_z98||0), 0.002); end
  def test_costpercapita_aa98; assert_in_delta(0.0, (worksheet.costpercapita_aa98||0), 0.002); end
  def test_costpercapita_ab98; assert_in_delta(0.0, (worksheet.costpercapita_ab98||0), 0.002); end
  def test_costpercapita_ac98; assert_in_delta(0.0, (worksheet.costpercapita_ac98||0), 0.002); end
  def test_costpercapita_ad98; assert_in_delta(0.0, (worksheet.costpercapita_ad98||0), 0.002); end
  def test_costpercapita_ae98; assert_in_delta(0.0, (worksheet.costpercapita_ae98||0), 0.002); end
  def test_costpercapita_af98; assert_in_delta(0.0, (worksheet.costpercapita_af98||0), 0.002); end
  def test_costpercapita_ag98; assert_in_delta(0.0, (worksheet.costpercapita_ag98||0), 0.002); end
  def test_costpercapita_ai98; assert_in_epsilon(1118.0714983141106, worksheet.costpercapita_ai98, 0.002); end
  def test_costpercapita_aj98; assert_in_epsilon(1117.2272856079073, worksheet.costpercapita_aj98, 0.002); end
  def test_costpercapita_ak98; assert_in_epsilon(1133.8647623947868, worksheet.costpercapita_ak98, 0.002); end
  def test_costpercapita_al98; assert_in_epsilon(1151.646495614366, worksheet.costpercapita_al98, 0.002); end
  def test_costpercapita_am98; assert_in_epsilon(1162.1411148837026, worksheet.costpercapita_am98, 0.002); end
  def test_costpercapita_an98; assert_in_epsilon(1278.273488390191, worksheet.costpercapita_an98, 0.002); end
  def test_costpercapita_ao98; assert_in_epsilon(1409.5097159682116, worksheet.costpercapita_ao98, 0.002); end
  def test_costpercapita_ap98; assert_in_epsilon(1557.5633832477085, worksheet.costpercapita_ap98, 0.002); end
  def test_costpercapita_aq98; assert_in_epsilon(1724.3475367997885, worksheet.costpercapita_aq98, 0.002); end
  def test_costpercapita_as98; assert_in_epsilon(1294.738364580086, worksheet.costpercapita_as98, 0.002); end
  def test_costpercapita_at98; assert_in_epsilon(26092.296817250244, worksheet.costpercapita_at98, 0.002); end
  def test_costpercapita_av98; assert_in_delta(0.0, (worksheet.costpercapita_av98||0), 0.002); end
  def test_costpercapita_aw98; assert_in_epsilon(5.0, worksheet.costpercapita_aw98, 0.002); end
  def test_costpercapita_ay98; assert_in_epsilon(2067.2640294681937, worksheet.costpercapita_ay98, 0.002); end
  def test_costpercapita_az98; assert_in_epsilon(2066.869264092854, worksheet.costpercapita_az98, 0.002); end
  def test_costpercapita_ba98; assert_in_epsilon(2098.7862396285814, worksheet.costpercapita_ba98, 0.002); end
  def test_costpercapita_bb98; assert_in_epsilon(2133.177988426881, worksheet.costpercapita_bb98, 0.002); end
  def test_costpercapita_bc98; assert_in_epsilon(2154.184140253048, worksheet.costpercapita_bc98, 0.002); end
  def test_costpercapita_bd98; assert_in_epsilon(2368.3636770775533, worksheet.costpercapita_bd98, 0.002); end
  def test_costpercapita_be98; assert_in_epsilon(2610.4408466916952, worksheet.costpercapita_be98, 0.002); end
  def test_costpercapita_bf98; assert_in_epsilon(2883.57369988783, worksheet.costpercapita_bf98, 0.002); end
  def test_costpercapita_bg98; assert_in_epsilon(3191.287309734812, worksheet.costpercapita_bg98, 0.002); end
  def test_costpercapita_bi98; assert_in_delta(0.0, (worksheet.costpercapita_bi98||0), 0.002); end
  def test_costpercapita_bj98; assert_in_delta(0.0, (worksheet.costpercapita_bj98||0), 0.002); end
  def test_costpercapita_bk98; assert_in_delta(0.0, (worksheet.costpercapita_bk98||0), 0.002); end
  def test_costpercapita_bl98; assert_in_delta(0.0, (worksheet.costpercapita_bl98||0), 0.002); end
  def test_costpercapita_bm98; assert_in_delta(0.0, (worksheet.costpercapita_bm98||0), 0.002); end
  def test_costpercapita_bn98; assert_in_delta(0.0, (worksheet.costpercapita_bn98||0), 0.002); end
  def test_costpercapita_bo98; assert_in_delta(0.0, (worksheet.costpercapita_bo98||0), 0.002); end
  def test_costpercapita_bp98; assert_in_delta(0.0, (worksheet.costpercapita_bp98||0), 0.002); end
  def test_costpercapita_bq98; assert_in_delta(0.0, (worksheet.costpercapita_bq98||0), 0.002); end
  def test_costpercapita_bs98; assert_in_epsilon(2137.083889871206, worksheet.costpercapita_bs98, 0.002); end
  def test_costpercapita_bt98; assert_in_epsilon(2136.0450862450743, worksheet.costpercapita_bt98, 0.002); end
  def test_costpercapita_bu98; assert_in_epsilon(2168.4153349993053, worksheet.costpercapita_bu98, 0.002); end
  def test_costpercapita_bv98; assert_in_epsilon(2203.1497253024604, worksheet.costpercapita_bv98, 0.002); end
  def test_costpercapita_bw98; assert_in_epsilon(2223.998865670537, worksheet.costpercapita_bw98, 0.002); end
  def test_costpercapita_bx98; assert_in_epsilon(2445.706336954098, worksheet.costpercapita_bx98, 0.002); end
  def test_costpercapita_by98; assert_in_epsilon(2696.26918756311, worksheet.costpercapita_by98, 0.002); end
  def test_costpercapita_bz98; assert_in_epsilon(2978.957694892432, worksheet.costpercapita_bz98, 0.002); end
  def test_costpercapita_ca98; assert_in_epsilon(3297.422512846874, worksheet.costpercapita_ca98, 0.002); end
  def test_costpercapita_cc98; assert_in_epsilon(2476.3387371494555, worksheet.costpercapita_cc98, 0.002); end
  def test_costpercapita_cd98; assert_in_epsilon(49905.413016140694, worksheet.costpercapita_cd98, 0.002); end
  def test_costpercapita_cf98; assert_in_epsilon(1019.0123915570953, worksheet.costpercapita_cf98, 0.002); end
  def test_costpercapita_cg98; assert_in_epsilon(1018.817800637167, worksheet.costpercapita_cg98, 0.002); end
  def test_costpercapita_ch98; assert_in_epsilon(1034.5505726045183, worksheet.costpercapita_ch98, 0.002); end
  def test_costpercapita_ci98; assert_in_epsilon(1051.5032296880943, worksheet.costpercapita_ci98, 0.002); end
  def test_costpercapita_cj98; assert_in_epsilon(1061.8577507868342, worksheet.costpercapita_cj98, 0.002); end
  def test_costpercapita_ck98; assert_in_epsilon(1167.432848563907, worksheet.costpercapita_ck98, 0.002); end
  def test_costpercapita_cl98; assert_in_epsilon(1286.759471594898, worksheet.costpercapita_cl98, 0.002); end
  def test_costpercapita_cm98; assert_in_epsilon(1421.3943116447228, worksheet.costpercapita_cm98, 0.002); end
  def test_costpercapita_cn98; assert_in_epsilon(1573.074976047085, worksheet.costpercapita_cn98, 0.002); end
  def test_costpercapita_cp98; assert_in_epsilon(1181.600372569369, worksheet.costpercapita_cp98, 0.002); end
  def test_costpercapita_cq98; assert_in_epsilon(23813.116198890453, worksheet.costpercapita_cq98, 0.002); end
  def test_costpercapita_cr98; assert_equal("ok", worksheet.costpercapita_cr98); end
  def test_costpercapita_a99; assert_equal("RES.L", worksheet.costpercapita_a99); end
  def test_costpercapita_b99; assert_equal("Residential lighting", worksheet.costpercapita_b99); end
  def test_costpercapita_c99; assert_equal("Buildings", worksheet.costpercapita_c99); end
  def test_costpercapita_e99; assert_in_epsilon(355.31948043794904, worksheet.costpercapita_e99, 0.002); end
  def test_costpercapita_f99; assert_in_epsilon(413.2399730360954, worksheet.costpercapita_f99, 0.002); end
  def test_costpercapita_g99; assert_in_epsilon(479.40327551805007, worksheet.costpercapita_g99, 0.002); end
  def test_costpercapita_h99; assert_in_epsilon(523.7637412122215, worksheet.costpercapita_h99, 0.002); end
  def test_costpercapita_i99; assert_in_epsilon(562.7498021885565, worksheet.costpercapita_i99, 0.002); end
  def test_costpercapita_j99; assert_in_epsilon(597.0078770392049, worksheet.costpercapita_j99, 0.002); end
  def test_costpercapita_k99; assert_in_epsilon(627.3517854275314, worksheet.costpercapita_k99, 0.002); end
  def test_costpercapita_l99; assert_in_epsilon(653.3426588652613, worksheet.costpercapita_l99, 0.002); end
  def test_costpercapita_m99; assert_in_epsilon(675.2092028996831, worksheet.costpercapita_m99, 0.002); end
  def test_costpercapita_o99; assert_in_epsilon(11.927054924797314, worksheet.costpercapita_o99, 0.002); end
  def test_costpercapita_p99; assert_in_epsilon(13.900538723179764, worksheet.costpercapita_p99, 0.002); end
  def test_costpercapita_q99; assert_in_epsilon(16.167764459994473, worksheet.costpercapita_q99, 0.002); end
  def test_costpercapita_r99; assert_in_epsilon(17.716740353719267, worksheet.costpercapita_r99, 0.002); end
  def test_costpercapita_s99; assert_in_epsilon(19.078729492292744, worksheet.costpercapita_s99, 0.002); end
  def test_costpercapita_t99; assert_in_epsilon(20.275156575390035, worksheet.costpercapita_t99, 0.002); end
  def test_costpercapita_u99; assert_in_epsilon(21.333568848416693, worksheet.costpercapita_u99, 0.002); end
  def test_costpercapita_v99; assert_in_epsilon(22.239143462058724, worksheet.costpercapita_v99, 0.002); end
  def test_costpercapita_w99; assert_in_epsilon(22.99982060332902, worksheet.costpercapita_w99, 0.002); end
  def test_costpercapita_y99; assert_in_delta(0.0, (worksheet.costpercapita_y99||0), 0.002); end
  def test_costpercapita_z99; assert_in_delta(0.0, (worksheet.costpercapita_z99||0), 0.002); end
  def test_costpercapita_aa99; assert_in_delta(0.0, (worksheet.costpercapita_aa99||0), 0.002); end
  def test_costpercapita_ab99; assert_in_delta(0.0, (worksheet.costpercapita_ab99||0), 0.002); end
  def test_costpercapita_ac99; assert_in_delta(0.0, (worksheet.costpercapita_ac99||0), 0.002); end
  def test_costpercapita_ad99; assert_in_delta(0.0, (worksheet.costpercapita_ad99||0), 0.002); end
  def test_costpercapita_ae99; assert_in_delta(0.0, (worksheet.costpercapita_ae99||0), 0.002); end
  def test_costpercapita_af99; assert_in_delta(0.0, (worksheet.costpercapita_af99||0), 0.002); end
  def test_costpercapita_ag99; assert_in_delta(0.0, (worksheet.costpercapita_ag99||0), 0.002); end
  def test_costpercapita_ai99; assert_in_epsilon(367.24653536274633, worksheet.costpercapita_ai99, 0.002); end
  def test_costpercapita_aj99; assert_in_epsilon(427.1405117592752, worksheet.costpercapita_aj99, 0.002); end
  def test_costpercapita_ak99; assert_in_epsilon(495.57103997804455, worksheet.costpercapita_ak99, 0.002); end
  def test_costpercapita_al99; assert_in_epsilon(541.4804815659407, worksheet.costpercapita_al99, 0.002); end
  def test_costpercapita_am99; assert_in_epsilon(581.8285316808492, worksheet.costpercapita_am99, 0.002); end
  def test_costpercapita_an99; assert_in_epsilon(617.2830336145948, worksheet.costpercapita_an99, 0.002); end
  def test_costpercapita_ao99; assert_in_epsilon(648.685354275948, worksheet.costpercapita_ao99, 0.002); end
  def test_costpercapita_ap99; assert_in_epsilon(675.5818023273201, worksheet.costpercapita_ap99, 0.002); end
  def test_costpercapita_aq99; assert_in_epsilon(698.2090235030121, worksheet.costpercapita_aq99, 0.002); end
  def test_costpercapita_as99; assert_in_epsilon(561.447368229748, worksheet.costpercapita_as99, 0.002); end
  def test_costpercapita_at99; assert_in_epsilon(11425.299249259178, worksheet.costpercapita_at99, 0.002); end
  def test_costpercapita_av99; assert_in_delta(0.0, (worksheet.costpercapita_av99||0), 0.002); end
  def test_costpercapita_aw99; assert_in_epsilon(5.0, worksheet.costpercapita_aw99, 0.002); end
  def test_costpercapita_ay99; assert_in_epsilon(578.2660915332287, worksheet.costpercapita_ay99, 0.002); end
  def test_costpercapita_az99; assert_in_epsilon(672.529025929978, worksheet.costpercapita_az99, 0.002); end
  def test_costpercapita_ba99; assert_in_epsilon(780.2067538215458, worksheet.costpercapita_ba99, 0.002); end
  def test_costpercapita_bb99; assert_in_epsilon(852.401368887246, worksheet.costpercapita_bb99, 0.002); end
  def test_costpercapita_bc99; assert_in_epsilon(915.8493877723192, worksheet.costpercapita_bc99, 0.002); end
  def test_costpercapita_bd99; assert_in_epsilon(971.6028269671533, worksheet.costpercapita_bd99, 0.002); end
  def test_costpercapita_be99; assert_in_epsilon(1020.9861404965229, worksheet.costpercapita_be99, 0.002); end
  def test_costpercapita_bf99; assert_in_epsilon(1063.2850901061704, worksheet.costpercapita_bf99, 0.002); end
  def test_costpercapita_bg99; assert_in_epsilon(1098.8718835421482, worksheet.costpercapita_bg99, 0.002); end
  def test_costpercapita_bi99; assert_in_delta(0.0, (worksheet.costpercapita_bi99||0), 0.002); end
  def test_costpercapita_bj99; assert_in_delta(0.0, (worksheet.costpercapita_bj99||0), 0.002); end
  def test_costpercapita_bk99; assert_in_delta(0.0, (worksheet.costpercapita_bk99||0), 0.002); end
  def test_costpercapita_bl99; assert_in_delta(0.0, (worksheet.costpercapita_bl99||0), 0.002); end
  def test_costpercapita_bm99; assert_in_delta(0.0, (worksheet.costpercapita_bm99||0), 0.002); end
  def test_costpercapita_bn99; assert_in_delta(0.0, (worksheet.costpercapita_bn99||0), 0.002); end
  def test_costpercapita_bo99; assert_in_delta(0.0, (worksheet.costpercapita_bo99||0), 0.002); end
  def test_costpercapita_bp99; assert_in_delta(0.0, (worksheet.costpercapita_bp99||0), 0.002); end
  def test_costpercapita_bq99; assert_in_delta(0.0, (worksheet.costpercapita_bq99||0), 0.002); end
  def test_costpercapita_bs99; assert_in_epsilon(590.193146458026, worksheet.costpercapita_bs99, 0.002); end
  def test_costpercapita_bt99; assert_in_epsilon(686.4295646531579, worksheet.costpercapita_bt99, 0.002); end
  def test_costpercapita_bu99; assert_in_epsilon(796.3745182815403, worksheet.costpercapita_bu99, 0.002); end
  def test_costpercapita_bv99; assert_in_epsilon(870.1181092409653, worksheet.costpercapita_bv99, 0.002); end
  def test_costpercapita_bw99; assert_in_epsilon(934.928117264612, worksheet.costpercapita_bw99, 0.002); end
  def test_costpercapita_bx99; assert_in_epsilon(991.8779835425435, worksheet.costpercapita_bx99, 0.002); end
  def test_costpercapita_by99; assert_in_epsilon(1042.3197093449396, worksheet.costpercapita_by99, 0.002); end
  def test_costpercapita_bz99; assert_in_epsilon(1085.5242335682292, worksheet.costpercapita_bz99, 0.002); end
  def test_costpercapita_ca99; assert_in_epsilon(1121.8717041454772, worksheet.costpercapita_ca99, 0.002); end
  def test_costpercapita_cc99; assert_in_epsilon(902.1818984999434, worksheet.costpercapita_cc99, 0.002); end
  def test_costpercapita_cd99; assert_in_epsilon(18359.39793733057, worksheet.costpercapita_cd99, 0.002); end
  def test_costpercapita_cf99; assert_in_epsilon(222.9466110952797, worksheet.costpercapita_cf99, 0.002); end
  def test_costpercapita_cg99; assert_in_epsilon(259.2890528938826, worksheet.costpercapita_cg99, 0.002); end
  def test_costpercapita_ch99; assert_in_epsilon(300.8034783034957, worksheet.costpercapita_ch99, 0.002); end
  def test_costpercapita_ci99; assert_in_epsilon(328.63762767502453, worksheet.costpercapita_ci99, 0.002); end
  def test_costpercapita_cj99; assert_in_epsilon(353.09958558376275, worksheet.costpercapita_cj99, 0.002); end
  def test_costpercapita_ck99; assert_in_epsilon(374.5949499279485, worksheet.costpercapita_ck99, 0.002); end
  def test_costpercapita_cl99; assert_in_epsilon(393.63435506899157, worksheet.costpercapita_cl99, 0.002); end
  def test_costpercapita_cm99; assert_in_epsilon(409.9424312409091, worksheet.costpercapita_cm99, 0.002); end
  def test_costpercapita_cn99; assert_in_epsilon(423.6626806424651, worksheet.costpercapita_cn99, 0.002); end
  def test_costpercapita_cp99; assert_in_epsilon(340.73453027019553, worksheet.costpercapita_cp99, 0.002); end
  def test_costpercapita_cq99; assert_in_epsilon(6934.098688071394, worksheet.costpercapita_cq99, 0.002); end
  def test_costpercapita_cr99; assert_equal("ok", worksheet.costpercapita_cr99); end
  def test_costpercapita_a100; assert_equal("RES.W", worksheet.costpercapita_a100); end
  def test_costpercapita_b100; assert_equal("Residential water heating", worksheet.costpercapita_b100); end
  def test_costpercapita_c100; assert_equal("Buildings", worksheet.costpercapita_c100); end
  def test_costpercapita_e100; assert_in_epsilon(145.3031112562027, worksheet.costpercapita_e100, 0.002); end
  def test_costpercapita_f100; assert_in_epsilon(172.2490504977688, worksheet.costpercapita_f100, 0.002); end
  def test_costpercapita_g100; assert_in_epsilon(204.75158316740576, worksheet.costpercapita_g100, 0.002); end
  def test_costpercapita_h100; assert_in_epsilon(229.97626229133053, worksheet.costpercapita_h100, 0.002); end
  def test_costpercapita_i100; assert_in_epsilon(251.92076367577113, worksheet.costpercapita_i100, 0.002); end
  def test_costpercapita_j100; assert_in_epsilon(270.8672664145926, worksheet.costpercapita_j100, 0.002); end
  def test_costpercapita_k100; assert_in_epsilon(287.2262631613091, worksheet.costpercapita_k100, 0.002); end
  def test_costpercapita_l100; assert_in_epsilon(300.85900366711263, worksheet.costpercapita_l100, 0.002); end
  def test_costpercapita_m100; assert_in_epsilon(311.93814511751026, worksheet.costpercapita_m100, 0.002); end
  def test_costpercapita_o100; assert_in_epsilon(8.370559200850716, worksheet.costpercapita_o100, 0.002); end
  def test_costpercapita_p100; assert_in_epsilon(9.908181445801656, worksheet.costpercapita_p100, 0.002); end
  def test_costpercapita_q100; assert_in_epsilon(11.760352740587141, worksheet.costpercapita_q100, 0.002); end
  def test_costpercapita_r100; assert_in_epsilon(13.193252503144308, worksheet.costpercapita_r100, 0.002); end
  def test_costpercapita_s100; assert_in_epsilon(14.440095584368217, worksheet.costpercapita_s100, 0.002); end
  def test_costpercapita_t100; assert_in_epsilon(15.517143405479041, worksheet.costpercapita_t100, 0.002); end
  def test_costpercapita_u100; assert_in_epsilon(16.44787845922965, worksheet.costpercapita_u100, 0.002); end
  def test_costpercapita_v100; assert_in_epsilon(17.224266858232035, worksheet.costpercapita_v100, 0.002); end
  def test_costpercapita_w100; assert_in_epsilon(17.856086706658967, worksheet.costpercapita_w100, 0.002); end
  def test_costpercapita_y100; assert_in_delta(0.0, (worksheet.costpercapita_y100||0), 0.002); end
  def test_costpercapita_z100; assert_in_delta(0.0, (worksheet.costpercapita_z100||0), 0.002); end
  def test_costpercapita_aa100; assert_in_delta(0.0, (worksheet.costpercapita_aa100||0), 0.002); end
  def test_costpercapita_ab100; assert_in_delta(0.0, (worksheet.costpercapita_ab100||0), 0.002); end
  def test_costpercapita_ac100; assert_in_delta(0.0, (worksheet.costpercapita_ac100||0), 0.002); end
  def test_costpercapita_ad100; assert_in_delta(0.0, (worksheet.costpercapita_ad100||0), 0.002); end
  def test_costpercapita_ae100; assert_in_delta(0.0, (worksheet.costpercapita_ae100||0), 0.002); end
  def test_costpercapita_af100; assert_in_delta(0.0, (worksheet.costpercapita_af100||0), 0.002); end
  def test_costpercapita_ag100; assert_in_delta(0.0, (worksheet.costpercapita_ag100||0), 0.002); end
  def test_costpercapita_ai100; assert_in_epsilon(153.6736704570534, worksheet.costpercapita_ai100, 0.002); end
  def test_costpercapita_aj100; assert_in_epsilon(182.15723194357045, worksheet.costpercapita_aj100, 0.002); end
  def test_costpercapita_ak100; assert_in_epsilon(216.5119359079929, worksheet.costpercapita_ak100, 0.002); end
  def test_costpercapita_al100; assert_in_epsilon(243.16951479447482, worksheet.costpercapita_al100, 0.002); end
  def test_costpercapita_am100; assert_in_epsilon(266.36085926013936, worksheet.costpercapita_am100, 0.002); end
  def test_costpercapita_an100; assert_in_epsilon(286.3844098200717, worksheet.costpercapita_an100, 0.002); end
  def test_costpercapita_ao100; assert_in_epsilon(303.6741416205387, worksheet.costpercapita_ao100, 0.002); end
  def test_costpercapita_ap100; assert_in_epsilon(318.08327052534463, worksheet.costpercapita_ap100, 0.002); end
  def test_costpercapita_aq100; assert_in_epsilon(329.79423182416923, worksheet.costpercapita_aq100, 0.002); end
  def test_costpercapita_as100; assert_in_epsilon(255.53436290592833, worksheet.costpercapita_as100, 0.002); end
  def test_costpercapita_at100; assert_in_epsilon(5155.832444810048, worksheet.costpercapita_at100, 0.002); end
  def test_costpercapita_av100; assert_in_delta(0.0, (worksheet.costpercapita_av100||0), 0.002); end
  def test_costpercapita_aw100; assert_in_epsilon(5.0, worksheet.costpercapita_aw100, 0.002); end
  def test_costpercapita_ay100; assert_in_epsilon(236.4741221904823, worksheet.costpercapita_ay100, 0.002); end
  def test_costpercapita_az100; assert_in_epsilon(280.3273974139707, worksheet.costpercapita_az100, 0.002); end
  def test_costpercapita_ba100; assert_in_epsilon(333.22377255398874, worksheet.costpercapita_ba100, 0.002); end
  def test_costpercapita_bb100; assert_in_epsilon(374.2757762020665, worksheet.costpercapita_bb100, 0.002); end
  def test_costpercapita_bc100; assert_in_epsilon(409.9894416351727, worksheet.costpercapita_bc100, 0.002); end
  def test_costpercapita_bd100; assert_in_epsilon(440.82400233389353, worksheet.costpercapita_bd100, 0.002); end
  def test_costpercapita_be100; assert_in_epsilon(467.44751618815457, worksheet.costpercapita_be100, 0.002); end
  def test_costpercapita_bf100; assert_in_epsilon(489.6341735576325, worksheet.costpercapita_bf100, 0.002); end
  def test_costpercapita_bg100; assert_in_epsilon(507.66496606067426, worksheet.costpercapita_bg100, 0.002); end
  def test_costpercapita_bi100; assert_in_delta(0.0, (worksheet.costpercapita_bi100||0), 0.002); end
  def test_costpercapita_bj100; assert_in_delta(0.0, (worksheet.costpercapita_bj100||0), 0.002); end
  def test_costpercapita_bk100; assert_in_delta(0.0, (worksheet.costpercapita_bk100||0), 0.002); end
  def test_costpercapita_bl100; assert_in_delta(0.0, (worksheet.costpercapita_bl100||0), 0.002); end
  def test_costpercapita_bm100; assert_in_delta(0.0, (worksheet.costpercapita_bm100||0), 0.002); end
  def test_costpercapita_bn100; assert_in_delta(0.0, (worksheet.costpercapita_bn100||0), 0.002); end
  def test_costpercapita_bo100; assert_in_delta(0.0, (worksheet.costpercapita_bo100||0), 0.002); end
  def test_costpercapita_bp100; assert_in_delta(0.0, (worksheet.costpercapita_bp100||0), 0.002); end
  def test_costpercapita_bq100; assert_in_delta(0.0, (worksheet.costpercapita_bq100||0), 0.002); end
  def test_costpercapita_bs100; assert_in_epsilon(244.84468139133298, worksheet.costpercapita_bs100, 0.002); end
  def test_costpercapita_bt100; assert_in_epsilon(290.2355788597723, worksheet.costpercapita_bt100, 0.002); end
  def test_costpercapita_bu100; assert_in_epsilon(344.98412529457585, worksheet.costpercapita_bu100, 0.002); end
  def test_costpercapita_bv100; assert_in_epsilon(387.46902870521086, worksheet.costpercapita_bv100, 0.002); end
  def test_costpercapita_bw100; assert_in_epsilon(424.4295372195409, worksheet.costpercapita_bw100, 0.002); end
  def test_costpercapita_bx100; assert_in_epsilon(456.3411457393726, worksheet.costpercapita_bx100, 0.002); end
  def test_costpercapita_by100; assert_in_epsilon(483.89539464738425, worksheet.costpercapita_by100, 0.002); end
  def test_costpercapita_bz100; assert_in_epsilon(506.85844041586455, worksheet.costpercapita_bz100, 0.002); end
  def test_costpercapita_ca100; assert_in_epsilon(525.5210527673332, worksheet.costpercapita_ca100, 0.002); end
  def test_costpercapita_cc100; assert_in_epsilon(407.17544278226535, worksheet.costpercapita_cc100, 0.002); end
  def test_costpercapita_cd100; assert_in_epsilon(8215.384139370917, worksheet.costpercapita_cd100, 0.002); end
  def test_costpercapita_cf100; assert_in_epsilon(91.1710109342796, worksheet.costpercapita_cf100, 0.002); end
  def test_costpercapita_cg100; assert_in_epsilon(108.07834691620188, worksheet.costpercapita_cg100, 0.002); end
  def test_costpercapita_ch100; assert_in_epsilon(128.47218938658298, worksheet.costpercapita_ch100, 0.002); end
  def test_costpercapita_ci100; assert_in_epsilon(144.29951391073598, worksheet.costpercapita_ci100, 0.002); end
  def test_costpercapita_cj100; assert_in_epsilon(158.06867795940153, worksheet.costpercapita_cj100, 0.002); end
  def test_costpercapita_ck100; assert_in_epsilon(169.9567359193009, worksheet.costpercapita_ck100, 0.002); end
  def test_costpercapita_cl100; assert_in_epsilon(180.22125302684546, worksheet.costpercapita_cl100, 0.002); end
  def test_costpercapita_cm100; assert_in_epsilon(188.7751698905199, worksheet.costpercapita_cm100, 0.002); end
  def test_costpercapita_cn100; assert_in_epsilon(195.726820943164, worksheet.costpercapita_cn100, 0.002); end
  def test_costpercapita_cp100; assert_in_epsilon(151.6410798763369, worksheet.costpercapita_cp100, 0.002); end
  def test_costpercapita_cq100; assert_in_epsilon(3059.5516945608697, worksheet.costpercapita_cq100, 0.002); end
  def test_costpercapita_cr100; assert_equal("ok", worksheet.costpercapita_cr100); end
  def test_costpercapita_a101; assert_equal("RES.H", worksheet.costpercapita_a101); end
  def test_costpercapita_b101; assert_equal("Residential space heating", worksheet.costpercapita_b101); end
  def test_costpercapita_c101; assert_equal("Buildings", worksheet.costpercapita_c101); end
  def test_costpercapita_e101; assert_in_epsilon(34.54590556483991, worksheet.costpercapita_e101, 0.002); end
  def test_costpercapita_f101; assert_in_epsilon(48.37067508913006, worksheet.costpercapita_f101, 0.002); end
  def test_costpercapita_g101; assert_in_epsilon(66.80366769653497, worksheet.costpercapita_g101, 0.002); end
  def test_costpercapita_h101; assert_in_epsilon(86.27944475213206, worksheet.costpercapita_h101, 0.002); end
  def test_costpercapita_i101; assert_in_epsilon(108.09913059950289, worksheet.costpercapita_i101, 0.002); end
  def test_costpercapita_j101; assert_in_epsilon(116.0654944655108, worksheet.costpercapita_j101, 0.002); end
  def test_costpercapita_k101; assert_in_epsilon(123.06651811911043, worksheet.costpercapita_k101, 0.002); end
  def test_costpercapita_l101; assert_in_epsilon(129.02025084989404, worksheet.costpercapita_l101, 0.002); end
  def test_costpercapita_m101; assert_in_epsilon(133.97818832840755, worksheet.costpercapita_m101, 0.002); end
  def test_costpercapita_o101; assert_in_epsilon(1.1202359172273912, worksheet.costpercapita_o101, 0.002); end
  def test_costpercapita_p101; assert_in_epsilon(1.624937336620113, worksheet.costpercapita_p101, 0.002); end
  def test_costpercapita_q101; assert_in_epsilon(2.306411297895507, worksheet.costpercapita_q101, 0.002); end
  def test_costpercapita_r101; assert_in_epsilon(3.056363169938781, worksheet.costpercapita_r101, 0.002); end
  def test_costpercapita_s101; assert_in_epsilon(3.9023368733048462, worksheet.costpercapita_s101, 0.002); end
  def test_costpercapita_t101; assert_in_epsilon(4.207340369131423, worksheet.costpercapita_t101, 0.002); end
  def test_costpercapita_u101; assert_in_epsilon(4.474856424956026, worksheet.costpercapita_u101, 0.002); end
  def test_costpercapita_v101; assert_in_epsilon(4.701954204944418, worksheet.costpercapita_v101, 0.002); end
  def test_costpercapita_w101; assert_in_epsilon(4.890585106480935, worksheet.costpercapita_w101, 0.002); end
  def test_costpercapita_y101; assert_in_delta(0.0, (worksheet.costpercapita_y101||0), 0.002); end
  def test_costpercapita_z101; assert_in_delta(0.0, (worksheet.costpercapita_z101||0), 0.002); end
  def test_costpercapita_aa101; assert_in_delta(0.0, (worksheet.costpercapita_aa101||0), 0.002); end
  def test_costpercapita_ab101; assert_in_delta(0.0, (worksheet.costpercapita_ab101||0), 0.002); end
  def test_costpercapita_ac101; assert_in_delta(0.0, (worksheet.costpercapita_ac101||0), 0.002); end
  def test_costpercapita_ad101; assert_in_delta(0.0, (worksheet.costpercapita_ad101||0), 0.002); end
  def test_costpercapita_ae101; assert_in_delta(0.0, (worksheet.costpercapita_ae101||0), 0.002); end
  def test_costpercapita_af101; assert_in_delta(0.0, (worksheet.costpercapita_af101||0), 0.002); end
  def test_costpercapita_ag101; assert_in_delta(0.0, (worksheet.costpercapita_ag101||0), 0.002); end
  def test_costpercapita_ai101; assert_in_epsilon(35.66614148206731, worksheet.costpercapita_ai101, 0.002); end
  def test_costpercapita_aj101; assert_in_epsilon(49.995612425750174, worksheet.costpercapita_aj101, 0.002); end
  def test_costpercapita_ak101; assert_in_epsilon(69.1100789944305, worksheet.costpercapita_ak101, 0.002); end
  def test_costpercapita_al101; assert_in_epsilon(89.33580792207084, worksheet.costpercapita_al101, 0.002); end
  def test_costpercapita_am101; assert_in_epsilon(112.00146747280775, worksheet.costpercapita_am101, 0.002); end
  def test_costpercapita_an101; assert_in_epsilon(120.27283483464223, worksheet.costpercapita_an101, 0.002); end
  def test_costpercapita_ao101; assert_in_epsilon(127.54137454406646, worksheet.costpercapita_ao101, 0.002); end
  def test_costpercapita_ap101; assert_in_epsilon(133.72220505483847, worksheet.costpercapita_ap101, 0.002); end
  def test_costpercapita_aq101; assert_in_epsilon(138.86877343488848, worksheet.costpercapita_aq101, 0.002); end
  def test_costpercapita_as101; assert_in_epsilon(97.39047735172913, worksheet.costpercapita_as101, 0.002); end
  def test_costpercapita_at101; assert_in_epsilon(1910.3911133835923, worksheet.costpercapita_at101, 0.002); end
  def test_costpercapita_av101; assert_in_delta(0.0, (worksheet.costpercapita_av101||0), 0.002); end
  def test_costpercapita_aw101; assert_in_epsilon(5.0, worksheet.costpercapita_aw101, 0.002); end
  def test_costpercapita_ay101; assert_in_epsilon(56.22187042723827, worksheet.costpercapita_ay101, 0.002); end
  def test_costpercapita_az101; assert_in_epsilon(78.7210461811414, worksheet.costpercapita_az101, 0.002); end
  def test_costpercapita_ba101; assert_in_epsilon(108.7198927887267, worksheet.costpercapita_ba101, 0.002); end
  def test_costpercapita_bb101; assert_in_epsilon(140.41582306429578, worksheet.costpercapita_bb101, 0.002); end
  def test_costpercapita_bc101; assert_in_epsilon(175.92635695872292, worksheet.costpercapita_bc101, 0.002); end
  def test_costpercapita_bd101; assert_in_epsilon(188.89124729023524, worksheet.costpercapita_bd101, 0.002); end
  def test_costpercapita_be101; assert_in_epsilon(200.285090881104, worksheet.costpercapita_be101, 0.002); end
  def test_costpercapita_bf101; assert_in_epsilon(209.97451672406714, worksheet.costpercapita_bf101, 0.002); end
  def test_costpercapita_bg101; assert_in_epsilon(218.04333165150194, worksheet.costpercapita_bg101, 0.002); end
  def test_costpercapita_bi101; assert_in_delta(0.0, (worksheet.costpercapita_bi101||0), 0.002); end
  def test_costpercapita_bj101; assert_in_delta(0.0, (worksheet.costpercapita_bj101||0), 0.002); end
  def test_costpercapita_bk101; assert_in_delta(0.0, (worksheet.costpercapita_bk101||0), 0.002); end
  def test_costpercapita_bl101; assert_in_delta(0.0, (worksheet.costpercapita_bl101||0), 0.002); end
  def test_costpercapita_bm101; assert_in_delta(0.0, (worksheet.costpercapita_bm101||0), 0.002); end
  def test_costpercapita_bn101; assert_in_delta(0.0, (worksheet.costpercapita_bn101||0), 0.002); end
  def test_costpercapita_bo101; assert_in_delta(0.0, (worksheet.costpercapita_bo101||0), 0.002); end
  def test_costpercapita_bp101; assert_in_delta(0.0, (worksheet.costpercapita_bp101||0), 0.002); end
  def test_costpercapita_bq101; assert_in_delta(0.0, (worksheet.costpercapita_bq101||0), 0.002); end
  def test_costpercapita_bs101; assert_in_epsilon(57.342106344465655, worksheet.costpercapita_bs101, 0.002); end
  def test_costpercapita_bt101; assert_in_epsilon(80.34598351776151, worksheet.costpercapita_bt101, 0.002); end
  def test_costpercapita_bu101; assert_in_epsilon(111.0263040866222, worksheet.costpercapita_bu101, 0.002); end
  def test_costpercapita_bv101; assert_in_epsilon(143.47218623423456, worksheet.costpercapita_bv101, 0.002); end
  def test_costpercapita_bw101; assert_in_epsilon(179.82869383202774, worksheet.costpercapita_bw101, 0.002); end
  def test_costpercapita_bx101; assert_in_epsilon(193.09858765936667, worksheet.costpercapita_bx101, 0.002); end
  def test_costpercapita_by101; assert_in_epsilon(204.75994730606, worksheet.costpercapita_by101, 0.002); end
  def test_costpercapita_bz101; assert_in_epsilon(214.67647092901157, worksheet.costpercapita_bz101, 0.002); end
  def test_costpercapita_ca101; assert_in_epsilon(222.9339167579829, worksheet.costpercapita_ca101, 0.002); end
  def test_costpercapita_cc101; assert_in_epsilon(156.3871329630592, worksheet.costpercapita_cc101, 0.002); end
  def test_costpercapita_cd101; assert_in_epsilon(3067.8845471003633, worksheet.costpercapita_cd101, 0.002); end
  def test_costpercapita_cf101; assert_in_epsilon(21.675964862398356, worksheet.costpercapita_cf101, 0.002); end
  def test_costpercapita_cg101; assert_in_epsilon(30.350371092011336, worksheet.costpercapita_cg101, 0.002); end
  def test_costpercapita_ch101; assert_in_epsilon(41.91622509219172, worksheet.costpercapita_ch101, 0.002); end
  def test_costpercapita_ci101; assert_in_epsilon(54.13637831216371, worksheet.costpercapita_ci101, 0.002); end
  def test_costpercapita_cj101; assert_in_epsilon(67.82722635922002, worksheet.costpercapita_cj101, 0.002); end
  def test_costpercapita_ck101; assert_in_epsilon(72.82575282472443, worksheet.costpercapita_ck101, 0.002); end
  def test_costpercapita_cl101; assert_in_epsilon(77.21857276199358, worksheet.costpercapita_cl101, 0.002); end
  def test_costpercapita_cm101; assert_in_epsilon(80.95426587417309, worksheet.costpercapita_cm101, 0.002); end
  def test_costpercapita_cn101; assert_in_epsilon(84.06514332309442, worksheet.costpercapita_cn101, 0.002); end
  def test_costpercapita_cp101; assert_in_epsilon(58.99665561133007, worksheet.costpercapita_cp101, 0.002); end
  def test_costpercapita_cq101; assert_in_epsilon(1157.4934337167715, worksheet.costpercapita_cq101, 0.002); end
  def test_costpercapita_cr101; assert_equal("ok", worksheet.costpercapita_cr101); end
  def test_costpercapita_a102; assert_equal("RES.O", worksheet.costpercapita_a102); end
  def test_costpercapita_b102; assert_equal("Residential other", worksheet.costpercapita_b102); end
  def test_costpercapita_c102; assert_equal("Buildings", worksheet.costpercapita_c102); end
  def test_costpercapita_e102; assert_in_epsilon(15.342319826441374, worksheet.costpercapita_e102, 0.002); end
  def test_costpercapita_f102; assert_in_epsilon(18.055615831831144, worksheet.costpercapita_f102, 0.002); end
  def test_costpercapita_g102; assert_in_epsilon(21.226922341614266, worksheet.costpercapita_g102, 0.002); end
  def test_costpercapita_h102; assert_in_epsilon(23.548853135601085, worksheet.costpercapita_h102, 0.002); end
  def test_costpercapita_i102; assert_in_epsilon(25.58907058375975, worksheet.costpercapita_i102, 0.002); end
  def test_costpercapita_j102; assert_in_epsilon(27.373737341037707, worksheet.costpercapita_j102, 0.002); end
  def test_costpercapita_k102; assert_in_epsilon(28.93973784880723, worksheet.costpercapita_k102, 0.002); end
  def test_costpercapita_l102; assert_in_epsilon(30.267760005903583, worksheet.costpercapita_l102, 0.002); end
  def test_costpercapita_m102; assert_in_epsilon(31.369783800884008, worksheet.costpercapita_m102, 0.002); end
  def test_costpercapita_o102; assert_in_delta(0.7210729833473335, worksheet.costpercapita_o102, 0.002); end
  def test_costpercapita_p102; assert_in_delta(0.8575415314984387, worksheet.costpercapita_p102, 0.002); end
  def test_costpercapita_q102; assert_in_epsilon(1.0208808988129696, worksheet.costpercapita_q102, 0.002); end
  def test_costpercapita_r102; assert_in_epsilon(1.1483822302560387, worksheet.costpercapita_r102, 0.002); end
  def test_costpercapita_s102; assert_in_epsilon(1.26066967019513, worksheet.costpercapita_s102, 0.002); end
  def test_costpercapita_t102; assert_in_epsilon(1.3588883252866972, worksheet.costpercapita_t102, 0.002); end
  def test_costpercapita_u102; assert_in_epsilon(1.4448407485251802, worksheet.costpercapita_u102, 0.002); end
  def test_costpercapita_v102; assert_in_epsilon(1.5175888052544733, worksheet.costpercapita_v102, 0.002); end
  def test_costpercapita_w102; assert_in_epsilon(1.5777733717036224, worksheet.costpercapita_w102, 0.002); end
  def test_costpercapita_y102; assert_in_delta(0.0, (worksheet.costpercapita_y102||0), 0.002); end
  def test_costpercapita_z102; assert_in_delta(0.0, (worksheet.costpercapita_z102||0), 0.002); end
  def test_costpercapita_aa102; assert_in_delta(0.0, (worksheet.costpercapita_aa102||0), 0.002); end
  def test_costpercapita_ab102; assert_in_delta(0.0, (worksheet.costpercapita_ab102||0), 0.002); end
  def test_costpercapita_ac102; assert_in_delta(0.0, (worksheet.costpercapita_ac102||0), 0.002); end
  def test_costpercapita_ad102; assert_in_delta(0.0, (worksheet.costpercapita_ad102||0), 0.002); end
  def test_costpercapita_ae102; assert_in_delta(0.0, (worksheet.costpercapita_ae102||0), 0.002); end
  def test_costpercapita_af102; assert_in_delta(0.0, (worksheet.costpercapita_af102||0), 0.002); end
  def test_costpercapita_ag102; assert_in_delta(0.0, (worksheet.costpercapita_ag102||0), 0.002); end
  def test_costpercapita_ai102; assert_in_epsilon(16.063392809788706, worksheet.costpercapita_ai102, 0.002); end
  def test_costpercapita_aj102; assert_in_epsilon(18.91315736332958, worksheet.costpercapita_aj102, 0.002); end
  def test_costpercapita_ak102; assert_in_epsilon(22.24780324042724, worksheet.costpercapita_ak102, 0.002); end
  def test_costpercapita_al102; assert_in_epsilon(24.697235365857125, worksheet.costpercapita_al102, 0.002); end
  def test_costpercapita_am102; assert_in_epsilon(26.849740253954877, worksheet.costpercapita_am102, 0.002); end
  def test_costpercapita_an102; assert_in_epsilon(28.732625666324402, worksheet.costpercapita_an102, 0.002); end
  def test_costpercapita_ao102; assert_in_epsilon(30.38457859733241, worksheet.costpercapita_ao102, 0.002); end
  def test_costpercapita_ap102; assert_in_epsilon(31.785348811158055, worksheet.costpercapita_ap102, 0.002); end
  def test_costpercapita_aq102; assert_in_epsilon(32.94755717258763, worksheet.costpercapita_aq102, 0.002); end
  def test_costpercapita_as102; assert_in_epsilon(25.846826586751114, worksheet.costpercapita_as102, 0.002); end
  def test_costpercapita_at102; assert_in_epsilon(523.1542277539045, worksheet.costpercapita_at102, 0.002); end
  def test_costpercapita_av102; assert_in_delta(0.0, (worksheet.costpercapita_av102||0), 0.002); end
  def test_costpercapita_aw102; assert_in_epsilon(5.0, worksheet.costpercapita_aw102, 0.002); end
  def test_costpercapita_ay102; assert_in_epsilon(24.968918985679885, worksheet.costpercapita_ay102, 0.002); end
  def test_costpercapita_az102; assert_in_epsilon(29.384683283982877, worksheet.costpercapita_az102, 0.002); end
  def test_costpercapita_ba102; assert_in_epsilon(34.54583858626422, worksheet.costpercapita_ba102, 0.002); end
  def test_costpercapita_bb102; assert_in_epsilon(38.324674025836714, worksheet.costpercapita_bb102, 0.002); end
  def test_costpercapita_bc102; assert_in_epsilon(41.64503396830442, worksheet.costpercapita_bc102, 0.002); end
  def test_costpercapita_bd102; assert_in_epsilon(44.54949692977335, worksheet.costpercapita_bd102, 0.002); end
  def test_costpercapita_be102; assert_in_epsilon(47.098090640005, worksheet.costpercapita_be102, 0.002); end
  def test_costpercapita_bf102; assert_in_epsilon(49.2593855436987, worksheet.costpercapita_bf102, 0.002); end
  def test_costpercapita_bg102; assert_in_epsilon(51.05287852053884, worksheet.costpercapita_bg102, 0.002); end
  def test_costpercapita_bi102; assert_in_delta(0.0, (worksheet.costpercapita_bi102||0), 0.002); end
  def test_costpercapita_bj102; assert_in_delta(0.0, (worksheet.costpercapita_bj102||0), 0.002); end
  def test_costpercapita_bk102; assert_in_delta(0.0, (worksheet.costpercapita_bk102||0), 0.002); end
  def test_costpercapita_bl102; assert_in_delta(0.0, (worksheet.costpercapita_bl102||0), 0.002); end
  def test_costpercapita_bm102; assert_in_delta(0.0, (worksheet.costpercapita_bm102||0), 0.002); end
  def test_costpercapita_bn102; assert_in_delta(0.0, (worksheet.costpercapita_bn102||0), 0.002); end
  def test_costpercapita_bo102; assert_in_delta(0.0, (worksheet.costpercapita_bo102||0), 0.002); end
  def test_costpercapita_bp102; assert_in_delta(0.0, (worksheet.costpercapita_bp102||0), 0.002); end
  def test_costpercapita_bq102; assert_in_delta(0.0, (worksheet.costpercapita_bq102||0), 0.002); end
  def test_costpercapita_bs102; assert_in_epsilon(25.68999196902722, worksheet.costpercapita_bs102, 0.002); end
  def test_costpercapita_bt102; assert_in_epsilon(30.242224815481315, worksheet.costpercapita_bt102, 0.002); end
  def test_costpercapita_bu102; assert_in_epsilon(35.56671948507719, worksheet.costpercapita_bu102, 0.002); end
  def test_costpercapita_bv102; assert_in_epsilon(39.473056256092754, worksheet.costpercapita_bv102, 0.002); end
  def test_costpercapita_bw102; assert_in_epsilon(42.90570363849955, worksheet.costpercapita_bw102, 0.002); end
  def test_costpercapita_bx102; assert_in_epsilon(45.90838525506004, worksheet.costpercapita_bx102, 0.002); end
  def test_costpercapita_by102; assert_in_epsilon(48.54293138853018, worksheet.costpercapita_by102, 0.002); end
  def test_costpercapita_bz102; assert_in_epsilon(50.776974348953175, worksheet.costpercapita_bz102, 0.002); end
  def test_costpercapita_ca102; assert_in_epsilon(52.63065189224246, worksheet.costpercapita_ca102, 0.002); end
  def test_costpercapita_cc102; assert_in_epsilon(41.30407100544042, worksheet.costpercapita_cc102, 0.002); end
  def test_costpercapita_cd102; assert_in_epsilon(836.0887443009735, worksheet.costpercapita_cd102, 0.002); end
  def test_costpercapita_cf102; assert_in_epsilon(9.62659915923851, worksheet.costpercapita_cf102, 0.002); end
  def test_costpercapita_cg102; assert_in_epsilon(11.329067452151733, worksheet.costpercapita_cg102, 0.002); end
  def test_costpercapita_ch102; assert_in_epsilon(13.318916244649953, worksheet.costpercapita_ch102, 0.002); end
  def test_costpercapita_ci102; assert_in_epsilon(14.775820890235625, worksheet.costpercapita_ci102, 0.002); end
  def test_costpercapita_cj102; assert_in_epsilon(16.055963384544672, worksheet.costpercapita_cj102, 0.002); end
  def test_costpercapita_ck102; assert_in_epsilon(17.175759588735644, worksheet.costpercapita_ck102, 0.002); end
  def test_costpercapita_cl102; assert_in_epsilon(18.158352791197768, worksheet.costpercapita_cl102, 0.002); end
  def test_costpercapita_cm102; assert_in_epsilon(18.99162553779512, worksheet.costpercapita_cm102, 0.002); end
  def test_costpercapita_cn102; assert_in_epsilon(19.68309471965483, worksheet.costpercapita_cn102, 0.002); end
  def test_costpercapita_cp102; assert_in_epsilon(15.457244418689315, worksheet.costpercapita_cp102, 0.002); end
  def test_costpercapita_cq102; assert_in_epsilon(312.93451654706917, worksheet.costpercapita_cq102, 0.002); end
  def test_costpercapita_cr102; assert_equal("ok", worksheet.costpercapita_cr102); end
  def test_costpercapita_a103; assert_equal("RES.K", worksheet.costpercapita_a103); end
  def test_costpercapita_b103; assert_equal("Residential cooking", worksheet.costpercapita_b103); end
  def test_costpercapita_c103; assert_equal("Buildings", worksheet.costpercapita_c103); end
  def test_costpercapita_e103; assert_in_epsilon(54.94057780198503, worksheet.costpercapita_e103, 0.002); end
  def test_costpercapita_f103; assert_in_epsilon(59.36496372242874, worksheet.costpercapita_f103, 0.002); end
  def test_costpercapita_g103; assert_in_epsilon(63.522067587141905, worksheet.costpercapita_g103, 0.002); end
  def test_costpercapita_h103; assert_in_epsilon(63.61425227630203, worksheet.costpercapita_h103, 0.002); end
  def test_costpercapita_i103; assert_in_epsilon(62.241513066337184, worksheet.costpercapita_i103, 0.002); end
  def test_costpercapita_j103; assert_in_epsilon(65.50517843978011, worksheet.costpercapita_j103, 0.002); end
  def test_costpercapita_k103; assert_in_epsilon(68.32667957085125, worksheet.costpercapita_k103, 0.002); end
  def test_costpercapita_l103; assert_in_epsilon(70.66770926268488, worksheet.costpercapita_l103, 0.002); end
  def test_costpercapita_m103; assert_in_epsilon(72.56221175027464, worksheet.costpercapita_m103, 0.002); end
  def test_costpercapita_o103; assert_in_epsilon(2.7005970371154655, worksheet.costpercapita_o103, 0.002); end
  def test_costpercapita_p103; assert_in_epsilon(3.01441102222255, worksheet.costpercapita_p103, 0.002); end
  def test_costpercapita_q103; assert_in_epsilon(3.3353959688177777, worksheet.costpercapita_q103, 0.002); end
  def test_costpercapita_r103; assert_in_epsilon(3.4663025575109114, worksheet.costpercapita_r103, 0.002); end
  def test_costpercapita_s103; assert_in_epsilon(3.5337642019904427, worksheet.costpercapita_s103, 0.002); end
  def test_costpercapita_t103; assert_in_epsilon(3.710084936086234, worksheet.costpercapita_t103, 0.002); end
  def test_costpercapita_u103; assert_in_epsilon(3.862915469083697, worksheet.costpercapita_u103, 0.002); end
  def test_costpercapita_v103; assert_in_epsilon(3.9900286976006276, worksheet.costpercapita_v103, 0.002); end
  def test_costpercapita_w103; assert_in_epsilon(4.093265939428921, worksheet.costpercapita_w103, 0.002); end
  def test_costpercapita_y103; assert_in_delta(0.0, (worksheet.costpercapita_y103||0), 0.002); end
  def test_costpercapita_z103; assert_in_delta(0.0, (worksheet.costpercapita_z103||0), 0.002); end
  def test_costpercapita_aa103; assert_in_delta(0.0, (worksheet.costpercapita_aa103||0), 0.002); end
  def test_costpercapita_ab103; assert_in_delta(0.0, (worksheet.costpercapita_ab103||0), 0.002); end
  def test_costpercapita_ac103; assert_in_delta(0.0, (worksheet.costpercapita_ac103||0), 0.002); end
  def test_costpercapita_ad103; assert_in_delta(0.0, (worksheet.costpercapita_ad103||0), 0.002); end
  def test_costpercapita_ae103; assert_in_delta(0.0, (worksheet.costpercapita_ae103||0), 0.002); end
  def test_costpercapita_af103; assert_in_delta(0.0, (worksheet.costpercapita_af103||0), 0.002); end
  def test_costpercapita_ag103; assert_in_delta(0.0, (worksheet.costpercapita_ag103||0), 0.002); end
  def test_costpercapita_ai103; assert_in_epsilon(57.6411748391005, worksheet.costpercapita_ai103, 0.002); end
  def test_costpercapita_aj103; assert_in_epsilon(62.37937474465129, worksheet.costpercapita_aj103, 0.002); end
  def test_costpercapita_ak103; assert_in_epsilon(66.85746355595968, worksheet.costpercapita_ak103, 0.002); end
  def test_costpercapita_al103; assert_in_epsilon(67.08055483381294, worksheet.costpercapita_al103, 0.002); end
  def test_costpercapita_am103; assert_in_epsilon(65.77527726832763, worksheet.costpercapita_am103, 0.002); end
  def test_costpercapita_an103; assert_in_epsilon(69.21526337586634, worksheet.costpercapita_an103, 0.002); end
  def test_costpercapita_ao103; assert_in_epsilon(72.18959503993494, worksheet.costpercapita_ao103, 0.002); end
  def test_costpercapita_ap103; assert_in_epsilon(74.6577379602855, worksheet.costpercapita_ap103, 0.002); end
  def test_costpercapita_aq103; assert_in_epsilon(76.65547768970356, worksheet.costpercapita_aq103, 0.002); end
  def test_costpercapita_as103; assert_in_epsilon(68.0502132564047, worksheet.costpercapita_as103, 0.002); end
  def test_costpercapita_at103; assert_in_epsilon(1414.0834810693543, worksheet.costpercapita_at103, 0.002); end
  def test_costpercapita_av103; assert_in_delta(0.0, (worksheet.costpercapita_av103||0), 0.002); end
  def test_costpercapita_aw103; assert_in_epsilon(5.0, worksheet.costpercapita_aw103, 0.002); end
  def test_costpercapita_ay103; assert_in_epsilon(89.41326029457406, worksheet.costpercapita_ay103, 0.002); end
  def test_costpercapita_az103; assert_in_epsilon(96.61374463192642, worksheet.costpercapita_az103, 0.002); end
  def test_costpercapita_ba103; assert_in_epsilon(103.37923973223002, worksheet.costpercapita_ba103, 0.002); end
  def test_costpercapita_bb103; assert_in_epsilon(103.52926606862488, worksheet.costpercapita_bb103, 0.002); end
  def test_costpercapita_bc103; assert_in_epsilon(101.2951962206605, worksheet.costpercapita_bc103, 0.002); end
  def test_costpercapita_bd103; assert_in_epsilon(106.60666132031399, worksheet.costpercapita_bd103, 0.002); end
  def test_costpercapita_be103; assert_in_epsilon(111.19852447769026, worksheet.costpercapita_be103, 0.002); end
  def test_costpercapita_bf103; assert_in_epsilon(115.00844249398176, worksheet.costpercapita_bf103, 0.002); end
  def test_costpercapita_bg103; assert_in_epsilon(118.09165804846869, worksheet.costpercapita_bg103, 0.002); end
  def test_costpercapita_bi103; assert_in_delta(0.0, (worksheet.costpercapita_bi103||0), 0.002); end
  def test_costpercapita_bj103; assert_in_delta(0.0, (worksheet.costpercapita_bj103||0), 0.002); end
  def test_costpercapita_bk103; assert_in_delta(0.0, (worksheet.costpercapita_bk103||0), 0.002); end
  def test_costpercapita_bl103; assert_in_delta(0.0, (worksheet.costpercapita_bl103||0), 0.002); end
  def test_costpercapita_bm103; assert_in_delta(0.0, (worksheet.costpercapita_bm103||0), 0.002); end
  def test_costpercapita_bn103; assert_in_delta(0.0, (worksheet.costpercapita_bn103||0), 0.002); end
  def test_costpercapita_bo103; assert_in_delta(0.0, (worksheet.costpercapita_bo103||0), 0.002); end
  def test_costpercapita_bp103; assert_in_delta(0.0, (worksheet.costpercapita_bp103||0), 0.002); end
  def test_costpercapita_bq103; assert_in_delta(0.0, (worksheet.costpercapita_bq103||0), 0.002); end
  def test_costpercapita_bs103; assert_in_epsilon(92.11385733168953, worksheet.costpercapita_bs103, 0.002); end
  def test_costpercapita_bt103; assert_in_epsilon(99.62815565414897, worksheet.costpercapita_bt103, 0.002); end
  def test_costpercapita_bu103; assert_in_epsilon(106.7146357010478, worksheet.costpercapita_bu103, 0.002); end
  def test_costpercapita_bv103; assert_in_epsilon(106.99556862613579, worksheet.costpercapita_bv103, 0.002); end
  def test_costpercapita_bw103; assert_in_epsilon(104.82896042265095, worksheet.costpercapita_bw103, 0.002); end
  def test_costpercapita_bx103; assert_in_epsilon(110.31674625640022, worksheet.costpercapita_bx103, 0.002); end
  def test_costpercapita_by103; assert_in_epsilon(115.06143994677396, worksheet.costpercapita_by103, 0.002); end
  def test_costpercapita_bz103; assert_in_epsilon(118.9984711915824, worksheet.costpercapita_bz103, 0.002); end
  def test_costpercapita_ca103; assert_in_epsilon(122.1849239878976, worksheet.costpercapita_ca103, 0.002); end
  def test_costpercapita_cc103; assert_in_epsilon(108.5380843464808, worksheet.costpercapita_cc103, 0.002); end
  def test_costpercapita_cd103; assert_in_epsilon(2255.723436127602, worksheet.costpercapita_cd103, 0.002); end
  def test_costpercapita_cf103; assert_in_epsilon(34.47268249258903, worksheet.costpercapita_cf103, 0.002); end
  def test_costpercapita_cg103; assert_in_epsilon(37.24878090949769, worksheet.costpercapita_cg103, 0.002); end
  def test_costpercapita_ch103; assert_in_epsilon(39.85717214508812, worksheet.costpercapita_ch103, 0.002); end
  def test_costpercapita_ci103; assert_in_epsilon(39.91501379232285, worksheet.costpercapita_ci103, 0.002); end
  def test_costpercapita_cj103; assert_in_epsilon(39.05368315432332, worksheet.costpercapita_cj103, 0.002); end
  def test_costpercapita_ck103; assert_in_epsilon(41.10148288053388, worksheet.costpercapita_ck103, 0.002); end
  def test_costpercapita_cl103; assert_in_epsilon(42.87184490683901, worksheet.costpercapita_cl103, 0.002); end
  def test_costpercapita_cm103; assert_in_epsilon(44.34073323129687, worksheet.costpercapita_cm103, 0.002); end
  def test_costpercapita_cn103; assert_in_epsilon(45.52944629819405, worksheet.costpercapita_cn103, 0.002); end
  def test_costpercapita_cp103; assert_in_epsilon(40.48787109007609, worksheet.costpercapita_cp103, 0.002); end
  def test_costpercapita_cq103; assert_in_epsilon(841.6399550582476, worksheet.costpercapita_cq103, 0.002); end
  def test_costpercapita_cr103; assert_equal("ok", worksheet.costpercapita_cr103); end
  def test_costpercapita_a104; assert_equal("RES.R", worksheet.costpercapita_a104); end
  def test_costpercapita_b104; assert_equal("Residential refrigeration", worksheet.costpercapita_b104); end
  def test_costpercapita_c104; assert_equal("Buildings", worksheet.costpercapita_c104); end
  def test_costpercapita_e104; assert_in_epsilon(116.48918741250553, worksheet.costpercapita_e104, 0.002); end
  def test_costpercapita_f104; assert_in_epsilon(131.27429147320782, worksheet.costpercapita_f104, 0.002); end
  def test_costpercapita_g104; assert_in_epsilon(147.16594245012337, worksheet.costpercapita_g104, 0.002); end
  def test_costpercapita_h104; assert_in_epsilon(155.35402553042843, worksheet.costpercapita_h104, 0.002); end
  def test_costpercapita_i104; assert_in_epsilon(161.405924079944, worksheet.costpercapita_i104, 0.002); end
  def test_costpercapita_j104; assert_in_epsilon(170.4069857513984, worksheet.costpercapita_j104, 0.002); end
  def test_costpercapita_k104; assert_in_epsilon(178.2088558776711, worksheet.costpercapita_k104, 0.002); end
  def test_costpercapita_l104; assert_in_epsilon(184.70361084251815, worksheet.costpercapita_l104, 0.002); end
  def test_costpercapita_m104; assert_in_epsilon(189.97337387770293, worksheet.costpercapita_m104, 0.002); end
  def test_costpercapita_o104; assert_in_epsilon(8.969648888422721, worksheet.costpercapita_o104, 0.002); end
  def test_costpercapita_p104; assert_in_epsilon(10.108057042975423, worksheet.costpercapita_p104, 0.002); end
  def test_costpercapita_q104; assert_in_epsilon(11.331636658983477, worksheet.costpercapita_q104, 0.002); end
  def test_costpercapita_r104; assert_in_epsilon(11.962007446574932, worksheet.costpercapita_r104, 0.002); end
  def test_costpercapita_s104; assert_in_epsilon(12.427865334880014, worksheet.costpercapita_s104, 0.002); end
  def test_costpercapita_t104; assert_in_epsilon(13.120893011629343, worksheet.costpercapita_t104, 0.002); end
  def test_costpercapita_u104; assert_in_epsilon(13.721590191432725, worksheet.costpercapita_u104, 0.002); end
  def test_costpercapita_v104; assert_in_epsilon(14.221646960697214, worksheet.costpercapita_v104, 0.002); end
  def test_costpercapita_w104; assert_in_epsilon(14.62738644437624, worksheet.costpercapita_w104, 0.002); end
  def test_costpercapita_y104; assert_in_delta(0.0, (worksheet.costpercapita_y104||0), 0.002); end
  def test_costpercapita_z104; assert_in_delta(0.0, (worksheet.costpercapita_z104||0), 0.002); end
  def test_costpercapita_aa104; assert_in_delta(0.0, (worksheet.costpercapita_aa104||0), 0.002); end
  def test_costpercapita_ab104; assert_in_delta(0.0, (worksheet.costpercapita_ab104||0), 0.002); end
  def test_costpercapita_ac104; assert_in_delta(0.0, (worksheet.costpercapita_ac104||0), 0.002); end
  def test_costpercapita_ad104; assert_in_delta(0.0, (worksheet.costpercapita_ad104||0), 0.002); end
  def test_costpercapita_ae104; assert_in_delta(0.0, (worksheet.costpercapita_ae104||0), 0.002); end
  def test_costpercapita_af104; assert_in_delta(0.0, (worksheet.costpercapita_af104||0), 0.002); end
  def test_costpercapita_ag104; assert_in_delta(0.0, (worksheet.costpercapita_ag104||0), 0.002); end
  def test_costpercapita_ai104; assert_in_epsilon(125.45883630092824, worksheet.costpercapita_ai104, 0.002); end
  def test_costpercapita_aj104; assert_in_epsilon(141.38234851618327, worksheet.costpercapita_aj104, 0.002); end
  def test_costpercapita_ak104; assert_in_epsilon(158.49757910910682, worksheet.costpercapita_ak104, 0.002); end
  def test_costpercapita_al104; assert_in_epsilon(167.31603297700337, worksheet.costpercapita_al104, 0.002); end
  def test_costpercapita_am104; assert_in_epsilon(173.833789414824, worksheet.costpercapita_am104, 0.002); end
  def test_costpercapita_an104; assert_in_epsilon(183.52787876302773, worksheet.costpercapita_an104, 0.002); end
  def test_costpercapita_ao104; assert_in_epsilon(191.93044606910382, worksheet.costpercapita_ao104, 0.002); end
  def test_costpercapita_ap104; assert_in_epsilon(198.92525780321535, worksheet.costpercapita_ap104, 0.002); end
  def test_costpercapita_aq104; assert_in_epsilon(204.60076032207917, worksheet.costpercapita_aq104, 0.002); end
  def test_costpercapita_as104; assert_in_epsilon(171.7192143639413, worksheet.costpercapita_as104, 0.002); end
  def test_costpercapita_at104; assert_in_epsilon(3525.710765481343, worksheet.costpercapita_at104, 0.002); end
  def test_costpercapita_av104; assert_in_delta(0.0, (worksheet.costpercapita_av104||0), 0.002); end
  def test_costpercapita_aw104; assert_in_epsilon(5.0, worksheet.costpercapita_aw104, 0.002); end
  def test_costpercapita_ay104; assert_in_epsilon(189.58078804991115, worksheet.costpercapita_ay104, 0.002); end
  def test_costpercapita_az104; assert_in_epsilon(213.64286403729133, worksheet.costpercapita_az104, 0.002); end
  def test_costpercapita_ba104; assert_in_epsilon(239.50579417302308, worksheet.costpercapita_ba104, 0.002); end
  def test_costpercapita_bb104; assert_in_epsilon(252.83152231537366, worksheet.costpercapita_bb104, 0.002); end
  def test_costpercapita_bc104; assert_in_epsilon(262.6807085076718, worksheet.costpercapita_bc104, 0.002); end
  def test_costpercapita_bd104; assert_in_epsilon(277.3295218684986, worksheet.costpercapita_bd104, 0.002); end
  def test_costpercapita_be104; assert_in_epsilon(290.02670621372187, worksheet.costpercapita_be104, 0.002); end
  def test_costpercapita_bf104; assert_in_epsilon(300.5966208279136, worksheet.costpercapita_bf104, 0.002); end
  def test_costpercapita_bg104; assert_in_epsilon(309.1729174888978, worksheet.costpercapita_bg104, 0.002); end
  def test_costpercapita_bi104; assert_in_delta(0.0, (worksheet.costpercapita_bi104||0), 0.002); end
  def test_costpercapita_bj104; assert_in_delta(0.0, (worksheet.costpercapita_bj104||0), 0.002); end
  def test_costpercapita_bk104; assert_in_delta(0.0, (worksheet.costpercapita_bk104||0), 0.002); end
  def test_costpercapita_bl104; assert_in_delta(0.0, (worksheet.costpercapita_bl104||0), 0.002); end
  def test_costpercapita_bm104; assert_in_delta(0.0, (worksheet.costpercapita_bm104||0), 0.002); end
  def test_costpercapita_bn104; assert_in_delta(0.0, (worksheet.costpercapita_bn104||0), 0.002); end
  def test_costpercapita_bo104; assert_in_delta(0.0, (worksheet.costpercapita_bo104||0), 0.002); end
  def test_costpercapita_bp104; assert_in_delta(0.0, (worksheet.costpercapita_bp104||0), 0.002); end
  def test_costpercapita_bq104; assert_in_delta(0.0, (worksheet.costpercapita_bq104||0), 0.002); end
  def test_costpercapita_bs104; assert_in_epsilon(198.5504369383339, worksheet.costpercapita_bs104, 0.002); end
  def test_costpercapita_bt104; assert_in_epsilon(223.75092108026678, worksheet.costpercapita_bt104, 0.002); end
  def test_costpercapita_bu104; assert_in_epsilon(250.83743083200653, worksheet.costpercapita_bu104, 0.002); end
  def test_costpercapita_bv104; assert_in_epsilon(264.7935297619486, worksheet.costpercapita_bv104, 0.002); end
  def test_costpercapita_bw104; assert_in_epsilon(275.1085738425518, worksheet.costpercapita_bw104, 0.002); end
  def test_costpercapita_bx104; assert_in_epsilon(290.45041488012794, worksheet.costpercapita_bx104, 0.002); end
  def test_costpercapita_by104; assert_in_epsilon(303.74829640515463, worksheet.costpercapita_by104, 0.002); end
  def test_costpercapita_bz104; assert_in_epsilon(314.81826778861085, worksheet.costpercapita_bz104, 0.002); end
  def test_costpercapita_ca104; assert_in_epsilon(323.80030393327405, worksheet.costpercapita_ca104, 0.002); end
  def test_costpercapita_cc104; assert_in_epsilon(271.7620194958083, worksheet.costpercapita_cc104, 0.002); end
  def test_costpercapita_cd104; assert_in_epsilon(5579.772831013872, worksheet.costpercapita_cd104, 0.002); end
  def test_costpercapita_cf104; assert_in_epsilon(73.09160063740562, worksheet.costpercapita_cf104, 0.002); end
  def test_costpercapita_cg104; assert_in_epsilon(82.36857256408351, worksheet.costpercapita_cg104, 0.002); end
  def test_costpercapita_ch104; assert_in_epsilon(92.33985172289972, worksheet.costpercapita_ch104, 0.002); end
  def test_costpercapita_ci104; assert_in_epsilon(97.47749678494522, worksheet.costpercapita_ci104, 0.002); end
  def test_costpercapita_cj104; assert_in_epsilon(101.2747844277278, worksheet.costpercapita_cj104, 0.002); end
  def test_costpercapita_ck104; assert_in_epsilon(106.92253611710021, worksheet.costpercapita_ck104, 0.002); end
  def test_costpercapita_cl104; assert_in_epsilon(111.81785033605075, worksheet.costpercapita_cl104, 0.002); end
  def test_costpercapita_cm104; assert_in_epsilon(115.89300998539551, worksheet.costpercapita_cm104, 0.002); end
  def test_costpercapita_cn104; assert_in_epsilon(119.19954361119487, worksheet.costpercapita_cn104, 0.002); end
  def test_costpercapita_cp104; assert_in_epsilon(100.04280513186701, worksheet.costpercapita_cp104, 0.002); end
  def test_costpercapita_cq104; assert_in_epsilon(2054.062065532528, worksheet.costpercapita_cq104, 0.002); end
  def test_costpercapita_cr104; assert_equal("ok", worksheet.costpercapita_cr104); end
  def test_costpercapita_a105; assert_equal("RES.N", worksheet.costpercapita_a105); end
  def test_costpercapita_b105; assert_equal("Residential non-energy use", worksheet.costpercapita_b105); end
  def test_costpercapita_c105; assert_equal("Buildings", worksheet.costpercapita_c105); end
  def test_costpercapita_e105; assert_in_delta(0.0, (worksheet.costpercapita_e105||0), 0.002); end
  def test_costpercapita_f105; assert_in_delta(0.0, (worksheet.costpercapita_f105||0), 0.002); end
  def test_costpercapita_g105; assert_in_delta(0.0, (worksheet.costpercapita_g105||0), 0.002); end
  def test_costpercapita_h105; assert_in_delta(0.0, (worksheet.costpercapita_h105||0), 0.002); end
  def test_costpercapita_i105; assert_in_delta(0.0, (worksheet.costpercapita_i105||0), 0.002); end
  def test_costpercapita_j105; assert_in_delta(0.0, (worksheet.costpercapita_j105||0), 0.002); end
  def test_costpercapita_k105; assert_in_delta(0.0, (worksheet.costpercapita_k105||0), 0.002); end
  def test_costpercapita_l105; assert_in_delta(0.0, (worksheet.costpercapita_l105||0), 0.002); end
  def test_costpercapita_m105; assert_in_delta(0.0, (worksheet.costpercapita_m105||0), 0.002); end
  def test_costpercapita_o105; assert_in_delta(0.0, (worksheet.costpercapita_o105||0), 0.002); end
  def test_costpercapita_p105; assert_in_delta(0.0, (worksheet.costpercapita_p105||0), 0.002); end
  def test_costpercapita_q105; assert_in_delta(0.0, (worksheet.costpercapita_q105||0), 0.002); end
  def test_costpercapita_r105; assert_in_delta(0.0, (worksheet.costpercapita_r105||0), 0.002); end
  def test_costpercapita_s105; assert_in_delta(0.0, (worksheet.costpercapita_s105||0), 0.002); end
  def test_costpercapita_t105; assert_in_delta(0.0, (worksheet.costpercapita_t105||0), 0.002); end
  def test_costpercapita_u105; assert_in_delta(0.0, (worksheet.costpercapita_u105||0), 0.002); end
  def test_costpercapita_v105; assert_in_delta(0.0, (worksheet.costpercapita_v105||0), 0.002); end
  def test_costpercapita_w105; assert_in_delta(0.0, (worksheet.costpercapita_w105||0), 0.002); end
  def test_costpercapita_y105; assert_in_delta(0.0, (worksheet.costpercapita_y105||0), 0.002); end
  def test_costpercapita_z105; assert_in_delta(0.0, (worksheet.costpercapita_z105||0), 0.002); end
  def test_costpercapita_aa105; assert_in_delta(0.0, (worksheet.costpercapita_aa105||0), 0.002); end
  def test_costpercapita_ab105; assert_in_delta(0.0, (worksheet.costpercapita_ab105||0), 0.002); end
  def test_costpercapita_ac105; assert_in_delta(0.0, (worksheet.costpercapita_ac105||0), 0.002); end
  def test_costpercapita_ad105; assert_in_delta(0.0, (worksheet.costpercapita_ad105||0), 0.002); end
  def test_costpercapita_ae105; assert_in_delta(0.0, (worksheet.costpercapita_ae105||0), 0.002); end
  def test_costpercapita_af105; assert_in_delta(0.0, (worksheet.costpercapita_af105||0), 0.002); end
  def test_costpercapita_ag105; assert_in_delta(0.0, (worksheet.costpercapita_ag105||0), 0.002); end
  def test_costpercapita_ai105; assert_in_delta(0.0, (worksheet.costpercapita_ai105||0), 0.002); end
  def test_costpercapita_aj105; assert_in_delta(0.0, (worksheet.costpercapita_aj105||0), 0.002); end
  def test_costpercapita_ak105; assert_in_delta(0.0, (worksheet.costpercapita_ak105||0), 0.002); end
  def test_costpercapita_al105; assert_in_delta(0.0, (worksheet.costpercapita_al105||0), 0.002); end
  def test_costpercapita_am105; assert_in_delta(0.0, (worksheet.costpercapita_am105||0), 0.002); end
  def test_costpercapita_an105; assert_in_delta(0.0, (worksheet.costpercapita_an105||0), 0.002); end
  def test_costpercapita_ao105; assert_in_delta(0.0, (worksheet.costpercapita_ao105||0), 0.002); end
  def test_costpercapita_ap105; assert_in_delta(0.0, (worksheet.costpercapita_ap105||0), 0.002); end
  def test_costpercapita_aq105; assert_in_delta(0.0, (worksheet.costpercapita_aq105||0), 0.002); end
  def test_costpercapita_as105; assert_in_delta(0.0, (worksheet.costpercapita_as105||0), 0.002); end
  def test_costpercapita_at105; assert_in_delta(0.0, (worksheet.costpercapita_at105||0), 0.002); end
  def test_costpercapita_av105; assert_in_delta(0.0, (worksheet.costpercapita_av105||0), 0.002); end
  def test_costpercapita_aw105; assert_in_epsilon(5.0, worksheet.costpercapita_aw105, 0.002); end
  def test_costpercapita_ay105; assert_in_delta(0.0, (worksheet.costpercapita_ay105||0), 0.002); end
  def test_costpercapita_az105; assert_in_delta(0.0, (worksheet.costpercapita_az105||0), 0.002); end
  def test_costpercapita_ba105; assert_in_delta(0.0, (worksheet.costpercapita_ba105||0), 0.002); end
  def test_costpercapita_bb105; assert_in_delta(0.0, (worksheet.costpercapita_bb105||0), 0.002); end
  def test_costpercapita_bc105; assert_in_delta(0.0, (worksheet.costpercapita_bc105||0), 0.002); end
  def test_costpercapita_bd105; assert_in_delta(0.0, (worksheet.costpercapita_bd105||0), 0.002); end
  def test_costpercapita_be105; assert_in_delta(0.0, (worksheet.costpercapita_be105||0), 0.002); end
  def test_costpercapita_bf105; assert_in_delta(0.0, (worksheet.costpercapita_bf105||0), 0.002); end
  def test_costpercapita_bg105; assert_in_delta(0.0, (worksheet.costpercapita_bg105||0), 0.002); end
  def test_costpercapita_bi105; assert_in_delta(0.0, (worksheet.costpercapita_bi105||0), 0.002); end
  def test_costpercapita_bj105; assert_in_delta(0.0, (worksheet.costpercapita_bj105||0), 0.002); end
  def test_costpercapita_bk105; assert_in_delta(0.0, (worksheet.costpercapita_bk105||0), 0.002); end
  def test_costpercapita_bl105; assert_in_delta(0.0, (worksheet.costpercapita_bl105||0), 0.002); end
  def test_costpercapita_bm105; assert_in_delta(0.0, (worksheet.costpercapita_bm105||0), 0.002); end
  def test_costpercapita_bn105; assert_in_delta(0.0, (worksheet.costpercapita_bn105||0), 0.002); end
  def test_costpercapita_bo105; assert_in_delta(0.0, (worksheet.costpercapita_bo105||0), 0.002); end
  def test_costpercapita_bp105; assert_in_delta(0.0, (worksheet.costpercapita_bp105||0), 0.002); end
  def test_costpercapita_bq105; assert_in_delta(0.0, (worksheet.costpercapita_bq105||0), 0.002); end
  def test_costpercapita_bs105; assert_in_delta(0.0, (worksheet.costpercapita_bs105||0), 0.002); end
  def test_costpercapita_bt105; assert_in_delta(0.0, (worksheet.costpercapita_bt105||0), 0.002); end
  def test_costpercapita_bu105; assert_in_delta(0.0, (worksheet.costpercapita_bu105||0), 0.002); end
  def test_costpercapita_bv105; assert_in_delta(0.0, (worksheet.costpercapita_bv105||0), 0.002); end
  def test_costpercapita_bw105; assert_in_delta(0.0, (worksheet.costpercapita_bw105||0), 0.002); end
  def test_costpercapita_bx105; assert_in_delta(0.0, (worksheet.costpercapita_bx105||0), 0.002); end
  def test_costpercapita_by105; assert_in_delta(0.0, (worksheet.costpercapita_by105||0), 0.002); end
  def test_costpercapita_bz105; assert_in_delta(0.0, (worksheet.costpercapita_bz105||0), 0.002); end
  def test_costpercapita_ca105; assert_in_delta(0.0, (worksheet.costpercapita_ca105||0), 0.002); end
  def test_costpercapita_cc105; assert_in_delta(0.0, (worksheet.costpercapita_cc105||0), 0.002); end
  def test_costpercapita_cd105; assert_in_delta(0.0, (worksheet.costpercapita_cd105||0), 0.002); end
  def test_costpercapita_cf105; assert_in_delta(0.0, (worksheet.costpercapita_cf105||0), 0.002); end
  def test_costpercapita_cg105; assert_in_delta(0.0, (worksheet.costpercapita_cg105||0), 0.002); end
  def test_costpercapita_ch105; assert_in_delta(0.0, (worksheet.costpercapita_ch105||0), 0.002); end
  def test_costpercapita_ci105; assert_in_delta(0.0, (worksheet.costpercapita_ci105||0), 0.002); end
  def test_costpercapita_cj105; assert_in_delta(0.0, (worksheet.costpercapita_cj105||0), 0.002); end
  def test_costpercapita_ck105; assert_in_delta(0.0, (worksheet.costpercapita_ck105||0), 0.002); end
  def test_costpercapita_cl105; assert_in_delta(0.0, (worksheet.costpercapita_cl105||0), 0.002); end
  def test_costpercapita_cm105; assert_in_delta(0.0, (worksheet.costpercapita_cm105||0), 0.002); end
  def test_costpercapita_cn105; assert_in_delta(0.0, (worksheet.costpercapita_cn105||0), 0.002); end
  def test_costpercapita_cp105; assert_in_delta(0.0, (worksheet.costpercapita_cp105||0), 0.002); end
  def test_costpercapita_cq105; assert_in_delta(0.0, (worksheet.costpercapita_cq105||0), 0.002); end
  def test_costpercapita_cr105; assert_equal("ok", worksheet.costpercapita_cr105); end
  def test_costpercapita_a106; assert_equal("BIO.SUP", worksheet.costpercapita_a106); end
  def test_costpercapita_b106; assert_equal("Biomass for fuel", worksheet.costpercapita_b106); end
  def test_costpercapita_c106; assert_equal("Bioenergy", worksheet.costpercapita_c106); end
  def test_costpercapita_e106; assert_in_delta(0.0, (worksheet.costpercapita_e106||0), 0.002); end
  def test_costpercapita_f106; assert_in_delta(0.0, (worksheet.costpercapita_f106||0), 0.002); end
  def test_costpercapita_g106; assert_in_delta(0.0, (worksheet.costpercapita_g106||0), 0.002); end
  def test_costpercapita_h106; assert_in_delta(0.0, (worksheet.costpercapita_h106||0), 0.002); end
  def test_costpercapita_i106; assert_in_delta(0.0, (worksheet.costpercapita_i106||0), 0.002); end
  def test_costpercapita_j106; assert_in_delta(0.0, (worksheet.costpercapita_j106||0), 0.002); end
  def test_costpercapita_k106; assert_in_delta(0.0, (worksheet.costpercapita_k106||0), 0.002); end
  def test_costpercapita_l106; assert_in_delta(0.0, (worksheet.costpercapita_l106||0), 0.002); end
  def test_costpercapita_m106; assert_in_delta(0.0, (worksheet.costpercapita_m106||0), 0.002); end
  def test_costpercapita_o106; assert_in_delta(0.0, (worksheet.costpercapita_o106||0), 0.002); end
  def test_costpercapita_p106; assert_in_delta(0.0, (worksheet.costpercapita_p106||0), 0.002); end
  def test_costpercapita_q106; assert_in_delta(0.0, (worksheet.costpercapita_q106||0), 0.002); end
  def test_costpercapita_r106; assert_in_delta(0.0, (worksheet.costpercapita_r106||0), 0.002); end
  def test_costpercapita_s106; assert_in_delta(0.0, (worksheet.costpercapita_s106||0), 0.002); end
  def test_costpercapita_t106; assert_in_delta(0.0, (worksheet.costpercapita_t106||0), 0.002); end
  def test_costpercapita_u106; assert_in_delta(0.0, (worksheet.costpercapita_u106||0), 0.002); end
  def test_costpercapita_v106; assert_in_delta(0.0, (worksheet.costpercapita_v106||0), 0.002); end
  def test_costpercapita_w106; assert_in_delta(0.0, (worksheet.costpercapita_w106||0), 0.002); end
  def test_costpercapita_y106; assert_in_delta(0.0, (worksheet.costpercapita_y106||0), 0.002); end
  def test_costpercapita_z106; assert_in_delta(0.0385697013093565, worksheet.costpercapita_z106, 0.002); end
  def test_costpercapita_aa106; assert_in_delta(0.08228553517656419, worksheet.costpercapita_aa106, 0.002); end
  def test_costpercapita_ab106; assert_in_delta(0.19749369850207865, worksheet.costpercapita_ab106, 0.002); end
  def test_costpercapita_ac106; assert_in_delta(0.2808918939575386, worksheet.costpercapita_ac106, 0.002); end
  def test_costpercapita_ad106; assert_in_delta(0.3745384822219214, worksheet.costpercapita_ad106, 0.002); end
  def test_costpercapita_ae106; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ae106, 0.002); end
  def test_costpercapita_af106; assert_in_delta(0.5966490253229234, worksheet.costpercapita_af106, 0.002); end
  def test_costpercapita_ag106; assert_in_delta(0.727374563002047, worksheet.costpercapita_ag106, 0.002); end
  def test_costpercapita_ai106; assert_in_delta(0.0, (worksheet.costpercapita_ai106||0), 0.002); end
  def test_costpercapita_aj106; assert_in_delta(0.0385697013093565, worksheet.costpercapita_aj106, 0.002); end
  def test_costpercapita_ak106; assert_in_delta(0.08228553517656419, worksheet.costpercapita_ak106, 0.002); end
  def test_costpercapita_al106; assert_in_delta(0.19749369850207865, worksheet.costpercapita_al106, 0.002); end
  def test_costpercapita_am106; assert_in_delta(0.2808918939575386, worksheet.costpercapita_am106, 0.002); end
  def test_costpercapita_an106; assert_in_delta(0.3745384822219214, worksheet.costpercapita_an106, 0.002); end
  def test_costpercapita_ao106; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ao106, 0.002); end
  def test_costpercapita_ap106; assert_in_delta(0.5966490253229234, worksheet.costpercapita_ap106, 0.002); end
  def test_costpercapita_aq106; assert_in_delta(0.727374563002047, worksheet.costpercapita_aq106, 0.002); end
  def test_costpercapita_as106; assert_in_delta(0.308581398055175, worksheet.costpercapita_as106, 0.002); end
  def test_costpercapita_at106; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_at106, 0.002); end
  def test_costpercapita_av106; assert_in_delta(0.0, (worksheet.costpercapita_av106||0), 0.002); end
  def test_costpercapita_aw106; assert_in_epsilon(5.0, worksheet.costpercapita_aw106, 0.002); end
  def test_costpercapita_ay106; assert_in_delta(0.0, (worksheet.costpercapita_ay106||0), 0.002); end
  def test_costpercapita_az106; assert_in_delta(0.0, (worksheet.costpercapita_az106||0), 0.002); end
  def test_costpercapita_ba106; assert_in_delta(0.0, (worksheet.costpercapita_ba106||0), 0.002); end
  def test_costpercapita_bb106; assert_in_delta(0.0, (worksheet.costpercapita_bb106||0), 0.002); end
  def test_costpercapita_bc106; assert_in_delta(0.0, (worksheet.costpercapita_bc106||0), 0.002); end
  def test_costpercapita_bd106; assert_in_delta(0.0, (worksheet.costpercapita_bd106||0), 0.002); end
  def test_costpercapita_be106; assert_in_delta(0.0, (worksheet.costpercapita_be106||0), 0.002); end
  def test_costpercapita_bf106; assert_in_delta(0.0, (worksheet.costpercapita_bf106||0), 0.002); end
  def test_costpercapita_bg106; assert_in_delta(0.0, (worksheet.costpercapita_bg106||0), 0.002); end
  def test_costpercapita_bi106; assert_in_delta(0.0, (worksheet.costpercapita_bi106||0), 0.002); end
  def test_costpercapita_bj106; assert_in_delta(0.0, (worksheet.costpercapita_bj106||0), 0.002); end
  def test_costpercapita_bk106; assert_in_delta(0.0, (worksheet.costpercapita_bk106||0), 0.002); end
  def test_costpercapita_bl106; assert_in_delta(0.0, (worksheet.costpercapita_bl106||0), 0.002); end
  def test_costpercapita_bm106; assert_in_delta(0.0, (worksheet.costpercapita_bm106||0), 0.002); end
  def test_costpercapita_bn106; assert_in_delta(0.0, (worksheet.costpercapita_bn106||0), 0.002); end
  def test_costpercapita_bo106; assert_in_delta(0.0, (worksheet.costpercapita_bo106||0), 0.002); end
  def test_costpercapita_bp106; assert_in_delta(0.0, (worksheet.costpercapita_bp106||0), 0.002); end
  def test_costpercapita_bq106; assert_in_delta(0.0, (worksheet.costpercapita_bq106||0), 0.002); end
  def test_costpercapita_bs106; assert_in_delta(0.0, (worksheet.costpercapita_bs106||0), 0.002); end
  def test_costpercapita_bt106; assert_in_delta(0.0385697013093565, worksheet.costpercapita_bt106, 0.002); end
  def test_costpercapita_bu106; assert_in_delta(0.08228553517656419, worksheet.costpercapita_bu106, 0.002); end
  def test_costpercapita_bv106; assert_in_delta(0.19749369850207865, worksheet.costpercapita_bv106, 0.002); end
  def test_costpercapita_bw106; assert_in_delta(0.2808918939575386, worksheet.costpercapita_bw106, 0.002); end
  def test_costpercapita_bx106; assert_in_delta(0.3745384822219214, worksheet.costpercapita_bx106, 0.002); end
  def test_costpercapita_by106; assert_in_delta(0.4794296830041448, worksheet.costpercapita_by106, 0.002); end
  def test_costpercapita_bz106; assert_in_delta(0.5966490253229234, worksheet.costpercapita_bz106, 0.002); end
  def test_costpercapita_ca106; assert_in_delta(0.727374563002047, worksheet.costpercapita_ca106, 0.002); end
  def test_costpercapita_cc106; assert_in_delta(0.308581398055175, worksheet.costpercapita_cc106, 0.002); end
  def test_costpercapita_cd106; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_cd106, 0.002); end
  def test_costpercapita_cf106; assert_in_delta(0.0, (worksheet.costpercapita_cf106||0), 0.002); end
  def test_costpercapita_cg106; assert_in_delta(0.0, (worksheet.costpercapita_cg106||0), 0.002); end
  def test_costpercapita_ch106; assert_in_delta(0.0, (worksheet.costpercapita_ch106||0), 0.002); end
  def test_costpercapita_ci106; assert_in_delta(0.0, (worksheet.costpercapita_ci106||0), 0.002); end
  def test_costpercapita_cj106; assert_in_delta(0.0, (worksheet.costpercapita_cj106||0), 0.002); end
  def test_costpercapita_ck106; assert_in_delta(0.0, (worksheet.costpercapita_ck106||0), 0.002); end
  def test_costpercapita_cl106; assert_in_delta(0.0, (worksheet.costpercapita_cl106||0), 0.002); end
  def test_costpercapita_cm106; assert_in_delta(0.0, (worksheet.costpercapita_cm106||0), 0.002); end
  def test_costpercapita_cn106; assert_in_delta(0.0, (worksheet.costpercapita_cn106||0), 0.002); end
  def test_costpercapita_cp106; assert_in_delta(0.0, (worksheet.costpercapita_cp106||0), 0.002); end
  def test_costpercapita_cq106; assert_in_delta(0.0, (worksheet.costpercapita_cq106||0), 0.002); end
  def test_costpercapita_cr106; assert_equal("ok", worksheet.costpercapita_cr106); end
  def test_costpercapita_a107; assert_equal("FOS.SUP.Coal", worksheet.costpercapita_a107); end
  def test_costpercapita_b107; assert_equal("Fossil fuel  coal supply", worksheet.costpercapita_b107); end
  def test_costpercapita_c107; assert_equal("Fossil Fuels", worksheet.costpercapita_c107); end
  def test_costpercapita_e107; assert_in_delta(0.0, (worksheet.costpercapita_e107||0), 0.002); end
  def test_costpercapita_f107; assert_in_delta(0.0, (worksheet.costpercapita_f107||0), 0.002); end
  def test_costpercapita_g107; assert_in_delta(0.0, (worksheet.costpercapita_g107||0), 0.002); end
  def test_costpercapita_h107; assert_in_delta(0.0, (worksheet.costpercapita_h107||0), 0.002); end
  def test_costpercapita_i107; assert_in_delta(0.0, (worksheet.costpercapita_i107||0), 0.002); end
  def test_costpercapita_j107; assert_in_delta(0.0, (worksheet.costpercapita_j107||0), 0.002); end
  def test_costpercapita_k107; assert_in_delta(0.0, (worksheet.costpercapita_k107||0), 0.002); end
  def test_costpercapita_l107; assert_in_delta(0.0, (worksheet.costpercapita_l107||0), 0.002); end
  def test_costpercapita_m107; assert_in_delta(0.0, (worksheet.costpercapita_m107||0), 0.002); end
  def test_costpercapita_o107; assert_in_delta(0.0, (worksheet.costpercapita_o107||0), 0.002); end
  def test_costpercapita_p107; assert_in_delta(0.0, (worksheet.costpercapita_p107||0), 0.002); end
  def test_costpercapita_q107; assert_in_delta(0.0, (worksheet.costpercapita_q107||0), 0.002); end
  def test_costpercapita_r107; assert_in_delta(0.0, (worksheet.costpercapita_r107||0), 0.002); end
  def test_costpercapita_s107; assert_in_delta(0.0, (worksheet.costpercapita_s107||0), 0.002); end
  def test_costpercapita_t107; assert_in_delta(0.0, (worksheet.costpercapita_t107||0), 0.002); end
  def test_costpercapita_u107; assert_in_delta(0.0, (worksheet.costpercapita_u107||0), 0.002); end
  def test_costpercapita_v107; assert_in_delta(0.0, (worksheet.costpercapita_v107||0), 0.002); end
  def test_costpercapita_w107; assert_in_delta(0.0, (worksheet.costpercapita_w107||0), 0.002); end
  def test_costpercapita_y107; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_y107, 0.002); end
  def test_costpercapita_z107; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_z107, 0.002); end
  def test_costpercapita_aa107; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_aa107, 0.002); end
  def test_costpercapita_ab107; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_ab107, 0.002); end
  def test_costpercapita_ac107; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_ac107, 0.002); end
  def test_costpercapita_ad107; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_ad107, 0.002); end
  def test_costpercapita_ae107; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_ae107, 0.002); end
  def test_costpercapita_af107; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_af107, 0.002); end
  def test_costpercapita_ag107; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_ag107, 0.002); end
  def test_costpercapita_ai107; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_ai107, 0.002); end
  def test_costpercapita_aj107; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_aj107, 0.002); end
  def test_costpercapita_ak107; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_ak107, 0.002); end
  def test_costpercapita_al107; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_al107, 0.002); end
  def test_costpercapita_am107; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_am107, 0.002); end
  def test_costpercapita_an107; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_an107, 0.002); end
  def test_costpercapita_ao107; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_ao107, 0.002); end
  def test_costpercapita_ap107; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_ap107, 0.002); end
  def test_costpercapita_aq107; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_aq107, 0.002); end
  def test_costpercapita_as107; assert_in_epsilon(611.8742656818816, worksheet.costpercapita_as107, 0.002); end
  def test_costpercapita_at107; assert_in_epsilon(13493.346325779166, worksheet.costpercapita_at107, 0.002); end
  def test_costpercapita_av107; assert_in_delta(0.0, (worksheet.costpercapita_av107||0), 0.002); end
  def test_costpercapita_aw107; assert_in_epsilon(5.0, worksheet.costpercapita_aw107, 0.002); end
  def test_costpercapita_ay107; assert_in_delta(0.0, (worksheet.costpercapita_ay107||0), 0.002); end
  def test_costpercapita_az107; assert_in_delta(0.0, (worksheet.costpercapita_az107||0), 0.002); end
  def test_costpercapita_ba107; assert_in_delta(0.0, (worksheet.costpercapita_ba107||0), 0.002); end
  def test_costpercapita_bb107; assert_in_delta(0.0, (worksheet.costpercapita_bb107||0), 0.002); end
  def test_costpercapita_bc107; assert_in_delta(0.0, (worksheet.costpercapita_bc107||0), 0.002); end
  def test_costpercapita_bd107; assert_in_delta(0.0, (worksheet.costpercapita_bd107||0), 0.002); end
  def test_costpercapita_be107; assert_in_delta(0.0, (worksheet.costpercapita_be107||0), 0.002); end
  def test_costpercapita_bf107; assert_in_delta(0.0, (worksheet.costpercapita_bf107||0), 0.002); end
  def test_costpercapita_bg107; assert_in_delta(0.0, (worksheet.costpercapita_bg107||0), 0.002); end
  def test_costpercapita_bi107; assert_in_delta(0.0, (worksheet.costpercapita_bi107||0), 0.002); end
  def test_costpercapita_bj107; assert_in_delta(0.0, (worksheet.costpercapita_bj107||0), 0.002); end
  def test_costpercapita_bk107; assert_in_delta(0.0, (worksheet.costpercapita_bk107||0), 0.002); end
  def test_costpercapita_bl107; assert_in_delta(0.0, (worksheet.costpercapita_bl107||0), 0.002); end
  def test_costpercapita_bm107; assert_in_delta(0.0, (worksheet.costpercapita_bm107||0), 0.002); end
  def test_costpercapita_bn107; assert_in_delta(0.0, (worksheet.costpercapita_bn107||0), 0.002); end
  def test_costpercapita_bo107; assert_in_delta(0.0, (worksheet.costpercapita_bo107||0), 0.002); end
  def test_costpercapita_bp107; assert_in_delta(0.0, (worksheet.costpercapita_bp107||0), 0.002); end
  def test_costpercapita_bq107; assert_in_delta(0.0, (worksheet.costpercapita_bq107||0), 0.002); end
  def test_costpercapita_bs107; assert_in_epsilon(1263.5571538802562, worksheet.costpercapita_bs107, 0.002); end
  def test_costpercapita_bt107; assert_in_epsilon(1304.8535841650696, worksheet.costpercapita_bt107, 0.002); end
  def test_costpercapita_bu107; assert_in_epsilon(469.37758277428657, worksheet.costpercapita_bu107, 0.002); end
  def test_costpercapita_bv107; assert_in_epsilon(419.4229459446526, worksheet.costpercapita_bv107, 0.002); end
  def test_costpercapita_bw107; assert_in_epsilon(420.24743986937733, worksheet.costpercapita_bw107, 0.002); end
  def test_costpercapita_bx107; assert_in_epsilon(431.9860807235922, worksheet.costpercapita_bx107, 0.002); end
  def test_costpercapita_by107; assert_in_epsilon(387.7796157417635, worksheet.costpercapita_by107, 0.002); end
  def test_costpercapita_bz107; assert_in_epsilon(412.3793417561976, worksheet.costpercapita_bz107, 0.002); end
  def test_costpercapita_ca107; assert_in_epsilon(397.2646462817395, worksheet.costpercapita_ca107, 0.002); end
  def test_costpercapita_cc107; assert_in_epsilon(611.8742656818816, worksheet.costpercapita_cc107, 0.002); end
  def test_costpercapita_cd107; assert_in_epsilon(13493.346325779166, worksheet.costpercapita_cd107, 0.002); end
  def test_costpercapita_cf107; assert_in_delta(0.0, (worksheet.costpercapita_cf107||0), 0.002); end
  def test_costpercapita_cg107; assert_in_delta(0.0, (worksheet.costpercapita_cg107||0), 0.002); end
  def test_costpercapita_ch107; assert_in_delta(0.0, (worksheet.costpercapita_ch107||0), 0.002); end
  def test_costpercapita_ci107; assert_in_delta(0.0, (worksheet.costpercapita_ci107||0), 0.002); end
  def test_costpercapita_cj107; assert_in_delta(0.0, (worksheet.costpercapita_cj107||0), 0.002); end
  def test_costpercapita_ck107; assert_in_delta(0.0, (worksheet.costpercapita_ck107||0), 0.002); end
  def test_costpercapita_cl107; assert_in_delta(0.0, (worksheet.costpercapita_cl107||0), 0.002); end
  def test_costpercapita_cm107; assert_in_delta(0.0, (worksheet.costpercapita_cm107||0), 0.002); end
  def test_costpercapita_cn107; assert_in_delta(0.0, (worksheet.costpercapita_cn107||0), 0.002); end
  def test_costpercapita_cp107; assert_in_delta(0.0, (worksheet.costpercapita_cp107||0), 0.002); end
  def test_costpercapita_cq107; assert_in_delta(0.0, (worksheet.costpercapita_cq107||0), 0.002); end
  def test_costpercapita_cr107; assert_equal("ok", worksheet.costpercapita_cr107); end
  def test_costpercapita_a108; assert_equal("FOS.SUP.Gas", worksheet.costpercapita_a108); end
  def test_costpercapita_b108; assert_equal("Fossil fuel gas supply", worksheet.costpercapita_b108); end
  def test_costpercapita_c108; assert_equal("Fossil Fuels", worksheet.costpercapita_c108); end
  def test_costpercapita_e108; assert_in_epsilon(6.933771846269147, worksheet.costpercapita_e108, 0.002); end
  def test_costpercapita_f108; assert_in_epsilon(8.179792974040513, worksheet.costpercapita_f108, 0.002); end
  def test_costpercapita_g108; assert_in_delta(0.0, (worksheet.costpercapita_g108||0), 0.002); end
  def test_costpercapita_h108; assert_in_delta(0.0, (worksheet.costpercapita_h108||0), 0.002); end
  def test_costpercapita_i108; assert_in_delta(0.0, (worksheet.costpercapita_i108||0), 0.002); end
  def test_costpercapita_j108; assert_in_epsilon(4.349746149489423, worksheet.costpercapita_j108, 0.002); end
  def test_costpercapita_k108; assert_in_epsilon(10.49009358637409, worksheet.costpercapita_k108, 0.002); end
  def test_costpercapita_l108; assert_in_epsilon(10.136102388770807, worksheet.costpercapita_l108, 0.002); end
  def test_costpercapita_m108; assert_in_epsilon(10.211220273726992, worksheet.costpercapita_m108, 0.002); end
  def test_costpercapita_o108; assert_in_delta(0.0, (worksheet.costpercapita_o108||0), 0.002); end
  def test_costpercapita_p108; assert_in_delta(0.0, (worksheet.costpercapita_p108||0), 0.002); end
  def test_costpercapita_q108; assert_in_delta(0.0, (worksheet.costpercapita_q108||0), 0.002); end
  def test_costpercapita_r108; assert_in_delta(0.0, (worksheet.costpercapita_r108||0), 0.002); end
  def test_costpercapita_s108; assert_in_delta(0.0, (worksheet.costpercapita_s108||0), 0.002); end
  def test_costpercapita_t108; assert_in_delta(0.0, (worksheet.costpercapita_t108||0), 0.002); end
  def test_costpercapita_u108; assert_in_delta(0.0, (worksheet.costpercapita_u108||0), 0.002); end
  def test_costpercapita_v108; assert_in_delta(0.0, (worksheet.costpercapita_v108||0), 0.002); end
  def test_costpercapita_w108; assert_in_delta(0.0, (worksheet.costpercapita_w108||0), 0.002); end
  def test_costpercapita_y108; assert_in_epsilon(402.4554336428264, worksheet.costpercapita_y108, 0.002); end
  def test_costpercapita_z108; assert_in_epsilon(498.799008857509, worksheet.costpercapita_z108, 0.002); end
  def test_costpercapita_aa108; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_aa108, 0.002); end
  def test_costpercapita_ab108; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_ab108, 0.002); end
  def test_costpercapita_ac108; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_ac108, 0.002); end
  def test_costpercapita_ad108; assert_in_epsilon(1106.3541515982145, worksheet.costpercapita_ad108, 0.002); end
  def test_costpercapita_ae108; assert_in_epsilon(1301.5020938371151, worksheet.costpercapita_ae108, 0.002); end
  def test_costpercapita_af108; assert_in_epsilon(1673.4941063465744, worksheet.costpercapita_af108, 0.002); end
  def test_costpercapita_ag108; assert_in_epsilon(1976.5705229344449, worksheet.costpercapita_ag108, 0.002); end
  def test_costpercapita_ai108; assert_in_epsilon(409.38920548909556, worksheet.costpercapita_ai108, 0.002); end
  def test_costpercapita_aj108; assert_in_epsilon(506.9788018315495, worksheet.costpercapita_aj108, 0.002); end
  def test_costpercapita_ak108; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_ak108, 0.002); end
  def test_costpercapita_al108; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_al108, 0.002); end
  def test_costpercapita_am108; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_am108, 0.002); end
  def test_costpercapita_an108; assert_in_epsilon(1110.7038977477039, worksheet.costpercapita_an108, 0.002); end
  def test_costpercapita_ao108; assert_in_epsilon(1311.992187423489, worksheet.costpercapita_ao108, 0.002); end
  def test_costpercapita_ap108; assert_in_epsilon(1683.6302087353451, worksheet.costpercapita_ap108, 0.002); end
  def test_costpercapita_aq108; assert_in_epsilon(1986.781743208172, worksheet.costpercapita_aq108, 0.002); end
  def test_costpercapita_as108; assert_in_epsilon(1035.4147190865217, worksheet.costpercapita_as108, 0.002); end
  def test_costpercapita_at108; assert_in_epsilon(19236.040107601617, worksheet.costpercapita_at108, 0.002); end
  def test_costpercapita_av108; assert_in_delta(0.0, (worksheet.costpercapita_av108||0), 0.002); end
  def test_costpercapita_aw108; assert_in_epsilon(5.0, worksheet.costpercapita_aw108, 0.002); end
  def test_costpercapita_ay108; assert_in_epsilon(13.674137590564996, worksheet.costpercapita_ay108, 0.002); end
  def test_costpercapita_az108; assert_in_epsilon(16.13142414680846, worksheet.costpercapita_az108, 0.002); end
  def test_costpercapita_ba108; assert_in_delta(0.0, (worksheet.costpercapita_ba108||0), 0.002); end
  def test_costpercapita_bb108; assert_in_delta(0.0, (worksheet.costpercapita_bb108||0), 0.002); end
  def test_costpercapita_bc108; assert_in_delta(0.0, (worksheet.costpercapita_bc108||0), 0.002); end
  def test_costpercapita_bd108; assert_in_epsilon(8.578163321620185, worksheet.costpercapita_bd108, 0.002); end
  def test_costpercapita_be108; assert_in_epsilon(20.687583355539026, worksheet.costpercapita_be108, 0.002); end
  def test_costpercapita_bf108; assert_in_epsilon(19.989474959532213, worksheet.costpercapita_bf108, 0.002); end
  def test_costpercapita_bg108; assert_in_epsilon(20.137615440236917, worksheet.costpercapita_bg108, 0.002); end
  def test_costpercapita_bi108; assert_in_delta(0.0, (worksheet.costpercapita_bi108||0), 0.002); end
  def test_costpercapita_bj108; assert_in_delta(0.0, (worksheet.costpercapita_bj108||0), 0.002); end
  def test_costpercapita_bk108; assert_in_delta(0.0, (worksheet.costpercapita_bk108||0), 0.002); end
  def test_costpercapita_bl108; assert_in_delta(0.0, (worksheet.costpercapita_bl108||0), 0.002); end
  def test_costpercapita_bm108; assert_in_delta(0.0, (worksheet.costpercapita_bm108||0), 0.002); end
  def test_costpercapita_bn108; assert_in_delta(0.0, (worksheet.costpercapita_bn108||0), 0.002); end
  def test_costpercapita_bo108; assert_in_delta(0.0, (worksheet.costpercapita_bo108||0), 0.002); end
  def test_costpercapita_bp108; assert_in_delta(0.0, (worksheet.costpercapita_bp108||0), 0.002); end
  def test_costpercapita_bq108; assert_in_delta(0.0, (worksheet.costpercapita_bq108||0), 0.002); end
  def test_costpercapita_bs108; assert_in_epsilon(416.12957123339135, worksheet.costpercapita_bs108, 0.002); end
  def test_costpercapita_bt108; assert_in_epsilon(514.9304330043175, worksheet.costpercapita_bt108, 0.002); end
  def test_costpercapita_bu108; assert_in_epsilon(598.9196302518759, worksheet.costpercapita_bu108, 0.002); end
  def test_costpercapita_bv108; assert_in_epsilon(771.4481427842236, worksheet.costpercapita_bv108, 0.002); end
  def test_costpercapita_bw108; assert_in_epsilon(938.8886543072414, worksheet.costpercapita_bw108, 0.002); end
  def test_costpercapita_bx108; assert_in_epsilon(1114.9323149198347, worksheet.costpercapita_bx108, 0.002); end
  def test_costpercapita_by108; assert_in_epsilon(1322.189677192654, worksheet.costpercapita_by108, 0.002); end
  def test_costpercapita_bz108; assert_in_epsilon(1693.4835813061065, worksheet.costpercapita_bz108, 0.002); end
  def test_costpercapita_ca108; assert_in_epsilon(1996.7081383746818, worksheet.costpercapita_ca108, 0.002); end
  def test_costpercapita_cc108; assert_in_epsilon(1040.8477937082585, worksheet.costpercapita_cc108, 0.002); end
  def test_costpercapita_cd108; assert_in_epsilon(19331.666506040194, worksheet.costpercapita_cd108, 0.002); end
  def test_costpercapita_cf108; assert_in_epsilon(6.74036574429585, worksheet.costpercapita_cf108, 0.002); end
  def test_costpercapita_cg108; assert_in_epsilon(7.9516311727679465, worksheet.costpercapita_cg108, 0.002); end
  def test_costpercapita_ch108; assert_in_delta(0.0, (worksheet.costpercapita_ch108||0), 0.002); end
  def test_costpercapita_ci108; assert_in_delta(0.0, (worksheet.costpercapita_ci108||0), 0.002); end
  def test_costpercapita_cj108; assert_in_delta(0.0, (worksheet.costpercapita_cj108||0), 0.002); end
  def test_costpercapita_ck108; assert_in_epsilon(4.228417172130761, worksheet.costpercapita_ck108, 0.002); end
  def test_costpercapita_cl108; assert_in_epsilon(10.197489769164935, worksheet.costpercapita_cl108, 0.002); end
  def test_costpercapita_cm108; assert_in_epsilon(9.853372570761405, worksheet.costpercapita_cm108, 0.002); end
  def test_costpercapita_cn108; assert_in_epsilon(9.926395166509927, worksheet.costpercapita_cn108, 0.002); end
  def test_costpercapita_cp108; assert_in_epsilon(5.4330746217367585, worksheet.costpercapita_cp108, 0.002); end
  def test_costpercapita_cq108; assert_in_epsilon(95.62639843857886, worksheet.costpercapita_cq108, 0.002); end
  def test_costpercapita_cr108; assert_equal("ok", worksheet.costpercapita_cr108); end
  def test_costpercapita_a109; assert_equal("FOS.CTL", worksheet.costpercapita_a109); end
  def test_costpercapita_b109; assert_equal("Petroleum CTL", worksheet.costpercapita_b109); end
  def test_costpercapita_c109; assert_equal("Fossil Fuels", worksheet.costpercapita_c109); end
  def test_costpercapita_e109; assert_in_delta(0.0, (worksheet.costpercapita_e109||0), 0.002); end
  def test_costpercapita_f109; assert_in_delta(0.0, (worksheet.costpercapita_f109||0), 0.002); end
  def test_costpercapita_g109; assert_in_delta(0.0, (worksheet.costpercapita_g109||0), 0.002); end
  def test_costpercapita_h109; assert_in_delta(0.0, (worksheet.costpercapita_h109||0), 0.002); end
  def test_costpercapita_i109; assert_in_delta(0.0, (worksheet.costpercapita_i109||0), 0.002); end
  def test_costpercapita_j109; assert_in_delta(0.0, (worksheet.costpercapita_j109||0), 0.002); end
  def test_costpercapita_k109; assert_in_epsilon(-14.220319855346778, worksheet.costpercapita_k109, 0.002); end
  def test_costpercapita_l109; assert_in_epsilon(-14.220319855346778, worksheet.costpercapita_l109, 0.002); end
  def test_costpercapita_m109; assert_in_epsilon(-24.29343687720638, worksheet.costpercapita_m109, 0.002); end
  def test_costpercapita_o109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_o109, 0.002); end
  def test_costpercapita_p109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_p109, 0.002); end
  def test_costpercapita_q109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_q109, 0.002); end
  def test_costpercapita_r109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_r109, 0.002); end
  def test_costpercapita_s109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_s109, 0.002); end
  def test_costpercapita_t109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_t109, 0.002); end
  def test_costpercapita_u109; assert_in_epsilon(80.46759454024483, worksheet.costpercapita_u109, 0.002); end
  def test_costpercapita_v109; assert_in_epsilon(80.46759454024483, worksheet.costpercapita_v109, 0.002); end
  def test_costpercapita_w109; assert_in_epsilon(49.61116797789233, worksheet.costpercapita_w109, 0.002); end
  def test_costpercapita_y109; assert_in_delta(0.0, (worksheet.costpercapita_y109||0), 0.002); end
  def test_costpercapita_z109; assert_in_delta(0.0, (worksheet.costpercapita_z109||0), 0.002); end
  def test_costpercapita_aa109; assert_in_delta(0.0, (worksheet.costpercapita_aa109||0), 0.002); end
  def test_costpercapita_ab109; assert_in_delta(0.0, (worksheet.costpercapita_ab109||0), 0.002); end
  def test_costpercapita_ac109; assert_in_delta(0.0, (worksheet.costpercapita_ac109||0), 0.002); end
  def test_costpercapita_ad109; assert_in_delta(0.0, (worksheet.costpercapita_ad109||0), 0.002); end
  def test_costpercapita_ae109; assert_in_delta(0.0, (worksheet.costpercapita_ae109||0), 0.002); end
  def test_costpercapita_af109; assert_in_delta(0.0, (worksheet.costpercapita_af109||0), 0.002); end
  def test_costpercapita_ag109; assert_in_delta(0.0, (worksheet.costpercapita_ag109||0), 0.002); end
  def test_costpercapita_ai109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_ai109, 0.002); end
  def test_costpercapita_aj109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_aj109, 0.002); end
  def test_costpercapita_ak109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_ak109, 0.002); end
  def test_costpercapita_al109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_al109, 0.002); end
  def test_costpercapita_am109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_am109, 0.002); end
  def test_costpercapita_an109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_an109, 0.002); end
  def test_costpercapita_ao109; assert_in_epsilon(66.24727468489806, worksheet.costpercapita_ao109, 0.002); end
  def test_costpercapita_ap109; assert_in_epsilon(66.24727468489806, worksheet.costpercapita_ap109, 0.002); end
  def test_costpercapita_aq109; assert_in_epsilon(25.317731100685954, worksheet.costpercapita_aq109, 0.002); end
  def test_costpercapita_as109; assert_in_epsilon(100.21997779320743, worksheet.costpercapita_as109, 0.002); end
  def test_costpercapita_at109; assert_in_epsilon(2283.394281330137, worksheet.costpercapita_at109, 0.002); end
  def test_costpercapita_av109; assert_in_delta(0.0, (worksheet.costpercapita_av109||0), 0.002); end
  def test_costpercapita_aw109; assert_in_epsilon(5.0, worksheet.costpercapita_aw109, 0.002); end
  def test_costpercapita_ay109; assert_in_delta(0.0, (worksheet.costpercapita_ay109||0), 0.002); end
  def test_costpercapita_az109; assert_in_delta(0.0, (worksheet.costpercapita_az109||0), 0.002); end
  def test_costpercapita_ba109; assert_in_delta(0.0, (worksheet.costpercapita_ba109||0), 0.002); end
  def test_costpercapita_bb109; assert_in_delta(0.0, (worksheet.costpercapita_bb109||0), 0.002); end
  def test_costpercapita_bc109; assert_in_delta(0.0, (worksheet.costpercapita_bc109||0), 0.002); end
  def test_costpercapita_bd109; assert_in_delta(0.0, (worksheet.costpercapita_bd109||0), 0.002); end
  def test_costpercapita_be109; assert_in_epsilon(-88.25355492895827, worksheet.costpercapita_be109, 0.002); end
  def test_costpercapita_bf109; assert_in_epsilon(-88.25355492895827, worksheet.costpercapita_bf109, 0.002); end
  def test_costpercapita_bg109; assert_in_epsilon(-150.76891291229185, worksheet.costpercapita_bg109, 0.002); end
  def test_costpercapita_bi109; assert_in_delta(0.0, (worksheet.costpercapita_bi109||0), 0.002); end
  def test_costpercapita_bj109; assert_in_delta(0.0, (worksheet.costpercapita_bj109||0), 0.002); end
  def test_costpercapita_bk109; assert_in_delta(0.0, (worksheet.costpercapita_bk109||0), 0.002); end
  def test_costpercapita_bl109; assert_in_delta(0.0, (worksheet.costpercapita_bl109||0), 0.002); end
  def test_costpercapita_bm109; assert_in_delta(0.0, (worksheet.costpercapita_bm109||0), 0.002); end
  def test_costpercapita_bn109; assert_in_delta(0.0, (worksheet.costpercapita_bn109||0), 0.002); end
  def test_costpercapita_bo109; assert_in_delta(0.0, (worksheet.costpercapita_bo109||0), 0.002); end
  def test_costpercapita_bp109; assert_in_delta(0.0, (worksheet.costpercapita_bp109||0), 0.002); end
  def test_costpercapita_bq109; assert_in_delta(0.0, (worksheet.costpercapita_bq109||0), 0.002); end
  def test_costpercapita_bs109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bs109, 0.002); end
  def test_costpercapita_bt109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bt109, 0.002); end
  def test_costpercapita_bu109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bu109, 0.002); end
  def test_costpercapita_bv109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bv109, 0.002); end
  def test_costpercapita_bw109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bw109, 0.002); end
  def test_costpercapita_bx109; assert_in_epsilon(124.02791994473081, worksheet.costpercapita_bx109, 0.002); end
  def test_costpercapita_by109; assert_in_epsilon(-7.785960388713426, worksheet.costpercapita_by109, 0.002); end
  def test_costpercapita_bz109; assert_in_epsilon(-7.785960388713426, worksheet.costpercapita_bz109, 0.002); end
  def test_costpercapita_ca109; assert_in_epsilon(-101.15774493439953, worksheet.costpercapita_ca109, 0.002); end
  def test_costpercapita_cc109; assert_in_epsilon(69.71531710628429, worksheet.costpercapita_cc109, 0.002); end
  def test_costpercapita_cd109; assert_in_epsilon(1870.1031554145602, worksheet.costpercapita_cd109, 0.002); end
  def test_costpercapita_cf109; assert_in_delta(0.0, (worksheet.costpercapita_cf109||0), 0.002); end
  def test_costpercapita_cg109; assert_in_delta(0.0, (worksheet.costpercapita_cg109||0), 0.002); end
  def test_costpercapita_ch109; assert_in_delta(0.0, (worksheet.costpercapita_ch109||0), 0.002); end
  def test_costpercapita_ci109; assert_in_delta(0.0, (worksheet.costpercapita_ci109||0), 0.002); end
  def test_costpercapita_cj109; assert_in_delta(0.0, (worksheet.costpercapita_cj109||0), 0.002); end
  def test_costpercapita_ck109; assert_in_delta(0.0, (worksheet.costpercapita_ck109||0), 0.002); end
  def test_costpercapita_cl109; assert_in_epsilon(-74.03323507361148, worksheet.costpercapita_cl109, 0.002); end
  def test_costpercapita_cm109; assert_in_epsilon(-74.03323507361148, worksheet.costpercapita_cm109, 0.002); end
  def test_costpercapita_cn109; assert_in_epsilon(-126.47547603508549, worksheet.costpercapita_cn109, 0.002); end
  def test_costpercapita_cp109; assert_in_epsilon(-30.50466068692316, worksheet.costpercapita_cp109, 0.002); end
  def test_costpercapita_cq109; assert_in_epsilon(-413.2911259155767, worksheet.costpercapita_cq109, 0.002); end
  def test_costpercapita_cr109; assert_equal("ok", worksheet.costpercapita_cr109); end
  def test_costpercapita_a110; assert_equal("FOS.GTL", worksheet.costpercapita_a110); end
  def test_costpercapita_b110; assert_equal("Petroleum GTL", worksheet.costpercapita_b110); end
  def test_costpercapita_c110; assert_equal("Fossil Fuels", worksheet.costpercapita_c110); end
  def test_costpercapita_e110; assert_in_delta(0.0, (worksheet.costpercapita_e110||0), 0.002); end
  def test_costpercapita_f110; assert_in_delta(0.0, (worksheet.costpercapita_f110||0), 0.002); end
  def test_costpercapita_g110; assert_in_delta(0.0, (worksheet.costpercapita_g110||0), 0.002); end
  def test_costpercapita_h110; assert_in_delta(0.0, (worksheet.costpercapita_h110||0), 0.002); end
  def test_costpercapita_i110; assert_in_delta(0.0, (worksheet.costpercapita_i110||0), 0.002); end
  def test_costpercapita_j110; assert_in_delta(0.0, (worksheet.costpercapita_j110||0), 0.002); end
  def test_costpercapita_k110; assert_in_delta(0.0, (worksheet.costpercapita_k110||0), 0.002); end
  def test_costpercapita_l110; assert_in_delta(0.0, (worksheet.costpercapita_l110||0), 0.002); end
  def test_costpercapita_m110; assert_in_delta(0.0, (worksheet.costpercapita_m110||0), 0.002); end
  def test_costpercapita_o110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_o110, 0.002); end
  def test_costpercapita_p110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_p110, 0.002); end
  def test_costpercapita_q110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_q110, 0.002); end
  def test_costpercapita_r110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_r110, 0.002); end
  def test_costpercapita_s110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_s110, 0.002); end
  def test_costpercapita_t110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_t110, 0.002); end
  def test_costpercapita_u110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_u110, 0.002); end
  def test_costpercapita_v110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_v110, 0.002); end
  def test_costpercapita_w110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_w110, 0.002); end
  def test_costpercapita_y110; assert_in_delta(0.0, (worksheet.costpercapita_y110||0), 0.002); end
  def test_costpercapita_z110; assert_in_delta(0.0, (worksheet.costpercapita_z110||0), 0.002); end
  def test_costpercapita_aa110; assert_in_delta(0.0, (worksheet.costpercapita_aa110||0), 0.002); end
  def test_costpercapita_ab110; assert_in_delta(0.0, (worksheet.costpercapita_ab110||0), 0.002); end
  def test_costpercapita_ac110; assert_in_delta(0.0, (worksheet.costpercapita_ac110||0), 0.002); end
  def test_costpercapita_ad110; assert_in_delta(0.0, (worksheet.costpercapita_ad110||0), 0.002); end
  def test_costpercapita_ae110; assert_in_delta(0.0, (worksheet.costpercapita_ae110||0), 0.002); end
  def test_costpercapita_af110; assert_in_delta(0.0, (worksheet.costpercapita_af110||0), 0.002); end
  def test_costpercapita_ag110; assert_in_delta(0.0, (worksheet.costpercapita_ag110||0), 0.002); end
  def test_costpercapita_ai110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ai110, 0.002); end
  def test_costpercapita_aj110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_aj110, 0.002); end
  def test_costpercapita_ak110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ak110, 0.002); end
  def test_costpercapita_al110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_al110, 0.002); end
  def test_costpercapita_am110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_am110, 0.002); end
  def test_costpercapita_an110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_an110, 0.002); end
  def test_costpercapita_ao110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ao110, 0.002); end
  def test_costpercapita_ap110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ap110, 0.002); end
  def test_costpercapita_aq110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_aq110, 0.002); end
  def test_costpercapita_as110; assert_in_epsilon(31.21853385916763, worksheet.costpercapita_as110, 0.002); end
  def test_costpercapita_at110; assert_in_epsilon(655.9337649288497, worksheet.costpercapita_at110, 0.002); end
  def test_costpercapita_av110; assert_in_delta(0.0, (worksheet.costpercapita_av110||0), 0.002); end
  def test_costpercapita_aw110; assert_in_epsilon(5.0, worksheet.costpercapita_aw110, 0.002); end
  def test_costpercapita_ay110; assert_in_delta(0.0, (worksheet.costpercapita_ay110||0), 0.002); end
  def test_costpercapita_az110; assert_in_delta(0.0, (worksheet.costpercapita_az110||0), 0.002); end
  def test_costpercapita_ba110; assert_in_delta(0.0, (worksheet.costpercapita_ba110||0), 0.002); end
  def test_costpercapita_bb110; assert_in_delta(0.0, (worksheet.costpercapita_bb110||0), 0.002); end
  def test_costpercapita_bc110; assert_in_delta(0.0, (worksheet.costpercapita_bc110||0), 0.002); end
  def test_costpercapita_bd110; assert_in_delta(0.0, (worksheet.costpercapita_bd110||0), 0.002); end
  def test_costpercapita_be110; assert_in_delta(0.0, (worksheet.costpercapita_be110||0), 0.002); end
  def test_costpercapita_bf110; assert_in_delta(0.0, (worksheet.costpercapita_bf110||0), 0.002); end
  def test_costpercapita_bg110; assert_in_delta(0.0, (worksheet.costpercapita_bg110||0), 0.002); end
  def test_costpercapita_bi110; assert_in_delta(0.0, (worksheet.costpercapita_bi110||0), 0.002); end
  def test_costpercapita_bj110; assert_in_delta(0.0, (worksheet.costpercapita_bj110||0), 0.002); end
  def test_costpercapita_bk110; assert_in_delta(0.0, (worksheet.costpercapita_bk110||0), 0.002); end
  def test_costpercapita_bl110; assert_in_delta(0.0, (worksheet.costpercapita_bl110||0), 0.002); end
  def test_costpercapita_bm110; assert_in_delta(0.0, (worksheet.costpercapita_bm110||0), 0.002); end
  def test_costpercapita_bn110; assert_in_delta(0.0, (worksheet.costpercapita_bn110||0), 0.002); end
  def test_costpercapita_bo110; assert_in_delta(0.0, (worksheet.costpercapita_bo110||0), 0.002); end
  def test_costpercapita_bp110; assert_in_delta(0.0, (worksheet.costpercapita_bp110||0), 0.002); end
  def test_costpercapita_bq110; assert_in_delta(0.0, (worksheet.costpercapita_bq110||0), 0.002); end
  def test_costpercapita_bs110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bs110, 0.002); end
  def test_costpercapita_bt110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bt110, 0.002); end
  def test_costpercapita_bu110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bu110, 0.002); end
  def test_costpercapita_bv110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bv110, 0.002); end
  def test_costpercapita_bw110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bw110, 0.002); end
  def test_costpercapita_bx110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bx110, 0.002); end
  def test_costpercapita_by110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_by110, 0.002); end
  def test_costpercapita_bz110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_bz110, 0.002); end
  def test_costpercapita_ca110; assert_in_epsilon(31.218533859167625, worksheet.costpercapita_ca110, 0.002); end
  def test_costpercapita_cc110; assert_in_epsilon(31.21853385916763, worksheet.costpercapita_cc110, 0.002); end
  def test_costpercapita_cd110; assert_in_epsilon(655.9337649288497, worksheet.costpercapita_cd110, 0.002); end
  def test_costpercapita_cf110; assert_in_delta(0.0, (worksheet.costpercapita_cf110||0), 0.002); end
  def test_costpercapita_cg110; assert_in_delta(0.0, (worksheet.costpercapita_cg110||0), 0.002); end
  def test_costpercapita_ch110; assert_in_delta(0.0, (worksheet.costpercapita_ch110||0), 0.002); end
  def test_costpercapita_ci110; assert_in_delta(0.0, (worksheet.costpercapita_ci110||0), 0.002); end
  def test_costpercapita_cj110; assert_in_delta(0.0, (worksheet.costpercapita_cj110||0), 0.002); end
  def test_costpercapita_ck110; assert_in_delta(0.0, (worksheet.costpercapita_ck110||0), 0.002); end
  def test_costpercapita_cl110; assert_in_delta(0.0, (worksheet.costpercapita_cl110||0), 0.002); end
  def test_costpercapita_cm110; assert_in_delta(0.0, (worksheet.costpercapita_cm110||0), 0.002); end
  def test_costpercapita_cn110; assert_in_delta(0.0, (worksheet.costpercapita_cn110||0), 0.002); end
  def test_costpercapita_cp110; assert_in_delta(0.0, (worksheet.costpercapita_cp110||0), 0.002); end
  def test_costpercapita_cq110; assert_in_delta(0.0, (worksheet.costpercapita_cq110||0), 0.002); end
  def test_costpercapita_cr110; assert_equal("ok", worksheet.costpercapita_cr110); end
  def test_costpercapita_a111; assert_equal("FOS.REF", worksheet.costpercapita_a111); end
  def test_costpercapita_b111; assert_equal("Refineries", worksheet.costpercapita_b111); end
  def test_costpercapita_c111; assert_equal("Fossil Fuels", worksheet.costpercapita_c111); end
  def test_costpercapita_e111; assert_in_delta(0.0, (worksheet.costpercapita_e111||0), 0.002); end
  def test_costpercapita_f111; assert_in_delta(0.0, (worksheet.costpercapita_f111||0), 0.002); end
  def test_costpercapita_g111; assert_in_delta(0.0, (worksheet.costpercapita_g111||0), 0.002); end
  def test_costpercapita_h111; assert_in_delta(0.0, (worksheet.costpercapita_h111||0), 0.002); end
  def test_costpercapita_i111; assert_in_delta(0.0, (worksheet.costpercapita_i111||0), 0.002); end
  def test_costpercapita_j111; assert_in_delta(0.0, (worksheet.costpercapita_j111||0), 0.002); end
  def test_costpercapita_k111; assert_in_delta(0.0, (worksheet.costpercapita_k111||0), 0.002); end
  def test_costpercapita_l111; assert_in_delta(0.0, (worksheet.costpercapita_l111||0), 0.002); end
  def test_costpercapita_m111; assert_in_delta(0.0, (worksheet.costpercapita_m111||0), 0.002); end
  def test_costpercapita_o111; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_o111, 0.002); end
  def test_costpercapita_p111; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_p111, 0.002); end
  def test_costpercapita_q111; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_q111, 0.002); end
  def test_costpercapita_r111; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_r111, 0.002); end
  def test_costpercapita_s111; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_s111, 0.002); end
  def test_costpercapita_t111; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_t111, 0.002); end
  def test_costpercapita_u111; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_u111, 0.002); end
  def test_costpercapita_v111; assert_in_delta(0.0, (worksheet.costpercapita_v111||0), 0.002); end
  def test_costpercapita_w111; assert_in_delta(0.0, (worksheet.costpercapita_w111||0), 0.002); end
  def test_costpercapita_y111; assert_in_delta(0.0, (worksheet.costpercapita_y111||0), 0.002); end
  def test_costpercapita_z111; assert_in_delta(0.0, (worksheet.costpercapita_z111||0), 0.002); end
  def test_costpercapita_aa111; assert_in_delta(0.0, (worksheet.costpercapita_aa111||0), 0.002); end
  def test_costpercapita_ab111; assert_in_delta(0.0, (worksheet.costpercapita_ab111||0), 0.002); end
  def test_costpercapita_ac111; assert_in_delta(0.0, (worksheet.costpercapita_ac111||0), 0.002); end
  def test_costpercapita_ad111; assert_in_delta(0.0, (worksheet.costpercapita_ad111||0), 0.002); end
  def test_costpercapita_ae111; assert_in_delta(0.0, (worksheet.costpercapita_ae111||0), 0.002); end
  def test_costpercapita_af111; assert_in_delta(0.0, (worksheet.costpercapita_af111||0), 0.002); end
  def test_costpercapita_ag111; assert_in_delta(0.0, (worksheet.costpercapita_ag111||0), 0.002); end
  def test_costpercapita_ai111; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_ai111, 0.002); end
  def test_costpercapita_aj111; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_aj111, 0.002); end
  def test_costpercapita_ak111; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_ak111, 0.002); end
  def test_costpercapita_al111; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_al111, 0.002); end
  def test_costpercapita_am111; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_am111, 0.002); end
  def test_costpercapita_an111; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_an111, 0.002); end
  def test_costpercapita_ao111; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_ao111, 0.002); end
  def test_costpercapita_ap111; assert_in_delta(0.0, (worksheet.costpercapita_ap111||0), 0.002); end
  def test_costpercapita_aq111; assert_in_delta(0.0, (worksheet.costpercapita_aq111||0), 0.002); end
  def test_costpercapita_as111; assert_in_epsilon(104.20766539793755, worksheet.costpercapita_as111, 0.002); end
  def test_costpercapita_at111; assert_in_epsilon(2489.272496400997, worksheet.costpercapita_at111, 0.002); end
  def test_costpercapita_av111; assert_in_delta(0.0, (worksheet.costpercapita_av111||0), 0.002); end
  def test_costpercapita_aw111; assert_in_epsilon(5.0, worksheet.costpercapita_aw111, 0.002); end
  def test_costpercapita_ay111; assert_in_delta(0.0, (worksheet.costpercapita_ay111||0), 0.002); end
  def test_costpercapita_az111; assert_in_delta(0.0, (worksheet.costpercapita_az111||0), 0.002); end
  def test_costpercapita_ba111; assert_in_delta(0.0, (worksheet.costpercapita_ba111||0), 0.002); end
  def test_costpercapita_bb111; assert_in_delta(0.0, (worksheet.costpercapita_bb111||0), 0.002); end
  def test_costpercapita_bc111; assert_in_delta(0.0, (worksheet.costpercapita_bc111||0), 0.002); end
  def test_costpercapita_bd111; assert_in_delta(0.0, (worksheet.costpercapita_bd111||0), 0.002); end
  def test_costpercapita_be111; assert_in_delta(0.0, (worksheet.costpercapita_be111||0), 0.002); end
  def test_costpercapita_bf111; assert_in_delta(0.0, (worksheet.costpercapita_bf111||0), 0.002); end
  def test_costpercapita_bg111; assert_in_delta(0.0, (worksheet.costpercapita_bg111||0), 0.002); end
  def test_costpercapita_bi111; assert_in_delta(0.0, (worksheet.costpercapita_bi111||0), 0.002); end
  def test_costpercapita_bj111; assert_in_delta(0.0, (worksheet.costpercapita_bj111||0), 0.002); end
  def test_costpercapita_bk111; assert_in_delta(0.0, (worksheet.costpercapita_bk111||0), 0.002); end
  def test_costpercapita_bl111; assert_in_delta(0.0, (worksheet.costpercapita_bl111||0), 0.002); end
  def test_costpercapita_bm111; assert_in_delta(0.0, (worksheet.costpercapita_bm111||0), 0.002); end
  def test_costpercapita_bn111; assert_in_delta(0.0, (worksheet.costpercapita_bn111||0), 0.002); end
  def test_costpercapita_bo111; assert_in_delta(0.0, (worksheet.costpercapita_bo111||0), 0.002); end
  def test_costpercapita_bp111; assert_in_delta(0.0, (worksheet.costpercapita_bp111||0), 0.002); end
  def test_costpercapita_bq111; assert_in_delta(0.0, (worksheet.costpercapita_bq111||0), 0.002); end
  def test_costpercapita_bs111; assert_in_epsilon(163.25670236792766, worksheet.costpercapita_bs111, 0.002); end
  def test_costpercapita_bt111; assert_in_epsilon(155.28230126889247, worksheet.costpercapita_bt111, 0.002); end
  def test_costpercapita_bu111; assert_in_epsilon(150.61623880623716, worksheet.costpercapita_bu111, 0.002); end
  def test_costpercapita_bv111; assert_in_epsilon(143.57587254861713, worksheet.costpercapita_bv111, 0.002); end
  def test_costpercapita_bw111; assert_in_epsilon(135.3572132253048, worksheet.costpercapita_bw111, 0.002); end
  def test_costpercapita_bx111; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_bx111, 0.002); end
  def test_costpercapita_by111; assert_in_epsilon(94.89033018222942, worksheet.costpercapita_by111, 0.002); end
  def test_costpercapita_bz111; assert_in_delta(0.0, (worksheet.costpercapita_bz111||0), 0.002); end
  def test_costpercapita_ca111; assert_in_delta(0.0, (worksheet.costpercapita_ca111||0), 0.002); end
  def test_costpercapita_cc111; assert_in_epsilon(104.20766539793755, worksheet.costpercapita_cc111, 0.002); end
  def test_costpercapita_cd111; assert_in_epsilon(2489.272496400997, worksheet.costpercapita_cd111, 0.002); end
  def test_costpercapita_cf111; assert_in_delta(0.0, (worksheet.costpercapita_cf111||0), 0.002); end
  def test_costpercapita_cg111; assert_in_delta(0.0, (worksheet.costpercapita_cg111||0), 0.002); end
  def test_costpercapita_ch111; assert_in_delta(0.0, (worksheet.costpercapita_ch111||0), 0.002); end
  def test_costpercapita_ci111; assert_in_delta(0.0, (worksheet.costpercapita_ci111||0), 0.002); end
  def test_costpercapita_cj111; assert_in_delta(0.0, (worksheet.costpercapita_cj111||0), 0.002); end
  def test_costpercapita_ck111; assert_in_delta(0.0, (worksheet.costpercapita_ck111||0), 0.002); end
  def test_costpercapita_cl111; assert_in_delta(0.0, (worksheet.costpercapita_cl111||0), 0.002); end
  def test_costpercapita_cm111; assert_in_delta(0.0, (worksheet.costpercapita_cm111||0), 0.002); end
  def test_costpercapita_cn111; assert_in_delta(0.0, (worksheet.costpercapita_cn111||0), 0.002); end
  def test_costpercapita_cp111; assert_in_delta(0.0, (worksheet.costpercapita_cp111||0), 0.002); end
  def test_costpercapita_cq111; assert_in_delta(0.0, (worksheet.costpercapita_cq111||0), 0.002); end
  def test_costpercapita_cr111; assert_equal("ok", worksheet.costpercapita_cr111); end
  def test_costpercapita_a112; assert_equal("AGL", worksheet.costpercapita_a112); end
  def test_costpercapita_b112; assert_equal("place holder", worksheet.costpercapita_b112); end
  def test_costpercapita_c112; assert_equal("Bioenergy", worksheet.costpercapita_c112); end
  def test_costpercapita_e112; assert_in_delta(0.0, (worksheet.costpercapita_e112||0), 0.002); end
  def test_costpercapita_f112; assert_in_delta(0.0, (worksheet.costpercapita_f112||0), 0.002); end
  def test_costpercapita_g112; assert_in_delta(0.0, (worksheet.costpercapita_g112||0), 0.002); end
  def test_costpercapita_h112; assert_in_delta(0.0, (worksheet.costpercapita_h112||0), 0.002); end
  def test_costpercapita_i112; assert_in_delta(0.0, (worksheet.costpercapita_i112||0), 0.002); end
  def test_costpercapita_j112; assert_in_delta(0.0, (worksheet.costpercapita_j112||0), 0.002); end
  def test_costpercapita_k112; assert_in_delta(0.0, (worksheet.costpercapita_k112||0), 0.002); end
  def test_costpercapita_l112; assert_in_delta(0.0, (worksheet.costpercapita_l112||0), 0.002); end
  def test_costpercapita_m112; assert_in_delta(0.0, (worksheet.costpercapita_m112||0), 0.002); end
  def test_costpercapita_o112; assert_in_delta(0.0, (worksheet.costpercapita_o112||0), 0.002); end
  def test_costpercapita_p112; assert_in_delta(0.0, (worksheet.costpercapita_p112||0), 0.002); end
  def test_costpercapita_q112; assert_in_delta(0.0, (worksheet.costpercapita_q112||0), 0.002); end
  def test_costpercapita_r112; assert_in_delta(0.0, (worksheet.costpercapita_r112||0), 0.002); end
  def test_costpercapita_s112; assert_in_delta(0.0, (worksheet.costpercapita_s112||0), 0.002); end
  def test_costpercapita_t112; assert_in_delta(0.0, (worksheet.costpercapita_t112||0), 0.002); end
  def test_costpercapita_u112; assert_in_delta(0.0, (worksheet.costpercapita_u112||0), 0.002); end
  def test_costpercapita_v112; assert_in_delta(0.0, (worksheet.costpercapita_v112||0), 0.002); end
  def test_costpercapita_w112; assert_in_delta(0.0, (worksheet.costpercapita_w112||0), 0.002); end
  def test_costpercapita_y112; assert_in_delta(0.0, (worksheet.costpercapita_y112||0), 0.002); end
  def test_costpercapita_z112; assert_in_delta(0.0, (worksheet.costpercapita_z112||0), 0.002); end
  def test_costpercapita_aa112; assert_in_delta(0.0, (worksheet.costpercapita_aa112||0), 0.002); end
  def test_costpercapita_ab112; assert_in_delta(0.0, (worksheet.costpercapita_ab112||0), 0.002); end
  def test_costpercapita_ac112; assert_in_delta(0.0, (worksheet.costpercapita_ac112||0), 0.002); end
  def test_costpercapita_ad112; assert_in_delta(0.0, (worksheet.costpercapita_ad112||0), 0.002); end
  def test_costpercapita_ae112; assert_in_delta(0.0, (worksheet.costpercapita_ae112||0), 0.002); end
  def test_costpercapita_af112; assert_in_delta(0.0, (worksheet.costpercapita_af112||0), 0.002); end
  def test_costpercapita_ag112; assert_in_delta(0.0, (worksheet.costpercapita_ag112||0), 0.002); end
  def test_costpercapita_ai112; assert_in_delta(0.0, (worksheet.costpercapita_ai112||0), 0.002); end
  def test_costpercapita_aj112; assert_in_delta(0.0, (worksheet.costpercapita_aj112||0), 0.002); end
  def test_costpercapita_ak112; assert_in_delta(0.0, (worksheet.costpercapita_ak112||0), 0.002); end
  def test_costpercapita_al112; assert_in_delta(0.0, (worksheet.costpercapita_al112||0), 0.002); end
  def test_costpercapita_am112; assert_in_delta(0.0, (worksheet.costpercapita_am112||0), 0.002); end
  def test_costpercapita_an112; assert_in_delta(0.0, (worksheet.costpercapita_an112||0), 0.002); end
  def test_costpercapita_ao112; assert_in_delta(0.0, (worksheet.costpercapita_ao112||0), 0.002); end
  def test_costpercapita_ap112; assert_in_delta(0.0, (worksheet.costpercapita_ap112||0), 0.002); end
  def test_costpercapita_aq112; assert_in_delta(0.0, (worksheet.costpercapita_aq112||0), 0.002); end
  def test_costpercapita_as112; assert_in_delta(0.0, (worksheet.costpercapita_as112||0), 0.002); end
  def test_costpercapita_at112; assert_in_delta(0.0, (worksheet.costpercapita_at112||0), 0.002); end
  def test_costpercapita_av112; assert_in_delta(0.0, (worksheet.costpercapita_av112||0), 0.002); end
  def test_costpercapita_aw112; assert_in_epsilon(5.0, worksheet.costpercapita_aw112, 0.002); end
  def test_costpercapita_ay112; assert_in_delta(0.0, (worksheet.costpercapita_ay112||0), 0.002); end
  def test_costpercapita_az112; assert_in_delta(0.0, (worksheet.costpercapita_az112||0), 0.002); end
  def test_costpercapita_ba112; assert_in_delta(0.0, (worksheet.costpercapita_ba112||0), 0.002); end
  def test_costpercapita_bb112; assert_in_delta(0.0, (worksheet.costpercapita_bb112||0), 0.002); end
  def test_costpercapita_bc112; assert_in_delta(0.0, (worksheet.costpercapita_bc112||0), 0.002); end
  def test_costpercapita_bd112; assert_in_delta(0.0, (worksheet.costpercapita_bd112||0), 0.002); end
  def test_costpercapita_be112; assert_in_delta(0.0, (worksheet.costpercapita_be112||0), 0.002); end
  def test_costpercapita_bf112; assert_in_delta(0.0, (worksheet.costpercapita_bf112||0), 0.002); end
  def test_costpercapita_bg112; assert_in_delta(0.0, (worksheet.costpercapita_bg112||0), 0.002); end
  def test_costpercapita_bi112; assert_in_delta(0.0, (worksheet.costpercapita_bi112||0), 0.002); end
  def test_costpercapita_bj112; assert_in_delta(0.0, (worksheet.costpercapita_bj112||0), 0.002); end
  def test_costpercapita_bk112; assert_in_delta(0.0, (worksheet.costpercapita_bk112||0), 0.002); end
  def test_costpercapita_bl112; assert_in_delta(0.0, (worksheet.costpercapita_bl112||0), 0.002); end
  def test_costpercapita_bm112; assert_in_delta(0.0, (worksheet.costpercapita_bm112||0), 0.002); end
  def test_costpercapita_bn112; assert_in_delta(0.0, (worksheet.costpercapita_bn112||0), 0.002); end
  def test_costpercapita_bo112; assert_in_delta(0.0, (worksheet.costpercapita_bo112||0), 0.002); end
  def test_costpercapita_bp112; assert_in_delta(0.0, (worksheet.costpercapita_bp112||0), 0.002); end
  def test_costpercapita_bq112; assert_in_delta(0.0, (worksheet.costpercapita_bq112||0), 0.002); end
  def test_costpercapita_bs112; assert_in_delta(0.0, (worksheet.costpercapita_bs112||0), 0.002); end
  def test_costpercapita_bt112; assert_in_delta(0.0, (worksheet.costpercapita_bt112||0), 0.002); end
  def test_costpercapita_bu112; assert_in_delta(0.0, (worksheet.costpercapita_bu112||0), 0.002); end
  def test_costpercapita_bv112; assert_in_delta(0.0, (worksheet.costpercapita_bv112||0), 0.002); end
  def test_costpercapita_bw112; assert_in_delta(0.0, (worksheet.costpercapita_bw112||0), 0.002); end
  def test_costpercapita_bx112; assert_in_delta(0.0, (worksheet.costpercapita_bx112||0), 0.002); end
  def test_costpercapita_by112; assert_in_delta(0.0, (worksheet.costpercapita_by112||0), 0.002); end
  def test_costpercapita_bz112; assert_in_delta(0.0, (worksheet.costpercapita_bz112||0), 0.002); end
  def test_costpercapita_ca112; assert_in_delta(0.0, (worksheet.costpercapita_ca112||0), 0.002); end
  def test_costpercapita_cc112; assert_in_delta(0.0, (worksheet.costpercapita_cc112||0), 0.002); end
  def test_costpercapita_cd112; assert_in_delta(0.0, (worksheet.costpercapita_cd112||0), 0.002); end
  def test_costpercapita_cf112; assert_in_delta(0.0, (worksheet.costpercapita_cf112||0), 0.002); end
  def test_costpercapita_cg112; assert_in_delta(0.0, (worksheet.costpercapita_cg112||0), 0.002); end
  def test_costpercapita_ch112; assert_in_delta(0.0, (worksheet.costpercapita_ch112||0), 0.002); end
  def test_costpercapita_ci112; assert_in_delta(0.0, (worksheet.costpercapita_ci112||0), 0.002); end
  def test_costpercapita_cj112; assert_in_delta(0.0, (worksheet.costpercapita_cj112||0), 0.002); end
  def test_costpercapita_ck112; assert_in_delta(0.0, (worksheet.costpercapita_ck112||0), 0.002); end
  def test_costpercapita_cl112; assert_in_delta(0.0, (worksheet.costpercapita_cl112||0), 0.002); end
  def test_costpercapita_cm112; assert_in_delta(0.0, (worksheet.costpercapita_cm112||0), 0.002); end
  def test_costpercapita_cn112; assert_in_delta(0.0, (worksheet.costpercapita_cn112||0), 0.002); end
  def test_costpercapita_cp112; assert_in_delta(0.0, (worksheet.costpercapita_cp112||0), 0.002); end
  def test_costpercapita_cq112; assert_in_delta(0.0, (worksheet.costpercapita_cq112||0), 0.002); end
  def test_costpercapita_cr112; assert_equal("ok", worksheet.costpercapita_cr112); end
  def test_costpercapita_a113; assert_equal("TRA.a.ICE", worksheet.costpercapita_a113); end
  def test_costpercapita_b113; assert_equal("Conventional cars, SUVs, buses, minibuses, BRT", worksheet.costpercapita_b113); end
  def test_costpercapita_c113; assert_equal("Transport", worksheet.costpercapita_c113); end
  def test_costpercapita_e113; assert_in_epsilon(1776.719056273326, worksheet.costpercapita_e113, 0.002); end
  def test_costpercapita_f113; assert_in_epsilon(1884.001409702353, worksheet.costpercapita_f113, 0.002); end
  def test_costpercapita_g113; assert_in_epsilon(1965.3627660695804, worksheet.costpercapita_g113, 0.002); end
  def test_costpercapita_h113; assert_in_epsilon(1990.0226393719258, worksheet.costpercapita_h113, 0.002); end
  def test_costpercapita_i113; assert_in_epsilon(1938.9136606425682, worksheet.costpercapita_i113, 0.002); end
  def test_costpercapita_j113; assert_in_epsilon(1943.6406017994577, worksheet.costpercapita_j113, 0.002); end
  def test_costpercapita_k113; assert_in_epsilon(1914.5067510787098, worksheet.costpercapita_k113, 0.002); end
  def test_costpercapita_l113; assert_in_epsilon(1928.7343709162785, worksheet.costpercapita_l113, 0.002); end
  def test_costpercapita_m113; assert_in_epsilon(1942.489237216599, worksheet.costpercapita_m113, 0.002); end
  def test_costpercapita_o113; assert_in_epsilon(1556.152204502737, worksheet.costpercapita_o113, 0.002); end
  def test_costpercapita_p113; assert_in_epsilon(2197.500947587607, worksheet.costpercapita_p113, 0.002); end
  def test_costpercapita_q113; assert_in_epsilon(2532.160180587198, worksheet.costpercapita_q113, 0.002); end
  def test_costpercapita_r113; assert_in_epsilon(2693.1821795011138, worksheet.costpercapita_r113, 0.002); end
  def test_costpercapita_s113; assert_in_epsilon(2550.967509686816, worksheet.costpercapita_s113, 0.002); end
  def test_costpercapita_t113; assert_in_epsilon(2394.095359039104, worksheet.costpercapita_t113, 0.002); end
  def test_costpercapita_u113; assert_in_epsilon(2060.478978386181, worksheet.costpercapita_u113, 0.002); end
  def test_costpercapita_v113; assert_in_epsilon(1766.599891934723, worksheet.costpercapita_v113, 0.002); end
  def test_costpercapita_w113; assert_in_epsilon(1409.9041556445823, worksheet.costpercapita_w113, 0.002); end
  def test_costpercapita_y113; assert_in_delta(0.0, (worksheet.costpercapita_y113||0), 0.002); end
  def test_costpercapita_z113; assert_in_delta(0.0, (worksheet.costpercapita_z113||0), 0.002); end
  def test_costpercapita_aa113; assert_in_delta(0.0, (worksheet.costpercapita_aa113||0), 0.002); end
  def test_costpercapita_ab113; assert_in_delta(0.0, (worksheet.costpercapita_ab113||0), 0.002); end
  def test_costpercapita_ac113; assert_in_delta(0.0, (worksheet.costpercapita_ac113||0), 0.002); end
  def test_costpercapita_ad113; assert_in_delta(0.0, (worksheet.costpercapita_ad113||0), 0.002); end
  def test_costpercapita_ae113; assert_in_delta(0.0, (worksheet.costpercapita_ae113||0), 0.002); end
  def test_costpercapita_af113; assert_in_delta(0.0, (worksheet.costpercapita_af113||0), 0.002); end
  def test_costpercapita_ag113; assert_in_delta(0.0, (worksheet.costpercapita_ag113||0), 0.002); end
  def test_costpercapita_ai113; assert_in_epsilon(3332.8712607760635, worksheet.costpercapita_ai113, 0.002); end
  def test_costpercapita_aj113; assert_in_epsilon(4081.50235728996, worksheet.costpercapita_aj113, 0.002); end
  def test_costpercapita_ak113; assert_in_epsilon(4497.522946656778, worksheet.costpercapita_ak113, 0.002); end
  def test_costpercapita_al113; assert_in_epsilon(4683.2048188730405, worksheet.costpercapita_al113, 0.002); end
  def test_costpercapita_am113; assert_in_epsilon(4489.881170329384, worksheet.costpercapita_am113, 0.002); end
  def test_costpercapita_an113; assert_in_epsilon(4337.735960838562, worksheet.costpercapita_an113, 0.002); end
  def test_costpercapita_ao113; assert_in_epsilon(3974.9857294648905, worksheet.costpercapita_ao113, 0.002); end
  def test_costpercapita_ap113; assert_in_epsilon(3695.3342628510013, worksheet.costpercapita_ap113, 0.002); end
  def test_costpercapita_aq113; assert_in_epsilon(3352.3933928611814, worksheet.costpercapita_aq113, 0.002); end
  def test_costpercapita_as113; assert_in_epsilon(4049.4924333267627, worksheet.costpercapita_as113, 0.002); end
  def test_costpercapita_at113; assert_in_epsilon(88097.04923818659, worksheet.costpercapita_at113, 0.002); end
  def test_costpercapita_av113; assert_in_delta(0.0, (worksheet.costpercapita_av113||0), 0.002); end
  def test_costpercapita_aw113; assert_in_epsilon(5.0, worksheet.costpercapita_aw113, 0.002); end
  def test_costpercapita_ay113; assert_in_epsilon(4173.855073521931, worksheet.costpercapita_ay113, 0.002); end
  def test_costpercapita_az113; assert_in_epsilon(4425.881973091713, worksheet.costpercapita_az113, 0.002); end
  def test_costpercapita_ba113; assert_in_epsilon(4617.015460889313, worksheet.costpercapita_ba113, 0.002); end
  def test_costpercapita_bb113; assert_in_epsilon(4674.946250189953, worksheet.costpercapita_bb113, 0.002); end
  def test_costpercapita_bc113; assert_in_epsilon(4554.881420908785, worksheet.costpercapita_bc113, 0.002); end
  def test_costpercapita_bd113; assert_in_epsilon(4565.985915600987, worksheet.costpercapita_bd113, 0.002); end
  def test_costpercapita_be113; assert_in_epsilon(4497.544892124219, worksheet.costpercapita_be113, 0.002); end
  def test_costpercapita_bf113; assert_in_epsilon(4530.968309874765, worksheet.costpercapita_bf113, 0.002); end
  def test_costpercapita_bg113; assert_in_epsilon(4563.281138563409, worksheet.costpercapita_bg113, 0.002); end
  def test_costpercapita_bi113; assert_in_delta(0.0, (worksheet.costpercapita_bi113||0), 0.002); end
  def test_costpercapita_bj113; assert_in_delta(0.0, (worksheet.costpercapita_bj113||0), 0.002); end
  def test_costpercapita_bk113; assert_in_delta(0.0, (worksheet.costpercapita_bk113||0), 0.002); end
  def test_costpercapita_bl113; assert_in_delta(0.0, (worksheet.costpercapita_bl113||0), 0.002); end
  def test_costpercapita_bm113; assert_in_delta(0.0, (worksheet.costpercapita_bm113||0), 0.002); end
  def test_costpercapita_bn113; assert_in_delta(0.0, (worksheet.costpercapita_bn113||0), 0.002); end
  def test_costpercapita_bo113; assert_in_delta(0.0, (worksheet.costpercapita_bo113||0), 0.002); end
  def test_costpercapita_bp113; assert_in_delta(0.0, (worksheet.costpercapita_bp113||0), 0.002); end
  def test_costpercapita_bq113; assert_in_delta(0.0, (worksheet.costpercapita_bq113||0), 0.002); end
  def test_costpercapita_bs113; assert_in_epsilon(5730.007278024668, worksheet.costpercapita_bs113, 0.002); end
  def test_costpercapita_bt113; assert_in_epsilon(6623.38292067932, worksheet.costpercapita_bt113, 0.002); end
  def test_costpercapita_bu113; assert_in_epsilon(7149.17564147651, worksheet.costpercapita_bu113, 0.002); end
  def test_costpercapita_bv113; assert_in_epsilon(7368.128429691066, worksheet.costpercapita_bv113, 0.002); end
  def test_costpercapita_bw113; assert_in_epsilon(7105.8489305956, worksheet.costpercapita_bw113, 0.002); end
  def test_costpercapita_bx113; assert_in_epsilon(6960.081274640092, worksheet.costpercapita_bx113, 0.002); end
  def test_costpercapita_by113; assert_in_epsilon(6558.0238705104, worksheet.costpercapita_by113, 0.002); end
  def test_costpercapita_bz113; assert_in_epsilon(6297.568201809488, worksheet.costpercapita_bz113, 0.002); end
  def test_costpercapita_ca113; assert_in_epsilon(5973.18529420799, worksheet.costpercapita_ca113, 0.002); end
  def test_costpercapita_cc113; assert_in_epsilon(6640.6002046261265, worksheet.costpercapita_cc113, 0.002); end
  def test_costpercapita_cd113; assert_in_epsilon(142802.92258259354, worksheet.costpercapita_cd113, 0.002); end
  def test_costpercapita_cf113; assert_in_epsilon(2397.136017248605, worksheet.costpercapita_cf113, 0.002); end
  def test_costpercapita_cg113; assert_in_epsilon(2541.8805633893608, worksheet.costpercapita_cg113, 0.002); end
  def test_costpercapita_ch113; assert_in_epsilon(2651.652694819732, worksheet.costpercapita_ch113, 0.002); end
  def test_costpercapita_ci113; assert_in_epsilon(2684.9236108180276, worksheet.costpercapita_ci113, 0.002); end
  def test_costpercapita_cj113; assert_in_epsilon(2615.9677602662164, worksheet.costpercapita_cj113, 0.002); end
  def test_costpercapita_ck113; assert_in_epsilon(2622.3453138015293, worksheet.costpercapita_ck113, 0.002); end
  def test_costpercapita_cl113; assert_in_epsilon(2583.0381410455097, worksheet.costpercapita_cl113, 0.002); end
  def test_costpercapita_cm113; assert_in_epsilon(2602.2339389584863, worksheet.costpercapita_cm113, 0.002); end
  def test_costpercapita_cn113; assert_in_epsilon(2620.7919013468095, worksheet.costpercapita_cn113, 0.002); end
  def test_costpercapita_cp113; assert_in_epsilon(2591.1077712993633, worksheet.costpercapita_cp113, 0.002); end
  def test_costpercapita_cq113; assert_in_epsilon(54705.873344406966, worksheet.costpercapita_cq113, 0.002); end
  def test_costpercapita_cr113; assert_equal("ok", worksheet.costpercapita_cr113); end
  def test_costpercapita_a114; assert_equal("TRA.a.PHEV", worksheet.costpercapita_a114); end
  def test_costpercapita_b114; assert_equal("PHEV cars, SUVs, minibuses", worksheet.costpercapita_b114); end
  def test_costpercapita_c114; assert_equal("Transport", worksheet.costpercapita_c114); end
  def test_costpercapita_e114; assert_in_delta(0.529886949252418, worksheet.costpercapita_e114, 0.002); end
  def test_costpercapita_f114; assert_in_epsilon(39.3747898197552, worksheet.costpercapita_f114, 0.002); end
  def test_costpercapita_g114; assert_in_epsilon(105.42175194697775, worksheet.costpercapita_g114, 0.002); end
  def test_costpercapita_h114; assert_in_epsilon(165.48111161924166, worksheet.costpercapita_h114, 0.002); end
  def test_costpercapita_i114; assert_in_epsilon(248.10438884039607, worksheet.costpercapita_i114, 0.002); end
  def test_costpercapita_j114; assert_in_epsilon(306.8058161532245, worksheet.costpercapita_j114, 0.002); end
  def test_costpercapita_k114; assert_in_epsilon(354.5323510220707, worksheet.costpercapita_k114, 0.002); end
  def test_costpercapita_l114; assert_in_epsilon(344.5072325682825, worksheet.costpercapita_l114, 0.002); end
  def test_costpercapita_m114; assert_in_epsilon(371.36418387651906, worksheet.costpercapita_m114, 0.002); end
  def test_costpercapita_o114; assert_in_delta(0.321173424342591, worksheet.costpercapita_o114, 0.002); end
  def test_costpercapita_p114; assert_in_epsilon(20.83836605199385, worksheet.costpercapita_p114, 0.002); end
  def test_costpercapita_q114; assert_in_epsilon(62.63066771020036, worksheet.costpercapita_q114, 0.002); end
  def test_costpercapita_r114; assert_in_epsilon(115.15600680164835, worksheet.costpercapita_r114, 0.002); end
  def test_costpercapita_s114; assert_in_epsilon(186.6047077916615, worksheet.costpercapita_s114, 0.002); end
  def test_costpercapita_t114; assert_in_epsilon(251.36491571970103, worksheet.costpercapita_t114, 0.002); end
  def test_costpercapita_u114; assert_in_epsilon(310.85145762503527, worksheet.costpercapita_u114, 0.002); end
  def test_costpercapita_v114; assert_in_epsilon(330.970855127676, worksheet.costpercapita_v114, 0.002); end
  def test_costpercapita_w114; assert_in_epsilon(375.93611637963943, worksheet.costpercapita_w114, 0.002); end
  def test_costpercapita_y114; assert_in_delta(0.0, (worksheet.costpercapita_y114||0), 0.002); end
  def test_costpercapita_z114; assert_in_delta(0.0, (worksheet.costpercapita_z114||0), 0.002); end
  def test_costpercapita_aa114; assert_in_delta(0.0, (worksheet.costpercapita_aa114||0), 0.002); end
  def test_costpercapita_ab114; assert_in_delta(0.0, (worksheet.costpercapita_ab114||0), 0.002); end
  def test_costpercapita_ac114; assert_in_delta(0.0, (worksheet.costpercapita_ac114||0), 0.002); end
  def test_costpercapita_ad114; assert_in_delta(0.0, (worksheet.costpercapita_ad114||0), 0.002); end
  def test_costpercapita_ae114; assert_in_delta(0.0, (worksheet.costpercapita_ae114||0), 0.002); end
  def test_costpercapita_af114; assert_in_delta(0.0, (worksheet.costpercapita_af114||0), 0.002); end
  def test_costpercapita_ag114; assert_in_delta(0.0, (worksheet.costpercapita_ag114||0), 0.002); end
  def test_costpercapita_ai114; assert_in_delta(0.8510603735950091, worksheet.costpercapita_ai114, 0.002); end
  def test_costpercapita_aj114; assert_in_epsilon(60.21315587174905, worksheet.costpercapita_aj114, 0.002); end
  def test_costpercapita_ak114; assert_in_epsilon(168.0524196571781, worksheet.costpercapita_ak114, 0.002); end
  def test_costpercapita_al114; assert_in_epsilon(280.63711842089, worksheet.costpercapita_al114, 0.002); end
  def test_costpercapita_am114; assert_in_epsilon(434.70909663205754, worksheet.costpercapita_am114, 0.002); end
  def test_costpercapita_an114; assert_in_epsilon(558.1707318729256, worksheet.costpercapita_an114, 0.002); end
  def test_costpercapita_ao114; assert_in_epsilon(665.383808647106, worksheet.costpercapita_ao114, 0.002); end
  def test_costpercapita_ap114; assert_in_epsilon(675.4780876959585, worksheet.costpercapita_ap114, 0.002); end
  def test_costpercapita_aq114; assert_in_epsilon(747.3003002561585, worksheet.costpercapita_aq114, 0.002); end
  def test_costpercapita_as114; assert_in_epsilon(398.97730882529095, worksheet.costpercapita_as114, 0.002); end
  def test_costpercapita_at114; assert_in_epsilon(7174.700223833813, worksheet.costpercapita_at114, 0.002); end
  def test_costpercapita_av114; assert_in_delta(0.0, (worksheet.costpercapita_av114||0), 0.002); end
  def test_costpercapita_aw114; assert_in_epsilon(5.0, worksheet.costpercapita_aw114, 0.002); end
  def test_costpercapita_ay114; assert_in_epsilon(1.2448064446211606, worksheet.costpercapita_ay114, 0.002); end
  def test_costpercapita_az114; assert_in_epsilon(92.49896075452601, worksheet.costpercapita_az114, 0.002); end
  def test_costpercapita_ba114; assert_in_epsilon(247.6559885311281, worksheet.costpercapita_ba114, 0.002); end
  def test_costpercapita_bb114; assert_in_epsilon(388.74698555479785, worksheet.costpercapita_bb114, 0.002); end
  def test_costpercapita_bc114; assert_in_epsilon(582.8449683522944, worksheet.costpercapita_bc114, 0.002); end
  def test_costpercapita_bd114; assert_in_epsilon(720.7459208678482, worksheet.costpercapita_bd114, 0.002); end
  def test_costpercapita_be114; assert_in_epsilon(832.8647384156184, worksheet.costpercapita_be114, 0.002); end
  def test_costpercapita_bf114; assert_in_epsilon(809.3138053779726, worksheet.costpercapita_bf114, 0.002); end
  def test_costpercapita_bg114; assert_in_epsilon(872.4059538419726, worksheet.costpercapita_bg114, 0.002); end
  def test_costpercapita_bi114; assert_in_delta(0.0, (worksheet.costpercapita_bi114||0), 0.002); end
  def test_costpercapita_bj114; assert_in_delta(0.0, (worksheet.costpercapita_bj114||0), 0.002); end
  def test_costpercapita_bk114; assert_in_delta(0.0, (worksheet.costpercapita_bk114||0), 0.002); end
  def test_costpercapita_bl114; assert_in_delta(0.0, (worksheet.costpercapita_bl114||0), 0.002); end
  def test_costpercapita_bm114; assert_in_delta(0.0, (worksheet.costpercapita_bm114||0), 0.002); end
  def test_costpercapita_bn114; assert_in_delta(0.0, (worksheet.costpercapita_bn114||0), 0.002); end
  def test_costpercapita_bo114; assert_in_delta(0.0, (worksheet.costpercapita_bo114||0), 0.002); end
  def test_costpercapita_bp114; assert_in_delta(0.0, (worksheet.costpercapita_bp114||0), 0.002); end
  def test_costpercapita_bq114; assert_in_delta(0.0, (worksheet.costpercapita_bq114||0), 0.002); end
  def test_costpercapita_bs114; assert_in_epsilon(1.5659798689637516, worksheet.costpercapita_bs114, 0.002); end
  def test_costpercapita_bt114; assert_in_epsilon(113.33732680651988, worksheet.costpercapita_bt114, 0.002); end
  def test_costpercapita_bu114; assert_in_epsilon(310.28665624132844, worksheet.costpercapita_bu114, 0.002); end
  def test_costpercapita_bv114; assert_in_epsilon(503.90299235644613, worksheet.costpercapita_bv114, 0.002); end
  def test_costpercapita_bw114; assert_in_epsilon(769.449676143956, worksheet.costpercapita_bw114, 0.002); end
  def test_costpercapita_bx114; assert_in_epsilon(972.1108365875493, worksheet.costpercapita_bx114, 0.002); end
  def test_costpercapita_by114; assert_in_epsilon(1143.7161960406536, worksheet.costpercapita_by114, 0.002); end
  def test_costpercapita_bz114; assert_in_epsilon(1140.2846605056486, worksheet.costpercapita_bz114, 0.002); end
  def test_costpercapita_ca114; assert_in_epsilon(1248.3420702216122, worksheet.costpercapita_ca114, 0.002); end
  def test_costpercapita_cc114; assert_in_epsilon(689.2218216414086, worksheet.costpercapita_cc114, 0.002); end
  def test_costpercapita_cd114; assert_in_epsilon(12516.965786827337, worksheet.costpercapita_cd114, 0.002); end
  def test_costpercapita_cf114; assert_in_delta(0.7149194953687426, worksheet.costpercapita_cf114, 0.002); end
  def test_costpercapita_cg114; assert_in_epsilon(53.12417093477082, worksheet.costpercapita_cg114, 0.002); end
  def test_costpercapita_ch114; assert_in_epsilon(142.23423658415035, worksheet.costpercapita_ch114, 0.002); end
  def test_costpercapita_ci114; assert_in_epsilon(223.2658739355562, worksheet.costpercapita_ci114, 0.002); end
  def test_costpercapita_cj114; assert_in_epsilon(334.7405795118983, worksheet.costpercapita_cj114, 0.002); end
  def test_costpercapita_ck114; assert_in_epsilon(413.94010471462377, worksheet.costpercapita_ck114, 0.002); end
  def test_costpercapita_cl114; assert_in_epsilon(478.3323873935477, worksheet.costpercapita_cl114, 0.002); end
  def test_costpercapita_cm114; assert_in_epsilon(464.80657280969007, worksheet.costpercapita_cm114, 0.002); end
  def test_costpercapita_cn114; assert_in_epsilon(501.0417699654536, worksheet.costpercapita_cn114, 0.002); end
  def test_costpercapita_cp114; assert_in_epsilon(290.2445128161177, worksheet.costpercapita_cp114, 0.002); end
  def test_costpercapita_cq114; assert_in_epsilon(5342.265562993525, worksheet.costpercapita_cq114, 0.002); end
  def test_costpercapita_cr114; assert_equal("ok", worksheet.costpercapita_cr114); end
  def test_costpercapita_a115; assert_equal("TRA.a.EV", worksheet.costpercapita_a115); end
  def test_costpercapita_b115; assert_equal("Electric cars, buses, minibuses, BRT", worksheet.costpercapita_b115); end
  def test_costpercapita_c115; assert_equal("Transport", worksheet.costpercapita_c115); end
  def test_costpercapita_e115; assert_in_delta(0.0, (worksheet.costpercapita_e115||0), 0.002); end
  def test_costpercapita_f115; assert_in_epsilon(170.25228815273462, worksheet.costpercapita_f115, 0.002); end
  def test_costpercapita_g115; assert_in_epsilon(410.56044726461556, worksheet.costpercapita_g115, 0.002); end
  def test_costpercapita_h115; assert_in_epsilon(705.5331231936497, worksheet.costpercapita_h115, 0.002); end
  def test_costpercapita_i115; assert_in_epsilon(1045.0554009014886, worksheet.costpercapita_i115, 0.002); end
  def test_costpercapita_j115; assert_in_epsilon(1371.4269669615448, worksheet.costpercapita_j115, 0.002); end
  def test_costpercapita_k115; assert_in_epsilon(1690.7770547110451, worksheet.costpercapita_k115, 0.002); end
  def test_costpercapita_l115; assert_in_epsilon(1992.4963383322954, worksheet.costpercapita_l115, 0.002); end
  def test_costpercapita_m115; assert_in_epsilon(2291.5223176648747, worksheet.costpercapita_m115, 0.002); end
  def test_costpercapita_o115; assert_in_delta(0.0, (worksheet.costpercapita_o115||0), 0.002); end
  def test_costpercapita_p115; assert_in_epsilon(143.4840129194162, worksheet.costpercapita_p115, 0.002); end
  def test_costpercapita_q115; assert_in_epsilon(429.47713578790916, worksheet.costpercapita_q115, 0.002); end
  def test_costpercapita_r115; assert_in_epsilon(733.5195557828866, worksheet.costpercapita_r115, 0.002); end
  def test_costpercapita_s115; assert_in_epsilon(1204.7198865192324, worksheet.costpercapita_s115, 0.002); end
  def test_costpercapita_t115; assert_in_epsilon(1710.1529713169248, worksheet.costpercapita_t115, 0.002); end
  def test_costpercapita_u115; assert_in_epsilon(1917.817044773684, worksheet.costpercapita_u115, 0.002); end
  def test_costpercapita_v115; assert_in_epsilon(2176.18815049923, worksheet.costpercapita_v115, 0.002); end
  def test_costpercapita_w115; assert_in_epsilon(2590.152078617031, worksheet.costpercapita_w115, 0.002); end
  def test_costpercapita_y115; assert_in_delta(0.0, (worksheet.costpercapita_y115||0), 0.002); end
  def test_costpercapita_z115; assert_in_delta(0.0, (worksheet.costpercapita_z115||0), 0.002); end
  def test_costpercapita_aa115; assert_in_delta(0.0, (worksheet.costpercapita_aa115||0), 0.002); end
  def test_costpercapita_ab115; assert_in_delta(0.0, (worksheet.costpercapita_ab115||0), 0.002); end
  def test_costpercapita_ac115; assert_in_delta(0.0, (worksheet.costpercapita_ac115||0), 0.002); end
  def test_costpercapita_ad115; assert_in_delta(0.0, (worksheet.costpercapita_ad115||0), 0.002); end
  def test_costpercapita_ae115; assert_in_delta(0.0, (worksheet.costpercapita_ae115||0), 0.002); end
  def test_costpercapita_af115; assert_in_delta(0.0, (worksheet.costpercapita_af115||0), 0.002); end
  def test_costpercapita_ag115; assert_in_delta(0.0, (worksheet.costpercapita_ag115||0), 0.002); end
  def test_costpercapita_ai115; assert_in_delta(0.0, (worksheet.costpercapita_ai115||0), 0.002); end
  def test_costpercapita_aj115; assert_in_epsilon(313.7363010721508, worksheet.costpercapita_aj115, 0.002); end
  def test_costpercapita_ak115; assert_in_epsilon(840.0375830525247, worksheet.costpercapita_ak115, 0.002); end
  def test_costpercapita_al115; assert_in_epsilon(1439.0526789765363, worksheet.costpercapita_al115, 0.002); end
  def test_costpercapita_am115; assert_in_epsilon(2249.775287420721, worksheet.costpercapita_am115, 0.002); end
  def test_costpercapita_an115; assert_in_epsilon(3081.5799382784694, worksheet.costpercapita_an115, 0.002); end
  def test_costpercapita_ao115; assert_in_epsilon(3608.5940994847297, worksheet.costpercapita_ao115, 0.002); end
  def test_costpercapita_ap115; assert_in_epsilon(4168.6844888315245, worksheet.costpercapita_ap115, 0.002); end
  def test_costpercapita_aq115; assert_in_epsilon(4881.6743962819055, worksheet.costpercapita_aq115, 0.002); end
  def test_costpercapita_as115; assert_in_epsilon(2287.0149748220624, worksheet.costpercapita_as115, 0.002); end
  def test_costpercapita_at115; assert_in_epsilon(40071.15138028597, worksheet.costpercapita_at115, 0.002); end
  def test_costpercapita_av115; assert_in_delta(0.0, (worksheet.costpercapita_av115||0), 0.002); end
  def test_costpercapita_aw115; assert_in_epsilon(5.0, worksheet.costpercapita_aw115, 0.002); end
  def test_costpercapita_ay115; assert_in_delta(0.0, (worksheet.costpercapita_ay115||0), 0.002); end
  def test_costpercapita_az115; assert_in_epsilon(399.9553976617511, worksheet.costpercapita_az115, 0.002); end
  def test_costpercapita_ba115; assert_in_epsilon(964.4855216430063, worksheet.costpercapita_ba115, 0.002); end
  def test_costpercapita_bb115; assert_in_epsilon(1657.4331182985682, worksheet.costpercapita_bb115, 0.002); end
  def test_costpercapita_bc115; assert_in_epsilon(2455.0363051282247, worksheet.costpercapita_bc115, 0.002); end
  def test_costpercapita_bd115; assert_in_epsilon(3221.745938845072, worksheet.costpercapita_bd115, 0.002); end
  def test_costpercapita_be115; assert_in_epsilon(3971.9607684077896, worksheet.costpercapita_be115, 0.002); end
  def test_costpercapita_bf115; assert_in_epsilon(4680.757445223657, worksheet.costpercapita_bf115, 0.002); end
  def test_costpercapita_bg115; assert_in_epsilon(5383.227031816613, worksheet.costpercapita_bg115, 0.002); end
  def test_costpercapita_bi115; assert_in_delta(0.0, (worksheet.costpercapita_bi115||0), 0.002); end
  def test_costpercapita_bj115; assert_in_delta(0.0, (worksheet.costpercapita_bj115||0), 0.002); end
  def test_costpercapita_bk115; assert_in_delta(0.0, (worksheet.costpercapita_bk115||0), 0.002); end
  def test_costpercapita_bl115; assert_in_delta(0.0, (worksheet.costpercapita_bl115||0), 0.002); end
  def test_costpercapita_bm115; assert_in_delta(0.0, (worksheet.costpercapita_bm115||0), 0.002); end
  def test_costpercapita_bn115; assert_in_delta(0.0, (worksheet.costpercapita_bn115||0), 0.002); end
  def test_costpercapita_bo115; assert_in_delta(0.0, (worksheet.costpercapita_bo115||0), 0.002); end
  def test_costpercapita_bp115; assert_in_delta(0.0, (worksheet.costpercapita_bp115||0), 0.002); end
  def test_costpercapita_bq115; assert_in_delta(0.0, (worksheet.costpercapita_bq115||0), 0.002); end
  def test_costpercapita_bs115; assert_in_delta(0.0, (worksheet.costpercapita_bs115||0), 0.002); end
  def test_costpercapita_bt115; assert_in_epsilon(543.4394105811673, worksheet.costpercapita_bt115, 0.002); end
  def test_costpercapita_bu115; assert_in_epsilon(1393.9626574309157, worksheet.costpercapita_bu115, 0.002); end
  def test_costpercapita_bv115; assert_in_epsilon(2390.952674081455, worksheet.costpercapita_bv115, 0.002); end
  def test_costpercapita_bw115; assert_in_epsilon(3659.756191647458, worksheet.costpercapita_bw115, 0.002); end
  def test_costpercapita_bx115; assert_in_epsilon(4931.898910161997, worksheet.costpercapita_bx115, 0.002); end
  def test_costpercapita_by115; assert_in_epsilon(5889.777813181474, worksheet.costpercapita_by115, 0.002); end
  def test_costpercapita_bz115; assert_in_epsilon(6856.9455957228865, worksheet.costpercapita_bz115, 0.002); end
  def test_costpercapita_ca115; assert_in_epsilon(7973.379110433644, worksheet.costpercapita_ca115, 0.002); end
  def test_costpercapita_cc115; assert_in_epsilon(3737.7902625823326, worksheet.costpercapita_cc115, 0.002); end
  def test_costpercapita_cd115; assert_in_epsilon(65593.04675339813, worksheet.costpercapita_cd115, 0.002); end
  def test_costpercapita_cf115; assert_in_delta(0.0, (worksheet.costpercapita_cf115||0), 0.002); end
  def test_costpercapita_cg115; assert_in_epsilon(229.70310950901649, worksheet.costpercapita_cg115, 0.002); end
  def test_costpercapita_ch115; assert_in_epsilon(553.9250743783907, worksheet.costpercapita_ch115, 0.002); end
  def test_costpercapita_ci115; assert_in_epsilon(951.8999951049185, worksheet.costpercapita_ci115, 0.002); end
  def test_costpercapita_cj115; assert_in_epsilon(1409.9809042267361, worksheet.costpercapita_cj115, 0.002); end
  def test_costpercapita_ck115; assert_in_epsilon(1850.3189718835274, worksheet.costpercapita_ck115, 0.002); end
  def test_costpercapita_cl115; assert_in_epsilon(2281.1837136967442, worksheet.costpercapita_cl115, 0.002); end
  def test_costpercapita_cm115; assert_in_epsilon(2688.261106891361, worksheet.costpercapita_cm115, 0.002); end
  def test_costpercapita_cn115; assert_in_epsilon(3091.7047141517387, worksheet.costpercapita_cn115, 0.002); end
  def test_costpercapita_cp115; assert_in_epsilon(1450.7752877602704, worksheet.costpercapita_cp115, 0.002); end
  def test_costpercapita_cq115; assert_in_epsilon(25521.895373112147, worksheet.costpercapita_cq115, 0.002); end
  def test_costpercapita_cr115; assert_equal("ok", worksheet.costpercapita_cr115); end
  def test_costpercapita_a116; assert_equal("TRA.a.FCV", worksheet.costpercapita_a116); end
  def test_costpercapita_b116; assert_equal("FCV cars, SUVs, buses, minibuses, BRT", worksheet.costpercapita_b116); end
  def test_costpercapita_c116; assert_equal("Transport", worksheet.costpercapita_c116); end
  def test_costpercapita_e116; assert_in_delta(0.0, (worksheet.costpercapita_e116||0), 0.002); end
  def test_costpercapita_f116; assert_in_epsilon(218.0767867848522, worksheet.costpercapita_f116, 0.002); end
  def test_costpercapita_g116; assert_in_epsilon(529.1911042485177, worksheet.costpercapita_g116, 0.002); end
  def test_costpercapita_h116; assert_in_epsilon(904.0690418543082, worksheet.costpercapita_h116, 0.002); end
  def test_costpercapita_i116; assert_in_epsilon(1340.1548192739263, worksheet.costpercapita_i116, 0.002); end
  def test_costpercapita_j116; assert_in_epsilon(1751.4989972186568, worksheet.costpercapita_j116, 0.002); end
  def test_costpercapita_k116; assert_in_epsilon(2150.4198151045107, worksheet.costpercapita_k116, 0.002); end
  def test_costpercapita_l116; assert_in_epsilon(2508.432767519733, worksheet.costpercapita_l116, 0.002); end
  def test_costpercapita_m116; assert_in_epsilon(2876.618636661119, worksheet.costpercapita_m116, 0.002); end
  def test_costpercapita_o116; assert_in_delta(0.0, (worksheet.costpercapita_o116||0), 0.002); end
  def test_costpercapita_p116; assert_in_epsilon(82.67589616538784, worksheet.costpercapita_p116, 0.002); end
  def test_costpercapita_q116; assert_in_epsilon(154.11165218412128, worksheet.costpercapita_q116, 0.002); end
  def test_costpercapita_r116; assert_in_epsilon(297.1172478733442, worksheet.costpercapita_r116, 0.002); end
  def test_costpercapita_s116; assert_in_epsilon(487.3055154695045, worksheet.costpercapita_s116, 0.002); end
  def test_costpercapita_t116; assert_in_epsilon(688.8817315906573, worksheet.costpercapita_t116, 0.002); end
  def test_costpercapita_u116; assert_in_epsilon(896.7156880544854, worksheet.costpercapita_u116, 0.002); end
  def test_costpercapita_v116; assert_in_epsilon(1002.7421799798379, worksheet.costpercapita_v116, 0.002); end
  def test_costpercapita_w116; assert_in_epsilon(1193.454214004428, worksheet.costpercapita_w116, 0.002); end
  def test_costpercapita_y116; assert_in_delta(0.0, (worksheet.costpercapita_y116||0), 0.002); end
  def test_costpercapita_z116; assert_in_delta(0.0, (worksheet.costpercapita_z116||0), 0.002); end
  def test_costpercapita_aa116; assert_in_delta(0.0, (worksheet.costpercapita_aa116||0), 0.002); end
  def test_costpercapita_ab116; assert_in_delta(0.0, (worksheet.costpercapita_ab116||0), 0.002); end
  def test_costpercapita_ac116; assert_in_delta(0.0, (worksheet.costpercapita_ac116||0), 0.002); end
  def test_costpercapita_ad116; assert_in_delta(0.0, (worksheet.costpercapita_ad116||0), 0.002); end
  def test_costpercapita_ae116; assert_in_delta(0.0, (worksheet.costpercapita_ae116||0), 0.002); end
  def test_costpercapita_af116; assert_in_delta(0.0, (worksheet.costpercapita_af116||0), 0.002); end
  def test_costpercapita_ag116; assert_in_delta(0.0, (worksheet.costpercapita_ag116||0), 0.002); end
  def test_costpercapita_ai116; assert_in_delta(0.0, (worksheet.costpercapita_ai116||0), 0.002); end
  def test_costpercapita_aj116; assert_in_epsilon(300.75268295024, worksheet.costpercapita_aj116, 0.002); end
  def test_costpercapita_ak116; assert_in_epsilon(683.3027564326391, worksheet.costpercapita_ak116, 0.002); end
  def test_costpercapita_al116; assert_in_epsilon(1201.1862897276524, worksheet.costpercapita_al116, 0.002); end
  def test_costpercapita_am116; assert_in_epsilon(1827.4603347434306, worksheet.costpercapita_am116, 0.002); end
  def test_costpercapita_an116; assert_in_epsilon(2440.380728809314, worksheet.costpercapita_an116, 0.002); end
  def test_costpercapita_ao116; assert_in_epsilon(3047.135503158996, worksheet.costpercapita_ao116, 0.002); end
  def test_costpercapita_ap116; assert_in_epsilon(3511.174947499571, worksheet.costpercapita_ap116, 0.002); end
  def test_costpercapita_aq116; assert_in_epsilon(4070.072850665547, worksheet.costpercapita_aq116, 0.002); end
  def test_costpercapita_as116; assert_in_epsilon(1897.9406771097097, worksheet.costpercapita_as116, 0.002); end
  def test_costpercapita_at116; assert_in_epsilon(33246.88389557528, worksheet.costpercapita_at116, 0.002); end
  def test_costpercapita_av116; assert_in_delta(0.0, (worksheet.costpercapita_av116||0), 0.002); end
  def test_costpercapita_aw116; assert_in_epsilon(5.0, worksheet.costpercapita_aw116, 0.002); end
  def test_costpercapita_ay116; assert_in_delta(0.0, (worksheet.costpercapita_ay116||0), 0.002); end
  def test_costpercapita_az116; assert_in_epsilon(512.3043509470242, worksheet.costpercapita_az116, 0.002); end
  def test_costpercapita_ba116; assert_in_epsilon(1243.171770760001, worksheet.costpercapita_ba116, 0.002); end
  def test_costpercapita_bb116; assert_in_epsilon(2123.832208493641, worksheet.costpercapita_bb116, 0.002); end
  def test_costpercapita_bc116; assert_in_epsilon(3148.281644180686, worksheet.costpercapita_bc116, 0.002); end
  def test_costpercapita_bd116; assert_in_epsilon(4114.608300055873, worksheet.costpercapita_bd116, 0.002); end
  def test_costpercapita_be116; assert_in_epsilon(5051.750091712462, worksheet.costpercapita_be116, 0.002); end
  def test_costpercapita_bf116; assert_in_epsilon(5892.79143280053, worksheet.costpercapita_bf116, 0.002); end
  def test_costpercapita_bg116; assert_in_epsilon(6757.730913518545, worksheet.costpercapita_bg116, 0.002); end
  def test_costpercapita_bi116; assert_in_delta(0.0, (worksheet.costpercapita_bi116||0), 0.002); end
  def test_costpercapita_bj116; assert_in_delta(0.0, (worksheet.costpercapita_bj116||0), 0.002); end
  def test_costpercapita_bk116; assert_in_delta(0.0, (worksheet.costpercapita_bk116||0), 0.002); end
  def test_costpercapita_bl116; assert_in_delta(0.0, (worksheet.costpercapita_bl116||0), 0.002); end
  def test_costpercapita_bm116; assert_in_delta(0.0, (worksheet.costpercapita_bm116||0), 0.002); end
  def test_costpercapita_bn116; assert_in_delta(0.0, (worksheet.costpercapita_bn116||0), 0.002); end
  def test_costpercapita_bo116; assert_in_delta(0.0, (worksheet.costpercapita_bo116||0), 0.002); end
  def test_costpercapita_bp116; assert_in_delta(0.0, (worksheet.costpercapita_bp116||0), 0.002); end
  def test_costpercapita_bq116; assert_in_delta(0.0, (worksheet.costpercapita_bq116||0), 0.002); end
  def test_costpercapita_bs116; assert_in_delta(0.0, (worksheet.costpercapita_bs116||0), 0.002); end
  def test_costpercapita_bt116; assert_in_epsilon(594.980247112412, worksheet.costpercapita_bt116, 0.002); end
  def test_costpercapita_bu116; assert_in_epsilon(1397.283422944122, worksheet.costpercapita_bu116, 0.002); end
  def test_costpercapita_bv116; assert_in_epsilon(2420.949456366985, worksheet.costpercapita_bv116, 0.002); end
  def test_costpercapita_bw116; assert_in_epsilon(3635.58715965019, worksheet.costpercapita_bw116, 0.002); end
  def test_costpercapita_bx116; assert_in_epsilon(4803.49003164653, worksheet.costpercapita_bx116, 0.002); end
  def test_costpercapita_by116; assert_in_epsilon(5948.465779766948, worksheet.costpercapita_by116, 0.002); end
  def test_costpercapita_bz116; assert_in_epsilon(6895.533612780368, worksheet.costpercapita_bz116, 0.002); end
  def test_costpercapita_ca116; assert_in_epsilon(7951.185127522973, worksheet.costpercapita_ca116, 0.002); end
  def test_costpercapita_cc116; assert_in_epsilon(3738.6083153100585, worksheet.costpercapita_cc116, 0.002); end
  def test_costpercapita_cd116; assert_in_epsilon(65713.33341356846, worksheet.costpercapita_cd116, 0.002); end
  def test_costpercapita_cf116; assert_in_delta(0.0, (worksheet.costpercapita_cf116||0), 0.002); end
  def test_costpercapita_cg116; assert_in_epsilon(294.22756416217203, worksheet.costpercapita_cg116, 0.002); end
  def test_costpercapita_ch116; assert_in_epsilon(713.9806665114833, worksheet.costpercapita_ch116, 0.002); end
  def test_costpercapita_ci116; assert_in_epsilon(1219.7631666393327, worksheet.costpercapita_ci116, 0.002); end
  def test_costpercapita_cj116; assert_in_epsilon(1808.1268249067596, worksheet.costpercapita_cj116, 0.002); end
  def test_costpercapita_ck116; assert_in_epsilon(2363.1093028372165, worksheet.costpercapita_ck116, 0.002); end
  def test_costpercapita_cl116; assert_in_epsilon(2901.3302766079514, worksheet.costpercapita_cl116, 0.002); end
  def test_costpercapita_cm116; assert_in_epsilon(3384.358665280797, worksheet.costpercapita_cm116, 0.002); end
  def test_costpercapita_cn116; assert_in_epsilon(3881.112276857426, worksheet.costpercapita_cn116, 0.002); end
  def test_costpercapita_cp116; assert_in_epsilon(1840.6676382003488, worksheet.costpercapita_cp116, 0.002); end
  def test_costpercapita_cq116; assert_in_epsilon(32466.449517993176, worksheet.costpercapita_cq116, 0.002); end
  def test_costpercapita_cr116; assert_equal("ok", worksheet.costpercapita_cr116); end
  def test_costpercapita_a117; assert_equal("TRA.a.GAS", worksheet.costpercapita_a117); end
  def test_costpercapita_b117; assert_equal("Natural gas buses, minibuses, BRT", worksheet.costpercapita_b117); end
  def test_costpercapita_c117; assert_equal("Transport", worksheet.costpercapita_c117); end
  def test_costpercapita_e117; assert_in_delta(0.0, (worksheet.costpercapita_e117||0), 0.002); end
  def test_costpercapita_f117; assert_in_epsilon(6.1890679925516485, worksheet.costpercapita_f117, 0.002); end
  def test_costpercapita_g117; assert_in_epsilon(12.89461517350674, worksheet.costpercapita_g117, 0.002); end
  def test_costpercapita_h117; assert_in_epsilon(21.74363288053844, worksheet.costpercapita_h117, 0.002); end
  def test_costpercapita_i117; assert_in_epsilon(31.47313379035738, worksheet.costpercapita_i117, 0.002); end
  def test_costpercapita_j117; assert_in_epsilon(40.398568913239245, worksheet.costpercapita_j117, 0.002); end
  def test_costpercapita_k117; assert_in_epsilon(49.20096463099547, worksheet.costpercapita_k117, 0.002); end
  def test_costpercapita_l117; assert_in_epsilon(59.56462398219758, worksheet.costpercapita_l117, 0.002); end
  def test_costpercapita_m117; assert_in_epsilon(70.49345252070695, worksheet.costpercapita_m117, 0.002); end
  def test_costpercapita_o117; assert_in_delta(0.0, (worksheet.costpercapita_o117||0), 0.002); end
  def test_costpercapita_p117; assert_in_epsilon(12.343277127913803, worksheet.costpercapita_p117, 0.002); end
  def test_costpercapita_q117; assert_in_epsilon(31.69599937686296, worksheet.costpercapita_q117, 0.002); end
  def test_costpercapita_r117; assert_in_epsilon(62.18594006131269, worksheet.costpercapita_r117, 0.002); end
  def test_costpercapita_s117; assert_in_epsilon(99.8900546019045, worksheet.costpercapita_s117, 0.002); end
  def test_costpercapita_t117; assert_in_epsilon(137.9875493831173, worksheet.costpercapita_t117, 0.002); end
  def test_costpercapita_u117; assert_in_epsilon(177.35478319440028, worksheet.costpercapita_u117, 0.002); end
  def test_costpercapita_v117; assert_in_epsilon(224.80593143456326, worksheet.costpercapita_v117, 0.002); end
  def test_costpercapita_w117; assert_in_epsilon(275.64389651793635, worksheet.costpercapita_w117, 0.002); end
  def test_costpercapita_y117; assert_in_delta(0.0, (worksheet.costpercapita_y117||0), 0.002); end
  def test_costpercapita_z117; assert_in_delta(0.0, (worksheet.costpercapita_z117||0), 0.002); end
  def test_costpercapita_aa117; assert_in_delta(0.0, (worksheet.costpercapita_aa117||0), 0.002); end
  def test_costpercapita_ab117; assert_in_delta(0.0, (worksheet.costpercapita_ab117||0), 0.002); end
  def test_costpercapita_ac117; assert_in_delta(0.0, (worksheet.costpercapita_ac117||0), 0.002); end
  def test_costpercapita_ad117; assert_in_delta(0.0, (worksheet.costpercapita_ad117||0), 0.002); end
  def test_costpercapita_ae117; assert_in_delta(0.0, (worksheet.costpercapita_ae117||0), 0.002); end
  def test_costpercapita_af117; assert_in_delta(0.0, (worksheet.costpercapita_af117||0), 0.002); end
  def test_costpercapita_ag117; assert_in_delta(0.0, (worksheet.costpercapita_ag117||0), 0.002); end
  def test_costpercapita_ai117; assert_in_delta(0.0, (worksheet.costpercapita_ai117||0), 0.002); end
  def test_costpercapita_aj117; assert_in_epsilon(18.53234512046545, worksheet.costpercapita_aj117, 0.002); end
  def test_costpercapita_ak117; assert_in_epsilon(44.59061455036971, worksheet.costpercapita_ak117, 0.002); end
  def test_costpercapita_al117; assert_in_epsilon(83.92957294185113, worksheet.costpercapita_al117, 0.002); end
  def test_costpercapita_am117; assert_in_epsilon(131.3631883922619, worksheet.costpercapita_am117, 0.002); end
  def test_costpercapita_an117; assert_in_epsilon(178.38611829635656, worksheet.costpercapita_an117, 0.002); end
  def test_costpercapita_ao117; assert_in_epsilon(226.55574782539577, worksheet.costpercapita_ao117, 0.002); end
  def test_costpercapita_ap117; assert_in_epsilon(284.37055541676085, worksheet.costpercapita_ap117, 0.002); end
  def test_costpercapita_aq117; assert_in_epsilon(346.1373490386433, worksheet.costpercapita_aq117, 0.002); end
  def test_costpercapita_as117; assert_in_epsilon(145.98505462023388, worksheet.costpercapita_as117, 0.002); end
  def test_costpercapita_at117; assert_in_epsilon(2493.44326961092, worksheet.costpercapita_at117, 0.002); end
  def test_costpercapita_av117; assert_in_delta(0.0, (worksheet.costpercapita_av117||0), 0.002); end
  def test_costpercapita_aw117; assert_in_epsilon(5.0, worksheet.costpercapita_aw117, 0.002); end
  def test_costpercapita_ay117; assert_in_delta(0.0, (worksheet.costpercapita_ay117||0), 0.002); end
  def test_costpercapita_az117; assert_in_epsilon(14.539312081937798, worksheet.costpercapita_az117, 0.002); end
  def test_costpercapita_ba117; assert_in_epsilon(30.291933197329538, worksheet.costpercapita_ba117, 0.002); end
  def test_costpercapita_bb117; assert_in_epsilon(51.079979186800685, worksheet.costpercapita_bb117, 0.002); end
  def test_costpercapita_bc117; assert_in_epsilon(73.93644970863019, worksheet.costpercapita_bc117, 0.002); end
  def test_costpercapita_bd117; assert_in_epsilon(94.90401491793828, worksheet.costpercapita_bd117, 0.002); end
  def test_costpercapita_be117; assert_in_epsilon(115.5825368800805, worksheet.costpercapita_be117, 0.002); end
  def test_costpercapita_bf117; assert_in_epsilon(139.9287676533342, worksheet.costpercapita_bf117, 0.002); end
  def test_costpercapita_bg117; assert_in_epsilon(165.60268964007022, worksheet.costpercapita_bg117, 0.002); end
  def test_costpercapita_bi117; assert_in_delta(0.0, (worksheet.costpercapita_bi117||0), 0.002); end
  def test_costpercapita_bj117; assert_in_delta(0.0, (worksheet.costpercapita_bj117||0), 0.002); end
  def test_costpercapita_bk117; assert_in_delta(0.0, (worksheet.costpercapita_bk117||0), 0.002); end
  def test_costpercapita_bl117; assert_in_delta(0.0, (worksheet.costpercapita_bl117||0), 0.002); end
  def test_costpercapita_bm117; assert_in_delta(0.0, (worksheet.costpercapita_bm117||0), 0.002); end
  def test_costpercapita_bn117; assert_in_delta(0.0, (worksheet.costpercapita_bn117||0), 0.002); end
  def test_costpercapita_bo117; assert_in_delta(0.0, (worksheet.costpercapita_bo117||0), 0.002); end
  def test_costpercapita_bp117; assert_in_delta(0.0, (worksheet.costpercapita_bp117||0), 0.002); end
  def test_costpercapita_bq117; assert_in_delta(0.0, (worksheet.costpercapita_bq117||0), 0.002); end
  def test_costpercapita_bs117; assert_in_delta(0.0, (worksheet.costpercapita_bs117||0), 0.002); end
  def test_costpercapita_bt117; assert_in_epsilon(26.8825892098516, worksheet.costpercapita_bt117, 0.002); end
  def test_costpercapita_bu117; assert_in_epsilon(61.9879325741925, worksheet.costpercapita_bu117, 0.002); end
  def test_costpercapita_bv117; assert_in_epsilon(113.26591924811338, worksheet.costpercapita_bv117, 0.002); end
  def test_costpercapita_bw117; assert_in_epsilon(173.82650431053472, worksheet.costpercapita_bw117, 0.002); end
  def test_costpercapita_bx117; assert_in_epsilon(232.89156430105558, worksheet.costpercapita_bx117, 0.002); end
  def test_costpercapita_by117; assert_in_epsilon(292.9373200744808, worksheet.costpercapita_by117, 0.002); end
  def test_costpercapita_bz117; assert_in_epsilon(364.73469908789747, worksheet.costpercapita_bz117, 0.002); end
  def test_costpercapita_ca117; assert_in_epsilon(441.24658615800655, worksheet.costpercapita_ca117, 0.002); end
  def test_costpercapita_cc117; assert_in_epsilon(189.75256832934804, worksheet.costpercapita_cc117, 0.002); end
  def test_costpercapita_cd117; assert_in_epsilon(3267.6504024750852, worksheet.costpercapita_cd117, 0.002); end
  def test_costpercapita_cf117; assert_in_delta(0.0, (worksheet.costpercapita_cf117||0), 0.002); end
  def test_costpercapita_cg117; assert_in_epsilon(8.350244089386148, worksheet.costpercapita_cg117, 0.002); end
  def test_costpercapita_ch117; assert_in_epsilon(17.397318023822802, worksheet.costpercapita_ch117, 0.002); end
  def test_costpercapita_ci117; assert_in_epsilon(29.336346306262243, worksheet.costpercapita_ci117, 0.002); end
  def test_costpercapita_cj117; assert_in_epsilon(42.46331591827281, worksheet.costpercapita_cj117, 0.002); end
  def test_costpercapita_ck117; assert_in_epsilon(54.50544600469904, worksheet.costpercapita_ck117, 0.002); end
  def test_costpercapita_cl117; assert_in_epsilon(66.38157224908502, worksheet.costpercapita_cl117, 0.002); end
  def test_costpercapita_cm117; assert_in_epsilon(80.36414367113662, worksheet.costpercapita_cm117, 0.002); end
  def test_costpercapita_cn117; assert_in_epsilon(95.10923711936327, worksheet.costpercapita_cn117, 0.002); end
  def test_costpercapita_cp117; assert_in_epsilon(43.76751370911422, worksheet.costpercapita_cp117, 0.002); end
  def test_costpercapita_cq117; assert_in_epsilon(774.2071328641651, worksheet.costpercapita_cq117, 0.002); end
  def test_costpercapita_cr117; assert_equal("ok", worksheet.costpercapita_cr117); end
  def test_costpercapita_a118; assert_equal("TRA.b.ROAD", worksheet.costpercapita_a118); end
  def test_costpercapita_b118; assert_equal("Road freight", worksheet.costpercapita_b118); end
  def test_costpercapita_c118; assert_equal("Transport", worksheet.costpercapita_c118); end
  def test_costpercapita_e118; assert_in_epsilon(273.29572548478194, worksheet.costpercapita_e118, 0.002); end
  def test_costpercapita_f118; assert_in_epsilon(294.5015536799438, worksheet.costpercapita_f118, 0.002); end
  def test_costpercapita_g118; assert_in_epsilon(326.03868919060324, worksheet.costpercapita_g118, 0.002); end
  def test_costpercapita_h118; assert_in_epsilon(360.879361517101, worksheet.costpercapita_h118, 0.002); end
  def test_costpercapita_i118; assert_in_epsilon(399.39225803631916, worksheet.costpercapita_i118, 0.002); end
  def test_costpercapita_j118; assert_in_epsilon(441.932637353803, worksheet.costpercapita_j118, 0.002); end
  def test_costpercapita_k118; assert_in_epsilon(488.9436854192277, worksheet.costpercapita_k118, 0.002); end
  def test_costpercapita_l118; assert_in_epsilon(540.895603512257, worksheet.costpercapita_l118, 0.002); end
  def test_costpercapita_m118; assert_in_epsilon(598.3010170772176, worksheet.costpercapita_m118, 0.002); end
  def test_costpercapita_o118; assert_in_epsilon(2149.6288663552446, worksheet.costpercapita_o118, 0.002); end
  def test_costpercapita_p118; assert_in_epsilon(2249.816514164994, worksheet.costpercapita_p118, 0.002); end
  def test_costpercapita_q118; assert_in_epsilon(2415.996538934767, worksheet.costpercapita_q118, 0.002); end
  def test_costpercapita_r118; assert_in_epsilon(2591.86409835195, worksheet.costpercapita_r118, 0.002); end
  def test_costpercapita_s118; assert_in_epsilon(2777.589144595259, worksheet.costpercapita_s118, 0.002); end
  def test_costpercapita_t118; assert_in_epsilon(2973.3585983787293, worksheet.costpercapita_t118, 0.002); end
  def test_costpercapita_u118; assert_in_epsilon(3179.106081796703, worksheet.costpercapita_u118, 0.002); end
  def test_costpercapita_v118; assert_in_epsilon(3394.731046388777, worksheet.costpercapita_v118, 0.002); end
  def test_costpercapita_w118; assert_in_epsilon(3620.0004914521646, worksheet.costpercapita_w118, 0.002); end
  def test_costpercapita_y118; assert_in_delta(0.0, (worksheet.costpercapita_y118||0), 0.002); end
  def test_costpercapita_z118; assert_in_delta(0.0, (worksheet.costpercapita_z118||0), 0.002); end
  def test_costpercapita_aa118; assert_in_delta(0.0, (worksheet.costpercapita_aa118||0), 0.002); end
  def test_costpercapita_ab118; assert_in_delta(0.0, (worksheet.costpercapita_ab118||0), 0.002); end
  def test_costpercapita_ac118; assert_in_delta(0.0, (worksheet.costpercapita_ac118||0), 0.002); end
  def test_costpercapita_ad118; assert_in_delta(0.0, (worksheet.costpercapita_ad118||0), 0.002); end
  def test_costpercapita_ae118; assert_in_delta(0.0, (worksheet.costpercapita_ae118||0), 0.002); end
  def test_costpercapita_af118; assert_in_delta(0.0, (worksheet.costpercapita_af118||0), 0.002); end
  def test_costpercapita_ag118; assert_in_delta(0.0, (worksheet.costpercapita_ag118||0), 0.002); end
  def test_costpercapita_ai118; assert_in_epsilon(2422.9245918400266, worksheet.costpercapita_ai118, 0.002); end
  def test_costpercapita_aj118; assert_in_epsilon(2544.3180678449376, worksheet.costpercapita_aj118, 0.002); end
  def test_costpercapita_ak118; assert_in_epsilon(2742.0352281253704, worksheet.costpercapita_ak118, 0.002); end
  def test_costpercapita_al118; assert_in_epsilon(2952.743459869051, worksheet.costpercapita_al118, 0.002); end
  def test_costpercapita_am118; assert_in_epsilon(3176.981402631578, worksheet.costpercapita_am118, 0.002); end
  def test_costpercapita_an118; assert_in_epsilon(3415.291235732532, worksheet.costpercapita_an118, 0.002); end
  def test_costpercapita_ao118; assert_in_epsilon(3668.049767215931, worksheet.costpercapita_ao118, 0.002); end
  def test_costpercapita_ap118; assert_in_epsilon(3935.626649901034, worksheet.costpercapita_ap118, 0.002); end
  def test_costpercapita_aq118; assert_in_epsilon(4218.301508529383, worksheet.costpercapita_aq118, 0.002); end
  def test_costpercapita_as118; assert_in_epsilon(3230.6968790766496, worksheet.costpercapita_as118, 0.002); end
  def test_costpercapita_at118; assert_in_epsilon(65048.300919263966, worksheet.costpercapita_at118, 0.002); end
  def test_costpercapita_av118; assert_in_delta(0.0, (worksheet.costpercapita_av118||0), 0.002); end
  def test_costpercapita_aw118; assert_in_epsilon(5.0, worksheet.costpercapita_aw118, 0.002); end
  def test_costpercapita_ay118; assert_in_epsilon(538.9683185498812, worksheet.costpercapita_ay118, 0.002); end
  def test_costpercapita_az118; assert_in_epsilon(580.7884734225212, worksheet.costpercapita_az118, 0.002); end
  def test_costpercapita_ba118; assert_in_epsilon(642.98306818945, worksheet.costpercapita_ba118, 0.002); end
  def test_costpercapita_bb118; assert_in_epsilon(711.6925898903503, worksheet.costpercapita_bb118, 0.002); end
  def test_costpercapita_bc118; assert_in_epsilon(787.6441293541624, worksheet.costpercapita_bc118, 0.002); end
  def test_costpercapita_bd118; assert_in_epsilon(871.5382944405281, worksheet.costpercapita_bd118, 0.002); end
  def test_costpercapita_be118; assert_in_epsilon(964.2490951094559, worksheet.costpercapita_be118, 0.002); end
  def test_costpercapita_bf118; assert_in_epsilon(1066.7038184329656, worksheet.costpercapita_bf118, 0.002); end
  def test_costpercapita_bg118; assert_in_epsilon(1179.9134164604698, worksheet.costpercapita_bg118, 0.002); end
  def test_costpercapita_bi118; assert_in_delta(0.0, (worksheet.costpercapita_bi118||0), 0.002); end
  def test_costpercapita_bj118; assert_in_delta(0.0, (worksheet.costpercapita_bj118||0), 0.002); end
  def test_costpercapita_bk118; assert_in_delta(0.0, (worksheet.costpercapita_bk118||0), 0.002); end
  def test_costpercapita_bl118; assert_in_delta(0.0, (worksheet.costpercapita_bl118||0), 0.002); end
  def test_costpercapita_bm118; assert_in_delta(0.0, (worksheet.costpercapita_bm118||0), 0.002); end
  def test_costpercapita_bn118; assert_in_delta(0.0, (worksheet.costpercapita_bn118||0), 0.002); end
  def test_costpercapita_bo118; assert_in_delta(0.0, (worksheet.costpercapita_bo118||0), 0.002); end
  def test_costpercapita_bp118; assert_in_delta(0.0, (worksheet.costpercapita_bp118||0), 0.002); end
  def test_costpercapita_bq118; assert_in_delta(0.0, (worksheet.costpercapita_bq118||0), 0.002); end
  def test_costpercapita_bs118; assert_in_epsilon(2688.5971849051257, worksheet.costpercapita_bs118, 0.002); end
  def test_costpercapita_bt118; assert_in_epsilon(2830.6049875875146, worksheet.costpercapita_bt118, 0.002); end
  def test_costpercapita_bu118; assert_in_epsilon(3058.979607124217, worksheet.costpercapita_bu118, 0.002); end
  def test_costpercapita_bv118; assert_in_epsilon(3303.5566882423, worksheet.costpercapita_bv118, 0.002); end
  def test_costpercapita_bw118; assert_in_epsilon(3565.233273949421, worksheet.costpercapita_bw118, 0.002); end
  def test_costpercapita_bx118; assert_in_epsilon(3844.8968928192576, worksheet.costpercapita_bx118, 0.002); end
  def test_costpercapita_by118; assert_in_epsilon(4143.35517690616, worksheet.costpercapita_by118, 0.002); end
  def test_costpercapita_bz118; assert_in_epsilon(4461.434864821742, worksheet.costpercapita_bz118, 0.002); end
  def test_costpercapita_ca118; assert_in_epsilon(4799.913907912634, worksheet.costpercapita_ca118, 0.002); end
  def test_costpercapita_cc118; assert_in_epsilon(3632.952509363153, worksheet.costpercapita_cc118, 0.002); end
  def test_costpercapita_cd118; assert_in_epsilon(72999.79640302384, worksheet.costpercapita_cd118, 0.002); end
  def test_costpercapita_cf118; assert_in_epsilon(265.67259306509936, worksheet.costpercapita_cf118, 0.002); end
  def test_costpercapita_cg118; assert_in_epsilon(286.2869197425774, worksheet.costpercapita_cg118, 0.002); end
  def test_costpercapita_ch118; assert_in_epsilon(316.94437899884673, worksheet.costpercapita_ch118, 0.002); end
  def test_costpercapita_ci118; assert_in_epsilon(350.8132283732492, worksheet.costpercapita_ci118, 0.002); end
  def test_costpercapita_cj118; assert_in_epsilon(388.25187131784315, worksheet.costpercapita_cj118, 0.002); end
  def test_costpercapita_ck118; assert_in_epsilon(429.6056570867251, worksheet.costpercapita_ck118, 0.002); end
  def test_costpercapita_cl118; assert_in_epsilon(475.3054096902282, worksheet.costpercapita_cl118, 0.002); end
  def test_costpercapita_cm118; assert_in_epsilon(525.8082149207085, worksheet.costpercapita_cm118, 0.002); end
  def test_costpercapita_cn118; assert_in_epsilon(581.6123993832522, worksheet.costpercapita_cn118, 0.002); end
  def test_costpercapita_cp118; assert_in_epsilon(402.25563028650333, worksheet.costpercapita_cp118, 0.002); end
  def test_costpercapita_cq118; assert_in_epsilon(7951.495483759866, worksheet.costpercapita_cq118, 0.002); end
  def test_costpercapita_cr118; assert_equal("ok", worksheet.costpercapita_cr118); end
  def test_costpercapita_a119; assert_equal("TRA.b.RAIL", worksheet.costpercapita_a119); end
  def test_costpercapita_b119; assert_equal("Rail", worksheet.costpercapita_b119); end
  def test_costpercapita_c119; assert_equal("Transport", worksheet.costpercapita_c119); end
  def test_costpercapita_e119; assert_in_epsilon(999.1143088906985, worksheet.costpercapita_e119, 0.002); end
  def test_costpercapita_f119; assert_in_epsilon(1153.1499187307545, worksheet.costpercapita_f119, 0.002); end
  def test_costpercapita_g119; assert_in_epsilon(1360.764033706725, worksheet.costpercapita_g119, 0.002); end
  def test_costpercapita_h119; assert_in_epsilon(1599.421249090011, worksheet.costpercapita_h119, 0.002); end
  def test_costpercapita_i119; assert_in_epsilon(1873.341875490877, worksheet.costpercapita_i119, 0.002); end
  def test_costpercapita_j119; assert_in_epsilon(2187.350799217839, worksheet.costpercapita_j119, 0.002); end
  def test_costpercapita_k119; assert_in_epsilon(2546.7692009301054, worksheet.costpercapita_k119, 0.002); end
  def test_costpercapita_l119; assert_in_epsilon(2957.6422346238514, worksheet.costpercapita_l119, 0.002); end
  def test_costpercapita_m119; assert_in_epsilon(3426.773564118444, worksheet.costpercapita_m119, 0.002); end
  def test_costpercapita_o119; assert_in_epsilon(28.843576212502516, worksheet.costpercapita_o119, 0.002); end
  def test_costpercapita_p119; assert_in_epsilon(33.290452623264656, worksheet.costpercapita_p119, 0.002); end
  def test_costpercapita_q119; assert_in_epsilon(39.28409468685338, worksheet.costpercapita_q119, 0.002); end
  def test_costpercapita_r119; assert_in_epsilon(46.17392452846012, worksheet.costpercapita_r119, 0.002); end
  def test_costpercapita_s119; assert_in_epsilon(54.081778908548024, worksheet.costpercapita_s119, 0.002); end
  def test_costpercapita_t119; assert_in_epsilon(63.14694817129286, worksheet.costpercapita_t119, 0.002); end
  def test_costpercapita_u119; assert_in_epsilon(73.52305025462087, worksheet.costpercapita_u119, 0.002); end
  def test_costpercapita_v119; assert_in_epsilon(85.38460358795841, worksheet.costpercapita_v119, 0.002); end
  def test_costpercapita_w119; assert_in_epsilon(98.92802413107287, worksheet.costpercapita_w119, 0.002); end
  def test_costpercapita_y119; assert_in_delta(0.0, (worksheet.costpercapita_y119||0), 0.002); end
  def test_costpercapita_z119; assert_in_delta(0.0, (worksheet.costpercapita_z119||0), 0.002); end
  def test_costpercapita_aa119; assert_in_delta(0.0, (worksheet.costpercapita_aa119||0), 0.002); end
  def test_costpercapita_ab119; assert_in_delta(0.0, (worksheet.costpercapita_ab119||0), 0.002); end
  def test_costpercapita_ac119; assert_in_delta(0.0, (worksheet.costpercapita_ac119||0), 0.002); end
  def test_costpercapita_ad119; assert_in_delta(0.0, (worksheet.costpercapita_ad119||0), 0.002); end
  def test_costpercapita_ae119; assert_in_delta(0.0, (worksheet.costpercapita_ae119||0), 0.002); end
  def test_costpercapita_af119; assert_in_delta(0.0, (worksheet.costpercapita_af119||0), 0.002); end
  def test_costpercapita_ag119; assert_in_delta(0.0, (worksheet.costpercapita_ag119||0), 0.002); end
  def test_costpercapita_ai119; assert_in_epsilon(1027.9578851032009, worksheet.costpercapita_ai119, 0.002); end
  def test_costpercapita_aj119; assert_in_epsilon(1186.4403713540191, worksheet.costpercapita_aj119, 0.002); end
  def test_costpercapita_ak119; assert_in_epsilon(1400.0481283935785, worksheet.costpercapita_ak119, 0.002); end
  def test_costpercapita_al119; assert_in_epsilon(1645.595173618471, worksheet.costpercapita_al119, 0.002); end
  def test_costpercapita_am119; assert_in_epsilon(1927.4236543994252, worksheet.costpercapita_am119, 0.002); end
  def test_costpercapita_an119; assert_in_epsilon(2250.4977473891317, worksheet.costpercapita_an119, 0.002); end
  def test_costpercapita_ao119; assert_in_epsilon(2620.2922511847264, worksheet.costpercapita_ao119, 0.002); end
  def test_costpercapita_ap119; assert_in_epsilon(3043.0268382118093, worksheet.costpercapita_ap119, 0.002); end
  def test_costpercapita_aq119; assert_in_epsilon(3525.7015882495166, worksheet.costpercapita_aq119, 0.002); end
  def test_costpercapita_as119; assert_in_epsilon(2069.6648486559866, worksheet.costpercapita_as119, 0.002); end
  def test_costpercapita_at119; assert_in_epsilon(39518.47670875579, worksheet.costpercapita_at119, 0.002); end
  def test_costpercapita_av119; assert_in_delta(0.0, (worksheet.costpercapita_av119||0), 0.002); end
  def test_costpercapita_aw119; assert_in_epsilon(5.0, worksheet.costpercapita_aw119, 0.002); end
  def test_costpercapita_ay119; assert_in_epsilon(5038.492198618791, worksheet.costpercapita_ay119, 0.002); end
  def test_costpercapita_az119; assert_in_epsilon(5815.287417726712, worksheet.costpercapita_az119, 0.002); end
  def test_costpercapita_ba119; assert_in_epsilon(6862.276825566341, worksheet.costpercapita_ba119, 0.002); end
  def test_costpercapita_bb119; assert_in_epsilon(8065.8153067516005, worksheet.costpercapita_bb119, 0.002); end
  def test_costpercapita_bc119; assert_in_epsilon(9447.185713400957, worksheet.costpercapita_bc119, 0.002); end
  def test_costpercapita_bd119; assert_in_epsilon(11030.719747911578, worksheet.costpercapita_bd119, 0.002); end
  def test_costpercapita_be119; assert_in_epsilon(12843.251904595367, worksheet.costpercapita_be119, 0.002); end
  def test_costpercapita_bf119; assert_in_epsilon(14915.267645404107, worksheet.costpercapita_bf119, 0.002); end
  def test_costpercapita_bg119; assert_in_epsilon(17281.07756600325, worksheet.costpercapita_bg119, 0.002); end
  def test_costpercapita_bi119; assert_in_delta(0.0, (worksheet.costpercapita_bi119||0), 0.002); end
  def test_costpercapita_bj119; assert_in_delta(0.0, (worksheet.costpercapita_bj119||0), 0.002); end
  def test_costpercapita_bk119; assert_in_delta(0.0, (worksheet.costpercapita_bk119||0), 0.002); end
  def test_costpercapita_bl119; assert_in_delta(0.0, (worksheet.costpercapita_bl119||0), 0.002); end
  def test_costpercapita_bm119; assert_in_delta(0.0, (worksheet.costpercapita_bm119||0), 0.002); end
  def test_costpercapita_bn119; assert_in_delta(0.0, (worksheet.costpercapita_bn119||0), 0.002); end
  def test_costpercapita_bo119; assert_in_delta(0.0, (worksheet.costpercapita_bo119||0), 0.002); end
  def test_costpercapita_bp119; assert_in_delta(0.0, (worksheet.costpercapita_bp119||0), 0.002); end
  def test_costpercapita_bq119; assert_in_delta(0.0, (worksheet.costpercapita_bq119||0), 0.002); end
  def test_costpercapita_bs119; assert_in_epsilon(5067.335774831294, worksheet.costpercapita_bs119, 0.002); end
  def test_costpercapita_bt119; assert_in_epsilon(5848.577870349977, worksheet.costpercapita_bt119, 0.002); end
  def test_costpercapita_bu119; assert_in_epsilon(6901.560920253195, worksheet.costpercapita_bu119, 0.002); end
  def test_costpercapita_bv119; assert_in_epsilon(8111.98923128006, worksheet.costpercapita_bv119, 0.002); end
  def test_costpercapita_bw119; assert_in_epsilon(9501.267492309506, worksheet.costpercapita_bw119, 0.002); end
  def test_costpercapita_bx119; assert_in_epsilon(11093.86669608287, worksheet.costpercapita_bx119, 0.002); end
  def test_costpercapita_by119; assert_in_epsilon(12916.774954849989, worksheet.costpercapita_by119, 0.002); end
  def test_costpercapita_bz119; assert_in_epsilon(15000.652248992064, worksheet.costpercapita_bz119, 0.002); end
  def test_costpercapita_ca119; assert_in_epsilon(17380.00559013432, worksheet.costpercapita_ca119, 0.002); end
  def test_costpercapita_cc119; assert_in_epsilon(10202.447864342585, worksheet.costpercapita_cc119, 0.002); end
  def test_costpercapita_cd119; assert_in_epsilon(194806.99909511482, worksheet.costpercapita_cd119, 0.002); end
  def test_costpercapita_cf119; assert_in_epsilon(4039.377889728092, worksheet.costpercapita_cf119, 0.002); end
  def test_costpercapita_cg119; assert_in_epsilon(4662.137498995958, worksheet.costpercapita_cg119, 0.002); end
  def test_costpercapita_ch119; assert_in_epsilon(5501.512791859617, worksheet.costpercapita_ch119, 0.002); end
  def test_costpercapita_ci119; assert_in_epsilon(6466.394057661589, worksheet.costpercapita_ci119, 0.002); end
  def test_costpercapita_cj119; assert_in_epsilon(7573.843837910081, worksheet.costpercapita_cj119, 0.002); end
  def test_costpercapita_ck119; assert_in_epsilon(8843.36894869374, worksheet.costpercapita_ck119, 0.002); end
  def test_costpercapita_cl119; assert_in_epsilon(10296.482703665262, worksheet.costpercapita_cl119, 0.002); end
  def test_costpercapita_cm119; assert_in_epsilon(11957.625410780254, worksheet.costpercapita_cm119, 0.002); end
  def test_costpercapita_cn119; assert_in_epsilon(13854.304001884804, worksheet.costpercapita_cn119, 0.002); end
  def test_costpercapita_cp119; assert_in_epsilon(8132.7830156866, worksheet.costpercapita_cp119, 0.002); end
  def test_costpercapita_cq119; assert_in_epsilon(155288.52238635905, worksheet.costpercapita_cq119, 0.002); end
  def test_costpercapita_a120; assert_equal("XVI.b.Coal", worksheet.costpercapita_a120); end
  def test_costpercapita_b120; assert_equal("Coal Imports", worksheet.costpercapita_b120); end
  def test_costpercapita_c120; assert_equal("Fossil Fuels", worksheet.costpercapita_c120); end
  def test_costpercapita_e120; assert_in_delta(0.0, (worksheet.costpercapita_e120||0), 0.002); end
  def test_costpercapita_f120; assert_in_delta(0.0, (worksheet.costpercapita_f120||0), 0.002); end
  def test_costpercapita_g120; assert_in_delta(0.0, (worksheet.costpercapita_g120||0), 0.002); end
  def test_costpercapita_h120; assert_in_delta(0.0, (worksheet.costpercapita_h120||0), 0.002); end
  def test_costpercapita_i120; assert_in_delta(0.0, (worksheet.costpercapita_i120||0), 0.002); end
  def test_costpercapita_j120; assert_in_delta(0.0, (worksheet.costpercapita_j120||0), 0.002); end
  def test_costpercapita_k120; assert_in_delta(0.0, (worksheet.costpercapita_k120||0), 0.002); end
  def test_costpercapita_l120; assert_in_delta(0.0, (worksheet.costpercapita_l120||0), 0.002); end
  def test_costpercapita_m120; assert_in_delta(0.0, (worksheet.costpercapita_m120||0), 0.002); end
  def test_costpercapita_o120; assert_in_delta(0.0, (worksheet.costpercapita_o120||0), 0.002); end
  def test_costpercapita_p120; assert_in_delta(0.0, (worksheet.costpercapita_p120||0), 0.002); end
  def test_costpercapita_q120; assert_in_delta(0.0, (worksheet.costpercapita_q120||0), 0.002); end
  def test_costpercapita_r120; assert_in_delta(0.0, (worksheet.costpercapita_r120||0), 0.002); end
  def test_costpercapita_s120; assert_in_delta(0.0, (worksheet.costpercapita_s120||0), 0.002); end
  def test_costpercapita_t120; assert_in_delta(0.0, (worksheet.costpercapita_t120||0), 0.002); end
  def test_costpercapita_u120; assert_in_delta(0.0, (worksheet.costpercapita_u120||0), 0.002); end
  def test_costpercapita_v120; assert_in_delta(0.0, (worksheet.costpercapita_v120||0), 0.002); end
  def test_costpercapita_w120; assert_in_delta(0.0, (worksheet.costpercapita_w120||0), 0.002); end
  def test_costpercapita_y120; assert_in_delta(0.0, (worksheet.costpercapita_y120||0), 0.002); end
  def test_costpercapita_z120; assert_in_delta(0.0, (worksheet.costpercapita_z120||0), 0.002); end
  def test_costpercapita_aa120; assert_in_delta(0.0, (worksheet.costpercapita_aa120||0), 0.002); end
  def test_costpercapita_ab120; assert_in_delta(0.0, (worksheet.costpercapita_ab120||0), 0.002); end
  def test_costpercapita_ac120; assert_in_delta(0.0, (worksheet.costpercapita_ac120||0), 0.002); end
  def test_costpercapita_ad120; assert_in_delta(0.0, (worksheet.costpercapita_ad120||0), 0.002); end
  def test_costpercapita_ae120; assert_in_delta(0.0, (worksheet.costpercapita_ae120||0), 0.002); end
  def test_costpercapita_af120; assert_in_delta(0.0, (worksheet.costpercapita_af120||0), 0.002); end
  def test_costpercapita_ag120; assert_in_delta(0.0, (worksheet.costpercapita_ag120||0), 0.002); end
  def test_costpercapita_ai120; assert_in_delta(0.0, (worksheet.costpercapita_ai120||0), 0.002); end
  def test_costpercapita_aj120; assert_in_delta(0.0, (worksheet.costpercapita_aj120||0), 0.002); end
  def test_costpercapita_ak120; assert_in_delta(0.0, (worksheet.costpercapita_ak120||0), 0.002); end
  def test_costpercapita_al120; assert_in_delta(0.0, (worksheet.costpercapita_al120||0), 0.002); end
  def test_costpercapita_am120; assert_in_delta(0.0, (worksheet.costpercapita_am120||0), 0.002); end
  def test_costpercapita_an120; assert_in_delta(0.0, (worksheet.costpercapita_an120||0), 0.002); end
  def test_costpercapita_ao120; assert_in_delta(0.0, (worksheet.costpercapita_ao120||0), 0.002); end
  def test_costpercapita_ap120; assert_in_delta(0.0, (worksheet.costpercapita_ap120||0), 0.002); end
  def test_costpercapita_aq120; assert_in_delta(0.0, (worksheet.costpercapita_aq120||0), 0.002); end
  def test_costpercapita_as120; assert_in_delta(0.0, (worksheet.costpercapita_as120||0), 0.002); end
  def test_costpercapita_at120; assert_in_delta(0.0, (worksheet.costpercapita_at120||0), 0.002); end
  def test_costpercapita_av120; assert_in_delta(0.0, (worksheet.costpercapita_av120||0), 0.002); end
  def test_costpercapita_aw120; assert_in_epsilon(5.0, worksheet.costpercapita_aw120, 0.002); end
  def test_costpercapita_ay120; assert_in_delta(0.0, (worksheet.costpercapita_ay120||0), 0.002); end
  def test_costpercapita_az120; assert_in_delta(0.0, (worksheet.costpercapita_az120||0), 0.002); end
  def test_costpercapita_ba120; assert_in_delta(0.0, (worksheet.costpercapita_ba120||0), 0.002); end
  def test_costpercapita_bb120; assert_in_delta(0.0, (worksheet.costpercapita_bb120||0), 0.002); end
  def test_costpercapita_bc120; assert_in_delta(0.0, (worksheet.costpercapita_bc120||0), 0.002); end
  def test_costpercapita_bd120; assert_in_delta(0.0, (worksheet.costpercapita_bd120||0), 0.002); end
  def test_costpercapita_be120; assert_in_delta(0.0, (worksheet.costpercapita_be120||0), 0.002); end
  def test_costpercapita_bf120; assert_in_delta(0.0, (worksheet.costpercapita_bf120||0), 0.002); end
  def test_costpercapita_bg120; assert_in_delta(0.0, (worksheet.costpercapita_bg120||0), 0.002); end
  def test_costpercapita_bi120; assert_in_delta(0.0, (worksheet.costpercapita_bi120||0), 0.002); end
  def test_costpercapita_bj120; assert_in_delta(0.0, (worksheet.costpercapita_bj120||0), 0.002); end
  def test_costpercapita_bk120; assert_in_delta(0.0, (worksheet.costpercapita_bk120||0), 0.002); end
  def test_costpercapita_bl120; assert_in_delta(0.0, (worksheet.costpercapita_bl120||0), 0.002); end
  def test_costpercapita_bm120; assert_in_delta(0.0, (worksheet.costpercapita_bm120||0), 0.002); end
  def test_costpercapita_bn120; assert_in_delta(0.0, (worksheet.costpercapita_bn120||0), 0.002); end
  def test_costpercapita_bo120; assert_in_delta(0.0, (worksheet.costpercapita_bo120||0), 0.002); end
  def test_costpercapita_bp120; assert_in_delta(0.0, (worksheet.costpercapita_bp120||0), 0.002); end
  def test_costpercapita_bq120; assert_in_delta(0.0, (worksheet.costpercapita_bq120||0), 0.002); end
  def test_costpercapita_bs120; assert_in_delta(0.0, (worksheet.costpercapita_bs120||0), 0.002); end
  def test_costpercapita_bt120; assert_in_delta(0.0, (worksheet.costpercapita_bt120||0), 0.002); end
  def test_costpercapita_bu120; assert_in_delta(0.0, (worksheet.costpercapita_bu120||0), 0.002); end
  def test_costpercapita_bv120; assert_in_delta(0.0, (worksheet.costpercapita_bv120||0), 0.002); end
  def test_costpercapita_bw120; assert_in_delta(0.0, (worksheet.costpercapita_bw120||0), 0.002); end
  def test_costpercapita_bx120; assert_in_delta(0.0, (worksheet.costpercapita_bx120||0), 0.002); end
  def test_costpercapita_by120; assert_in_delta(0.0, (worksheet.costpercapita_by120||0), 0.002); end
  def test_costpercapita_bz120; assert_in_delta(0.0, (worksheet.costpercapita_bz120||0), 0.002); end
  def test_costpercapita_ca120; assert_in_delta(0.0, (worksheet.costpercapita_ca120||0), 0.002); end
  def test_costpercapita_cc120; assert_in_delta(0.0, (worksheet.costpercapita_cc120||0), 0.002); end
  def test_costpercapita_cd120; assert_in_delta(0.0, (worksheet.costpercapita_cd120||0), 0.002); end
  def test_costpercapita_cf120; assert_in_delta(0.0, (worksheet.costpercapita_cf120||0), 0.002); end
  def test_costpercapita_cg120; assert_in_delta(0.0, (worksheet.costpercapita_cg120||0), 0.002); end
  def test_costpercapita_ch120; assert_in_delta(0.0, (worksheet.costpercapita_ch120||0), 0.002); end
  def test_costpercapita_ci120; assert_in_delta(0.0, (worksheet.costpercapita_ci120||0), 0.002); end
  def test_costpercapita_cj120; assert_in_delta(0.0, (worksheet.costpercapita_cj120||0), 0.002); end
  def test_costpercapita_ck120; assert_in_delta(0.0, (worksheet.costpercapita_ck120||0), 0.002); end
  def test_costpercapita_cl120; assert_in_delta(0.0, (worksheet.costpercapita_cl120||0), 0.002); end
  def test_costpercapita_cm120; assert_in_delta(0.0, (worksheet.costpercapita_cm120||0), 0.002); end
  def test_costpercapita_cn120; assert_in_delta(0.0, (worksheet.costpercapita_cn120||0), 0.002); end
  def test_costpercapita_cp120; assert_in_delta(0.0, (worksheet.costpercapita_cp120||0), 0.002); end
  def test_costpercapita_cq120; assert_in_delta(0.0, (worksheet.costpercapita_cq120||0), 0.002); end
  def test_costpercapita_cr120; assert_equal("ok", worksheet.costpercapita_cr120); end
  def test_costpercapita_a121; assert_equal("XVI.b.Oil", worksheet.costpercapita_a121); end
  def test_costpercapita_b121; assert_equal("Oil Imports", worksheet.costpercapita_b121); end
  def test_costpercapita_c121; assert_equal("Fossil Fuels", worksheet.costpercapita_c121); end
  def test_costpercapita_e121; assert_in_delta(0.0, (worksheet.costpercapita_e121||0), 0.002); end
  def test_costpercapita_f121; assert_in_delta(0.0, (worksheet.costpercapita_f121||0), 0.002); end
  def test_costpercapita_g121; assert_in_delta(0.0, (worksheet.costpercapita_g121||0), 0.002); end
  def test_costpercapita_h121; assert_in_delta(0.0, (worksheet.costpercapita_h121||0), 0.002); end
  def test_costpercapita_i121; assert_in_delta(0.0, (worksheet.costpercapita_i121||0), 0.002); end
  def test_costpercapita_j121; assert_in_delta(0.0, (worksheet.costpercapita_j121||0), 0.002); end
  def test_costpercapita_k121; assert_in_delta(0.0, (worksheet.costpercapita_k121||0), 0.002); end
  def test_costpercapita_l121; assert_in_delta(0.0, (worksheet.costpercapita_l121||0), 0.002); end
  def test_costpercapita_m121; assert_in_delta(0.0, (worksheet.costpercapita_m121||0), 0.002); end
  def test_costpercapita_o121; assert_in_delta(0.0, (worksheet.costpercapita_o121||0), 0.002); end
  def test_costpercapita_p121; assert_in_delta(0.0, (worksheet.costpercapita_p121||0), 0.002); end
  def test_costpercapita_q121; assert_in_delta(0.0, (worksheet.costpercapita_q121||0), 0.002); end
  def test_costpercapita_r121; assert_in_delta(0.0, (worksheet.costpercapita_r121||0), 0.002); end
  def test_costpercapita_s121; assert_in_delta(0.0, (worksheet.costpercapita_s121||0), 0.002); end
  def test_costpercapita_t121; assert_in_delta(0.0, (worksheet.costpercapita_t121||0), 0.002); end
  def test_costpercapita_u121; assert_in_delta(0.0, (worksheet.costpercapita_u121||0), 0.002); end
  def test_costpercapita_v121; assert_in_delta(0.0, (worksheet.costpercapita_v121||0), 0.002); end
  def test_costpercapita_w121; assert_in_delta(0.0, (worksheet.costpercapita_w121||0), 0.002); end
  def test_costpercapita_y121; assert_in_epsilon(-1176.1020157248945, worksheet.costpercapita_y121, 0.002); end
  def test_costpercapita_z121; assert_in_epsilon(-1474.2542413110373, worksheet.costpercapita_z121, 0.002); end
  def test_costpercapita_aa121; assert_in_epsilon(-1771.7802552513137, worksheet.costpercapita_aa121, 0.002); end
  def test_costpercapita_ab121; assert_in_epsilon(-1765.1115125780873, worksheet.costpercapita_ab121, 0.002); end
  def test_costpercapita_ac121; assert_in_epsilon(-1808.1468049996945, worksheet.costpercapita_ac121, 0.002); end
  def test_costpercapita_ad121; assert_in_epsilon(-1846.8652481005447, worksheet.costpercapita_ad121, 0.002); end
  def test_costpercapita_ae121; assert_in_epsilon(-2080.232026105787, worksheet.costpercapita_ae121, 0.002); end
  def test_costpercapita_af121; assert_in_epsilon(-2010.401065399045, worksheet.costpercapita_af121, 0.002); end
  def test_costpercapita_ag121; assert_in_epsilon(-2222.7082087529975, worksheet.costpercapita_ag121, 0.002); end
  def test_costpercapita_ai121; assert_in_epsilon(-1176.1020157248945, worksheet.costpercapita_ai121, 0.002); end
  def test_costpercapita_aj121; assert_in_epsilon(-1474.2542413110373, worksheet.costpercapita_aj121, 0.002); end
  def test_costpercapita_ak121; assert_in_epsilon(-1771.7802552513137, worksheet.costpercapita_ak121, 0.002); end
  def test_costpercapita_al121; assert_in_epsilon(-1765.1115125780873, worksheet.costpercapita_al121, 0.002); end
  def test_costpercapita_am121; assert_in_epsilon(-1808.1468049996945, worksheet.costpercapita_am121, 0.002); end
  def test_costpercapita_an121; assert_in_epsilon(-1846.8652481005447, worksheet.costpercapita_an121, 0.002); end
  def test_costpercapita_ao121; assert_in_epsilon(-2080.232026105787, worksheet.costpercapita_ao121, 0.002); end
  def test_costpercapita_ap121; assert_in_epsilon(-2010.401065399045, worksheet.costpercapita_ap121, 0.002); end
  def test_costpercapita_aq121; assert_in_epsilon(-2222.7082087529975, worksheet.costpercapita_aq121, 0.002); end
  def test_costpercapita_as121; assert_in_epsilon(-1795.0668198026003, worksheet.costpercapita_as121, 0.002); end
  def test_costpercapita_at121; assert_in_epsilon(-37122.921941130466, worksheet.costpercapita_at121, 0.002); end
  def test_costpercapita_av121; assert_in_delta(0.0, (worksheet.costpercapita_av121||0), 0.002); end
  def test_costpercapita_aw121; assert_in_epsilon(5.0, worksheet.costpercapita_aw121, 0.002); end
  def test_costpercapita_ay121; assert_in_delta(0.0, (worksheet.costpercapita_ay121||0), 0.002); end
  def test_costpercapita_az121; assert_in_delta(0.0, (worksheet.costpercapita_az121||0), 0.002); end
  def test_costpercapita_ba121; assert_in_delta(0.0, (worksheet.costpercapita_ba121||0), 0.002); end
  def test_costpercapita_bb121; assert_in_delta(0.0, (worksheet.costpercapita_bb121||0), 0.002); end
  def test_costpercapita_bc121; assert_in_delta(0.0, (worksheet.costpercapita_bc121||0), 0.002); end
  def test_costpercapita_bd121; assert_in_delta(0.0, (worksheet.costpercapita_bd121||0), 0.002); end
  def test_costpercapita_be121; assert_in_delta(0.0, (worksheet.costpercapita_be121||0), 0.002); end
  def test_costpercapita_bf121; assert_in_delta(0.0, (worksheet.costpercapita_bf121||0), 0.002); end
  def test_costpercapita_bg121; assert_in_delta(0.0, (worksheet.costpercapita_bg121||0), 0.002); end
  def test_costpercapita_bi121; assert_in_delta(0.0, (worksheet.costpercapita_bi121||0), 0.002); end
  def test_costpercapita_bj121; assert_in_delta(0.0, (worksheet.costpercapita_bj121||0), 0.002); end
  def test_costpercapita_bk121; assert_in_delta(0.0, (worksheet.costpercapita_bk121||0), 0.002); end
  def test_costpercapita_bl121; assert_in_delta(0.0, (worksheet.costpercapita_bl121||0), 0.002); end
  def test_costpercapita_bm121; assert_in_delta(0.0, (worksheet.costpercapita_bm121||0), 0.002); end
  def test_costpercapita_bn121; assert_in_delta(0.0, (worksheet.costpercapita_bn121||0), 0.002); end
  def test_costpercapita_bo121; assert_in_delta(0.0, (worksheet.costpercapita_bo121||0), 0.002); end
  def test_costpercapita_bp121; assert_in_delta(0.0, (worksheet.costpercapita_bp121||0), 0.002); end
  def test_costpercapita_bq121; assert_in_delta(0.0, (worksheet.costpercapita_bq121||0), 0.002); end
  def test_costpercapita_bs121; assert_in_delta(0.0, (worksheet.costpercapita_bs121||0), 0.002); end
  def test_costpercapita_bt121; assert_in_delta(0.0, (worksheet.costpercapita_bt121||0), 0.002); end
  def test_costpercapita_bu121; assert_in_delta(0.0, (worksheet.costpercapita_bu121||0), 0.002); end
  def test_costpercapita_bv121; assert_in_delta(0.0, (worksheet.costpercapita_bv121||0), 0.002); end
  def test_costpercapita_bw121; assert_in_delta(0.0, (worksheet.costpercapita_bw121||0), 0.002); end
  def test_costpercapita_bx121; assert_in_delta(0.0, (worksheet.costpercapita_bx121||0), 0.002); end
  def test_costpercapita_by121; assert_in_delta(0.0, (worksheet.costpercapita_by121||0), 0.002); end
  def test_costpercapita_bz121; assert_in_delta(0.0, (worksheet.costpercapita_bz121||0), 0.002); end
  def test_costpercapita_ca121; assert_in_delta(0.0, (worksheet.costpercapita_ca121||0), 0.002); end
  def test_costpercapita_cc121; assert_in_delta(0.0, (worksheet.costpercapita_cc121||0), 0.002); end
  def test_costpercapita_cd121; assert_in_delta(0.0, (worksheet.costpercapita_cd121||0), 0.002); end
  def test_costpercapita_cf121; assert_in_delta(0.0, (worksheet.costpercapita_cf121||0), 0.002); end
  def test_costpercapita_cg121; assert_in_delta(0.0, (worksheet.costpercapita_cg121||0), 0.002); end
  def test_costpercapita_ch121; assert_in_delta(0.0, (worksheet.costpercapita_ch121||0), 0.002); end
  def test_costpercapita_ci121; assert_in_delta(0.0, (worksheet.costpercapita_ci121||0), 0.002); end
  def test_costpercapita_cj121; assert_in_delta(0.0, (worksheet.costpercapita_cj121||0), 0.002); end
  def test_costpercapita_ck121; assert_in_delta(0.0, (worksheet.costpercapita_ck121||0), 0.002); end
  def test_costpercapita_cl121; assert_in_delta(0.0, (worksheet.costpercapita_cl121||0), 0.002); end
  def test_costpercapita_cm121; assert_in_delta(0.0, (worksheet.costpercapita_cm121||0), 0.002); end
  def test_costpercapita_cn121; assert_in_delta(0.0, (worksheet.costpercapita_cn121||0), 0.002); end
  def test_costpercapita_cp121; assert_in_delta(0.0, (worksheet.costpercapita_cp121||0), 0.002); end
  def test_costpercapita_cq121; assert_in_delta(0.0, (worksheet.costpercapita_cq121||0), 0.002); end
  def test_costpercapita_cr121; assert_equal("err", worksheet.costpercapita_cr121); end
  def test_costpercapita_a122; assert_equal("XVI.b.Gas", worksheet.costpercapita_a122); end
  def test_costpercapita_b122; assert_equal("Gas Imports", worksheet.costpercapita_b122); end
  def test_costpercapita_c122; assert_equal("Fossil Fuels", worksheet.costpercapita_c122); end
  def test_costpercapita_e122; assert_in_delta(0.0, (worksheet.costpercapita_e122||0), 0.002); end
  def test_costpercapita_f122; assert_in_delta(0.0, (worksheet.costpercapita_f122||0), 0.002); end
  def test_costpercapita_g122; assert_in_delta(0.0, (worksheet.costpercapita_g122||0), 0.002); end
  def test_costpercapita_h122; assert_in_delta(0.0, (worksheet.costpercapita_h122||0), 0.002); end
  def test_costpercapita_i122; assert_in_delta(0.0, (worksheet.costpercapita_i122||0), 0.002); end
  def test_costpercapita_j122; assert_in_delta(0.0, (worksheet.costpercapita_j122||0), 0.002); end
  def test_costpercapita_k122; assert_in_delta(0.0, (worksheet.costpercapita_k122||0), 0.002); end
  def test_costpercapita_l122; assert_in_delta(0.0, (worksheet.costpercapita_l122||0), 0.002); end
  def test_costpercapita_m122; assert_in_delta(0.0, (worksheet.costpercapita_m122||0), 0.002); end
  def test_costpercapita_o122; assert_in_delta(0.0, (worksheet.costpercapita_o122||0), 0.002); end
  def test_costpercapita_p122; assert_in_delta(0.0, (worksheet.costpercapita_p122||0), 0.002); end
  def test_costpercapita_q122; assert_in_delta(0.0, (worksheet.costpercapita_q122||0), 0.002); end
  def test_costpercapita_r122; assert_in_delta(0.0, (worksheet.costpercapita_r122||0), 0.002); end
  def test_costpercapita_s122; assert_in_delta(0.0, (worksheet.costpercapita_s122||0), 0.002); end
  def test_costpercapita_t122; assert_in_delta(0.0, (worksheet.costpercapita_t122||0), 0.002); end
  def test_costpercapita_u122; assert_in_delta(0.0, (worksheet.costpercapita_u122||0), 0.002); end
  def test_costpercapita_v122; assert_in_delta(0.0, (worksheet.costpercapita_v122||0), 0.002); end
  def test_costpercapita_w122; assert_in_delta(0.0, (worksheet.costpercapita_w122||0), 0.002); end
  def test_costpercapita_y122; assert_in_epsilon(-338.41104341721575, worksheet.costpercapita_y122, 0.002); end
  def test_costpercapita_z122; assert_in_epsilon(-598.4838574323687, worksheet.costpercapita_z122, 0.002); end
  def test_costpercapita_aa122; assert_in_epsilon(390.49469377130504, worksheet.costpercapita_aa122, 0.002); end
  def test_costpercapita_ab122; assert_in_epsilon(258.6548437672208, worksheet.costpercapita_ab122, 0.002); end
  def test_costpercapita_ac122; assert_in_epsilon(-754.2093143072495, worksheet.costpercapita_ac122, 0.002); end
  def test_costpercapita_ad122; assert_in_epsilon(-1235.814562975916, worksheet.costpercapita_ad122, 0.002); end
  def test_costpercapita_ae122; assert_in_epsilon(-1806.8805667548613, worksheet.costpercapita_ae122, 0.002); end
  def test_costpercapita_af122; assert_in_epsilon(-2626.1595978592186, worksheet.costpercapita_af122, 0.002); end
  def test_costpercapita_ag122; assert_in_epsilon(-3352.0657349939843, worksheet.costpercapita_ag122, 0.002); end
  def test_costpercapita_ai122; assert_in_epsilon(-338.41104341721575, worksheet.costpercapita_ai122, 0.002); end
  def test_costpercapita_aj122; assert_in_epsilon(-598.4838574323687, worksheet.costpercapita_aj122, 0.002); end
  def test_costpercapita_ak122; assert_in_epsilon(390.49469377130504, worksheet.costpercapita_ak122, 0.002); end
  def test_costpercapita_al122; assert_in_epsilon(258.6548437672208, worksheet.costpercapita_al122, 0.002); end
  def test_costpercapita_am122; assert_in_epsilon(-754.2093143072495, worksheet.costpercapita_am122, 0.002); end
  def test_costpercapita_an122; assert_in_epsilon(-1235.814562975916, worksheet.costpercapita_an122, 0.002); end
  def test_costpercapita_ao122; assert_in_epsilon(-1806.8805667548613, worksheet.costpercapita_ao122, 0.002); end
  def test_costpercapita_ap122; assert_in_epsilon(-2626.1595978592186, worksheet.costpercapita_ap122, 0.002); end
  def test_costpercapita_aq122; assert_in_epsilon(-3352.0657349939843, worksheet.costpercapita_aq122, 0.002); end
  def test_costpercapita_as122; assert_in_epsilon(-1118.0972378002543, worksheet.costpercapita_as122, 0.002); end
  def test_costpercapita_at122; assert_in_epsilon(-16909.191171034337, worksheet.costpercapita_at122, 0.002); end
  def test_costpercapita_av122; assert_in_delta(0.0, (worksheet.costpercapita_av122||0), 0.002); end
  def test_costpercapita_aw122; assert_in_epsilon(5.0, worksheet.costpercapita_aw122, 0.002); end
  def test_costpercapita_ay122; assert_in_delta(0.0, (worksheet.costpercapita_ay122||0), 0.002); end
  def test_costpercapita_az122; assert_in_delta(0.0, (worksheet.costpercapita_az122||0), 0.002); end
  def test_costpercapita_ba122; assert_in_delta(0.0, (worksheet.costpercapita_ba122||0), 0.002); end
  def test_costpercapita_bb122; assert_in_delta(0.0, (worksheet.costpercapita_bb122||0), 0.002); end
  def test_costpercapita_bc122; assert_in_delta(0.0, (worksheet.costpercapita_bc122||0), 0.002); end
  def test_costpercapita_bd122; assert_in_delta(0.0, (worksheet.costpercapita_bd122||0), 0.002); end
  def test_costpercapita_be122; assert_in_delta(0.0, (worksheet.costpercapita_be122||0), 0.002); end
  def test_costpercapita_bf122; assert_in_delta(0.0, (worksheet.costpercapita_bf122||0), 0.002); end
  def test_costpercapita_bg122; assert_in_delta(0.0, (worksheet.costpercapita_bg122||0), 0.002); end
  def test_costpercapita_bi122; assert_in_delta(0.0, (worksheet.costpercapita_bi122||0), 0.002); end
  def test_costpercapita_bj122; assert_in_delta(0.0, (worksheet.costpercapita_bj122||0), 0.002); end
  def test_costpercapita_bk122; assert_in_delta(0.0, (worksheet.costpercapita_bk122||0), 0.002); end
  def test_costpercapita_bl122; assert_in_delta(0.0, (worksheet.costpercapita_bl122||0), 0.002); end
  def test_costpercapita_bm122; assert_in_delta(0.0, (worksheet.costpercapita_bm122||0), 0.002); end
  def test_costpercapita_bn122; assert_in_delta(0.0, (worksheet.costpercapita_bn122||0), 0.002); end
  def test_costpercapita_bo122; assert_in_delta(0.0, (worksheet.costpercapita_bo122||0), 0.002); end
  def test_costpercapita_bp122; assert_in_delta(0.0, (worksheet.costpercapita_bp122||0), 0.002); end
  def test_costpercapita_bq122; assert_in_delta(0.0, (worksheet.costpercapita_bq122||0), 0.002); end
  def test_costpercapita_bs122; assert_in_delta(0.0, (worksheet.costpercapita_bs122||0), 0.002); end
  def test_costpercapita_bt122; assert_in_delta(0.0, (worksheet.costpercapita_bt122||0), 0.002); end
  def test_costpercapita_bu122; assert_in_delta(0.0, (worksheet.costpercapita_bu122||0), 0.002); end
  def test_costpercapita_bv122; assert_in_delta(0.0, (worksheet.costpercapita_bv122||0), 0.002); end
  def test_costpercapita_bw122; assert_in_delta(0.0, (worksheet.costpercapita_bw122||0), 0.002); end
  def test_costpercapita_bx122; assert_in_delta(0.0, (worksheet.costpercapita_bx122||0), 0.002); end
  def test_costpercapita_by122; assert_in_delta(0.0, (worksheet.costpercapita_by122||0), 0.002); end
  def test_costpercapita_bz122; assert_in_delta(0.0, (worksheet.costpercapita_bz122||0), 0.002); end
  def test_costpercapita_ca122; assert_in_delta(0.0, (worksheet.costpercapita_ca122||0), 0.002); end
  def test_costpercapita_cc122; assert_in_delta(0.0, (worksheet.costpercapita_cc122||0), 0.002); end
  def test_costpercapita_cd122; assert_in_delta(0.0, (worksheet.costpercapita_cd122||0), 0.002); end
  def test_costpercapita_cf122; assert_in_delta(0.0, (worksheet.costpercapita_cf122||0), 0.002); end
  def test_costpercapita_cg122; assert_in_delta(0.0, (worksheet.costpercapita_cg122||0), 0.002); end
  def test_costpercapita_ch122; assert_in_delta(0.0, (worksheet.costpercapita_ch122||0), 0.002); end
  def test_costpercapita_ci122; assert_in_delta(0.0, (worksheet.costpercapita_ci122||0), 0.002); end
  def test_costpercapita_cj122; assert_in_delta(0.0, (worksheet.costpercapita_cj122||0), 0.002); end
  def test_costpercapita_ck122; assert_in_delta(0.0, (worksheet.costpercapita_ck122||0), 0.002); end
  def test_costpercapita_cl122; assert_in_delta(0.0, (worksheet.costpercapita_cl122||0), 0.002); end
  def test_costpercapita_cm122; assert_in_delta(0.0, (worksheet.costpercapita_cm122||0), 0.002); end
  def test_costpercapita_cn122; assert_in_delta(0.0, (worksheet.costpercapita_cn122||0), 0.002); end
  def test_costpercapita_cp122; assert_in_delta(0.0, (worksheet.costpercapita_cp122||0), 0.002); end
  def test_costpercapita_cq122; assert_in_delta(0.0, (worksheet.costpercapita_cq122||0), 0.002); end
  def test_costpercapita_cr122; assert_equal("err", worksheet.costpercapita_cr122); end
  def test_costpercapita_a123; assert_equal("", worksheet.costpercapita_a123); end
  def test_costpercapita_b123; assert_equal("Total", worksheet.costpercapita_b123); end
  def test_costpercapita_c123; assert_equal("Total", worksheet.costpercapita_c123); end
  def test_costpercapita_e123; assert_in_epsilon(5013.222203363433, worksheet.costpercapita_e123, 0.002); end
  def test_costpercapita_f123; assert_in_epsilon(5888.966367787346, worksheet.costpercapita_f123, 0.002); end
  def test_costpercapita_g123; assert_in_epsilon(7550.327696330051, worksheet.costpercapita_g123, 0.002); end
  def test_costpercapita_h123; assert_in_epsilon(9250.341012253866, worksheet.costpercapita_h123, 0.002); end
  def test_costpercapita_i123; assert_in_epsilon(10957.291598577533, worksheet.costpercapita_i123, 0.002); end
  def test_costpercapita_j123; assert_in_epsilon(12714.20792659277, worksheet.costpercapita_j123, 0.002); end
  def test_costpercapita_k123; assert_in_epsilon(14459.064768037346, worksheet.costpercapita_k123, 0.002); end
  def test_costpercapita_l123; assert_in_epsilon(16198.398790286286, worksheet.costpercapita_l123, 0.002); end
  def test_costpercapita_m123; assert_in_epsilon(18035.935780366966, worksheet.costpercapita_m123, 0.002); end
  def test_costpercapita_o123; assert_in_epsilon(4161.879231084714, worksheet.costpercapita_o123, 0.002); end
  def test_costpercapita_p123; assert_in_epsilon(5172.906429761174, worksheet.costpercapita_p123, 0.002); end
  def test_costpercapita_q123; assert_in_epsilon(6364.412336196206, worksheet.costpercapita_q123, 0.002); end
  def test_costpercapita_r123; assert_in_epsilon(7521.641177008826, worksheet.costpercapita_r123, 0.002); end
  def test_costpercapita_s123; assert_in_epsilon(8627.038605550018, worksheet.costpercapita_s123, 0.002); end
  def test_costpercapita_t123; assert_in_epsilon(9670.684422761045, worksheet.costpercapita_t123, 0.002); end
  def test_costpercapita_u123; assert_in_epsilon(10256.242103050463, worksheet.costpercapita_u123, 0.002); end
  def test_costpercapita_v123; assert_in_epsilon(10757.577485528836, worksheet.costpercapita_v123, 0.002); end
  def test_costpercapita_w123; assert_in_epsilon(11539.035602013058, worksheet.costpercapita_w123, 0.002); end
  def test_costpercapita_y123; assert_in_epsilon(151.4995283809722, worksheet.costpercapita_y123, 0.002); end
  def test_costpercapita_z123; assert_in_epsilon(-269.04693601951783, worksheet.costpercapita_z123, 0.002); end
  def test_costpercapita_aa123; assert_in_epsilon(-312.90606291866965, worksheet.costpercapita_aa123, 0.002); end
  def test_costpercapita_ab123; assert_in_epsilon(-315.38808638348814, worksheet.costpercapita_ab123, 0.002); end
  def test_costpercapita_ac123; assert_in_epsilon(-1202.9391332363678, worksheet.costpercapita_ac123, 0.002); end
  def test_costpercapita_ad123; assert_in_epsilon(-1543.9650402724321, worksheet.costpercapita_ad123, 0.002); end
  def test_costpercapita_ae123; assert_in_epsilon(-2197.3514535987656, worksheet.costpercapita_ae123, 0.002); end
  def test_costpercapita_af123; assert_in_epsilon(-2550.0905661301686, worksheet.costpercapita_af123, 0.002); end
  def test_costpercapita_ag123; assert_in_epsilon(-3200.211399967795, worksheet.costpercapita_ag123, 0.002); end
  def test_costpercapita_ai123; assert_in_epsilon(9326.600962829121, worksheet.costpercapita_ai123, 0.002); end
  def test_costpercapita_aj123; assert_in_epsilon(10792.825861529001, worksheet.costpercapita_aj123, 0.002); end
  def test_costpercapita_ak123; assert_in_epsilon(13601.833969607587, worksheet.costpercapita_ak123, 0.002); end
  def test_costpercapita_al123; assert_in_epsilon(16456.594102879204, worksheet.costpercapita_al123, 0.002); end
  def test_costpercapita_am123; assert_in_epsilon(18381.391070891183, worksheet.costpercapita_am123, 0.002); end
  def test_costpercapita_an123; assert_in_epsilon(20840.92730908138, worksheet.costpercapita_an123, 0.002); end
  def test_costpercapita_ao123; assert_in_epsilon(22517.955417489044, worksheet.costpercapita_ao123, 0.002); end
  def test_costpercapita_ap123; assert_in_epsilon(24405.88570968495, worksheet.costpercapita_ap123, 0.002); end
  def test_costpercapita_aq123; assert_in_epsilon(26374.75998241223, worksheet.costpercapita_aq123, 0.002); end
  def test_costpercapita_as123; assert_in_epsilon(18077.641598489303, worksheet.costpercapita_as123, 0.002); end
  def test_costpercapita_at123; assert_in_epsilon(354949.8673936674, worksheet.costpercapita_at123, 0.002); end
  def test_costpercapita_av123; assert_in_delta(0.0, (worksheet.costpercapita_av123||0), 0.002); end
  def test_costpercapita_aw123; assert_in_epsilon(5.0, worksheet.costpercapita_aw123, 0.002); end
  def test_costpercapita_ay123; assert_in_epsilon(14129.513062108526, worksheet.costpercapita_ay123, 0.002); end
  def test_costpercapita_az123; assert_in_epsilon(16600.630710979774, worksheet.costpercapita_az123, 0.002); end
  def test_costpercapita_ba123; assert_in_epsilon(21596.83724860196, worksheet.costpercapita_ba123, 0.002); end
  def test_costpercapita_bb123; assert_in_epsilon(26838.445698674244, worksheet.costpercapita_bb123, 0.002); end
  def test_costpercapita_bc123; assert_in_epsilon(31988.898681080176, worksheet.costpercapita_bc123, 0.002); end
  def test_costpercapita_bd123; assert_in_epsilon(37349.99507973704, worksheet.costpercapita_bd123, 0.002); end
  def test_costpercapita_be123; assert_in_epsilon(42740.55107257227, worksheet.costpercapita_be123, 0.002); end
  def test_costpercapita_bf123; assert_in_epsilon(48321.23954048382, worksheet.costpercapita_bf123, 0.002); end
  def test_costpercapita_bg123; assert_in_epsilon(54236.747498100594, worksheet.costpercapita_bg123, 0.002); end
  def test_costpercapita_bi123; assert_in_delta(0.0, (worksheet.costpercapita_bi123||0), 0.002); end
  def test_costpercapita_bj123; assert_in_delta(0.0, (worksheet.costpercapita_bj123||0), 0.002); end
  def test_costpercapita_bk123; assert_in_delta(0.0, (worksheet.costpercapita_bk123||0), 0.002); end
  def test_costpercapita_bl123; assert_in_delta(0.0, (worksheet.costpercapita_bl123||0), 0.002); end
  def test_costpercapita_bm123; assert_in_delta(0.0, (worksheet.costpercapita_bm123||0), 0.002); end
  def test_costpercapita_bn123; assert_in_delta(0.0, (worksheet.costpercapita_bn123||0), 0.002); end
  def test_costpercapita_bo123; assert_in_delta(0.0, (worksheet.costpercapita_bo123||0), 0.002); end
  def test_costpercapita_bp123; assert_in_delta(0.0, (worksheet.costpercapita_bp123||0), 0.002); end
  def test_costpercapita_bq123; assert_in_delta(0.0, (worksheet.costpercapita_bq123||0), 0.002); end
  def test_costpercapita_bs123; assert_in_epsilon(19957.404880716324, worksheet.costpercapita_bs123, 0.002); end
  def test_costpercapita_bt123; assert_in_epsilon(23577.22830346483, worksheet.costpercapita_bt123, 0.002); end
  def test_costpercapita_bu123; assert_in_epsilon(29029.629083359505, worksheet.costpercapita_bu123, 0.002); end
  def test_costpercapita_bv123; assert_in_epsilon(35551.15545811045, worksheet.costpercapita_bv123, 0.002); end
  def test_costpercapita_bw123; assert_in_epsilon(41975.35427270077, worksheet.costpercapita_bw123, 0.002); end
  def test_costpercapita_bx123; assert_in_epsilon(48559.39427330212, worksheet.costpercapita_bx123, 0.002); end
  def test_costpercapita_by123; assert_in_epsilon(54686.55431488462, worksheet.costpercapita_by123, 0.002); end
  def test_costpercapita_bz123; assert_in_epsilon(61165.28712314075, worksheet.costpercapita_bz123, 0.002); end
  def test_costpercapita_ca123; assert_in_epsilon(68150.34564389283, worksheet.costpercapita_ca123, 0.002); end
  def test_costpercapita_cc123; assert_in_epsilon(42516.92815039691, worksheet.costpercapita_cc123, 0.002); end
  def test_costpercapita_cd123; assert_in_epsilon(818171.433312188, worksheet.costpercapita_cd123, 0.002); end
  def test_costpercapita_cf123; assert_in_epsilon(9116.290858745095, worksheet.costpercapita_cf123, 0.002); end
  def test_costpercapita_cg123; assert_in_epsilon(10711.664343192431, worksheet.costpercapita_cg123, 0.002); end
  def test_costpercapita_ch123; assert_in_epsilon(14046.509552271908, worksheet.costpercapita_ch123, 0.002); end
  def test_costpercapita_ci123; assert_in_epsilon(17588.10468642038, worksheet.costpercapita_ci123, 0.002); end
  def test_costpercapita_cj123; assert_in_epsilon(21031.60708250264, worksheet.costpercapita_cj123, 0.002); end
  def test_costpercapita_ck123; assert_in_epsilon(24635.78715314428, worksheet.costpercapita_ck123, 0.002); end
  def test_costpercapita_cl123; assert_in_epsilon(28281.486304534923, worksheet.costpercapita_cl123, 0.002); end
  def test_costpercapita_cm123; assert_in_epsilon(32122.84075019753, worksheet.costpercapita_cm123, 0.002); end
  def test_costpercapita_cn123; assert_in_epsilon(36200.81171773362, worksheet.costpercapita_cn123, 0.002); end
  def test_costpercapita_cp123; assert_in_epsilon(21526.122494304756, worksheet.costpercapita_cp123, 0.002); end
  def test_costpercapita_cq123; assert_in_epsilon(409189.4528063558, worksheet.costpercapita_cq123, 0.002); end
  def test_costpercapita_c125; assert_equal("ZARm", worksheet.costpercapita_c125); end
  def test_costpercapita_e125; assert_equal("C1.Low", worksheet.costpercapita_e125); end
  def test_costpercapita_f125; assert_equal("Low estimate of capital costs", worksheet.costpercapita_f125); end
  def test_costpercapita_o125; assert_equal("C2.Low", worksheet.costpercapita_o125); end
  def test_costpercapita_p125; assert_equal("Low estimate of operating costs", worksheet.costpercapita_p125); end
  def test_costpercapita_y125; assert_equal("C3.Low", worksheet.costpercapita_y125); end
  def test_costpercapita_z125; assert_equal("Low estimate of fuel costs", worksheet.costpercapita_z125); end
  def test_costpercapita_ai125; assert_equal("Low estimate of total cost", worksheet.costpercapita_ai125); end
  def test_costpercapita_as125; assert_equal("Cashflow capital basis", worksheet.costpercapita_as125); end
  def test_costpercapita_av125; assert_equal("Loan", worksheet.costpercapita_av125); end
  def test_costpercapita_ay125; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay125); end
  def test_costpercapita_bi125; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi125); end
  def test_costpercapita_bs125; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_bs125); end
  def test_costpercapita_cc125; assert_equal("Amortised Capital", worksheet.costpercapita_cc125); end
  def test_costpercapita_cf125; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf125); end
  def test_costpercapita_cp125; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp125); end
  def test_costpercapita_c126; assert_equal("Category", worksheet.costpercapita_c126); end
  def test_costpercapita_e126; assert_equal("2010", worksheet.costpercapita_e126); end
  def test_costpercapita_f126; assert_equal("2015", worksheet.costpercapita_f126); end
  def test_costpercapita_g126; assert_equal("2020", worksheet.costpercapita_g126); end
  def test_costpercapita_h126; assert_equal("2025", worksheet.costpercapita_h126); end
  def test_costpercapita_i126; assert_equal("2030", worksheet.costpercapita_i126); end
  def test_costpercapita_j126; assert_equal("2035", worksheet.costpercapita_j126); end
  def test_costpercapita_k126; assert_equal("2040", worksheet.costpercapita_k126); end
  def test_costpercapita_l126; assert_equal("2045", worksheet.costpercapita_l126); end
  def test_costpercapita_m126; assert_equal("2050", worksheet.costpercapita_m126); end
  def test_costpercapita_o126; assert_equal("2010", worksheet.costpercapita_o126); end
  def test_costpercapita_p126; assert_equal("2015", worksheet.costpercapita_p126); end
  def test_costpercapita_q126; assert_equal("2020", worksheet.costpercapita_q126); end
  def test_costpercapita_r126; assert_equal("2025", worksheet.costpercapita_r126); end
  def test_costpercapita_s126; assert_equal("2030", worksheet.costpercapita_s126); end
  def test_costpercapita_t126; assert_equal("2035", worksheet.costpercapita_t126); end
  def test_costpercapita_u126; assert_equal("2040", worksheet.costpercapita_u126); end
  def test_costpercapita_v126; assert_equal("2045", worksheet.costpercapita_v126); end
  def test_costpercapita_w126; assert_equal("2050", worksheet.costpercapita_w126); end
  def test_costpercapita_y126; assert_equal("2010", worksheet.costpercapita_y126); end
  def test_costpercapita_z126; assert_equal("2015", worksheet.costpercapita_z126); end
  def test_costpercapita_aa126; assert_equal("2020", worksheet.costpercapita_aa126); end
  def test_costpercapita_ab126; assert_equal("2025", worksheet.costpercapita_ab126); end
  def test_costpercapita_ac126; assert_equal("2030", worksheet.costpercapita_ac126); end
  def test_costpercapita_ad126; assert_equal("2035", worksheet.costpercapita_ad126); end
  def test_costpercapita_ae126; assert_equal("2040", worksheet.costpercapita_ae126); end
  def test_costpercapita_af126; assert_equal("2045", worksheet.costpercapita_af126); end
  def test_costpercapita_ag126; assert_equal("2050", worksheet.costpercapita_ag126); end
  def test_costpercapita_ai126; assert_equal("2010", worksheet.costpercapita_ai126); end
  def test_costpercapita_aj126; assert_equal("2015", worksheet.costpercapita_aj126); end
  def test_costpercapita_ak126; assert_equal("2020", worksheet.costpercapita_ak126); end
  def test_costpercapita_al126; assert_equal("2025", worksheet.costpercapita_al126); end
  def test_costpercapita_am126; assert_equal("2030", worksheet.costpercapita_am126); end
  def test_costpercapita_an126; assert_equal("2035", worksheet.costpercapita_an126); end
  def test_costpercapita_ao126; assert_equal("2040", worksheet.costpercapita_ao126); end
  def test_costpercapita_ap126; assert_equal("2045", worksheet.costpercapita_ap126); end
  def test_costpercapita_aq126; assert_equal("2050", worksheet.costpercapita_aq126); end
  def test_costpercapita_as126; assert_equal("Mean", worksheet.costpercapita_as126); end
  def test_costpercapita_at126; assert_equal("NPV", worksheet.costpercapita_at126); end
  def test_costpercapita_av126; assert_equal("Rate", worksheet.costpercapita_av126); end
  def test_costpercapita_aw126; assert_equal("Years", worksheet.costpercapita_aw126); end
  def test_costpercapita_ay126; assert_in_epsilon(2010.0, worksheet.costpercapita_ay126, 0.002); end
  def test_costpercapita_az126; assert_in_epsilon(2015.0, worksheet.costpercapita_az126, 0.002); end
  def test_costpercapita_ba126; assert_in_epsilon(2020.0, worksheet.costpercapita_ba126, 0.002); end
  def test_costpercapita_bb126; assert_in_epsilon(2025.0, worksheet.costpercapita_bb126, 0.002); end
  def test_costpercapita_bc126; assert_in_epsilon(2030.0, worksheet.costpercapita_bc126, 0.002); end
  def test_costpercapita_bd126; assert_in_epsilon(2035.0, worksheet.costpercapita_bd126, 0.002); end
  def test_costpercapita_be126; assert_in_epsilon(2040.0, worksheet.costpercapita_be126, 0.002); end
  def test_costpercapita_bf126; assert_in_epsilon(2045.0, worksheet.costpercapita_bf126, 0.002); end
  def test_costpercapita_bg126; assert_in_epsilon(2050.0, worksheet.costpercapita_bg126, 0.002); end
  def test_costpercapita_bi126; assert_in_epsilon(2010.0, worksheet.costpercapita_bi126, 0.002); end
  def test_costpercapita_bj126; assert_in_epsilon(2015.0, worksheet.costpercapita_bj126, 0.002); end
  def test_costpercapita_bk126; assert_in_epsilon(2020.0, worksheet.costpercapita_bk126, 0.002); end
  def test_costpercapita_bl126; assert_in_epsilon(2025.0, worksheet.costpercapita_bl126, 0.002); end
  def test_costpercapita_bm126; assert_in_epsilon(2030.0, worksheet.costpercapita_bm126, 0.002); end
  def test_costpercapita_bn126; assert_in_epsilon(2035.0, worksheet.costpercapita_bn126, 0.002); end
  def test_costpercapita_bo126; assert_in_epsilon(2040.0, worksheet.costpercapita_bo126, 0.002); end
  def test_costpercapita_bp126; assert_in_epsilon(2045.0, worksheet.costpercapita_bp126, 0.002); end
  def test_costpercapita_bq126; assert_in_epsilon(2050.0, worksheet.costpercapita_bq126, 0.002); end
  def test_costpercapita_bs126; assert_equal("2010", worksheet.costpercapita_bs126); end
  def test_costpercapita_bt126; assert_equal("2015", worksheet.costpercapita_bt126); end
  def test_costpercapita_bu126; assert_equal("2020", worksheet.costpercapita_bu126); end
  def test_costpercapita_bv126; assert_equal("2025", worksheet.costpercapita_bv126); end
  def test_costpercapita_bw126; assert_equal("2030", worksheet.costpercapita_bw126); end
  def test_costpercapita_bx126; assert_equal("2035", worksheet.costpercapita_bx126); end
  def test_costpercapita_by126; assert_equal("2040", worksheet.costpercapita_by126); end
  def test_costpercapita_bz126; assert_equal("2045", worksheet.costpercapita_bz126); end
  def test_costpercapita_ca126; assert_equal("2050", worksheet.costpercapita_ca126); end
  def test_costpercapita_cc126; assert_equal("Mean", worksheet.costpercapita_cc126); end
  def test_costpercapita_cd126; assert_equal("NPV", worksheet.costpercapita_cd126); end
  def test_costpercapita_cf126; assert_equal("2010", worksheet.costpercapita_cf126); end
  def test_costpercapita_cg126; assert_equal("2015", worksheet.costpercapita_cg126); end
  def test_costpercapita_ch126; assert_equal("2020", worksheet.costpercapita_ch126); end
  def test_costpercapita_ci126; assert_equal("2025", worksheet.costpercapita_ci126); end
  def test_costpercapita_cj126; assert_equal("2030", worksheet.costpercapita_cj126); end
  def test_costpercapita_ck126; assert_equal("2035", worksheet.costpercapita_ck126); end
  def test_costpercapita_cl126; assert_equal("2040", worksheet.costpercapita_cl126); end
  def test_costpercapita_cm126; assert_equal("2045", worksheet.costpercapita_cm126); end
  def test_costpercapita_cn126; assert_equal("2050", worksheet.costpercapita_cn126); end
  def test_costpercapita_cp126; assert_equal("Mean", worksheet.costpercapita_cp126); end
  def test_costpercapita_cq126; assert_equal("NPV", worksheet.costpercapita_cq126); end
  def test_costpercapita_c127; assert_equal("Fossil Fuels", worksheet.costpercapita_c127); end
  def test_costpercapita_e127; assert_in_epsilon(6.273412622814942, worksheet.costpercapita_e127, 0.002); end
  def test_costpercapita_f127; assert_in_epsilon(7.40076507175094, worksheet.costpercapita_f127, 0.002); end
  def test_costpercapita_g127; assert_in_delta(0.0, (worksheet.costpercapita_g127||0), 0.002); end
  def test_costpercapita_h127; assert_in_delta(0.0, (worksheet.costpercapita_h127||0), 0.002); end
  def test_costpercapita_i127; assert_in_delta(0.0, (worksheet.costpercapita_i127||0), 0.002); end
  def test_costpercapita_j127; assert_in_epsilon(3.9354846114428113, worksheet.costpercapita_j127, 0.002); end
  def test_costpercapita_k127; assert_in_epsilon(-4.729282801008315, worksheet.costpercapita_k127, 0.002); end
  def test_costpercapita_l127; assert_in_epsilon(-5.049560551220809, worksheet.costpercapita_l127, 0.002); end
  def test_costpercapita_m127; assert_in_epsilon(-15.05471377240577, worksheet.costpercapita_m127, 0.002); end
  def test_costpercapita_o127; assert_in_epsilon(318.5031561718261, worksheet.costpercapita_o127, 0.002); end
  def test_costpercapita_p127; assert_in_epsilon(310.5287550727909, worksheet.costpercapita_p127, 0.002); end
  def test_costpercapita_q127; assert_in_epsilon(305.8626926101356, worksheet.costpercapita_q127, 0.002); end
  def test_costpercapita_r127; assert_in_epsilon(298.8223263525156, worksheet.costpercapita_r127, 0.002); end
  def test_costpercapita_s127; assert_in_epsilon(290.6036670292033, worksheet.costpercapita_s127, 0.002); end
  def test_costpercapita_t127; assert_in_epsilon(250.13678398612785, worksheet.costpercapita_t127, 0.002); end
  def test_costpercapita_u127; assert_in_epsilon(206.57645858164187, worksheet.costpercapita_u127, 0.002); end
  def test_costpercapita_v127; assert_in_epsilon(111.68612839941245, worksheet.costpercapita_v127, 0.002); end
  def test_costpercapita_w127; assert_in_epsilon(80.82970183705996, worksheet.costpercapita_w127, 0.002); end
  def test_costpercapita_y127; assert_in_epsilon(151.49952838097238, worksheet.costpercapita_y127, 0.002); end
  def test_costpercapita_z127; assert_in_epsilon(-122.51571393357995, worksheet.costpercapita_z127, 0.002); end
  def test_costpercapita_aa127; assert_in_epsilon(-132.86298223039, worksheet.costpercapita_aa127, 0.002); end
  def test_costpercapita_ab127; assert_in_epsilon(-59.61090568958866, worksheet.costpercapita_ab127, 0.002); end
  def test_costpercapita_ac127; assert_in_epsilon(-794.8822835109518, worksheet.costpercapita_ac127, 0.002); end
  def test_costpercapita_ad127; assert_in_epsilon(-1036.4504444597621, worksheet.costpercapita_ad127, 0.002); end
  def test_costpercapita_ae127; assert_in_epsilon(-1533.1968484425652, worksheet.costpercapita_ae127, 0.002); end
  def test_costpercapita_af127; assert_in_epsilon(-1787.8117534949004, worksheet.costpercapita_af127, 0.002); end
  def test_costpercapita_ag127; assert_in_epsilon(-2262.518506785562, worksheet.costpercapita_ag127, 0.002); end
  def test_costpercapita_ai127; assert_in_epsilon(476.27609717561336, worksheet.costpercapita_ai127, 0.002); end
  def test_costpercapita_aj127; assert_in_epsilon(195.41380621096187, worksheet.costpercapita_aj127, 0.002); end
  def test_costpercapita_ak127; assert_in_epsilon(172.99971037974558, worksheet.costpercapita_ak127, 0.002); end
  def test_costpercapita_al127; assert_in_epsilon(239.2114206629269, worksheet.costpercapita_al127, 0.002); end
  def test_costpercapita_am127; assert_in_epsilon(-504.2786164817485, worksheet.costpercapita_am127, 0.002); end
  def test_costpercapita_an127; assert_in_epsilon(-782.3781758621913, worksheet.costpercapita_an127, 0.002); end
  def test_costpercapita_ao127; assert_in_epsilon(-1331.3496726619317, worksheet.costpercapita_ao127, 0.002); end
  def test_costpercapita_ap127; assert_in_epsilon(-1681.1751856467092, worksheet.costpercapita_ap127, 0.002); end
  def test_costpercapita_aq127; assert_in_epsilon(-2196.7435187209076, worksheet.costpercapita_aq127, 0.002); end
  def test_costpercapita_as127; assert_in_epsilon(-601.3360149938048, worksheet.costpercapita_as127, 0.002); end
  def test_costpercapita_at127; assert_in_epsilon(-8163.258224436597, worksheet.costpercapita_at127, 0.002); end
  def test_costpercapita_ay127; assert_in_epsilon(6.273412622814942, worksheet.costpercapita_ay127, 0.002); end
  def test_costpercapita_az127; assert_in_epsilon(7.40076507175094, worksheet.costpercapita_az127, 0.002); end
  def test_costpercapita_ba127; assert_in_delta(0.0, (worksheet.costpercapita_ba127||0), 0.002); end
  def test_costpercapita_bb127; assert_in_delta(0.0, (worksheet.costpercapita_bb127||0), 0.002); end
  def test_costpercapita_bc127; assert_in_delta(0.0, (worksheet.costpercapita_bc127||0), 0.002); end
  def test_costpercapita_bd127; assert_in_epsilon(3.9354846114428113, worksheet.costpercapita_bd127, 0.002); end
  def test_costpercapita_be127; assert_in_epsilon(-8.009315444801075, worksheet.costpercapita_be127, 0.002); end
  def test_costpercapita_bf127; assert_in_epsilon(-8.329593195013569, worksheet.costpercapita_bf127, 0.002); end
  def test_costpercapita_bg127; assert_in_epsilon(-20.658192934458178, worksheet.costpercapita_bg127, 0.002); end
  def test_costpercapita_bi127; assert_in_delta(0.0, (worksheet.costpercapita_bi127||0), 0.002); end
  def test_costpercapita_bj127; assert_in_delta(0.0, (worksheet.costpercapita_bj127||0), 0.002); end
  def test_costpercapita_bk127; assert_in_delta(0.0, (worksheet.costpercapita_bk127||0), 0.002); end
  def test_costpercapita_bl127; assert_in_delta(0.0, (worksheet.costpercapita_bl127||0), 0.002); end
  def test_costpercapita_bm127; assert_in_delta(0.0, (worksheet.costpercapita_bm127||0), 0.002); end
  def test_costpercapita_bn127; assert_in_delta(0.0, (worksheet.costpercapita_bn127||0), 0.002); end
  def test_costpercapita_bo127; assert_in_delta(0.0, (worksheet.costpercapita_bo127||0), 0.002); end
  def test_costpercapita_bp127; assert_in_delta(0.0, (worksheet.costpercapita_bp127||0), 0.002); end
  def test_costpercapita_bq127; assert_in_delta(0.0, (worksheet.costpercapita_bq127||0), 0.002); end
  def test_costpercapita_bs127; assert_in_epsilon(1990.7891563177236, worksheet.costpercapita_bs127, 0.002); end
  def test_costpercapita_bt127; assert_in_epsilon(2121.5821131671205, worksheet.costpercapita_bt127, 0.002); end
  def test_costpercapita_bu127; assert_in_epsilon(1374.159905636298, worksheet.costpercapita_bu127, 0.002); end
  def test_costpercapita_bv127; assert_in_epsilon(1489.6934150813918, worksheet.costpercapita_bv127, 0.002); end
  def test_costpercapita_bw127; assert_in_epsilon(1649.739761205822, worksheet.costpercapita_bw127, 0.002); end
  def test_costpercapita_bx127; assert_in_epsilon(1792.4125009193774, worksheet.costpercapita_bx127, 0.002); end
  def test_costpercapita_by127; assert_in_epsilon(1887.8488527157194, worksheet.costpercapita_by127, 0.002); end
  def test_costpercapita_bz127; assert_in_epsilon(2189.2299833071706, worksheet.costpercapita_bz127, 0.002); end
  def test_costpercapita_ca127; assert_in_epsilon(2434.0066781187857, worksheet.costpercapita_ca127, 0.002); end
  def test_costpercapita_cc127; assert_in_epsilon(1881.0513740521562, worksheet.costpercapita_cc127, 0.002); end
  def test_costpercapita_cd127; assert_in_epsilon(38130.30757003531, worksheet.costpercapita_cd127, 0.002); end
  def test_costpercapita_cf127; assert_in_delta(0.0, (worksheet.costpercapita_cf127||0), 0.002); end
  def test_costpercapita_cg127; assert_in_delta(0.0, (worksheet.costpercapita_cg127||0), 0.002); end
  def test_costpercapita_ch127; assert_in_delta(0.0, (worksheet.costpercapita_ch127||0), 0.002); end
  def test_costpercapita_ci127; assert_in_delta(0.0, (worksheet.costpercapita_ci127||0), 0.002); end
  def test_costpercapita_cj127; assert_in_delta(0.0, (worksheet.costpercapita_cj127||0), 0.002); end
  def test_costpercapita_ck127; assert_in_delta(0.0, (worksheet.costpercapita_ck127||0), 0.002); end
  def test_costpercapita_cl127; assert_in_epsilon(-3.2800326437927607, worksheet.costpercapita_cl127, 0.002); end
  def test_costpercapita_cm127; assert_in_epsilon(-3.2800326437927607, worksheet.costpercapita_cm127, 0.002); end
  def test_costpercapita_cn127; assert_in_epsilon(-5.603479162052408, worksheet.costpercapita_cn127, 0.002); end
  def test_costpercapita_cp127; assert_in_epsilon(-1.3515049388486586, worksheet.costpercapita_cp127, 0.002); end
  def test_costpercapita_cq127; assert_in_epsilon(-18.310808423339466, worksheet.costpercapita_cq127, 0.002); end
  def test_costpercapita_cr127; assert_equal("err", worksheet.costpercapita_cr127); end
  def test_costpercapita_c128; assert_equal("Bioenergy", worksheet.costpercapita_c128); end
  def test_costpercapita_e128; assert_in_delta(0.0, (worksheet.costpercapita_e128||0), 0.002); end
  def test_costpercapita_f128; assert_in_delta(0.0, (worksheet.costpercapita_f128||0), 0.002); end
  def test_costpercapita_g128; assert_in_delta(0.0, (worksheet.costpercapita_g128||0), 0.002); end
  def test_costpercapita_h128; assert_in_delta(0.0, (worksheet.costpercapita_h128||0), 0.002); end
  def test_costpercapita_i128; assert_in_delta(0.0, (worksheet.costpercapita_i128||0), 0.002); end
  def test_costpercapita_j128; assert_in_delta(0.0, (worksheet.costpercapita_j128||0), 0.002); end
  def test_costpercapita_k128; assert_in_delta(0.0, (worksheet.costpercapita_k128||0), 0.002); end
  def test_costpercapita_l128; assert_in_delta(0.0, (worksheet.costpercapita_l128||0), 0.002); end
  def test_costpercapita_m128; assert_in_delta(0.0, (worksheet.costpercapita_m128||0), 0.002); end
  def test_costpercapita_o128; assert_in_delta(0.0, (worksheet.costpercapita_o128||0), 0.002); end
  def test_costpercapita_p128; assert_in_delta(0.0, (worksheet.costpercapita_p128||0), 0.002); end
  def test_costpercapita_q128; assert_in_delta(0.0, (worksheet.costpercapita_q128||0), 0.002); end
  def test_costpercapita_r128; assert_in_delta(0.0, (worksheet.costpercapita_r128||0), 0.002); end
  def test_costpercapita_s128; assert_in_delta(0.0, (worksheet.costpercapita_s128||0), 0.002); end
  def test_costpercapita_t128; assert_in_delta(0.0, (worksheet.costpercapita_t128||0), 0.002); end
  def test_costpercapita_u128; assert_in_delta(0.0, (worksheet.costpercapita_u128||0), 0.002); end
  def test_costpercapita_v128; assert_in_delta(0.0, (worksheet.costpercapita_v128||0), 0.002); end
  def test_costpercapita_w128; assert_in_delta(0.0, (worksheet.costpercapita_w128||0), 0.002); end
  def test_costpercapita_y128; assert_in_delta(0.0, (worksheet.costpercapita_y128||0), 0.002); end
  def test_costpercapita_z128; assert_in_delta(0.0385697013093565, worksheet.costpercapita_z128, 0.002); end
  def test_costpercapita_aa128; assert_in_delta(0.08228553517656419, worksheet.costpercapita_aa128, 0.002); end
  def test_costpercapita_ab128; assert_in_delta(0.19749369850207865, worksheet.costpercapita_ab128, 0.002); end
  def test_costpercapita_ac128; assert_in_delta(0.2808918939575386, worksheet.costpercapita_ac128, 0.002); end
  def test_costpercapita_ad128; assert_in_delta(0.3745384822219214, worksheet.costpercapita_ad128, 0.002); end
  def test_costpercapita_ae128; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ae128, 0.002); end
  def test_costpercapita_af128; assert_in_delta(0.5966490253229234, worksheet.costpercapita_af128, 0.002); end
  def test_costpercapita_ag128; assert_in_delta(0.727374563002047, worksheet.costpercapita_ag128, 0.002); end
  def test_costpercapita_ai128; assert_in_delta(0.0, (worksheet.costpercapita_ai128||0), 0.002); end
  def test_costpercapita_aj128; assert_in_delta(0.0385697013093565, worksheet.costpercapita_aj128, 0.002); end
  def test_costpercapita_ak128; assert_in_delta(0.08228553517656419, worksheet.costpercapita_ak128, 0.002); end
  def test_costpercapita_al128; assert_in_delta(0.19749369850207865, worksheet.costpercapita_al128, 0.002); end
  def test_costpercapita_am128; assert_in_delta(0.2808918939575386, worksheet.costpercapita_am128, 0.002); end
  def test_costpercapita_an128; assert_in_delta(0.3745384822219214, worksheet.costpercapita_an128, 0.002); end
  def test_costpercapita_ao128; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ao128, 0.002); end
  def test_costpercapita_ap128; assert_in_delta(0.5966490253229234, worksheet.costpercapita_ap128, 0.002); end
  def test_costpercapita_aq128; assert_in_delta(0.727374563002047, worksheet.costpercapita_aq128, 0.002); end
  def test_costpercapita_as128; assert_in_delta(0.308581398055175, worksheet.costpercapita_as128, 0.002); end
  def test_costpercapita_at128; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_at128, 0.002); end
  def test_costpercapita_ay128; assert_in_delta(0.0, (worksheet.costpercapita_ay128||0), 0.002); end
  def test_costpercapita_az128; assert_in_delta(0.0, (worksheet.costpercapita_az128||0), 0.002); end
  def test_costpercapita_ba128; assert_in_delta(0.0, (worksheet.costpercapita_ba128||0), 0.002); end
  def test_costpercapita_bb128; assert_in_delta(0.0, (worksheet.costpercapita_bb128||0), 0.002); end
  def test_costpercapita_bc128; assert_in_delta(0.0, (worksheet.costpercapita_bc128||0), 0.002); end
  def test_costpercapita_bd128; assert_in_delta(0.0, (worksheet.costpercapita_bd128||0), 0.002); end
  def test_costpercapita_be128; assert_in_delta(0.0, (worksheet.costpercapita_be128||0), 0.002); end
  def test_costpercapita_bf128; assert_in_delta(0.0, (worksheet.costpercapita_bf128||0), 0.002); end
  def test_costpercapita_bg128; assert_in_delta(0.0, (worksheet.costpercapita_bg128||0), 0.002); end
  def test_costpercapita_bi128; assert_in_delta(0.0, (worksheet.costpercapita_bi128||0), 0.002); end
  def test_costpercapita_bj128; assert_in_delta(0.0, (worksheet.costpercapita_bj128||0), 0.002); end
  def test_costpercapita_bk128; assert_in_delta(0.0, (worksheet.costpercapita_bk128||0), 0.002); end
  def test_costpercapita_bl128; assert_in_delta(0.0, (worksheet.costpercapita_bl128||0), 0.002); end
  def test_costpercapita_bm128; assert_in_delta(0.0, (worksheet.costpercapita_bm128||0), 0.002); end
  def test_costpercapita_bn128; assert_in_delta(0.0, (worksheet.costpercapita_bn128||0), 0.002); end
  def test_costpercapita_bo128; assert_in_delta(0.0, (worksheet.costpercapita_bo128||0), 0.002); end
  def test_costpercapita_bp128; assert_in_delta(0.0, (worksheet.costpercapita_bp128||0), 0.002); end
  def test_costpercapita_bq128; assert_in_delta(0.0, (worksheet.costpercapita_bq128||0), 0.002); end
  def test_costpercapita_bs128; assert_in_delta(0.0, (worksheet.costpercapita_bs128||0), 0.002); end
  def test_costpercapita_bt128; assert_in_delta(0.0385697013093565, worksheet.costpercapita_bt128, 0.002); end
  def test_costpercapita_bu128; assert_in_delta(0.08228553517656419, worksheet.costpercapita_bu128, 0.002); end
  def test_costpercapita_bv128; assert_in_delta(0.19749369850207865, worksheet.costpercapita_bv128, 0.002); end
  def test_costpercapita_bw128; assert_in_delta(0.2808918939575386, worksheet.costpercapita_bw128, 0.002); end
  def test_costpercapita_bx128; assert_in_delta(0.3745384822219214, worksheet.costpercapita_bx128, 0.002); end
  def test_costpercapita_by128; assert_in_delta(0.4794296830041448, worksheet.costpercapita_by128, 0.002); end
  def test_costpercapita_bz128; assert_in_delta(0.5966490253229234, worksheet.costpercapita_bz128, 0.002); end
  def test_costpercapita_ca128; assert_in_delta(0.727374563002047, worksheet.costpercapita_ca128, 0.002); end
  def test_costpercapita_cc128; assert_in_delta(0.308581398055175, worksheet.costpercapita_cc128, 0.002); end
  def test_costpercapita_cd128; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_cd128, 0.002); end
  def test_costpercapita_cf128; assert_in_delta(0.0, (worksheet.costpercapita_cf128||0), 0.002); end
  def test_costpercapita_cg128; assert_in_delta(0.0, (worksheet.costpercapita_cg128||0), 0.002); end
  def test_costpercapita_ch128; assert_in_delta(0.0, (worksheet.costpercapita_ch128||0), 0.002); end
  def test_costpercapita_ci128; assert_in_delta(0.0, (worksheet.costpercapita_ci128||0), 0.002); end
  def test_costpercapita_cj128; assert_in_delta(0.0, (worksheet.costpercapita_cj128||0), 0.002); end
  def test_costpercapita_ck128; assert_in_delta(0.0, (worksheet.costpercapita_ck128||0), 0.002); end
  def test_costpercapita_cl128; assert_in_delta(0.0, (worksheet.costpercapita_cl128||0), 0.002); end
  def test_costpercapita_cm128; assert_in_delta(0.0, (worksheet.costpercapita_cm128||0), 0.002); end
  def test_costpercapita_cn128; assert_in_delta(0.0, (worksheet.costpercapita_cn128||0), 0.002); end
  def test_costpercapita_cp128; assert_in_delta(0.0, (worksheet.costpercapita_cp128||0), 0.002); end
  def test_costpercapita_cq128; assert_in_delta(0.0, (worksheet.costpercapita_cq128||0), 0.002); end
  def test_costpercapita_cr128; assert_equal("ok", worksheet.costpercapita_cr128); end
  def test_costpercapita_c129; assert_equal("Electricity", worksheet.costpercapita_c129); end
  def test_costpercapita_e129; assert_in_epsilon(137.8984753153927, worksheet.costpercapita_e129, 0.002); end
  def test_costpercapita_f129; assert_in_epsilon(169.4109601556777, worksheet.costpercapita_f129, 0.002); end
  def test_costpercapita_g129; assert_in_epsilon(598.7410011787233, worksheet.costpercapita_g129, 0.002); end
  def test_costpercapita_h129; assert_in_epsilon(967.9336894801588, worksheet.costpercapita_h129, 0.002); end
  def test_costpercapita_i129; assert_in_epsilon(1270.0669775370618, worksheet.costpercapita_i129, 0.002); end
  def test_costpercapita_j129; assert_in_epsilon(1541.2287302967077, worksheet.costpercapita_j129, 0.002); end
  def test_costpercapita_k129; assert_in_epsilon(1823.0664776240112, worksheet.costpercapita_k129, 0.002); end
  def test_costpercapita_l129; assert_in_epsilon(2102.682483321529, worksheet.costpercapita_l129, 0.002); end
  def test_costpercapita_m129; assert_in_epsilon(2376.6502822122184, worksheet.costpercapita_m129, 0.002); end
  def test_costpercapita_o129; assert_in_epsilon(4.801225063287725, worksheet.costpercapita_o129, 0.002); end
  def test_costpercapita_p129; assert_in_epsilon(13.569751095643362, worksheet.costpercapita_p129, 0.002); end
  def test_costpercapita_q129; assert_in_epsilon(276.7396917555599, worksheet.costpercapita_q129, 0.002); end
  def test_costpercapita_r129; assert_in_epsilon(544.0250825728939, worksheet.costpercapita_r129, 0.002); end
  def test_costpercapita_s129; assert_in_epsilon(815.7043771227266, worksheet.costpercapita_s129, 0.002); end
  def test_costpercapita_t129; assert_in_epsilon(1014.736285520277, worksheet.costpercapita_t129, 0.002); end
  def test_costpercapita_u129; assert_in_epsilon(1218.970284172905, worksheet.costpercapita_u129, 0.002); end
  def test_costpercapita_v129; assert_in_epsilon(1420.7484541599515, worksheet.costpercapita_v129, 0.002); end
  def test_costpercapita_w129; assert_in_epsilon(1620.4201117667258, worksheet.costpercapita_w129, 0.002); end
  def test_costpercapita_y129; assert_in_delta(0.0, (worksheet.costpercapita_y129||0), 0.002); end
  def test_costpercapita_z129; assert_in_delta(0.0, (worksheet.costpercapita_z129||0), 0.002); end
  def test_costpercapita_aa129; assert_in_delta(0.0, (worksheet.costpercapita_aa129||0), 0.002); end
  def test_costpercapita_ab129; assert_in_delta(0.0, (worksheet.costpercapita_ab129||0), 0.002); end
  def test_costpercapita_ac129; assert_in_delta(0.0, (worksheet.costpercapita_ac129||0), 0.002); end
  def test_costpercapita_ad129; assert_in_delta(0.0, (worksheet.costpercapita_ad129||0), 0.002); end
  def test_costpercapita_ae129; assert_in_delta(0.0, (worksheet.costpercapita_ae129||0), 0.002); end
  def test_costpercapita_af129; assert_in_delta(0.0, (worksheet.costpercapita_af129||0), 0.002); end
  def test_costpercapita_ag129; assert_in_delta(0.0, (worksheet.costpercapita_ag129||0), 0.002); end
  def test_costpercapita_ai129; assert_in_epsilon(142.6997003786804, worksheet.costpercapita_ai129, 0.002); end
  def test_costpercapita_aj129; assert_in_epsilon(182.98071125132105, worksheet.costpercapita_aj129, 0.002); end
  def test_costpercapita_ak129; assert_in_epsilon(875.4806929342832, worksheet.costpercapita_ak129, 0.002); end
  def test_costpercapita_al129; assert_in_epsilon(1511.9587720530526, worksheet.costpercapita_al129, 0.002); end
  def test_costpercapita_am129; assert_in_epsilon(2085.7713546597884, worksheet.costpercapita_am129, 0.002); end
  def test_costpercapita_an129; assert_in_epsilon(2555.9650158169848, worksheet.costpercapita_an129, 0.002); end
  def test_costpercapita_ao129; assert_in_epsilon(3042.036761796916, worksheet.costpercapita_ao129, 0.002); end
  def test_costpercapita_ap129; assert_in_epsilon(3523.4309374814798, worksheet.costpercapita_ap129, 0.002); end
  def test_costpercapita_aq129; assert_in_epsilon(3997.070393978944, worksheet.costpercapita_aq129, 0.002); end
  def test_costpercapita_as129; assert_in_epsilon(1990.8215933723832, worksheet.costpercapita_as129, 0.002); end
  def test_costpercapita_at129; assert_in_epsilon(35309.079119224814, worksheet.costpercapita_at129, 0.002); end
  def test_costpercapita_ay129; assert_in_epsilon(137.9021044865098, worksheet.costpercapita_ay129, 0.002); end
  def test_costpercapita_az129; assert_in_epsilon(170.70212520802005, worksheet.costpercapita_az129, 0.002); end
  def test_costpercapita_ba129; assert_in_epsilon(645.700244736083, worksheet.costpercapita_ba129, 0.002); end
  def test_costpercapita_bb129; assert_in_epsilon(1053.7694801645812, worksheet.costpercapita_bb129, 0.002); end
  def test_costpercapita_bc129; assert_in_epsilon(1392.7775911326535, worksheet.costpercapita_bc129, 0.002); end
  def test_costpercapita_bd129; assert_in_epsilon(1692.449073374091, worksheet.costpercapita_bd129, 0.002); end
  def test_costpercapita_be129; assert_in_epsilon(2004.5692092099607, worksheet.costpercapita_be129, 0.002); end
  def test_costpercapita_bf129; assert_in_epsilon(2314.4676034160448, worksheet.costpercapita_bf129, 0.002); end
  def test_costpercapita_bg129; assert_in_epsilon(2618.7177908153, worksheet.costpercapita_bg129, 0.002); end
  def test_costpercapita_bi129; assert_in_delta(0.0, (worksheet.costpercapita_bi129||0), 0.002); end
  def test_costpercapita_bj129; assert_in_delta(0.0, (worksheet.costpercapita_bj129||0), 0.002); end
  def test_costpercapita_bk129; assert_in_delta(0.0, (worksheet.costpercapita_bk129||0), 0.002); end
  def test_costpercapita_bl129; assert_in_delta(0.0, (worksheet.costpercapita_bl129||0), 0.002); end
  def test_costpercapita_bm129; assert_in_delta(0.0, (worksheet.costpercapita_bm129||0), 0.002); end
  def test_costpercapita_bn129; assert_in_delta(0.0, (worksheet.costpercapita_bn129||0), 0.002); end
  def test_costpercapita_bo129; assert_in_delta(0.0, (worksheet.costpercapita_bo129||0), 0.002); end
  def test_costpercapita_bp129; assert_in_delta(0.0, (worksheet.costpercapita_bp129||0), 0.002); end
  def test_costpercapita_bq129; assert_in_delta(0.0, (worksheet.costpercapita_bq129||0), 0.002); end
  def test_costpercapita_bs129; assert_in_epsilon(142.70332954979756, worksheet.costpercapita_bs129, 0.002); end
  def test_costpercapita_bt129; assert_in_epsilon(184.27187630366342, worksheet.costpercapita_bt129, 0.002); end
  def test_costpercapita_bu129; assert_in_epsilon(922.439936491643, worksheet.costpercapita_bu129, 0.002); end
  def test_costpercapita_bv129; assert_in_epsilon(1597.794562737475, worksheet.costpercapita_bv129, 0.002); end
  def test_costpercapita_bw129; assert_in_epsilon(2208.48196825538, worksheet.costpercapita_bw129, 0.002); end
  def test_costpercapita_bx129; assert_in_epsilon(2707.1853588943686, worksheet.costpercapita_bx129, 0.002); end
  def test_costpercapita_by129; assert_in_epsilon(3223.5394933828657, worksheet.costpercapita_by129, 0.002); end
  def test_costpercapita_bz129; assert_in_epsilon(3735.2160575759954, worksheet.costpercapita_bz129, 0.002); end
  def test_costpercapita_ca129; assert_in_epsilon(4239.137902582026, worksheet.costpercapita_ca129, 0.002); end
  def test_costpercapita_cc129; assert_in_epsilon(2106.7522761970235, worksheet.costpercapita_cc129, 0.002); end
  def test_costpercapita_cd129; assert_in_epsilon(37335.067728417256, worksheet.costpercapita_cd129, 0.002); end
  def test_costpercapita_cf129; assert_in_delta(0.003629171117142193, worksheet.costpercapita_cf129, 0.002); end
  def test_costpercapita_cg129; assert_in_epsilon(1.2911650523423375, worksheet.costpercapita_cg129, 0.002); end
  def test_costpercapita_ch129; assert_in_epsilon(46.95924355735984, worksheet.costpercapita_ch129, 0.002); end
  def test_costpercapita_ci129; assert_in_epsilon(85.83579068442224, worksheet.costpercapita_ci129, 0.002); end
  def test_costpercapita_cj129; assert_in_epsilon(122.71061359559171, worksheet.costpercapita_cj129, 0.002); end
  def test_costpercapita_ck129; assert_in_epsilon(151.2203430773833, worksheet.costpercapita_ck129, 0.002); end
  def test_costpercapita_cl129; assert_in_epsilon(181.5027315859496, worksheet.costpercapita_cl129, 0.002); end
  def test_costpercapita_cm129; assert_in_epsilon(211.78512009451558, worksheet.costpercapita_cm129, 0.002); end
  def test_costpercapita_cn129; assert_in_epsilon(242.0675086030816, worksheet.costpercapita_cn129, 0.002); end
  def test_costpercapita_cp129; assert_in_epsilon(115.93068282464037, worksheet.costpercapita_cp129, 0.002); end
  def test_costpercapita_cq129; assert_in_epsilon(2025.9886091924382, worksheet.costpercapita_cq129, 0.002); end
  def test_costpercapita_cr129; assert_equal("ok", worksheet.costpercapita_cr129); end
  def test_costpercapita_c130; assert_equal("Buildings", worksheet.costpercapita_c130); end
  def test_costpercapita_e130; assert_in_epsilon(1420.2505927862553, worksheet.costpercapita_e130, 0.002); end
  def test_costpercapita_f130; assert_in_epsilon(1514.192290087948, worksheet.costpercapita_f130, 0.002); end
  def test_costpercapita_g130; assert_in_epsilon(1637.0099744154948, worksheet.costpercapita_g130, 0.002); end
  def test_costpercapita_h130; assert_in_epsilon(1729.3141190856666, worksheet.costpercapita_h130, 0.002); end
  def test_costpercapita_i130; assert_in_epsilon(1808.1496080785244, worksheet.costpercapita_i130, 0.002); end
  def test_costpercapita_j130; assert_in_epsilon(1955.8435479367834, worksheet.costpercapita_j130, 0.002); end
  def test_costpercapita_k130; assert_in_epsilon(2107.7897858402353, worksheet.costpercapita_k130, 0.002); end
  def test_costpercapita_l130; assert_in_epsilon(2264.6581258582864, worksheet.costpercapita_l130, 0.002); end
  def test_costpercapita_m130; assert_in_epsilon(2428.368247077785, worksheet.costpercapita_m130, 0.002); end
  def test_costpercapita_o130; assert_in_epsilon(74.20862092617611, worksheet.costpercapita_o130, 0.002); end
  def test_costpercapita_p130; assert_in_epsilon(78.36476057911798, worksheet.costpercapita_p130, 0.002); end
  def test_costpercapita_q130; assert_in_epsilon(83.99230402525413, worksheet.costpercapita_q130, 0.002); end
  def test_costpercapita_r130; assert_in_epsilon(88.00122770647422, worksheet.costpercapita_r130, 0.002); end
  def test_costpercapita_s130; assert_in_epsilon(91.25143667953319, worksheet.costpercapita_s130, 0.002); end
  def test_costpercapita_t130; assert_in_epsilon(99.17136957894121, worksheet.costpercapita_t130, 0.002); end
  def test_costpercapita_u130; assert_in_epsilon(107.36169857562142, worksheet.costpercapita_u130, 0.002); end
  def test_costpercapita_v130; assert_in_epsilon(115.86675372116669, worksheet.costpercapita_v130, 0.002); end
  def test_costpercapita_w130; assert_in_epsilon(124.79355330632585, worksheet.costpercapita_w130, 0.002); end
  def test_costpercapita_y130; assert_in_delta(0.0, (worksheet.costpercapita_y130||0), 0.002); end
  def test_costpercapita_z130; assert_in_delta(0.0, (worksheet.costpercapita_z130||0), 0.002); end
  def test_costpercapita_aa130; assert_in_delta(0.0, (worksheet.costpercapita_aa130||0), 0.002); end
  def test_costpercapita_ab130; assert_in_delta(0.0, (worksheet.costpercapita_ab130||0), 0.002); end
  def test_costpercapita_ac130; assert_in_delta(0.0, (worksheet.costpercapita_ac130||0), 0.002); end
  def test_costpercapita_ad130; assert_in_delta(0.0, (worksheet.costpercapita_ad130||0), 0.002); end
  def test_costpercapita_ae130; assert_in_delta(0.0, (worksheet.costpercapita_ae130||0), 0.002); end
  def test_costpercapita_af130; assert_in_delta(0.0, (worksheet.costpercapita_af130||0), 0.002); end
  def test_costpercapita_ag130; assert_in_delta(0.0, (worksheet.costpercapita_ag130||0), 0.002); end
  def test_costpercapita_ai130; assert_in_epsilon(1494.4592137124312, worksheet.costpercapita_ai130, 0.002); end
  def test_costpercapita_aj130; assert_in_epsilon(1592.5570506670665, worksheet.costpercapita_aj130, 0.002); end
  def test_costpercapita_ak130; assert_in_epsilon(1721.002278440749, worksheet.costpercapita_ak130, 0.002); end
  def test_costpercapita_al130; assert_in_epsilon(1817.3153467921404, worksheet.costpercapita_al130, 0.002); end
  def test_costpercapita_am130; assert_in_epsilon(1899.4010447580572, worksheet.costpercapita_am130, 0.002); end
  def test_costpercapita_an130; assert_in_epsilon(2055.014917515725, worksheet.costpercapita_an130, 0.002); end
  def test_costpercapita_ao130; assert_in_epsilon(2215.1514844158564, worksheet.costpercapita_ao130, 0.002); end
  def test_costpercapita_ap130; assert_in_epsilon(2380.524879579453, worksheet.costpercapita_ap130, 0.002); end
  def test_costpercapita_aq130; assert_in_epsilon(2553.161800384111, worksheet.costpercapita_aq130, 0.002); end
  def test_costpercapita_as130; assert_in_epsilon(1969.843112918399, worksheet.costpercapita_as130, 0.002); end
  def test_costpercapita_at130; assert_in_epsilon(39831.943522904745, worksheet.costpercapita_at130, 0.002); end
  def test_costpercapita_ay130; assert_in_epsilon(1420.2505927862553, worksheet.costpercapita_ay130, 0.002); end
  def test_costpercapita_az130; assert_in_epsilon(1514.192290087948, worksheet.costpercapita_az130, 0.002); end
  def test_costpercapita_ba130; assert_in_epsilon(1637.0099744154948, worksheet.costpercapita_ba130, 0.002); end
  def test_costpercapita_bb130; assert_in_epsilon(1729.3141190856666, worksheet.costpercapita_bb130, 0.002); end
  def test_costpercapita_bc130; assert_in_epsilon(1808.1496080785244, worksheet.costpercapita_bc130, 0.002); end
  def test_costpercapita_bd130; assert_in_epsilon(1955.8435479367834, worksheet.costpercapita_bd130, 0.002); end
  def test_costpercapita_be130; assert_in_epsilon(2107.7897858402353, worksheet.costpercapita_be130, 0.002); end
  def test_costpercapita_bf130; assert_in_epsilon(2264.6581258582864, worksheet.costpercapita_bf130, 0.002); end
  def test_costpercapita_bg130; assert_in_epsilon(2428.368247077785, worksheet.costpercapita_bg130, 0.002); end
  def test_costpercapita_bi130; assert_in_delta(0.0, (worksheet.costpercapita_bi130||0), 0.002); end
  def test_costpercapita_bj130; assert_in_delta(0.0, (worksheet.costpercapita_bj130||0), 0.002); end
  def test_costpercapita_bk130; assert_in_delta(0.0, (worksheet.costpercapita_bk130||0), 0.002); end
  def test_costpercapita_bl130; assert_in_delta(0.0, (worksheet.costpercapita_bl130||0), 0.002); end
  def test_costpercapita_bm130; assert_in_delta(0.0, (worksheet.costpercapita_bm130||0), 0.002); end
  def test_costpercapita_bn130; assert_in_delta(0.0, (worksheet.costpercapita_bn130||0), 0.002); end
  def test_costpercapita_bo130; assert_in_delta(0.0, (worksheet.costpercapita_bo130||0), 0.002); end
  def test_costpercapita_bp130; assert_in_delta(0.0, (worksheet.costpercapita_bp130||0), 0.002); end
  def test_costpercapita_bq130; assert_in_delta(0.0, (worksheet.costpercapita_bq130||0), 0.002); end
  def test_costpercapita_bs130; assert_in_epsilon(1494.4592137124312, worksheet.costpercapita_bs130, 0.002); end
  def test_costpercapita_bt130; assert_in_epsilon(1592.5570506670665, worksheet.costpercapita_bt130, 0.002); end
  def test_costpercapita_bu130; assert_in_epsilon(1721.002278440749, worksheet.costpercapita_bu130, 0.002); end
  def test_costpercapita_bv130; assert_in_epsilon(1817.3153467921404, worksheet.costpercapita_bv130, 0.002); end
  def test_costpercapita_bw130; assert_in_epsilon(1899.4010447580572, worksheet.costpercapita_bw130, 0.002); end
  def test_costpercapita_bx130; assert_in_epsilon(2055.014917515725, worksheet.costpercapita_bx130, 0.002); end
  def test_costpercapita_by130; assert_in_epsilon(2215.1514844158564, worksheet.costpercapita_by130, 0.002); end
  def test_costpercapita_bz130; assert_in_epsilon(2380.524879579453, worksheet.costpercapita_bz130, 0.002); end
  def test_costpercapita_ca130; assert_in_epsilon(2553.1618003841113, worksheet.costpercapita_ca130, 0.002); end
  def test_costpercapita_cc130; assert_in_epsilon(1969.843112918399, worksheet.costpercapita_cc130, 0.002); end
  def test_costpercapita_cd130; assert_in_epsilon(39831.943522904745, worksheet.costpercapita_cd130, 0.002); end
  def test_costpercapita_cf130; assert_in_delta(0.0, (worksheet.costpercapita_cf130||0), 0.002); end
  def test_costpercapita_cg130; assert_in_delta(0.0, (worksheet.costpercapita_cg130||0), 0.002); end
  def test_costpercapita_ch130; assert_in_delta(0.0, (worksheet.costpercapita_ch130||0), 0.002); end
  def test_costpercapita_ci130; assert_in_delta(0.0, (worksheet.costpercapita_ci130||0), 0.002); end
  def test_costpercapita_cj130; assert_in_delta(0.0, (worksheet.costpercapita_cj130||0), 0.002); end
  def test_costpercapita_ck130; assert_in_delta(0.0, (worksheet.costpercapita_ck130||0), 0.002); end
  def test_costpercapita_cl130; assert_in_delta(0.0, (worksheet.costpercapita_cl130||0), 0.002); end
  def test_costpercapita_cm130; assert_in_delta(0.0, (worksheet.costpercapita_cm130||0), 0.002); end
  def test_costpercapita_cn130; assert_in_delta(0.0, (worksheet.costpercapita_cn130||0), 0.002); end
  def test_costpercapita_cp130; assert_in_delta(0.0, (worksheet.costpercapita_cp130||0), 0.002); end
  def test_costpercapita_cq130; assert_in_delta(0.0, (worksheet.costpercapita_cq130||0), 0.002); end
  def test_costpercapita_cr130; assert_equal("ok", worksheet.costpercapita_cr130); end
  def test_costpercapita_c131; assert_equal("Transport", worksheet.costpercapita_c131); end
  def test_costpercapita_e131; assert_in_epsilon(3043.932993985394, worksheet.costpercapita_e131, 0.002); end
  def test_costpercapita_f131; assert_in_epsilon(3705.1903161092123, worksheet.costpercapita_f131, 0.002); end
  def test_costpercapita_g131; assert_in_epsilon(4582.372426126099, worksheet.costpercapita_g131, 0.002); end
  def test_costpercapita_h131; assert_in_epsilon(5544.334053532002, worksheet.costpercapita_h131, 0.002); end
  def test_costpercapita_i131; assert_in_epsilon(6591.295336562597, worksheet.costpercapita_i131, 0.002); end
  def test_costpercapita_j131; assert_in_epsilon(7673.455937344548, worksheet.costpercapita_j131, 0.002); end
  def test_costpercapita_k131; assert_in_epsilon(8743.947445734399, worksheet.costpercapita_k131, 0.002); end
  def test_costpercapita_l131; assert_in_epsilon(9802.353226573636, worksheet.costpercapita_l131, 0.002); end
  def test_costpercapita_m131; assert_in_epsilon(10960.131843757288, worksheet.costpercapita_m131, 0.002); end
  def test_costpercapita_o131; assert_in_epsilon(3379.2366947334144, worksheet.costpercapita_o131, 0.002); end
  def test_costpercapita_p131; assert_in_epsilon(4288.745772392793, worksheet.costpercapita_p131, 0.002); end
  def test_costpercapita_q131; assert_in_epsilon(5126.5366481104575, worksheet.costpercapita_q131, 0.002); end
  def test_costpercapita_r131; assert_in_epsilon(5917.7093065168565, worksheet.costpercapita_r131, 0.002); end
  def test_costpercapita_s131; assert_in_epsilon(6662.11566102461, worksheet.costpercapita_s131, 0.002); end
  def test_costpercapita_t131; assert_in_epsilon(7439.0931541359, worksheet.costpercapita_t131, 0.002); end
  def test_costpercapita_u131; assert_in_epsilon(7799.219633099437, worksheet.costpercapita_u131, 0.002); end
  def test_costpercapita_v131; assert_in_epsilon(8131.25818445221, worksheet.costpercapita_v131, 0.002); end
  def test_costpercapita_w131; assert_in_epsilon(8660.006983799345, worksheet.costpercapita_w131, 0.002); end
  def test_costpercapita_y131; assert_in_delta(0.0, (worksheet.costpercapita_y131||0), 0.002); end
  def test_costpercapita_z131; assert_in_delta(0.0, (worksheet.costpercapita_z131||0), 0.002); end
  def test_costpercapita_aa131; assert_in_delta(0.0, (worksheet.costpercapita_aa131||0), 0.002); end
  def test_costpercapita_ab131; assert_in_delta(0.0, (worksheet.costpercapita_ab131||0), 0.002); end
  def test_costpercapita_ac131; assert_in_delta(0.0, (worksheet.costpercapita_ac131||0), 0.002); end
  def test_costpercapita_ad131; assert_in_delta(0.0, (worksheet.costpercapita_ad131||0), 0.002); end
  def test_costpercapita_ae131; assert_in_delta(0.0, (worksheet.costpercapita_ae131||0), 0.002); end
  def test_costpercapita_af131; assert_in_delta(0.0, (worksheet.costpercapita_af131||0), 0.002); end
  def test_costpercapita_ag131; assert_in_delta(0.0, (worksheet.costpercapita_ag131||0), 0.002); end
  def test_costpercapita_ai131; assert_in_epsilon(6423.169688718808, worksheet.costpercapita_ai131, 0.002); end
  def test_costpercapita_aj131; assert_in_epsilon(7993.936088502003, worksheet.costpercapita_aj131, 0.002); end
  def test_costpercapita_ak131; assert_in_epsilon(9708.909074236555, worksheet.costpercapita_ak131, 0.002); end
  def test_costpercapita_al131; assert_in_epsilon(11462.04336004886, worksheet.costpercapita_al131, 0.002); end
  def test_costpercapita_am131; assert_in_epsilon(13253.410997587207, worksheet.costpercapita_am131, 0.002); end
  def test_costpercapita_an131; assert_in_epsilon(15112.549091480447, worksheet.costpercapita_an131, 0.002); end
  def test_costpercapita_ao131; assert_in_epsilon(16543.167078833838, worksheet.costpercapita_ao131, 0.002); end
  def test_costpercapita_ap131; assert_in_epsilon(17933.611411025846, worksheet.costpercapita_ap131, 0.002); end
  def test_costpercapita_aq131; assert_in_epsilon(19620.13882755663, worksheet.costpercapita_aq131, 0.002); end
  def test_costpercapita_as131; assert_in_epsilon(13116.770624221133, worksheet.costpercapita_as131, 0.002); end
  def test_costpercapita_at131; assert_in_epsilon(257010.74525389736, worksheet.costpercapita_at131, 0.002); end
  def test_costpercapita_ay131; assert_in_epsilon(3043.932993985394, worksheet.costpercapita_ay131, 0.002); end
  def test_costpercapita_az131; assert_in_epsilon(3705.1903161092123, worksheet.costpercapita_az131, 0.002); end
  def test_costpercapita_ba131; assert_in_epsilon(4582.372426126099, worksheet.costpercapita_ba131, 0.002); end
  def test_costpercapita_bb131; assert_in_epsilon(5544.334053532002, worksheet.costpercapita_bb131, 0.002); end
  def test_costpercapita_bc131; assert_in_epsilon(6591.295336562597, worksheet.costpercapita_bc131, 0.002); end
  def test_costpercapita_bd131; assert_in_epsilon(7673.455937344548, worksheet.costpercapita_bd131, 0.002); end
  def test_costpercapita_be131; assert_in_epsilon(8743.947445734399, worksheet.costpercapita_be131, 0.002); end
  def test_costpercapita_bf131; assert_in_epsilon(9802.353226573636, worksheet.costpercapita_bf131, 0.002); end
  def test_costpercapita_bg131; assert_in_epsilon(10960.131843757288, worksheet.costpercapita_bg131, 0.002); end
  def test_costpercapita_bi131; assert_in_delta(0.0, (worksheet.costpercapita_bi131||0), 0.002); end
  def test_costpercapita_bj131; assert_in_delta(0.0, (worksheet.costpercapita_bj131||0), 0.002); end
  def test_costpercapita_bk131; assert_in_delta(0.0, (worksheet.costpercapita_bk131||0), 0.002); end
  def test_costpercapita_bl131; assert_in_delta(0.0, (worksheet.costpercapita_bl131||0), 0.002); end
  def test_costpercapita_bm131; assert_in_delta(0.0, (worksheet.costpercapita_bm131||0), 0.002); end
  def test_costpercapita_bn131; assert_in_delta(0.0, (worksheet.costpercapita_bn131||0), 0.002); end
  def test_costpercapita_bo131; assert_in_delta(0.0, (worksheet.costpercapita_bo131||0), 0.002); end
  def test_costpercapita_bp131; assert_in_delta(0.0, (worksheet.costpercapita_bp131||0), 0.002); end
  def test_costpercapita_bq131; assert_in_delta(0.0, (worksheet.costpercapita_bq131||0), 0.002); end
  def test_costpercapita_bs131; assert_in_epsilon(6423.169688718808, worksheet.costpercapita_bs131, 0.002); end
  def test_costpercapita_bt131; assert_in_epsilon(7993.936088502003, worksheet.costpercapita_bt131, 0.002); end
  def test_costpercapita_bu131; assert_in_epsilon(9708.909074236555, worksheet.costpercapita_bu131, 0.002); end
  def test_costpercapita_bv131; assert_in_epsilon(11462.04336004886, worksheet.costpercapita_bv131, 0.002); end
  def test_costpercapita_bw131; assert_in_epsilon(13253.410997587207, worksheet.costpercapita_bw131, 0.002); end
  def test_costpercapita_bx131; assert_in_epsilon(15112.549091480447, worksheet.costpercapita_bx131, 0.002); end
  def test_costpercapita_by131; assert_in_epsilon(16543.167078833838, worksheet.costpercapita_by131, 0.002); end
  def test_costpercapita_bz131; assert_in_epsilon(17933.611411025846, worksheet.costpercapita_bz131, 0.002); end
  def test_costpercapita_ca131; assert_in_epsilon(19620.13882755663, worksheet.costpercapita_ca131, 0.002); end
  def test_costpercapita_cc131; assert_in_epsilon(13116.770624221133, worksheet.costpercapita_cc131, 0.002); end
  def test_costpercapita_cd131; assert_in_epsilon(257010.74525389736, worksheet.costpercapita_cd131, 0.002); end
  def test_costpercapita_cf131; assert_in_delta(0.0, (worksheet.costpercapita_cf131||0), 0.002); end
  def test_costpercapita_cg131; assert_in_delta(0.0, (worksheet.costpercapita_cg131||0), 0.002); end
  def test_costpercapita_ch131; assert_in_delta(0.0, (worksheet.costpercapita_ch131||0), 0.002); end
  def test_costpercapita_ci131; assert_in_delta(0.0, (worksheet.costpercapita_ci131||0), 0.002); end
  def test_costpercapita_cj131; assert_in_delta(0.0, (worksheet.costpercapita_cj131||0), 0.002); end
  def test_costpercapita_ck131; assert_in_delta(0.0, (worksheet.costpercapita_ck131||0), 0.002); end
  def test_costpercapita_cl131; assert_in_delta(0.0, (worksheet.costpercapita_cl131||0), 0.002); end
  def test_costpercapita_cm131; assert_in_delta(0.0, (worksheet.costpercapita_cm131||0), 0.002); end
  def test_costpercapita_cn131; assert_in_delta(0.0, (worksheet.costpercapita_cn131||0), 0.002); end
  def test_costpercapita_cp131; assert_in_delta(0.0, (worksheet.costpercapita_cp131||0), 0.002); end
  def test_costpercapita_cq131; assert_in_delta(0.0, (worksheet.costpercapita_cq131||0), 0.002); end
  def test_costpercapita_cr131; assert_equal("ok", worksheet.costpercapita_cr131); end
  def test_costpercapita_c132; assert_equal("Other", worksheet.costpercapita_c132); end
  def test_costpercapita_e132; assert_in_delta(0.0, (worksheet.costpercapita_e132||0), 0.002); end
  def test_costpercapita_f132; assert_in_delta(0.0, (worksheet.costpercapita_f132||0), 0.002); end
  def test_costpercapita_g132; assert_in_delta(0.0, (worksheet.costpercapita_g132||0), 0.002); end
  def test_costpercapita_h132; assert_in_delta(0.0, (worksheet.costpercapita_h132||0), 0.002); end
  def test_costpercapita_i132; assert_in_delta(0.0, (worksheet.costpercapita_i132||0), 0.002); end
  def test_costpercapita_j132; assert_in_delta(0.0, (worksheet.costpercapita_j132||0), 0.002); end
  def test_costpercapita_k132; assert_in_delta(0.0, (worksheet.costpercapita_k132||0), 0.002); end
  def test_costpercapita_l132; assert_in_delta(0.0, (worksheet.costpercapita_l132||0), 0.002); end
  def test_costpercapita_m132; assert_in_delta(0.0, (worksheet.costpercapita_m132||0), 0.002); end
  def test_costpercapita_o132; assert_in_delta(0.0, (worksheet.costpercapita_o132||0), 0.002); end
  def test_costpercapita_p132; assert_in_delta(0.0, (worksheet.costpercapita_p132||0), 0.002); end
  def test_costpercapita_q132; assert_in_delta(0.0, (worksheet.costpercapita_q132||0), 0.002); end
  def test_costpercapita_r132; assert_in_delta(0.0, (worksheet.costpercapita_r132||0), 0.002); end
  def test_costpercapita_s132; assert_in_delta(0.0, (worksheet.costpercapita_s132||0), 0.002); end
  def test_costpercapita_t132; assert_in_delta(0.0, (worksheet.costpercapita_t132||0), 0.002); end
  def test_costpercapita_u132; assert_in_delta(0.0, (worksheet.costpercapita_u132||0), 0.002); end
  def test_costpercapita_v132; assert_in_delta(0.0, (worksheet.costpercapita_v132||0), 0.002); end
  def test_costpercapita_w132; assert_in_delta(0.0, (worksheet.costpercapita_w132||0), 0.002); end
  def test_costpercapita_y132; assert_in_delta(0.0, (worksheet.costpercapita_y132||0), 0.002); end
  def test_costpercapita_z132; assert_in_delta(0.0, (worksheet.costpercapita_z132||0), 0.002); end
  def test_costpercapita_aa132; assert_in_delta(0.0, (worksheet.costpercapita_aa132||0), 0.002); end
  def test_costpercapita_ab132; assert_in_delta(0.0, (worksheet.costpercapita_ab132||0), 0.002); end
  def test_costpercapita_ac132; assert_in_delta(0.0, (worksheet.costpercapita_ac132||0), 0.002); end
  def test_costpercapita_ad132; assert_in_delta(0.0, (worksheet.costpercapita_ad132||0), 0.002); end
  def test_costpercapita_ae132; assert_in_delta(0.0, (worksheet.costpercapita_ae132||0), 0.002); end
  def test_costpercapita_af132; assert_in_delta(0.0, (worksheet.costpercapita_af132||0), 0.002); end
  def test_costpercapita_ag132; assert_in_delta(0.0, (worksheet.costpercapita_ag132||0), 0.002); end
  def test_costpercapita_ai132; assert_in_delta(0.0, (worksheet.costpercapita_ai132||0), 0.002); end
  def test_costpercapita_aj132; assert_in_delta(0.0, (worksheet.costpercapita_aj132||0), 0.002); end
  def test_costpercapita_ak132; assert_in_delta(0.0, (worksheet.costpercapita_ak132||0), 0.002); end
  def test_costpercapita_al132; assert_in_delta(0.0, (worksheet.costpercapita_al132||0), 0.002); end
  def test_costpercapita_am132; assert_in_delta(0.0, (worksheet.costpercapita_am132||0), 0.002); end
  def test_costpercapita_an132; assert_in_delta(0.0, (worksheet.costpercapita_an132||0), 0.002); end
  def test_costpercapita_ao132; assert_in_delta(0.0, (worksheet.costpercapita_ao132||0), 0.002); end
  def test_costpercapita_ap132; assert_in_delta(0.0, (worksheet.costpercapita_ap132||0), 0.002); end
  def test_costpercapita_aq132; assert_in_delta(0.0, (worksheet.costpercapita_aq132||0), 0.002); end
  def test_costpercapita_as132; assert_in_delta(0.0, (worksheet.costpercapita_as132||0), 0.002); end
  def test_costpercapita_at132; assert_in_delta(0.0, (worksheet.costpercapita_at132||0), 0.002); end
  def test_costpercapita_ay132; assert_in_delta(0.0, (worksheet.costpercapita_ay132||0), 0.002); end
  def test_costpercapita_az132; assert_in_delta(0.0, (worksheet.costpercapita_az132||0), 0.002); end
  def test_costpercapita_ba132; assert_in_delta(0.0, (worksheet.costpercapita_ba132||0), 0.002); end
  def test_costpercapita_bb132; assert_in_delta(0.0, (worksheet.costpercapita_bb132||0), 0.002); end
  def test_costpercapita_bc132; assert_in_delta(0.0, (worksheet.costpercapita_bc132||0), 0.002); end
  def test_costpercapita_bd132; assert_in_delta(0.0, (worksheet.costpercapita_bd132||0), 0.002); end
  def test_costpercapita_be132; assert_in_delta(0.0, (worksheet.costpercapita_be132||0), 0.002); end
  def test_costpercapita_bf132; assert_in_delta(0.0, (worksheet.costpercapita_bf132||0), 0.002); end
  def test_costpercapita_bg132; assert_in_delta(0.0, (worksheet.costpercapita_bg132||0), 0.002); end
  def test_costpercapita_bi132; assert_in_delta(0.0, (worksheet.costpercapita_bi132||0), 0.002); end
  def test_costpercapita_bj132; assert_in_delta(0.0, (worksheet.costpercapita_bj132||0), 0.002); end
  def test_costpercapita_bk132; assert_in_delta(0.0, (worksheet.costpercapita_bk132||0), 0.002); end
  def test_costpercapita_bl132; assert_in_delta(0.0, (worksheet.costpercapita_bl132||0), 0.002); end
  def test_costpercapita_bm132; assert_in_delta(0.0, (worksheet.costpercapita_bm132||0), 0.002); end
  def test_costpercapita_bn132; assert_in_delta(0.0, (worksheet.costpercapita_bn132||0), 0.002); end
  def test_costpercapita_bo132; assert_in_delta(0.0, (worksheet.costpercapita_bo132||0), 0.002); end
  def test_costpercapita_bp132; assert_in_delta(0.0, (worksheet.costpercapita_bp132||0), 0.002); end
  def test_costpercapita_bq132; assert_in_delta(0.0, (worksheet.costpercapita_bq132||0), 0.002); end
  def test_costpercapita_bs132; assert_in_delta(0.0, (worksheet.costpercapita_bs132||0), 0.002); end
  def test_costpercapita_bt132; assert_in_delta(0.0, (worksheet.costpercapita_bt132||0), 0.002); end
  def test_costpercapita_bu132; assert_in_delta(0.0, (worksheet.costpercapita_bu132||0), 0.002); end
  def test_costpercapita_bv132; assert_in_delta(0.0, (worksheet.costpercapita_bv132||0), 0.002); end
  def test_costpercapita_bw132; assert_in_delta(0.0, (worksheet.costpercapita_bw132||0), 0.002); end
  def test_costpercapita_bx132; assert_in_delta(0.0, (worksheet.costpercapita_bx132||0), 0.002); end
  def test_costpercapita_by132; assert_in_delta(0.0, (worksheet.costpercapita_by132||0), 0.002); end
  def test_costpercapita_bz132; assert_in_delta(0.0, (worksheet.costpercapita_bz132||0), 0.002); end
  def test_costpercapita_ca132; assert_in_delta(0.0, (worksheet.costpercapita_ca132||0), 0.002); end
  def test_costpercapita_cc132; assert_in_delta(0.0, (worksheet.costpercapita_cc132||0), 0.002); end
  def test_costpercapita_cd132; assert_in_delta(0.0, (worksheet.costpercapita_cd132||0), 0.002); end
  def test_costpercapita_cf132; assert_in_delta(0.0, (worksheet.costpercapita_cf132||0), 0.002); end
  def test_costpercapita_cg132; assert_in_delta(0.0, (worksheet.costpercapita_cg132||0), 0.002); end
  def test_costpercapita_ch132; assert_in_delta(0.0, (worksheet.costpercapita_ch132||0), 0.002); end
  def test_costpercapita_ci132; assert_in_delta(0.0, (worksheet.costpercapita_ci132||0), 0.002); end
  def test_costpercapita_cj132; assert_in_delta(0.0, (worksheet.costpercapita_cj132||0), 0.002); end
  def test_costpercapita_ck132; assert_in_delta(0.0, (worksheet.costpercapita_ck132||0), 0.002); end
  def test_costpercapita_cl132; assert_in_delta(0.0, (worksheet.costpercapita_cl132||0), 0.002); end
  def test_costpercapita_cm132; assert_in_delta(0.0, (worksheet.costpercapita_cm132||0), 0.002); end
  def test_costpercapita_cn132; assert_in_delta(0.0, (worksheet.costpercapita_cn132||0), 0.002); end
  def test_costpercapita_cp132; assert_in_delta(0.0, (worksheet.costpercapita_cp132||0), 0.002); end
  def test_costpercapita_cq132; assert_in_delta(0.0, (worksheet.costpercapita_cq132||0), 0.002); end
  def test_costpercapita_cr132; assert_equal("ok", worksheet.costpercapita_cr132); end
  def test_costpercapita_c133; assert_equal("Total", worksheet.costpercapita_c133); end
  def test_costpercapita_e133; assert_in_epsilon(4608.355474709857, worksheet.costpercapita_e133, 0.002); end
  def test_costpercapita_f133; assert_in_epsilon(5396.194331424589, worksheet.costpercapita_f133, 0.002); end
  def test_costpercapita_g133; assert_in_epsilon(6818.123401720317, worksheet.costpercapita_g133, 0.002); end
  def test_costpercapita_h133; assert_in_epsilon(8241.581862097828, worksheet.costpercapita_h133, 0.002); end
  def test_costpercapita_i133; assert_in_epsilon(9669.511922178182, worksheet.costpercapita_i133, 0.002); end
  def test_costpercapita_j133; assert_in_epsilon(11174.463700189483, worksheet.costpercapita_j133, 0.002); end
  def test_costpercapita_k133; assert_in_epsilon(12670.074426397638, worksheet.costpercapita_k133, 0.002); end
  def test_costpercapita_l133; assert_in_epsilon(14164.64427520223, worksheet.costpercapita_l133, 0.002); end
  def test_costpercapita_m133; assert_in_epsilon(15750.095659274886, worksheet.costpercapita_m133, 0.002); end
  def test_costpercapita_o133; assert_in_epsilon(3776.7496968947044, worksheet.costpercapita_o133, 0.002); end
  def test_costpercapita_p133; assert_in_epsilon(4691.209039140345, worksheet.costpercapita_p133, 0.002); end
  def test_costpercapita_q133; assert_in_epsilon(5793.131336501407, worksheet.costpercapita_q133, 0.002); end
  def test_costpercapita_r133; assert_in_epsilon(6848.55794314874, worksheet.costpercapita_r133, 0.002); end
  def test_costpercapita_s133; assert_in_epsilon(7859.6751418560725, worksheet.costpercapita_s133, 0.002); end
  def test_costpercapita_t133; assert_in_epsilon(8803.137593221245, worksheet.costpercapita_t133, 0.002); end
  def test_costpercapita_u133; assert_in_epsilon(9332.128074429605, worksheet.costpercapita_u133, 0.002); end
  def test_costpercapita_v133; assert_in_epsilon(9779.55952073274, worksheet.costpercapita_v133, 0.002); end
  def test_costpercapita_w133; assert_in_epsilon(10486.050350709456, worksheet.costpercapita_w133, 0.002); end
  def test_costpercapita_y133; assert_in_epsilon(151.49952838097238, worksheet.costpercapita_y133, 0.002); end
  def test_costpercapita_z133; assert_in_epsilon(-122.47714423227059, worksheet.costpercapita_z133, 0.002); end
  def test_costpercapita_aa133; assert_in_epsilon(-132.78069669521344, worksheet.costpercapita_aa133, 0.002); end
  def test_costpercapita_ab133; assert_in_epsilon(-59.41341199108658, worksheet.costpercapita_ab133, 0.002); end
  def test_costpercapita_ac133; assert_in_epsilon(-794.6013916169942, worksheet.costpercapita_ac133, 0.002); end
  def test_costpercapita_ad133; assert_in_epsilon(-1036.0759059775403, worksheet.costpercapita_ad133, 0.002); end
  def test_costpercapita_ae133; assert_in_epsilon(-1532.717418759561, worksheet.costpercapita_ae133, 0.002); end
  def test_costpercapita_af133; assert_in_epsilon(-1787.2151044695775, worksheet.costpercapita_af133, 0.002); end
  def test_costpercapita_ag133; assert_in_epsilon(-2261.79113222256, worksheet.costpercapita_ag133, 0.002); end
  def test_costpercapita_ai133; assert_in_epsilon(8536.604699985533, worksheet.costpercapita_ai133, 0.002); end
  def test_costpercapita_aj133; assert_in_epsilon(9964.926226332662, worksheet.costpercapita_aj133, 0.002); end
  def test_costpercapita_ak133; assert_in_epsilon(12478.47404152651, worksheet.costpercapita_ak133, 0.002); end
  def test_costpercapita_al133; assert_in_epsilon(15030.726393255482, worksheet.costpercapita_al133, 0.002); end
  def test_costpercapita_am133; assert_in_epsilon(16734.585672417263, worksheet.costpercapita_am133, 0.002); end
  def test_costpercapita_an133; assert_in_epsilon(18941.525387433187, worksheet.costpercapita_an133, 0.002); end
  def test_costpercapita_ao133; assert_in_epsilon(20469.485082067684, worksheet.costpercapita_ao133, 0.002); end
  def test_costpercapita_ap133; assert_in_epsilon(22156.98869146539, worksheet.costpercapita_ap133, 0.002); end
  def test_costpercapita_aq133; assert_in_epsilon(23974.35487776178, worksheet.costpercapita_aq133, 0.002); end
  def test_costpercapita_as133; assert_in_epsilon(16476.407896916164, worksheet.costpercapita_as133, 0.002); end
  def test_costpercapita_at133; assert_in_epsilon(323993.78642326244, worksheet.costpercapita_at133, 0.002); end
  def test_costpercapita_ay133; assert_in_epsilon(4608.3591038809745, worksheet.costpercapita_ay133, 0.002); end
  def test_costpercapita_az133; assert_in_epsilon(5397.485496476931, worksheet.costpercapita_az133, 0.002); end
  def test_costpercapita_ba133; assert_in_epsilon(6865.082645277676, worksheet.costpercapita_ba133, 0.002); end
  def test_costpercapita_bb133; assert_in_epsilon(8327.41765278225, worksheet.costpercapita_bb133, 0.002); end
  def test_costpercapita_bc133; assert_in_epsilon(9792.222535773775, worksheet.costpercapita_bc133, 0.002); end
  def test_costpercapita_bd133; assert_in_epsilon(11325.684043266865, worksheet.costpercapita_bd133, 0.002); end
  def test_costpercapita_be133; assert_in_epsilon(12848.297125339794, worksheet.costpercapita_be133, 0.002); end
  def test_costpercapita_bf133; assert_in_epsilon(14373.149362652954, worksheet.costpercapita_bf133, 0.002); end
  def test_costpercapita_bg133; assert_in_epsilon(15986.559688715915, worksheet.costpercapita_bg133, 0.002); end
  def test_costpercapita_bi133; assert_in_delta(0.0, (worksheet.costpercapita_bi133||0), 0.002); end
  def test_costpercapita_bj133; assert_in_delta(0.0, (worksheet.costpercapita_bj133||0), 0.002); end
  def test_costpercapita_bk133; assert_in_delta(0.0, (worksheet.costpercapita_bk133||0), 0.002); end
  def test_costpercapita_bl133; assert_in_delta(0.0, (worksheet.costpercapita_bl133||0), 0.002); end
  def test_costpercapita_bm133; assert_in_delta(0.0, (worksheet.costpercapita_bm133||0), 0.002); end
  def test_costpercapita_bn133; assert_in_delta(0.0, (worksheet.costpercapita_bn133||0), 0.002); end
  def test_costpercapita_bo133; assert_in_delta(0.0, (worksheet.costpercapita_bo133||0), 0.002); end
  def test_costpercapita_bp133; assert_in_delta(0.0, (worksheet.costpercapita_bp133||0), 0.002); end
  def test_costpercapita_bq133; assert_in_delta(0.0, (worksheet.costpercapita_bq133||0), 0.002); end
  def test_costpercapita_bs133; assert_in_epsilon(10051.121388298761, worksheet.costpercapita_bs133, 0.002); end
  def test_costpercapita_bt133; assert_in_epsilon(11892.385698341162, worksheet.costpercapita_bt133, 0.002); end
  def test_costpercapita_bu133; assert_in_epsilon(13726.593480340422, worksheet.costpercapita_bu133, 0.002); end
  def test_costpercapita_bv133; assert_in_epsilon(16367.044178358368, worksheet.costpercapita_bv133, 0.002); end
  def test_costpercapita_bw133; assert_in_epsilon(19011.314663700425, worksheet.costpercapita_bw133, 0.002); end
  def test_costpercapita_bx133; assert_in_epsilon(21667.53640729214, worksheet.costpercapita_bx133, 0.002); end
  def test_costpercapita_by133; assert_in_epsilon(23870.186339031283, worksheet.costpercapita_by133, 0.002); end
  def test_costpercapita_bz133; assert_in_epsilon(26239.17898051379, worksheet.costpercapita_bz133, 0.002); end
  def test_costpercapita_ca133; assert_in_epsilon(28847.172583204556, worksheet.costpercapita_ca133, 0.002); end
  def test_costpercapita_cc133; assert_in_epsilon(19074.725968786766, worksheet.costpercapita_cc133, 0.002); end
  def test_costpercapita_cd133; assert_in_epsilon(372313.3408269268, worksheet.costpercapita_cd133, 0.002); end
  def test_costpercapita_cf133; assert_in_delta(0.003629171117142193, worksheet.costpercapita_cf133, 0.002); end
  def test_costpercapita_cg133; assert_in_epsilon(1.2911650523423375, worksheet.costpercapita_cg133, 0.002); end
  def test_costpercapita_ch133; assert_in_epsilon(46.95924355735984, worksheet.costpercapita_ch133, 0.002); end
  def test_costpercapita_ci133; assert_in_epsilon(85.83579068442224, worksheet.costpercapita_ci133, 0.002); end
  def test_costpercapita_cj133; assert_in_epsilon(122.71061359559171, worksheet.costpercapita_cj133, 0.002); end
  def test_costpercapita_ck133; assert_in_epsilon(151.2203430773833, worksheet.costpercapita_ck133, 0.002); end
  def test_costpercapita_cl133; assert_in_epsilon(178.22269894215682, worksheet.costpercapita_cl133, 0.002); end
  def test_costpercapita_cm133; assert_in_epsilon(208.5050874507228, worksheet.costpercapita_cm133, 0.002); end
  def test_costpercapita_cn133; assert_in_epsilon(236.4640294410292, worksheet.costpercapita_cn133, 0.002); end
  def test_costpercapita_cp133; assert_in_epsilon(114.57917788579171, worksheet.costpercapita_cp133, 0.002); end
  def test_costpercapita_cq133; assert_in_epsilon(2007.6778007690987, worksheet.costpercapita_cq133, 0.002); end
  def test_costpercapita_cr133; assert_equal("err", worksheet.costpercapita_cr133); end
  def test_costpercapita_e134; assert_equal("ok", worksheet.costpercapita_e134); end
  def test_costpercapita_f134; assert_equal("ok", worksheet.costpercapita_f134); end
  def test_costpercapita_g134; assert_equal("ok", worksheet.costpercapita_g134); end
  def test_costpercapita_h134; assert_equal("ok", worksheet.costpercapita_h134); end
  def test_costpercapita_i134; assert_equal("ok", worksheet.costpercapita_i134); end
  def test_costpercapita_j134; assert_equal("ok", worksheet.costpercapita_j134); end
  def test_costpercapita_k134; assert_equal("ok", worksheet.costpercapita_k134); end
  def test_costpercapita_l134; assert_equal("ok", worksheet.costpercapita_l134); end
  def test_costpercapita_m134; assert_equal("ok", worksheet.costpercapita_m134); end
  def test_costpercapita_o134; assert_equal("ok", worksheet.costpercapita_o134); end
  def test_costpercapita_p134; assert_equal("ok", worksheet.costpercapita_p134); end
  def test_costpercapita_q134; assert_equal("ok", worksheet.costpercapita_q134); end
  def test_costpercapita_r134; assert_equal("ok", worksheet.costpercapita_r134); end
  def test_costpercapita_s134; assert_equal("ok", worksheet.costpercapita_s134); end
  def test_costpercapita_t134; assert_equal("ok", worksheet.costpercapita_t134); end
  def test_costpercapita_u134; assert_equal("ok", worksheet.costpercapita_u134); end
  def test_costpercapita_v134; assert_equal("ok", worksheet.costpercapita_v134); end
  def test_costpercapita_w134; assert_equal("ok", worksheet.costpercapita_w134); end
  def test_costpercapita_y134; assert_equal("ok", worksheet.costpercapita_y134); end
  def test_costpercapita_z134; assert_equal("ok", worksheet.costpercapita_z134); end
  def test_costpercapita_aa134; assert_equal("ok", worksheet.costpercapita_aa134); end
  def test_costpercapita_ab134; assert_equal("ok", worksheet.costpercapita_ab134); end
  def test_costpercapita_ac134; assert_equal("ok", worksheet.costpercapita_ac134); end
  def test_costpercapita_ad134; assert_equal("ok", worksheet.costpercapita_ad134); end
  def test_costpercapita_ae134; assert_equal("ok", worksheet.costpercapita_ae134); end
  def test_costpercapita_af134; assert_equal("ok", worksheet.costpercapita_af134); end
  def test_costpercapita_ag134; assert_equal("ok", worksheet.costpercapita_ag134); end
  def test_costpercapita_ai134; assert_equal("ok", worksheet.costpercapita_ai134); end
  def test_costpercapita_aj134; assert_equal("ok", worksheet.costpercapita_aj134); end
  def test_costpercapita_ak134; assert_equal("ok", worksheet.costpercapita_ak134); end
  def test_costpercapita_al134; assert_equal("ok", worksheet.costpercapita_al134); end
  def test_costpercapita_am134; assert_equal("ok", worksheet.costpercapita_am134); end
  def test_costpercapita_an134; assert_equal("ok", worksheet.costpercapita_an134); end
  def test_costpercapita_ao134; assert_equal("ok", worksheet.costpercapita_ao134); end
  def test_costpercapita_ap134; assert_equal("ok", worksheet.costpercapita_ap134); end
  def test_costpercapita_aq134; assert_equal("ok", worksheet.costpercapita_aq134); end
  def test_costpercapita_as134; assert_equal("ok", worksheet.costpercapita_as134); end
  def test_costpercapita_at134; assert_equal("ok", worksheet.costpercapita_at134); end
  def test_costpercapita_ay134; assert_equal("ok", worksheet.costpercapita_ay134); end
  def test_costpercapita_az134; assert_equal("ok", worksheet.costpercapita_az134); end
  def test_costpercapita_ba134; assert_equal("ok", worksheet.costpercapita_ba134); end
  def test_costpercapita_bb134; assert_equal("ok", worksheet.costpercapita_bb134); end
  def test_costpercapita_bc134; assert_equal("ok", worksheet.costpercapita_bc134); end
  def test_costpercapita_bd134; assert_equal("ok", worksheet.costpercapita_bd134); end
  def test_costpercapita_be134; assert_equal("ok", worksheet.costpercapita_be134); end
  def test_costpercapita_bf134; assert_equal("ok", worksheet.costpercapita_bf134); end
  def test_costpercapita_bg134; assert_equal("ok", worksheet.costpercapita_bg134); end
  def test_costpercapita_bi134; assert_equal("ok", worksheet.costpercapita_bi134); end
  def test_costpercapita_bj134; assert_equal("ok", worksheet.costpercapita_bj134); end
  def test_costpercapita_bk134; assert_equal("ok", worksheet.costpercapita_bk134); end
  def test_costpercapita_bl134; assert_equal("ok", worksheet.costpercapita_bl134); end
  def test_costpercapita_bm134; assert_equal("ok", worksheet.costpercapita_bm134); end
  def test_costpercapita_bn134; assert_equal("ok", worksheet.costpercapita_bn134); end
  def test_costpercapita_bo134; assert_equal("ok", worksheet.costpercapita_bo134); end
  def test_costpercapita_bp134; assert_equal("ok", worksheet.costpercapita_bp134); end
  def test_costpercapita_bq134; assert_equal("ok", worksheet.costpercapita_bq134); end
  def test_costpercapita_bs134; assert_equal("ok", worksheet.costpercapita_bs134); end
  def test_costpercapita_bt134; assert_equal("ok", worksheet.costpercapita_bt134); end
  def test_costpercapita_bu134; assert_equal("ok", worksheet.costpercapita_bu134); end
  def test_costpercapita_bv134; assert_equal("ok", worksheet.costpercapita_bv134); end
  def test_costpercapita_bw134; assert_equal("ok", worksheet.costpercapita_bw134); end
  def test_costpercapita_bx134; assert_equal("ok", worksheet.costpercapita_bx134); end
  def test_costpercapita_by134; assert_equal("ok", worksheet.costpercapita_by134); end
  def test_costpercapita_bz134; assert_equal("ok", worksheet.costpercapita_bz134); end
  def test_costpercapita_ca134; assert_equal("ok", worksheet.costpercapita_ca134); end
  def test_costpercapita_cc134; assert_equal("ok", worksheet.costpercapita_cc134); end
  def test_costpercapita_cd134; assert_equal("ok", worksheet.costpercapita_cd134); end
  def test_costpercapita_cf134; assert_equal("ok", worksheet.costpercapita_cf134); end
  def test_costpercapita_cg134; assert_equal("ok", worksheet.costpercapita_cg134); end
  def test_costpercapita_ch134; assert_equal("ok", worksheet.costpercapita_ch134); end
  def test_costpercapita_ci134; assert_equal("ok", worksheet.costpercapita_ci134); end
  def test_costpercapita_cj134; assert_equal("ok", worksheet.costpercapita_cj134); end
  def test_costpercapita_ck134; assert_equal("ok", worksheet.costpercapita_ck134); end
  def test_costpercapita_cl134; assert_equal("ok", worksheet.costpercapita_cl134); end
  def test_costpercapita_cm134; assert_equal("ok", worksheet.costpercapita_cm134); end
  def test_costpercapita_cn134; assert_equal("ok", worksheet.costpercapita_cn134); end
  def test_costpercapita_cp134; assert_equal("ok", worksheet.costpercapita_cp134); end
  def test_costpercapita_cq134; assert_equal("ok", worksheet.costpercapita_cq134); end
  def test_costpercapita_c136; assert_equal("ZARm", worksheet.costpercapita_c136); end
  def test_costpercapita_e136; assert_equal("C1.Point", worksheet.costpercapita_e136); end
  def test_costpercapita_f136; assert_equal("Point estimate of capital costs", worksheet.costpercapita_f136); end
  def test_costpercapita_o136; assert_equal("C2.Point", worksheet.costpercapita_o136); end
  def test_costpercapita_p136; assert_equal("Point estimate of operating costs", worksheet.costpercapita_p136); end
  def test_costpercapita_y136; assert_equal("C3.Point", worksheet.costpercapita_y136); end
  def test_costpercapita_z136; assert_equal("Point estimate of fuel costs", worksheet.costpercapita_z136); end
  def test_costpercapita_ai136; assert_equal("Point estimate of total cost", worksheet.costpercapita_ai136); end
  def test_costpercapita_as136; assert_equal("Cashflow capital basis", worksheet.costpercapita_as136); end
  def test_costpercapita_av136; assert_equal("Loan", worksheet.costpercapita_av136); end
  def test_costpercapita_ay136; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay136); end
  def test_costpercapita_bi136; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi136); end
  def test_costpercapita_br136; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br136); end
  def test_costpercapita_cc136; assert_equal("Amortised Capital", worksheet.costpercapita_cc136); end
  def test_costpercapita_cf136; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf136); end
  def test_costpercapita_cp136; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp136); end
  def test_costpercapita_c137; assert_equal("Category", worksheet.costpercapita_c137); end
  def test_costpercapita_e137; assert_equal("2010", worksheet.costpercapita_e137); end
  def test_costpercapita_f137; assert_equal("2015", worksheet.costpercapita_f137); end
  def test_costpercapita_g137; assert_equal("2020", worksheet.costpercapita_g137); end
  def test_costpercapita_h137; assert_equal("2025", worksheet.costpercapita_h137); end
  def test_costpercapita_i137; assert_equal("2030", worksheet.costpercapita_i137); end
  def test_costpercapita_j137; assert_equal("2035", worksheet.costpercapita_j137); end
  def test_costpercapita_k137; assert_equal("2040", worksheet.costpercapita_k137); end
  def test_costpercapita_l137; assert_equal("2045", worksheet.costpercapita_l137); end
  def test_costpercapita_m137; assert_equal("2050", worksheet.costpercapita_m137); end
  def test_costpercapita_o137; assert_equal("2010", worksheet.costpercapita_o137); end
  def test_costpercapita_p137; assert_equal("2015", worksheet.costpercapita_p137); end
  def test_costpercapita_q137; assert_equal("2020", worksheet.costpercapita_q137); end
  def test_costpercapita_r137; assert_equal("2025", worksheet.costpercapita_r137); end
  def test_costpercapita_s137; assert_equal("2030", worksheet.costpercapita_s137); end
  def test_costpercapita_t137; assert_equal("2035", worksheet.costpercapita_t137); end
  def test_costpercapita_u137; assert_equal("2040", worksheet.costpercapita_u137); end
  def test_costpercapita_v137; assert_equal("2045", worksheet.costpercapita_v137); end
  def test_costpercapita_w137; assert_equal("2050", worksheet.costpercapita_w137); end
  def test_costpercapita_y137; assert_equal("2010", worksheet.costpercapita_y137); end
  def test_costpercapita_z137; assert_equal("2015", worksheet.costpercapita_z137); end
  def test_costpercapita_aa137; assert_equal("2020", worksheet.costpercapita_aa137); end
  def test_costpercapita_ab137; assert_equal("2025", worksheet.costpercapita_ab137); end
  def test_costpercapita_ac137; assert_equal("2030", worksheet.costpercapita_ac137); end
  def test_costpercapita_ad137; assert_equal("2035", worksheet.costpercapita_ad137); end
  def test_costpercapita_ae137; assert_equal("2040", worksheet.costpercapita_ae137); end
  def test_costpercapita_af137; assert_equal("2045", worksheet.costpercapita_af137); end
  def test_costpercapita_ag137; assert_equal("2050", worksheet.costpercapita_ag137); end
  def test_costpercapita_ai137; assert_equal("2010", worksheet.costpercapita_ai137); end
  def test_costpercapita_aj137; assert_equal("2015", worksheet.costpercapita_aj137); end
  def test_costpercapita_ak137; assert_equal("2020", worksheet.costpercapita_ak137); end
  def test_costpercapita_al137; assert_equal("2025", worksheet.costpercapita_al137); end
  def test_costpercapita_am137; assert_equal("2030", worksheet.costpercapita_am137); end
  def test_costpercapita_an137; assert_equal("2035", worksheet.costpercapita_an137); end
  def test_costpercapita_ao137; assert_equal("2040", worksheet.costpercapita_ao137); end
  def test_costpercapita_ap137; assert_equal("2045", worksheet.costpercapita_ap137); end
  def test_costpercapita_aq137; assert_equal("2050", worksheet.costpercapita_aq137); end
  def test_costpercapita_as137; assert_equal("Mean", worksheet.costpercapita_as137); end
  def test_costpercapita_at137; assert_equal("NPV", worksheet.costpercapita_at137); end
  def test_costpercapita_av137; assert_equal("Rate", worksheet.costpercapita_av137); end
  def test_costpercapita_aw137; assert_equal("Years", worksheet.costpercapita_aw137); end
  def test_costpercapita_ay137; assert_in_epsilon(2010.0, worksheet.costpercapita_ay137, 0.002); end
  def test_costpercapita_az137; assert_in_epsilon(2015.0, worksheet.costpercapita_az137, 0.002); end
  def test_costpercapita_ba137; assert_in_epsilon(2020.0, worksheet.costpercapita_ba137, 0.002); end
  def test_costpercapita_bb137; assert_in_epsilon(2025.0, worksheet.costpercapita_bb137, 0.002); end
  def test_costpercapita_bc137; assert_in_epsilon(2030.0, worksheet.costpercapita_bc137, 0.002); end
  def test_costpercapita_bd137; assert_in_epsilon(2035.0, worksheet.costpercapita_bd137, 0.002); end
  def test_costpercapita_be137; assert_in_epsilon(2040.0, worksheet.costpercapita_be137, 0.002); end
  def test_costpercapita_bf137; assert_in_epsilon(2045.0, worksheet.costpercapita_bf137, 0.002); end
  def test_costpercapita_bg137; assert_in_epsilon(2050.0, worksheet.costpercapita_bg137, 0.002); end
  def test_costpercapita_bi137; assert_in_epsilon(2010.0, worksheet.costpercapita_bi137, 0.002); end
  def test_costpercapita_bj137; assert_in_epsilon(2015.0, worksheet.costpercapita_bj137, 0.002); end
  def test_costpercapita_bk137; assert_in_epsilon(2020.0, worksheet.costpercapita_bk137, 0.002); end
  def test_costpercapita_bl137; assert_in_epsilon(2025.0, worksheet.costpercapita_bl137, 0.002); end
  def test_costpercapita_bm137; assert_in_epsilon(2030.0, worksheet.costpercapita_bm137, 0.002); end
  def test_costpercapita_bn137; assert_in_epsilon(2035.0, worksheet.costpercapita_bn137, 0.002); end
  def test_costpercapita_bo137; assert_in_epsilon(2040.0, worksheet.costpercapita_bo137, 0.002); end
  def test_costpercapita_bp137; assert_in_epsilon(2045.0, worksheet.costpercapita_bp137, 0.002); end
  def test_costpercapita_bq137; assert_in_epsilon(2050.0, worksheet.costpercapita_bq137, 0.002); end
  def test_costpercapita_bs137; assert_equal("2010", worksheet.costpercapita_bs137); end
  def test_costpercapita_bt137; assert_equal("2015", worksheet.costpercapita_bt137); end
  def test_costpercapita_bu137; assert_equal("2020", worksheet.costpercapita_bu137); end
  def test_costpercapita_bv137; assert_equal("2025", worksheet.costpercapita_bv137); end
  def test_costpercapita_bw137; assert_equal("2030", worksheet.costpercapita_bw137); end
  def test_costpercapita_bx137; assert_equal("2035", worksheet.costpercapita_bx137); end
  def test_costpercapita_by137; assert_equal("2040", worksheet.costpercapita_by137); end
  def test_costpercapita_bz137; assert_equal("2045", worksheet.costpercapita_bz137); end
  def test_costpercapita_ca137; assert_equal("2050", worksheet.costpercapita_ca137); end
  def test_costpercapita_cc137; assert_equal("Mean", worksheet.costpercapita_cc137); end
  def test_costpercapita_cd137; assert_equal("NPV", worksheet.costpercapita_cd137); end
  def test_costpercapita_cf137; assert_equal("2010", worksheet.costpercapita_cf137); end
  def test_costpercapita_cg137; assert_equal("2015", worksheet.costpercapita_cg137); end
  def test_costpercapita_ch137; assert_equal("2020", worksheet.costpercapita_ch137); end
  def test_costpercapita_ci137; assert_equal("2025", worksheet.costpercapita_ci137); end
  def test_costpercapita_cj137; assert_equal("2030", worksheet.costpercapita_cj137); end
  def test_costpercapita_ck137; assert_equal("2035", worksheet.costpercapita_ck137); end
  def test_costpercapita_cl137; assert_equal("2040", worksheet.costpercapita_cl137); end
  def test_costpercapita_cm137; assert_equal("2045", worksheet.costpercapita_cm137); end
  def test_costpercapita_cn137; assert_equal("2050", worksheet.costpercapita_cn137); end
  def test_costpercapita_cp137; assert_equal("Mean", worksheet.costpercapita_cp137); end
  def test_costpercapita_cq137; assert_equal("NPV", worksheet.costpercapita_cq137); end
  def test_costpercapita_c138; assert_equal("Fossil Fuels", worksheet.costpercapita_c138); end
  def test_costpercapita_e138; assert_in_epsilon(6.603592234542045, worksheet.costpercapita_e138, 0.002); end
  def test_costpercapita_f138; assert_in_epsilon(7.790279022895726, worksheet.costpercapita_f138, 0.002); end
  def test_costpercapita_g138; assert_in_delta(0.0, (worksheet.costpercapita_g138||0), 0.002); end
  def test_costpercapita_h138; assert_in_delta(0.0, (worksheet.costpercapita_h138||0), 0.002); end
  def test_costpercapita_i138; assert_in_delta(0.0, (worksheet.costpercapita_i138||0), 0.002); end
  def test_costpercapita_j138; assert_in_epsilon(4.142615380466118, worksheet.costpercapita_j138, 0.002); end
  def test_costpercapita_k138; assert_in_epsilon(-4.2297545349905015, worksheet.costpercapita_k138, 0.002); end
  def test_costpercapita_l138; assert_in_epsilon(-4.566889008898389, worksheet.costpercapita_l138, 0.002); end
  def test_costpercapita_m138; assert_in_epsilon(-14.568465187942579, worksheet.costpercapita_m138, 0.002); end
  def test_costpercapita_o138; assert_in_epsilon(318.5031561718261, worksheet.costpercapita_o138, 0.002); end
  def test_costpercapita_p138; assert_in_epsilon(310.5287550727909, worksheet.costpercapita_p138, 0.002); end
  def test_costpercapita_q138; assert_in_epsilon(305.8626926101356, worksheet.costpercapita_q138, 0.002); end
  def test_costpercapita_r138; assert_in_epsilon(298.8223263525156, worksheet.costpercapita_r138, 0.002); end
  def test_costpercapita_s138; assert_in_epsilon(290.6036670292033, worksheet.costpercapita_s138, 0.002); end
  def test_costpercapita_t138; assert_in_epsilon(250.13678398612785, worksheet.costpercapita_t138, 0.002); end
  def test_costpercapita_u138; assert_in_epsilon(206.57645858164187, worksheet.costpercapita_u138, 0.002); end
  def test_costpercapita_v138; assert_in_epsilon(111.68612839941245, worksheet.costpercapita_v138, 0.002); end
  def test_costpercapita_w138; assert_in_epsilon(80.82970183705996, worksheet.costpercapita_w138, 0.002); end
  def test_costpercapita_y138; assert_in_epsilon(151.49952838097238, worksheet.costpercapita_y138, 0.002); end
  def test_costpercapita_z138; assert_in_epsilon(-183.10432808910207, worksheet.costpercapita_z138, 0.002); end
  def test_costpercapita_aa138; assert_in_epsilon(-207.27766390369624, worksheet.costpercapita_aa138, 0.002); end
  def test_costpercapita_ab138; assert_in_epsilon(-175.31158159472005, worksheet.costpercapita_ab138, 0.002); end
  def test_costpercapita_ac138; assert_in_epsilon(-948.4560102979694, worksheet.costpercapita_ac138, 0.002); end
  def test_costpercapita_ad138; assert_in_epsilon(-1249.2778956263744, worksheet.costpercapita_ad138, 0.002); end
  def test_costpercapita_ae138; assert_in_epsilon(-1831.25733419991, worksheet.costpercapita_ae138, 0.002); end
  def test_costpercapita_af138; assert_in_epsilon(-2144.49111724446, worksheet.costpercapita_af138, 0.002); end
  def test_costpercapita_ag138; assert_in_epsilon(-2716.2313783842446, worksheet.costpercapita_ag138, 0.002); end
  def test_costpercapita_ai138; assert_in_epsilon(476.60627678734045, worksheet.costpercapita_ai138, 0.002); end
  def test_costpercapita_aj138; assert_in_epsilon(135.21470600658438, worksheet.costpercapita_aj138, 0.002); end
  def test_costpercapita_ak138; assert_in_epsilon(98.58502870643935, worksheet.costpercapita_ak138, 0.002); end
  def test_costpercapita_al138; assert_in_epsilon(123.51074475779552, worksheet.costpercapita_al138, 0.002); end
  def test_costpercapita_am138; assert_in_epsilon(-657.8523432687662, worksheet.costpercapita_am138, 0.002); end
  def test_costpercapita_an138; assert_in_epsilon(-994.99849625978, worksheet.costpercapita_an138, 0.002); end
  def test_costpercapita_ao138; assert_in_epsilon(-1628.9106301532588, worksheet.costpercapita_ao138, 0.002); end
  def test_costpercapita_ap138; assert_in_epsilon(-2037.3718778539464, worksheet.costpercapita_ap138, 0.002); end
  def test_costpercapita_aq138; assert_in_epsilon(-2649.970141735127, worksheet.costpercapita_aq138, 0.002); end
  def test_costpercapita_as138; assert_in_epsilon(-792.7985258903027, worksheet.costpercapita_as138, 0.002); end
  def test_costpercapita_at138; assert_in_epsilon(-11539.366776903213, worksheet.costpercapita_at138, 0.002); end
  def test_costpercapita_ay138; assert_in_epsilon(10.875583966050376, worksheet.costpercapita_ay138, 0.002); end
  def test_costpercapita_az138; assert_in_epsilon(12.829961424524406, worksheet.costpercapita_az138, 0.002); end
  def test_costpercapita_ba138; assert_in_delta(0.0, (worksheet.costpercapita_ba138||0), 0.002); end
  def test_costpercapita_bb138; assert_in_delta(0.0, (worksheet.costpercapita_bb138||0), 0.002); end
  def test_costpercapita_bc138; assert_in_delta(0.0, (worksheet.costpercapita_bc138||0), 0.002); end
  def test_costpercapita_bd138; assert_in_epsilon(6.822553514683425, worksheet.costpercapita_bd138, 0.002); end
  def test_costpercapita_be138; assert_in_epsilon(-46.949989900396275, worksheet.costpercapita_be138, 0.002); end
  def test_costpercapita_bf138; assert_in_epsilon(-47.50522319594359, worksheet.costpercapita_bf138, 0.002); end
  def test_costpercapita_bg138; assert_in_epsilon(-92.30005764238929, worksheet.costpercapita_bg138, 0.002); end
  def test_costpercapita_bi138; assert_in_delta(0.0, (worksheet.costpercapita_bi138||0), 0.002); end
  def test_costpercapita_bj138; assert_in_delta(0.0, (worksheet.costpercapita_bj138||0), 0.002); end
  def test_costpercapita_bk138; assert_in_delta(0.0, (worksheet.costpercapita_bk138||0), 0.002); end
  def test_costpercapita_bl138; assert_in_delta(0.0, (worksheet.costpercapita_bl138||0), 0.002); end
  def test_costpercapita_bm138; assert_in_delta(0.0, (worksheet.costpercapita_bm138||0), 0.002); end
  def test_costpercapita_bn138; assert_in_delta(0.0, (worksheet.costpercapita_bn138||0), 0.002); end
  def test_costpercapita_bo138; assert_in_delta(0.0, (worksheet.costpercapita_bo138||0), 0.002); end
  def test_costpercapita_bp138; assert_in_delta(0.0, (worksheet.costpercapita_bp138||0), 0.002); end
  def test_costpercapita_bq138; assert_in_delta(0.0, (worksheet.costpercapita_bq138||0), 0.002); end
  def test_costpercapita_bs138; assert_in_epsilon(1995.3913276609592, worksheet.costpercapita_bs138, 0.002); end
  def test_costpercapita_bt138; assert_in_epsilon(2127.011309519894, worksheet.costpercapita_bt138, 0.002); end
  def test_costpercapita_bu138; assert_in_epsilon(1374.159905636298, worksheet.costpercapita_bu138, 0.002); end
  def test_costpercapita_bv138; assert_in_epsilon(1489.6934150813918, worksheet.costpercapita_bv138, 0.002); end
  def test_costpercapita_bw138; assert_in_epsilon(1649.739761205822, worksheet.costpercapita_bw138, 0.002); end
  def test_costpercapita_bx138; assert_in_epsilon(1795.299569822618, worksheet.costpercapita_bx138, 0.002); end
  def test_costpercapita_by138; assert_in_epsilon(1848.9081782601243, worksheet.costpercapita_by138, 0.002); end
  def test_costpercapita_bz138; assert_in_epsilon(2150.0543533062405, worksheet.costpercapita_bz138, 0.002); end
  def test_costpercapita_ca138; assert_in_epsilon(2362.3648134108553, worksheet.costpercapita_ca138, 0.002); end
  def test_costpercapita_cc138; assert_in_epsilon(1865.8469593226891, worksheet.costpercapita_cc138, 0.002); end
  def test_costpercapita_cd138; assert_in_epsilon(37939.343641924665, worksheet.costpercapita_cd138, 0.002); end
  def test_costpercapita_cf138; assert_in_epsilon(4.271991731508331, worksheet.costpercapita_cf138, 0.002); end
  def test_costpercapita_cg138; assert_in_epsilon(5.039682401628679, worksheet.costpercapita_cg138, 0.002); end
  def test_costpercapita_ch138; assert_in_delta(0.0, (worksheet.costpercapita_ch138||0), 0.002); end
  def test_costpercapita_ci138; assert_in_delta(0.0, (worksheet.costpercapita_ci138||0), 0.002); end
  def test_costpercapita_cj138; assert_in_delta(0.0, (worksheet.costpercapita_cj138||0), 0.002); end
  def test_costpercapita_ck138; assert_in_epsilon(2.679938134217306, worksheet.costpercapita_ck138, 0.002); end
  def test_costpercapita_cl138; assert_in_epsilon(-42.72023536540577, worksheet.costpercapita_cl138, 0.002); end
  def test_costpercapita_cm138; assert_in_epsilon(-42.9383341870452, worksheet.costpercapita_cm138, 0.002); end
  def test_costpercapita_cn138; assert_in_epsilon(-77.73159245444673, worksheet.costpercapita_cn138, 0.002); end
  def test_costpercapita_cp138; assert_in_epsilon(-16.822061082171487, worksheet.costpercapita_cp138, 0.002); end
  def test_costpercapita_cq138; assert_in_epsilon(-213.95903532503925, worksheet.costpercapita_cq138, 0.002); end
  def test_costpercapita_cr138; assert_equal("err", worksheet.costpercapita_cr138); end
  def test_costpercapita_c139; assert_equal("Bioenergy", worksheet.costpercapita_c139); end
  def test_costpercapita_e139; assert_in_delta(0.0, (worksheet.costpercapita_e139||0), 0.002); end
  def test_costpercapita_f139; assert_in_delta(0.0, (worksheet.costpercapita_f139||0), 0.002); end
  def test_costpercapita_g139; assert_in_delta(0.0, (worksheet.costpercapita_g139||0), 0.002); end
  def test_costpercapita_h139; assert_in_delta(0.0, (worksheet.costpercapita_h139||0), 0.002); end
  def test_costpercapita_i139; assert_in_delta(0.0, (worksheet.costpercapita_i139||0), 0.002); end
  def test_costpercapita_j139; assert_in_delta(0.0, (worksheet.costpercapita_j139||0), 0.002); end
  def test_costpercapita_k139; assert_in_delta(0.0, (worksheet.costpercapita_k139||0), 0.002); end
  def test_costpercapita_l139; assert_in_delta(0.0, (worksheet.costpercapita_l139||0), 0.002); end
  def test_costpercapita_m139; assert_in_delta(0.0, (worksheet.costpercapita_m139||0), 0.002); end
  def test_costpercapita_o139; assert_in_delta(0.0, (worksheet.costpercapita_o139||0), 0.002); end
  def test_costpercapita_p139; assert_in_delta(0.0, (worksheet.costpercapita_p139||0), 0.002); end
  def test_costpercapita_q139; assert_in_delta(0.0, (worksheet.costpercapita_q139||0), 0.002); end
  def test_costpercapita_r139; assert_in_delta(0.0, (worksheet.costpercapita_r139||0), 0.002); end
  def test_costpercapita_s139; assert_in_delta(0.0, (worksheet.costpercapita_s139||0), 0.002); end
  def test_costpercapita_t139; assert_in_delta(0.0, (worksheet.costpercapita_t139||0), 0.002); end
  def test_costpercapita_u139; assert_in_delta(0.0, (worksheet.costpercapita_u139||0), 0.002); end
  def test_costpercapita_v139; assert_in_delta(0.0, (worksheet.costpercapita_v139||0), 0.002); end
  def test_costpercapita_w139; assert_in_delta(0.0, (worksheet.costpercapita_w139||0), 0.002); end
  def test_costpercapita_y139; assert_in_delta(0.0, (worksheet.costpercapita_y139||0), 0.002); end
  def test_costpercapita_z139; assert_in_delta(0.0385697013093565, worksheet.costpercapita_z139, 0.002); end
  def test_costpercapita_aa139; assert_in_delta(0.08228553517656419, worksheet.costpercapita_aa139, 0.002); end
  def test_costpercapita_ab139; assert_in_delta(0.19749369850207865, worksheet.costpercapita_ab139, 0.002); end
  def test_costpercapita_ac139; assert_in_delta(0.2808918939575386, worksheet.costpercapita_ac139, 0.002); end
  def test_costpercapita_ad139; assert_in_delta(0.3745384822219214, worksheet.costpercapita_ad139, 0.002); end
  def test_costpercapita_ae139; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ae139, 0.002); end
  def test_costpercapita_af139; assert_in_delta(0.5966490253229234, worksheet.costpercapita_af139, 0.002); end
  def test_costpercapita_ag139; assert_in_delta(0.727374563002047, worksheet.costpercapita_ag139, 0.002); end
  def test_costpercapita_ai139; assert_in_delta(0.0, (worksheet.costpercapita_ai139||0), 0.002); end
  def test_costpercapita_aj139; assert_in_delta(0.0385697013093565, worksheet.costpercapita_aj139, 0.002); end
  def test_costpercapita_ak139; assert_in_delta(0.08228553517656419, worksheet.costpercapita_ak139, 0.002); end
  def test_costpercapita_al139; assert_in_delta(0.19749369850207865, worksheet.costpercapita_al139, 0.002); end
  def test_costpercapita_am139; assert_in_delta(0.2808918939575386, worksheet.costpercapita_am139, 0.002); end
  def test_costpercapita_an139; assert_in_delta(0.3745384822219214, worksheet.costpercapita_an139, 0.002); end
  def test_costpercapita_ao139; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ao139, 0.002); end
  def test_costpercapita_ap139; assert_in_delta(0.5966490253229234, worksheet.costpercapita_ap139, 0.002); end
  def test_costpercapita_aq139; assert_in_delta(0.727374563002047, worksheet.costpercapita_aq139, 0.002); end
  def test_costpercapita_as139; assert_in_delta(0.308581398055175, worksheet.costpercapita_as139, 0.002); end
  def test_costpercapita_at139; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_at139, 0.002); end
  def test_costpercapita_ay139; assert_in_delta(0.0, (worksheet.costpercapita_ay139||0), 0.002); end
  def test_costpercapita_az139; assert_in_delta(0.0, (worksheet.costpercapita_az139||0), 0.002); end
  def test_costpercapita_ba139; assert_in_delta(0.0, (worksheet.costpercapita_ba139||0), 0.002); end
  def test_costpercapita_bb139; assert_in_delta(0.0, (worksheet.costpercapita_bb139||0), 0.002); end
  def test_costpercapita_bc139; assert_in_delta(0.0, (worksheet.costpercapita_bc139||0), 0.002); end
  def test_costpercapita_bd139; assert_in_delta(0.0, (worksheet.costpercapita_bd139||0), 0.002); end
  def test_costpercapita_be139; assert_in_delta(0.0, (worksheet.costpercapita_be139||0), 0.002); end
  def test_costpercapita_bf139; assert_in_delta(0.0, (worksheet.costpercapita_bf139||0), 0.002); end
  def test_costpercapita_bg139; assert_in_delta(0.0, (worksheet.costpercapita_bg139||0), 0.002); end
  def test_costpercapita_bi139; assert_in_delta(0.0, (worksheet.costpercapita_bi139||0), 0.002); end
  def test_costpercapita_bj139; assert_in_delta(0.0, (worksheet.costpercapita_bj139||0), 0.002); end
  def test_costpercapita_bk139; assert_in_delta(0.0, (worksheet.costpercapita_bk139||0), 0.002); end
  def test_costpercapita_bl139; assert_in_delta(0.0, (worksheet.costpercapita_bl139||0), 0.002); end
  def test_costpercapita_bm139; assert_in_delta(0.0, (worksheet.costpercapita_bm139||0), 0.002); end
  def test_costpercapita_bn139; assert_in_delta(0.0, (worksheet.costpercapita_bn139||0), 0.002); end
  def test_costpercapita_bo139; assert_in_delta(0.0, (worksheet.costpercapita_bo139||0), 0.002); end
  def test_costpercapita_bp139; assert_in_delta(0.0, (worksheet.costpercapita_bp139||0), 0.002); end
  def test_costpercapita_bq139; assert_in_delta(0.0, (worksheet.costpercapita_bq139||0), 0.002); end
  def test_costpercapita_bs139; assert_in_delta(0.0, (worksheet.costpercapita_bs139||0), 0.002); end
  def test_costpercapita_bt139; assert_in_delta(0.0385697013093565, worksheet.costpercapita_bt139, 0.002); end
  def test_costpercapita_bu139; assert_in_delta(0.08228553517656419, worksheet.costpercapita_bu139, 0.002); end
  def test_costpercapita_bv139; assert_in_delta(0.19749369850207865, worksheet.costpercapita_bv139, 0.002); end
  def test_costpercapita_bw139; assert_in_delta(0.2808918939575386, worksheet.costpercapita_bw139, 0.002); end
  def test_costpercapita_bx139; assert_in_delta(0.3745384822219214, worksheet.costpercapita_bx139, 0.002); end
  def test_costpercapita_by139; assert_in_delta(0.4794296830041448, worksheet.costpercapita_by139, 0.002); end
  def test_costpercapita_bz139; assert_in_delta(0.5966490253229234, worksheet.costpercapita_bz139, 0.002); end
  def test_costpercapita_ca139; assert_in_delta(0.727374563002047, worksheet.costpercapita_ca139, 0.002); end
  def test_costpercapita_cc139; assert_in_delta(0.308581398055175, worksheet.costpercapita_cc139, 0.002); end
  def test_costpercapita_cd139; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_cd139, 0.002); end
  def test_costpercapita_cf139; assert_in_delta(0.0, (worksheet.costpercapita_cf139||0), 0.002); end
  def test_costpercapita_cg139; assert_in_delta(0.0, (worksheet.costpercapita_cg139||0), 0.002); end
  def test_costpercapita_ch139; assert_in_delta(0.0, (worksheet.costpercapita_ch139||0), 0.002); end
  def test_costpercapita_ci139; assert_in_delta(0.0, (worksheet.costpercapita_ci139||0), 0.002); end
  def test_costpercapita_cj139; assert_in_delta(0.0, (worksheet.costpercapita_cj139||0), 0.002); end
  def test_costpercapita_ck139; assert_in_delta(0.0, (worksheet.costpercapita_ck139||0), 0.002); end
  def test_costpercapita_cl139; assert_in_delta(0.0, (worksheet.costpercapita_cl139||0), 0.002); end
  def test_costpercapita_cm139; assert_in_delta(0.0, (worksheet.costpercapita_cm139||0), 0.002); end
  def test_costpercapita_cn139; assert_in_delta(0.0, (worksheet.costpercapita_cn139||0), 0.002); end
  def test_costpercapita_cp139; assert_in_delta(0.0, (worksheet.costpercapita_cp139||0), 0.002); end
  def test_costpercapita_cq139; assert_in_delta(0.0, (worksheet.costpercapita_cq139||0), 0.002); end
  def test_costpercapita_cr139; assert_equal("ok", worksheet.costpercapita_cr139); end
  def test_costpercapita_c140; assert_equal("Electricity", worksheet.costpercapita_c140); end
  def test_costpercapita_e140; assert_in_epsilon(162.1678545117381, worksheet.costpercapita_e140, 0.002); end
  def test_costpercapita_f140; assert_in_epsilon(235.97031577783508, worksheet.costpercapita_f140, 0.002); end
  def test_costpercapita_g140; assert_in_epsilon(807.8695668629255, worksheet.costpercapita_g140, 0.002); end
  def test_costpercapita_h140; assert_in_epsilon(1311.3361440957276, worksheet.costpercapita_h140, 0.002); end
  def test_costpercapita_i140; assert_in_epsilon(1778.7628201721875, worksheet.costpercapita_i140, 0.002); end
  def test_costpercapita_j140; assert_in_epsilon(2162.1393799401453, worksheet.costpercapita_j140, 0.002); end
  def test_costpercapita_k140; assert_in_epsilon(2556.0308743033124, worksheet.costpercapita_k140, 0.002); end
  def test_costpercapita_l140; assert_in_epsilon(2991.0839359591387, worksheet.costpercapita_l140, 0.002); end
  def test_costpercapita_m140; assert_in_epsilon(3419.1860753625874, worksheet.costpercapita_m140, 0.002); end
  def test_costpercapita_o140; assert_in_epsilon(410.2823420788855, worksheet.costpercapita_o140, 0.002); end
  def test_costpercapita_p140; assert_in_epsilon(467.80948495618554, worksheet.costpercapita_p140, 0.002); end
  def test_costpercapita_q140; assert_in_epsilon(615.9205693856599, worksheet.costpercapita_q140, 0.002); end
  def test_costpercapita_r140; assert_in_epsilon(896.617253133582, worksheet.costpercapita_r140, 0.002); end
  def test_costpercapita_s140; assert_in_epsilon(1180.178449627675, worksheet.costpercapita_s140, 0.002); end
  def test_costpercapita_t140; assert_in_epsilon(1394.1945559834633, worksheet.costpercapita_t140, 0.002); end
  def test_costpercapita_u140; assert_in_epsilon(1587.237176560804, worksheet.costpercapita_u140, 0.002); end
  def test_costpercapita_v140; assert_in_epsilon(1847.6520838399256, worksheet.costpercapita_v140, 0.002); end
  def test_costpercapita_w140; assert_in_epsilon(2109.272484988134, worksheet.costpercapita_w140, 0.002); end
  def test_costpercapita_y140; assert_in_delta(0.0, (worksheet.costpercapita_y140||0), 0.002); end
  def test_costpercapita_z140; assert_in_delta(0.0, (worksheet.costpercapita_z140||0), 0.002); end
  def test_costpercapita_aa140; assert_in_delta(0.0, (worksheet.costpercapita_aa140||0), 0.002); end
  def test_costpercapita_ab140; assert_in_delta(0.0, (worksheet.costpercapita_ab140||0), 0.002); end
  def test_costpercapita_ac140; assert_in_delta(0.0, (worksheet.costpercapita_ac140||0), 0.002); end
  def test_costpercapita_ad140; assert_in_delta(0.0, (worksheet.costpercapita_ad140||0), 0.002); end
  def test_costpercapita_ae140; assert_in_delta(0.0, (worksheet.costpercapita_ae140||0), 0.002); end
  def test_costpercapita_af140; assert_in_delta(0.0, (worksheet.costpercapita_af140||0), 0.002); end
  def test_costpercapita_ag140; assert_in_delta(0.0, (worksheet.costpercapita_ag140||0), 0.002); end
  def test_costpercapita_ai140; assert_in_epsilon(572.4501965906236, worksheet.costpercapita_ai140, 0.002); end
  def test_costpercapita_aj140; assert_in_epsilon(703.7798007340207, worksheet.costpercapita_aj140, 0.002); end
  def test_costpercapita_ak140; assert_in_epsilon(1423.7901362485854, worksheet.costpercapita_ak140, 0.002); end
  def test_costpercapita_al140; assert_in_epsilon(2207.9533972293098, worksheet.costpercapita_al140, 0.002); end
  def test_costpercapita_am140; assert_in_epsilon(2958.9412697998623, worksheet.costpercapita_am140, 0.002); end
  def test_costpercapita_an140; assert_in_epsilon(3556.333935923609, worksheet.costpercapita_an140, 0.002); end
  def test_costpercapita_ao140; assert_in_epsilon(4143.268050864117, worksheet.costpercapita_ao140, 0.002); end
  def test_costpercapita_ap140; assert_in_epsilon(4838.736019799064, worksheet.costpercapita_ap140, 0.002); end
  def test_costpercapita_aq140; assert_in_epsilon(5528.458560350722, worksheet.costpercapita_aq140, 0.002); end
  def test_costpercapita_as140; assert_in_epsilon(2881.5234852822123, worksheet.costpercapita_as140, 0.002); end
  def test_costpercapita_at140; assert_in_epsilon(52275.43527386424, worksheet.costpercapita_at140, 0.002); end
  def test_costpercapita_ay140; assert_in_epsilon(692.2718140510763, worksheet.costpercapita_ay140, 0.002); end
  def test_costpercapita_az140; assert_in_epsilon(930.0239876772578, worksheet.costpercapita_az140, 0.002); end
  def test_costpercapita_ba140; assert_in_epsilon(2469.8931404168566, worksheet.costpercapita_ba140, 0.002); end
  def test_costpercapita_bb140; assert_in_epsilon(3871.2054088731306, worksheet.costpercapita_bb140, 0.002); end
  def test_costpercapita_bc140; assert_in_epsilon(5114.064339829976, worksheet.costpercapita_bc140, 0.002); end
  def test_costpercapita_bd140; assert_in_epsilon(6163.191864538085, worksheet.costpercapita_bd140, 0.002); end
  def test_costpercapita_be140; assert_in_epsilon(7228.32290396951, worksheet.costpercapita_be140, 0.002); end
  def test_costpercapita_bf140; assert_in_epsilon(8419.090534162104, worksheet.costpercapita_bf140, 0.002); end
  def test_costpercapita_bg140; assert_in_epsilon(9590.113459168671, worksheet.costpercapita_bg140, 0.002); end
  def test_costpercapita_bi140; assert_in_delta(0.0, (worksheet.costpercapita_bi140||0), 0.002); end
  def test_costpercapita_bj140; assert_in_delta(0.0, (worksheet.costpercapita_bj140||0), 0.002); end
  def test_costpercapita_bk140; assert_in_delta(0.0, (worksheet.costpercapita_bk140||0), 0.002); end
  def test_costpercapita_bl140; assert_in_delta(0.0, (worksheet.costpercapita_bl140||0), 0.002); end
  def test_costpercapita_bm140; assert_in_delta(0.0, (worksheet.costpercapita_bm140||0), 0.002); end
  def test_costpercapita_bn140; assert_in_delta(0.0, (worksheet.costpercapita_bn140||0), 0.002); end
  def test_costpercapita_bo140; assert_in_delta(0.0, (worksheet.costpercapita_bo140||0), 0.002); end
  def test_costpercapita_bp140; assert_in_delta(0.0, (worksheet.costpercapita_bp140||0), 0.002); end
  def test_costpercapita_bq140; assert_in_delta(0.0, (worksheet.costpercapita_bq140||0), 0.002); end
  def test_costpercapita_bs140; assert_in_epsilon(1102.5541561299617, worksheet.costpercapita_bs140, 0.002); end
  def test_costpercapita_bt140; assert_in_epsilon(1397.8334726334433, worksheet.costpercapita_bt140, 0.002); end
  def test_costpercapita_bu140; assert_in_epsilon(3085.813709802516, worksheet.costpercapita_bu140, 0.002); end
  def test_costpercapita_bv140; assert_in_epsilon(4767.822662006713, worksheet.costpercapita_bv140, 0.002); end
  def test_costpercapita_bw140; assert_in_epsilon(6294.24278945765, worksheet.costpercapita_bw140, 0.002); end
  def test_costpercapita_bx140; assert_in_epsilon(7557.386420521548, worksheet.costpercapita_bx140, 0.002); end
  def test_costpercapita_by140; assert_in_epsilon(8815.560080530313, worksheet.costpercapita_by140, 0.002); end
  def test_costpercapita_bz140; assert_in_epsilon(10266.74261800203, worksheet.costpercapita_bz140, 0.002); end
  def test_costpercapita_ca140; assert_in_epsilon(11699.385944156804, worksheet.costpercapita_ca140, 0.002); end
  def test_costpercapita_cc140; assert_in_epsilon(6109.704650360108, worksheet.costpercapita_cc140, 0.002); end
  def test_costpercapita_cd140; assert_in_epsilon(110948.43718477678, worksheet.costpercapita_cd140, 0.002); end
  def test_costpercapita_cf140; assert_in_epsilon(530.1039595393381, worksheet.costpercapita_cf140, 0.002); end
  def test_costpercapita_cg140; assert_in_epsilon(694.0536718994229, worksheet.costpercapita_cg140, 0.002); end
  def test_costpercapita_ch140; assert_in_epsilon(1662.0235735539309, worksheet.costpercapita_ch140, 0.002); end
  def test_costpercapita_ci140; assert_in_epsilon(2559.8692647774033, worksheet.costpercapita_ci140, 0.002); end
  def test_costpercapita_cj140; assert_in_epsilon(3335.301519657789, worksheet.costpercapita_cj140, 0.002); end
  def test_costpercapita_ck140; assert_in_epsilon(4001.0524845979407, worksheet.costpercapita_ck140, 0.002); end
  def test_costpercapita_cl140; assert_in_epsilon(4672.292029666197, worksheet.costpercapita_cl140, 0.002); end
  def test_costpercapita_cm140; assert_in_epsilon(5428.006598202966, worksheet.costpercapita_cm140, 0.002); end
  def test_costpercapita_cn140; assert_in_epsilon(6170.927383806084, worksheet.costpercapita_cn140, 0.002); end
  def test_costpercapita_cp140; assert_in_epsilon(3228.1811650778964, worksheet.costpercapita_cp140, 0.002); end
  def test_costpercapita_cq140; assert_in_epsilon(58673.00191091254, worksheet.costpercapita_cq140, 0.002); end
  def test_costpercapita_cr140; assert_equal("ok", worksheet.costpercapita_cr140); end
  def test_costpercapita_c141; assert_equal("Buildings", worksheet.costpercapita_c141); end
  def test_costpercapita_e141; assert_in_epsilon(1595.221406498639, worksheet.costpercapita_e141, 0.002); end
  def test_costpercapita_f141; assert_in_epsilon(1702.3991615970483, worksheet.costpercapita_f141, 0.002); end
  def test_costpercapita_g141; assert_in_epsilon(1842.059550100214, worksheet.costpercapita_g141, 0.002); end
  def test_costpercapita_h141; assert_in_epsilon(1946.762728511234, worksheet.costpercapita_h141, 0.002); end
  def test_costpercapita_i141; assert_in_epsilon(2036.2411008693048, worksheet.costpercapita_i141, 0.002); end
  def test_costpercapita_j141; assert_in_epsilon(2202.0004579509773, worksheet.costpercapita_j141, 0.002); end
  def test_costpercapita_k141; assert_in_epsilon(2372.295500471156, worksheet.costpercapita_k141, 0.002); end
  def test_costpercapita_l141; assert_in_epsilon(2547.8492537973843, worksheet.costpercapita_l141, 0.002); end
  def test_costpercapita_m141; assert_in_epsilon(2730.8057432699875, worksheet.costpercapita_m141, 0.002); end
  def test_costpercapita_o141; assert_in_epsilon(88.9188251404746, worksheet.costpercapita_o141, 0.002); end
  def test_costpercapita_p141; assert_in_epsilon(93.47712491681816, worksheet.costpercapita_p141, 0.002); end
  def test_costpercapita_q141; assert_in_epsilon(99.7719207105345, worksheet.costpercapita_q141, 0.002); end
  def test_costpercapita_r141; assert_in_epsilon(104.25800642159912, worksheet.costpercapita_r141, 0.002); end
  def test_costpercapita_s141; assert_in_epsilon(107.85481162702655, worksheet.costpercapita_s141, 0.002); end
  def test_costpercapita_t141; assert_in_epsilon(117.35176803924438, worksheet.costpercapita_t141, 0.002); end
  def test_costpercapita_u141; assert_in_epsilon(127.23784479433996, worksheet.costpercapita_u141, 0.002); end
  def test_costpercapita_v141; assert_in_epsilon(137.57268885727797, worksheet.costpercapita_v141, 0.002); end
  def test_costpercapita_w141; assert_in_epsilon(148.4868372951826, worksheet.costpercapita_w141, 0.002); end
  def test_costpercapita_y141; assert_in_delta(0.0, (worksheet.costpercapita_y141||0), 0.002); end
  def test_costpercapita_z141; assert_in_delta(0.0, (worksheet.costpercapita_z141||0), 0.002); end
  def test_costpercapita_aa141; assert_in_delta(0.0, (worksheet.costpercapita_aa141||0), 0.002); end
  def test_costpercapita_ab141; assert_in_delta(0.0, (worksheet.costpercapita_ab141||0), 0.002); end
  def test_costpercapita_ac141; assert_in_delta(0.0, (worksheet.costpercapita_ac141||0), 0.002); end
  def test_costpercapita_ad141; assert_in_delta(0.0, (worksheet.costpercapita_ad141||0), 0.002); end
  def test_costpercapita_ae141; assert_in_delta(0.0, (worksheet.costpercapita_ae141||0), 0.002); end
  def test_costpercapita_af141; assert_in_delta(0.0, (worksheet.costpercapita_af141||0), 0.002); end
  def test_costpercapita_ag141; assert_in_delta(0.0, (worksheet.costpercapita_ag141||0), 0.002); end
  def test_costpercapita_ai141; assert_in_epsilon(1684.1402316391136, worksheet.costpercapita_ai141, 0.002); end
  def test_costpercapita_aj141; assert_in_epsilon(1795.8762865138665, worksheet.costpercapita_aj141, 0.002); end
  def test_costpercapita_ak141; assert_in_epsilon(1941.8314708107487, worksheet.costpercapita_ak141, 0.002); end
  def test_costpercapita_al141; assert_in_epsilon(2051.020734932833, worksheet.costpercapita_al141, 0.002); end
  def test_costpercapita_am141; assert_in_epsilon(2144.0959124963315, worksheet.costpercapita_am141, 0.002); end
  def test_costpercapita_an141; assert_in_epsilon(2319.352225990222, worksheet.costpercapita_an141, 0.002); end
  def test_costpercapita_ao141; assert_in_epsilon(2499.5333452654963, worksheet.costpercapita_ao141, 0.002); end
  def test_costpercapita_ap141; assert_in_epsilon(2685.4219426546624, worksheet.costpercapita_ap141, 0.002); end
  def test_costpercapita_aq141; assert_in_epsilon(2879.29258056517, worksheet.costpercapita_aq141, 0.002); end
  def test_costpercapita_as141; assert_in_epsilon(2222.2849700964935, worksheet.costpercapita_as141, 0.002); end
  def test_costpercapita_at141; assert_in_epsilon(44939.3558109562, worksheet.costpercapita_at141, 0.002); end
  def test_costpercapita_ay141; assert_in_epsilon(2483.883149993693, worksheet.costpercapita_ay141, 0.002); end
  def test_costpercapita_az141; assert_in_epsilon(2636.439554093526, worksheet.costpercapita_az141, 0.002); end
  def test_costpercapita_ba141; assert_in_epsilon(2838.567630703807, worksheet.costpercapita_ba141, 0.002); end
  def test_costpercapita_bb141; assert_in_epsilon(2991.1790692810587, worksheet.costpercapita_bb141, 0.002); end
  def test_costpercapita_bc141; assert_in_epsilon(3120.7369150920467, worksheet.costpercapita_bc141, 0.002); end
  def test_costpercapita_bd141; assert_in_epsilon(3378.77228117309, worksheet.costpercapita_bd141, 0.002); end
  def test_costpercapita_be141; assert_in_epsilon(3646.135100981667, worksheet.costpercapita_be141, 0.002); end
  def test_costpercapita_bf141; assert_in_epsilon(3924.179649260599, worksheet.costpercapita_bf141, 0.002); end
  def test_costpercapita_bg141; assert_in_epsilon(4216.321138354135, worksheet.costpercapita_bg141, 0.002); end
  def test_costpercapita_bi141; assert_in_delta(0.0, (worksheet.costpercapita_bi141||0), 0.002); end
  def test_costpercapita_bj141; assert_in_delta(0.0, (worksheet.costpercapita_bj141||0), 0.002); end
  def test_costpercapita_bk141; assert_in_delta(0.0, (worksheet.costpercapita_bk141||0), 0.002); end
  def test_costpercapita_bl141; assert_in_delta(0.0, (worksheet.costpercapita_bl141||0), 0.002); end
  def test_costpercapita_bm141; assert_in_delta(0.0, (worksheet.costpercapita_bm141||0), 0.002); end
  def test_costpercapita_bn141; assert_in_delta(0.0, (worksheet.costpercapita_bn141||0), 0.002); end
  def test_costpercapita_bo141; assert_in_delta(0.0, (worksheet.costpercapita_bo141||0), 0.002); end
  def test_costpercapita_bp141; assert_in_delta(0.0, (worksheet.costpercapita_bp141||0), 0.002); end
  def test_costpercapita_bq141; assert_in_delta(0.0, (worksheet.costpercapita_bq141||0), 0.002); end
  def test_costpercapita_bs141; assert_in_epsilon(2572.801975134169, worksheet.costpercapita_bs141, 0.002); end
  def test_costpercapita_bt141; assert_in_epsilon(2729.916679010345, worksheet.costpercapita_bt141, 0.002); end
  def test_costpercapita_bu141; assert_in_epsilon(2938.3395514143417, worksheet.costpercapita_bu141, 0.002); end
  def test_costpercapita_bv141; assert_in_epsilon(3095.4370757026577, worksheet.costpercapita_bv141, 0.002); end
  def test_costpercapita_bw141; assert_in_epsilon(3228.5917267190734, worksheet.costpercapita_bw141, 0.002); end
  def test_costpercapita_bx141; assert_in_epsilon(3496.124049212334, worksheet.costpercapita_bx141, 0.002); end
  def test_costpercapita_by141; assert_in_epsilon(3773.3729457760073, worksheet.costpercapita_by141, 0.002); end
  def test_costpercapita_bz141; assert_in_epsilon(4061.752338117876, worksheet.costpercapita_bz141, 0.002); end
  def test_costpercapita_ca141; assert_in_epsilon(4364.807975649317, worksheet.costpercapita_ca141, 0.002); end
  def test_costpercapita_cc141; assert_in_epsilon(3362.349368526236, worksheet.costpercapita_cc141, 0.002); end
  def test_costpercapita_cd141; assert_in_epsilon(67977.54374669827, worksheet.costpercapita_cd141, 0.002); end
  def test_costpercapita_cf141; assert_in_epsilon(888.6617434950547, worksheet.costpercapita_cf141, 0.002); end
  def test_costpercapita_cg141; assert_in_epsilon(934.0403924964785, worksheet.costpercapita_cg141, 0.002); end
  def test_costpercapita_ch141; assert_in_epsilon(996.5080806035935, worksheet.costpercapita_ch141, 0.002); end
  def test_costpercapita_ci141; assert_in_epsilon(1044.416340769824, worksheet.costpercapita_ci141, 0.002); end
  def test_costpercapita_cj141; assert_in_epsilon(1084.495814222742, worksheet.costpercapita_cj141, 0.002); end
  def test_costpercapita_ck141; assert_in_epsilon(1176.7718232221127, worksheet.costpercapita_ck141, 0.002); end
  def test_costpercapita_cl141; assert_in_epsilon(1273.839600510511, worksheet.costpercapita_cl141, 0.002); end
  def test_costpercapita_cm141; assert_in_epsilon(1376.3303954632145, worksheet.costpercapita_cm141, 0.002); end
  def test_costpercapita_cn141; assert_in_epsilon(1485.5153950841473, worksheet.costpercapita_cn141, 0.002); end
  def test_costpercapita_cp141; assert_in_epsilon(1140.064398429742, worksheet.costpercapita_cp141, 0.002); end
  def test_costpercapita_cq141; assert_in_epsilon(23038.187935742077, worksheet.costpercapita_cq141, 0.002); end
  def test_costpercapita_cr141; assert_equal("ok", worksheet.costpercapita_cr141); end
  def test_costpercapita_c142; assert_equal("Transport", worksheet.costpercapita_c142); end
  def test_costpercapita_e142; assert_in_epsilon(3050.1752452599135, worksheet.costpercapita_e142, 0.002); end
  def test_costpercapita_f142; assert_in_epsilon(3719.2804055391853, worksheet.costpercapita_f142, 0.002); end
  def test_costpercapita_g142; assert_in_epsilon(4606.739068260258, worksheet.costpercapita_g142, 0.002); end
  def test_costpercapita_h142; assert_in_epsilon(5577.859746776485, worksheet.costpercapita_h142, 0.002); end
  def test_costpercapita_i142; assert_in_epsilon(6632.103348223089, worksheet.costpercapita_i142, 0.002); end
  def test_costpercapita_j142; assert_in_epsilon(7716.160509245263, worksheet.costpercapita_j142, 0.002); end
  def test_costpercapita_k142; assert_in_epsilon(8779.718404119365, worksheet.costpercapita_k142, 0.002); end
  def test_costpercapita_l142; assert_in_epsilon(9821.223711189596, worksheet.costpercapita_l142, 0.002); end
  def test_costpercapita_m142; assert_in_epsilon(10956.749366612126, worksheet.costpercapita_m142, 0.002); end
  def test_costpercapita_o142; assert_in_epsilon(3557.0912576141204, worksheet.costpercapita_o142, 0.002); end
  def test_costpercapita_p142; assert_in_epsilon(4514.482103365505, worksheet.costpercapita_p142, 0.002); end
  def test_costpercapita_q142; assert_in_epsilon(5396.397531272576, worksheet.costpercapita_q142, 0.002); end
  def test_costpercapita_r142; assert_in_epsilon(6229.243200209167, worksheet.costpercapita_r142, 0.002); end
  def test_costpercapita_s142; assert_in_epsilon(7012.871443594914, worksheet.costpercapita_s142, 0.002); end
  def test_costpercapita_t142; assert_in_epsilon(7830.791966309756, worksheet.costpercapita_t142, 0.002); end
  def test_costpercapita_u142; assert_in_epsilon(8209.93466724884, worksheet.costpercapita_u142, 0.002); end
  def test_costpercapita_v142; assert_in_epsilon(8559.523767965273, worksheet.costpercapita_v142, 0.002); end
  def test_costpercapita_w142; assert_in_epsilon(9116.197231906846, worksheet.costpercapita_w142, 0.002); end
  def test_costpercapita_y142; assert_in_delta(0.0, (worksheet.costpercapita_y142||0), 0.002); end
  def test_costpercapita_z142; assert_in_delta(0.0, (worksheet.costpercapita_z142||0), 0.002); end
  def test_costpercapita_aa142; assert_in_delta(0.0, (worksheet.costpercapita_aa142||0), 0.002); end
  def test_costpercapita_ab142; assert_in_delta(0.0, (worksheet.costpercapita_ab142||0), 0.002); end
  def test_costpercapita_ac142; assert_in_delta(0.0, (worksheet.costpercapita_ac142||0), 0.002); end
  def test_costpercapita_ad142; assert_in_delta(0.0, (worksheet.costpercapita_ad142||0), 0.002); end
  def test_costpercapita_ae142; assert_in_delta(0.0, (worksheet.costpercapita_ae142||0), 0.002); end
  def test_costpercapita_af142; assert_in_delta(0.0, (worksheet.costpercapita_af142||0), 0.002); end
  def test_costpercapita_ag142; assert_in_delta(0.0, (worksheet.costpercapita_ag142||0), 0.002); end
  def test_costpercapita_ai142; assert_in_epsilon(6607.266502874035, worksheet.costpercapita_ai142, 0.002); end
  def test_costpercapita_aj142; assert_in_epsilon(8233.76250890469, worksheet.costpercapita_aj142, 0.002); end
  def test_costpercapita_ak142; assert_in_epsilon(10003.136599532834, worksheet.costpercapita_ak142, 0.002); end
  def test_costpercapita_al142; assert_in_epsilon(11807.102946985651, worksheet.costpercapita_al142, 0.002); end
  def test_costpercapita_am142; assert_in_epsilon(13644.974791818002, worksheet.costpercapita_am142, 0.002); end
  def test_costpercapita_an142; assert_in_epsilon(15546.952475555023, worksheet.costpercapita_an142, 0.002); end
  def test_costpercapita_ao142; assert_in_epsilon(16989.653071368204, worksheet.costpercapita_ao142, 0.002); end
  def test_costpercapita_ap142; assert_in_epsilon(18380.74747915487, worksheet.costpercapita_ap142, 0.002); end
  def test_costpercapita_aq142; assert_in_epsilon(20072.94659851897, worksheet.costpercapita_aq142, 0.002); end
  def test_costpercapita_as142; assert_in_epsilon(13476.282552745812, worksheet.costpercapita_as142, 0.002); end
  def test_costpercapita_at142; assert_in_epsilon(264262.8887151651, worksheet.costpercapita_at142, 0.002); end
  def test_costpercapita_ay142; assert_in_epsilon(7142.290498039485, worksheet.costpercapita_ay142, 0.002); end
  def test_costpercapita_az142; assert_in_epsilon(8632.113280354284, worksheet.costpercapita_az142, 0.002); end
  def test_costpercapita_ba142; assert_in_epsilon(10611.141886821042, worksheet.costpercapita_ba142, 0.002); end
  def test_costpercapita_bb142; assert_in_epsilon(12794.401460957495, worksheet.costpercapita_bb142, 0.002); end
  def test_costpercapita_bc142; assert_in_epsilon(15187.210834702946, worksheet.costpercapita_bc142, 0.002); end
  def test_costpercapita_bd142; assert_in_epsilon(17696.21951477983, worksheet.costpercapita_bd142, 0.002); end
  def test_costpercapita_be142; assert_in_epsilon(20234.45725991854, worksheet.costpercapita_be142, 0.002); end
  def test_costpercapita_bf142; assert_in_epsilon(22808.120779030454, worksheet.costpercapita_bf142, 0.002); end
  def test_costpercapita_bg142; assert_in_epsilon(25646.60189317952, worksheet.costpercapita_bg142, 0.002); end
  def test_costpercapita_bi142; assert_in_delta(0.0, (worksheet.costpercapita_bi142||0), 0.002); end
  def test_costpercapita_bj142; assert_in_delta(0.0, (worksheet.costpercapita_bj142||0), 0.002); end
  def test_costpercapita_bk142; assert_in_delta(0.0, (worksheet.costpercapita_bk142||0), 0.002); end
  def test_costpercapita_bl142; assert_in_delta(0.0, (worksheet.costpercapita_bl142||0), 0.002); end
  def test_costpercapita_bm142; assert_in_delta(0.0, (worksheet.costpercapita_bm142||0), 0.002); end
  def test_costpercapita_bn142; assert_in_delta(0.0, (worksheet.costpercapita_bn142||0), 0.002); end
  def test_costpercapita_bo142; assert_in_delta(0.0, (worksheet.costpercapita_bo142||0), 0.002); end
  def test_costpercapita_bp142; assert_in_delta(0.0, (worksheet.costpercapita_bp142||0), 0.002); end
  def test_costpercapita_bq142; assert_in_delta(0.0, (worksheet.costpercapita_bq142||0), 0.002); end
  def test_costpercapita_bs142; assert_in_epsilon(10699.381755653605, worksheet.costpercapita_bs142, 0.002); end
  def test_costpercapita_bt142; assert_in_epsilon(13146.59538371979, worksheet.costpercapita_bt142, 0.002); end
  def test_costpercapita_bu142; assert_in_epsilon(16007.53941809362, worksheet.costpercapita_bu142, 0.002); end
  def test_costpercapita_bv142; assert_in_epsilon(19023.64466116666, worksheet.costpercapita_bv142, 0.002); end
  def test_costpercapita_bw142; assert_in_epsilon(22200.082278297858, worksheet.costpercapita_bw142, 0.002); end
  def test_costpercapita_bx142; assert_in_epsilon(25527.011481089583, worksheet.costpercapita_bx142, 0.002); end
  def test_costpercapita_by142; assert_in_epsilon(28444.39192716738, worksheet.costpercapita_by142, 0.002); end
  def test_costpercapita_bz142; assert_in_epsilon(31367.64454699573, worksheet.costpercapita_bz142, 0.002); end
  def test_costpercapita_ca142; assert_in_epsilon(34762.799125086356, worksheet.costpercapita_ca142, 0.002); end
  def test_costpercapita_cc142; assert_in_epsilon(22353.2322863634, worksheet.costpercapita_cc142, 0.002); end
  def test_costpercapita_cd142; assert_in_epsilon(434304.0185480385, worksheet.costpercapita_cd142, 0.002); end
  def test_costpercapita_cf142; assert_in_epsilon(4092.1152527795707, worksheet.costpercapita_cf142, 0.002); end
  def test_costpercapita_cg142; assert_in_epsilon(4912.832874815099, worksheet.costpercapita_cg142, 0.002); end
  def test_costpercapita_ch142; assert_in_epsilon(6004.402818560784, worksheet.costpercapita_ch142, 0.002); end
  def test_costpercapita_ci142; assert_in_epsilon(7216.5417141810085, worksheet.costpercapita_ci142, 0.002); end
  def test_costpercapita_cj142; assert_in_epsilon(8555.107486479857, worksheet.costpercapita_cj142, 0.002); end
  def test_costpercapita_ck142; assert_in_epsilon(9980.059005534567, worksheet.costpercapita_ck142, 0.002); end
  def test_costpercapita_cl142; assert_in_epsilon(11454.738855799176, worksheet.costpercapita_cl142, 0.002); end
  def test_costpercapita_cm142; assert_in_epsilon(12986.89706784086, worksheet.costpercapita_cm142, 0.002); end
  def test_costpercapita_cn142; assert_in_epsilon(14689.852526567389, worksheet.costpercapita_cn142, 0.002); end
  def test_costpercapita_cp142; assert_in_epsilon(8876.94973361759, worksheet.costpercapita_cp142, 0.002); end
  def test_costpercapita_cq142; assert_in_epsilon(170041.1298328734, worksheet.costpercapita_cq142, 0.002); end
  def test_costpercapita_cr142; assert_equal("ok", worksheet.costpercapita_cr142); end
  def test_costpercapita_c143; assert_equal("Other", worksheet.costpercapita_c143); end
  def test_costpercapita_e143; assert_in_delta(0.0, (worksheet.costpercapita_e143||0), 0.002); end
  def test_costpercapita_f143; assert_in_delta(0.0, (worksheet.costpercapita_f143||0), 0.002); end
  def test_costpercapita_g143; assert_in_delta(0.0, (worksheet.costpercapita_g143||0), 0.002); end
  def test_costpercapita_h143; assert_in_delta(0.0, (worksheet.costpercapita_h143||0), 0.002); end
  def test_costpercapita_i143; assert_in_delta(0.0, (worksheet.costpercapita_i143||0), 0.002); end
  def test_costpercapita_j143; assert_in_delta(0.0, (worksheet.costpercapita_j143||0), 0.002); end
  def test_costpercapita_k143; assert_in_delta(0.0, (worksheet.costpercapita_k143||0), 0.002); end
  def test_costpercapita_l143; assert_in_delta(0.0, (worksheet.costpercapita_l143||0), 0.002); end
  def test_costpercapita_m143; assert_in_delta(0.0, (worksheet.costpercapita_m143||0), 0.002); end
  def test_costpercapita_o143; assert_in_delta(0.0, (worksheet.costpercapita_o143||0), 0.002); end
  def test_costpercapita_p143; assert_in_delta(0.0, (worksheet.costpercapita_p143||0), 0.002); end
  def test_costpercapita_q143; assert_in_delta(0.0, (worksheet.costpercapita_q143||0), 0.002); end
  def test_costpercapita_r143; assert_in_delta(0.0, (worksheet.costpercapita_r143||0), 0.002); end
  def test_costpercapita_s143; assert_in_delta(0.0, (worksheet.costpercapita_s143||0), 0.002); end
  def test_costpercapita_t143; assert_in_delta(0.0, (worksheet.costpercapita_t143||0), 0.002); end
  def test_costpercapita_u143; assert_in_delta(0.0, (worksheet.costpercapita_u143||0), 0.002); end
  def test_costpercapita_v143; assert_in_delta(0.0, (worksheet.costpercapita_v143||0), 0.002); end
  def test_costpercapita_w143; assert_in_delta(0.0, (worksheet.costpercapita_w143||0), 0.002); end
  def test_costpercapita_y143; assert_in_delta(0.0, (worksheet.costpercapita_y143||0), 0.002); end
  def test_costpercapita_z143; assert_in_delta(0.0, (worksheet.costpercapita_z143||0), 0.002); end
  def test_costpercapita_aa143; assert_in_delta(0.0, (worksheet.costpercapita_aa143||0), 0.002); end
  def test_costpercapita_ab143; assert_in_delta(0.0, (worksheet.costpercapita_ab143||0), 0.002); end
  def test_costpercapita_ac143; assert_in_delta(0.0, (worksheet.costpercapita_ac143||0), 0.002); end
  def test_costpercapita_ad143; assert_in_delta(0.0, (worksheet.costpercapita_ad143||0), 0.002); end
  def test_costpercapita_ae143; assert_in_delta(0.0, (worksheet.costpercapita_ae143||0), 0.002); end
  def test_costpercapita_af143; assert_in_delta(0.0, (worksheet.costpercapita_af143||0), 0.002); end
  def test_costpercapita_ag143; assert_in_delta(0.0, (worksheet.costpercapita_ag143||0), 0.002); end
  def test_costpercapita_ai143; assert_in_delta(0.0, (worksheet.costpercapita_ai143||0), 0.002); end
  def test_costpercapita_aj143; assert_in_delta(0.0, (worksheet.costpercapita_aj143||0), 0.002); end
  def test_costpercapita_ak143; assert_in_delta(0.0, (worksheet.costpercapita_ak143||0), 0.002); end
  def test_costpercapita_al143; assert_in_delta(0.0, (worksheet.costpercapita_al143||0), 0.002); end
  def test_costpercapita_am143; assert_in_delta(0.0, (worksheet.costpercapita_am143||0), 0.002); end
  def test_costpercapita_an143; assert_in_delta(0.0, (worksheet.costpercapita_an143||0), 0.002); end
  def test_costpercapita_ao143; assert_in_delta(0.0, (worksheet.costpercapita_ao143||0), 0.002); end
  def test_costpercapita_ap143; assert_in_delta(0.0, (worksheet.costpercapita_ap143||0), 0.002); end
  def test_costpercapita_aq143; assert_in_delta(0.0, (worksheet.costpercapita_aq143||0), 0.002); end
  def test_costpercapita_as143; assert_in_delta(0.0, (worksheet.costpercapita_as143||0), 0.002); end
  def test_costpercapita_at143; assert_in_delta(0.0, (worksheet.costpercapita_at143||0), 0.002); end
  def test_costpercapita_ay143; assert_in_delta(0.0, (worksheet.costpercapita_ay143||0), 0.002); end
  def test_costpercapita_az143; assert_in_delta(0.0, (worksheet.costpercapita_az143||0), 0.002); end
  def test_costpercapita_ba143; assert_in_delta(0.0, (worksheet.costpercapita_ba143||0), 0.002); end
  def test_costpercapita_bb143; assert_in_delta(0.0, (worksheet.costpercapita_bb143||0), 0.002); end
  def test_costpercapita_bc143; assert_in_delta(0.0, (worksheet.costpercapita_bc143||0), 0.002); end
  def test_costpercapita_bd143; assert_in_delta(0.0, (worksheet.costpercapita_bd143||0), 0.002); end
  def test_costpercapita_be143; assert_in_delta(0.0, (worksheet.costpercapita_be143||0), 0.002); end
  def test_costpercapita_bf143; assert_in_delta(0.0, (worksheet.costpercapita_bf143||0), 0.002); end
  def test_costpercapita_bg143; assert_in_delta(0.0, (worksheet.costpercapita_bg143||0), 0.002); end
  def test_costpercapita_bi143; assert_in_delta(0.0, (worksheet.costpercapita_bi143||0), 0.002); end
  def test_costpercapita_bj143; assert_in_delta(0.0, (worksheet.costpercapita_bj143||0), 0.002); end
  def test_costpercapita_bk143; assert_in_delta(0.0, (worksheet.costpercapita_bk143||0), 0.002); end
  def test_costpercapita_bl143; assert_in_delta(0.0, (worksheet.costpercapita_bl143||0), 0.002); end
  def test_costpercapita_bm143; assert_in_delta(0.0, (worksheet.costpercapita_bm143||0), 0.002); end
  def test_costpercapita_bn143; assert_in_delta(0.0, (worksheet.costpercapita_bn143||0), 0.002); end
  def test_costpercapita_bo143; assert_in_delta(0.0, (worksheet.costpercapita_bo143||0), 0.002); end
  def test_costpercapita_bp143; assert_in_delta(0.0, (worksheet.costpercapita_bp143||0), 0.002); end
  def test_costpercapita_bq143; assert_in_delta(0.0, (worksheet.costpercapita_bq143||0), 0.002); end
  def test_costpercapita_bs143; assert_in_delta(0.0, (worksheet.costpercapita_bs143||0), 0.002); end
  def test_costpercapita_bt143; assert_in_delta(0.0, (worksheet.costpercapita_bt143||0), 0.002); end
  def test_costpercapita_bu143; assert_in_delta(0.0, (worksheet.costpercapita_bu143||0), 0.002); end
  def test_costpercapita_bv143; assert_in_delta(0.0, (worksheet.costpercapita_bv143||0), 0.002); end
  def test_costpercapita_bw143; assert_in_delta(0.0, (worksheet.costpercapita_bw143||0), 0.002); end
  def test_costpercapita_bx143; assert_in_delta(0.0, (worksheet.costpercapita_bx143||0), 0.002); end
  def test_costpercapita_by143; assert_in_delta(0.0, (worksheet.costpercapita_by143||0), 0.002); end
  def test_costpercapita_bz143; assert_in_delta(0.0, (worksheet.costpercapita_bz143||0), 0.002); end
  def test_costpercapita_ca143; assert_in_delta(0.0, (worksheet.costpercapita_ca143||0), 0.002); end
  def test_costpercapita_cc143; assert_in_delta(0.0, (worksheet.costpercapita_cc143||0), 0.002); end
  def test_costpercapita_cd143; assert_in_delta(0.0, (worksheet.costpercapita_cd143||0), 0.002); end
  def test_costpercapita_cf143; assert_in_delta(0.0, (worksheet.costpercapita_cf143||0), 0.002); end
  def test_costpercapita_cg143; assert_in_delta(0.0, (worksheet.costpercapita_cg143||0), 0.002); end
  def test_costpercapita_ch143; assert_in_delta(0.0, (worksheet.costpercapita_ch143||0), 0.002); end
  def test_costpercapita_ci143; assert_in_delta(0.0, (worksheet.costpercapita_ci143||0), 0.002); end
  def test_costpercapita_cj143; assert_in_delta(0.0, (worksheet.costpercapita_cj143||0), 0.002); end
  def test_costpercapita_ck143; assert_in_delta(0.0, (worksheet.costpercapita_ck143||0), 0.002); end
  def test_costpercapita_cl143; assert_in_delta(0.0, (worksheet.costpercapita_cl143||0), 0.002); end
  def test_costpercapita_cm143; assert_in_delta(0.0, (worksheet.costpercapita_cm143||0), 0.002); end
  def test_costpercapita_cn143; assert_in_delta(0.0, (worksheet.costpercapita_cn143||0), 0.002); end
  def test_costpercapita_cp143; assert_in_delta(0.0, (worksheet.costpercapita_cp143||0), 0.002); end
  def test_costpercapita_cq143; assert_in_delta(0.0, (worksheet.costpercapita_cq143||0), 0.002); end
  def test_costpercapita_cr143; assert_equal("ok", worksheet.costpercapita_cr143); end
  def test_costpercapita_c144; assert_equal("Total", worksheet.costpercapita_c144); end
  def test_costpercapita_e144; assert_in_epsilon(4814.168098504832, worksheet.costpercapita_e144, 0.002); end
  def test_costpercapita_f144; assert_in_epsilon(5665.440161936965, worksheet.costpercapita_f144, 0.002); end
  def test_costpercapita_g144; assert_in_epsilon(7256.668185223398, worksheet.costpercapita_g144, 0.002); end
  def test_costpercapita_h144; assert_in_epsilon(8835.958619383448, worksheet.costpercapita_h144, 0.002); end
  def test_costpercapita_i144; assert_in_epsilon(10447.107269264581, worksheet.costpercapita_i144, 0.002); end
  def test_costpercapita_j144; assert_in_epsilon(12084.442962516852, worksheet.costpercapita_j144, 0.002); end
  def test_costpercapita_k144; assert_in_epsilon(13703.815024358842, worksheet.costpercapita_k144, 0.002); end
  def test_costpercapita_l144; assert_in_epsilon(15355.59001193722, worksheet.costpercapita_l144, 0.002); end
  def test_costpercapita_m144; assert_in_epsilon(17092.17272005676, worksheet.costpercapita_m144, 0.002); end
  def test_costpercapita_o144; assert_in_epsilon(4374.795581005306, worksheet.costpercapita_o144, 0.002); end
  def test_costpercapita_p144; assert_in_epsilon(5386.2974683113, worksheet.costpercapita_p144, 0.002); end
  def test_costpercapita_q144; assert_in_epsilon(6417.952713978906, worksheet.costpercapita_q144, 0.002); end
  def test_costpercapita_r144; assert_in_epsilon(7528.940786116864, worksheet.costpercapita_r144, 0.002); end
  def test_costpercapita_s144; assert_in_epsilon(8591.50837187882, worksheet.costpercapita_s144, 0.002); end
  def test_costpercapita_t144; assert_in_epsilon(9592.475074318592, worksheet.costpercapita_t144, 0.002); end
  def test_costpercapita_u144; assert_in_epsilon(10130.986147185626, worksheet.costpercapita_u144, 0.002); end
  def test_costpercapita_v144; assert_in_epsilon(10656.434669061888, worksheet.costpercapita_v144, 0.002); end
  def test_costpercapita_w144; assert_in_epsilon(11454.786256027222, worksheet.costpercapita_w144, 0.002); end
  def test_costpercapita_y144; assert_in_epsilon(151.49952838097238, worksheet.costpercapita_y144, 0.002); end
  def test_costpercapita_z144; assert_in_epsilon(-183.0657583877927, worksheet.costpercapita_z144, 0.002); end
  def test_costpercapita_aa144; assert_in_epsilon(-207.19537836851967, worksheet.costpercapita_aa144, 0.002); end
  def test_costpercapita_ab144; assert_in_epsilon(-175.11408789621797, worksheet.costpercapita_ab144, 0.002); end
  def test_costpercapita_ac144; assert_in_epsilon(-948.1751184040119, worksheet.costpercapita_ac144, 0.002); end
  def test_costpercapita_ad144; assert_in_epsilon(-1248.9033571441526, worksheet.costpercapita_ad144, 0.002); end
  def test_costpercapita_ae144; assert_in_epsilon(-1830.777904516906, worksheet.costpercapita_ae144, 0.002); end
  def test_costpercapita_af144; assert_in_epsilon(-2143.894468219137, worksheet.costpercapita_af144, 0.002); end
  def test_costpercapita_ag144; assert_in_epsilon(-2715.504003821243, worksheet.costpercapita_ag144, 0.002); end
  def test_costpercapita_ai144; assert_in_epsilon(9340.463207891113, worksheet.costpercapita_ai144, 0.002); end
  def test_costpercapita_aj144; assert_in_epsilon(10868.671871860472, worksheet.costpercapita_aj144, 0.002); end
  def test_costpercapita_ak144; assert_in_epsilon(13467.425520833785, worksheet.costpercapita_ak144, 0.002); end
  def test_costpercapita_al144; assert_in_epsilon(16189.785317604092, worksheet.costpercapita_al144, 0.002); end
  def test_costpercapita_am144; assert_in_epsilon(18090.440522739387, worksheet.costpercapita_am144, 0.002); end
  def test_costpercapita_an144; assert_in_epsilon(20428.014679691296, worksheet.costpercapita_an144, 0.002); end
  def test_costpercapita_ao144; assert_in_epsilon(22004.02326702756, worksheet.costpercapita_ao144, 0.002); end
  def test_costpercapita_ap144; assert_in_epsilon(23868.13021277997, worksheet.costpercapita_ap144, 0.002); end
  def test_costpercapita_aq144; assert_in_epsilon(25831.454972262738, worksheet.costpercapita_aq144, 0.002); end
  def test_costpercapita_as144; assert_in_epsilon(17787.601063632268, worksheet.costpercapita_as144, 0.002); end
  def test_costpercapita_at144; assert_in_epsilon(349943.5897747545, worksheet.costpercapita_at144, 0.002); end
  def test_costpercapita_ay144; assert_in_epsilon(10329.321046050305, worksheet.costpercapita_ay144, 0.002); end
  def test_costpercapita_az144; assert_in_epsilon(12211.406783549592, worksheet.costpercapita_az144, 0.002); end
  def test_costpercapita_ba144; assert_in_epsilon(15919.602657941705, worksheet.costpercapita_ba144, 0.002); end
  def test_costpercapita_bb144; assert_in_epsilon(19656.785939111684, worksheet.costpercapita_bb144, 0.002); end
  def test_costpercapita_bc144; assert_in_epsilon(23422.01208962497, worksheet.costpercapita_bc144, 0.002); end
  def test_costpercapita_bd144; assert_in_epsilon(27245.006214005687, worksheet.costpercapita_bd144, 0.002); end
  def test_costpercapita_be144; assert_in_epsilon(31061.965274969323, worksheet.costpercapita_be144, 0.002); end
  def test_costpercapita_bf144; assert_in_epsilon(35103.88573925721, worksheet.costpercapita_bf144, 0.002); end
  def test_costpercapita_bg144; assert_in_epsilon(39360.73643305994, worksheet.costpercapita_bg144, 0.002); end
  def test_costpercapita_bi144; assert_in_delta(0.0, (worksheet.costpercapita_bi144||0), 0.002); end
  def test_costpercapita_bj144; assert_in_delta(0.0, (worksheet.costpercapita_bj144||0), 0.002); end
  def test_costpercapita_bk144; assert_in_delta(0.0, (worksheet.costpercapita_bk144||0), 0.002); end
  def test_costpercapita_bl144; assert_in_delta(0.0, (worksheet.costpercapita_bl144||0), 0.002); end
  def test_costpercapita_bm144; assert_in_delta(0.0, (worksheet.costpercapita_bm144||0), 0.002); end
  def test_costpercapita_bn144; assert_in_delta(0.0, (worksheet.costpercapita_bn144||0), 0.002); end
  def test_costpercapita_bo144; assert_in_delta(0.0, (worksheet.costpercapita_bo144||0), 0.002); end
  def test_costpercapita_bp144; assert_in_delta(0.0, (worksheet.costpercapita_bp144||0), 0.002); end
  def test_costpercapita_bq144; assert_in_delta(0.0, (worksheet.costpercapita_bq144||0), 0.002); end
  def test_costpercapita_bs144; assert_in_epsilon(16370.129214578694, worksheet.costpercapita_bs144, 0.002); end
  def test_costpercapita_bt144; assert_in_epsilon(19401.395414584782, worksheet.costpercapita_bt144, 0.002); end
  def test_costpercapita_bu144; assert_in_epsilon(23405.93487048195, worksheet.costpercapita_bu144, 0.002); end
  def test_costpercapita_bv144; assert_in_epsilon(28376.795307655928, worksheet.costpercapita_bv144, 0.002); end
  def test_costpercapita_bw144; assert_in_epsilon(33372.93744757436, worksheet.costpercapita_bw144, 0.002); end
  def test_costpercapita_bx144; assert_in_epsilon(38376.196059128306, worksheet.costpercapita_bx144, 0.002); end
  def test_costpercapita_by144; assert_in_epsilon(42882.71256141683, worksheet.costpercapita_by144, 0.002); end
  def test_costpercapita_bz144; assert_in_epsilon(47846.7905054472, worksheet.costpercapita_bz144, 0.002); end
  def test_costpercapita_ca144; assert_in_epsilon(53190.08523286633, worksheet.costpercapita_ca144, 0.002); end
  def test_costpercapita_cc144; assert_in_epsilon(33691.44184597049, worksheet.costpercapita_cc144, 0.002); end
  def test_costpercapita_cd144; assert_in_epsilon(651174.6198731103, worksheet.costpercapita_cd144, 0.002); end
  def test_costpercapita_cf144; assert_in_epsilon(5515.152947545472, worksheet.costpercapita_cf144, 0.002); end
  def test_costpercapita_cg144; assert_in_epsilon(6545.966621612629, worksheet.costpercapita_cg144, 0.002); end
  def test_costpercapita_ch144; assert_in_epsilon(8662.934472718309, worksheet.costpercapita_ch144, 0.002); end
  def test_costpercapita_ci144; assert_in_epsilon(10820.827319728236, worksheet.costpercapita_ci144, 0.002); end
  def test_costpercapita_cj144; assert_in_epsilon(12974.904820360389, worksheet.costpercapita_cj144, 0.002); end
  def test_costpercapita_ck144; assert_in_epsilon(15160.563251488838, worksheet.costpercapita_ck144, 0.002); end
  def test_costpercapita_cl144; assert_in_epsilon(17358.15025061048, worksheet.costpercapita_cl144, 0.002); end
  def test_costpercapita_cm144; assert_in_epsilon(19748.295727319997, worksheet.costpercapita_cm144, 0.002); end
  def test_costpercapita_cn144; assert_in_epsilon(22268.563713003176, worksheet.costpercapita_cn144, 0.002); end
  def test_costpercapita_cp144; assert_in_epsilon(13228.373236043057, worksheet.costpercapita_cp144, 0.002); end
  def test_costpercapita_cq144; assert_in_epsilon(251538.360644203, worksheet.costpercapita_cq144, 0.002); end
  def test_costpercapita_cr144; assert_equal("err", worksheet.costpercapita_cr144); end
  def test_costpercapita_e145; assert_equal("ok", worksheet.costpercapita_e145); end
  def test_costpercapita_f145; assert_equal("ok", worksheet.costpercapita_f145); end
  def test_costpercapita_g145; assert_equal("ok", worksheet.costpercapita_g145); end
  def test_costpercapita_h145; assert_equal("ok", worksheet.costpercapita_h145); end
  def test_costpercapita_i145; assert_equal("ok", worksheet.costpercapita_i145); end
  def test_costpercapita_j145; assert_equal("ok", worksheet.costpercapita_j145); end
  def test_costpercapita_k145; assert_equal("ok", worksheet.costpercapita_k145); end
  def test_costpercapita_l145; assert_equal("ok", worksheet.costpercapita_l145); end
  def test_costpercapita_m145; assert_equal("ok", worksheet.costpercapita_m145); end
  def test_costpercapita_o145; assert_equal("ok", worksheet.costpercapita_o145); end
  def test_costpercapita_p145; assert_equal("ok", worksheet.costpercapita_p145); end
  def test_costpercapita_q145; assert_equal("ok", worksheet.costpercapita_q145); end
  def test_costpercapita_r145; assert_equal("ok", worksheet.costpercapita_r145); end
  def test_costpercapita_s145; assert_equal("ok", worksheet.costpercapita_s145); end
  def test_costpercapita_t145; assert_equal("ok", worksheet.costpercapita_t145); end
  def test_costpercapita_u145; assert_equal("ok", worksheet.costpercapita_u145); end
  def test_costpercapita_v145; assert_equal("ok", worksheet.costpercapita_v145); end
  def test_costpercapita_w145; assert_equal("ok", worksheet.costpercapita_w145); end
  def test_costpercapita_y145; assert_equal("ok", worksheet.costpercapita_y145); end
  def test_costpercapita_z145; assert_equal("ok", worksheet.costpercapita_z145); end
  def test_costpercapita_aa145; assert_equal("ok", worksheet.costpercapita_aa145); end
  def test_costpercapita_ab145; assert_equal("ok", worksheet.costpercapita_ab145); end
  def test_costpercapita_ac145; assert_equal("ok", worksheet.costpercapita_ac145); end
  def test_costpercapita_ad145; assert_equal("ok", worksheet.costpercapita_ad145); end
  def test_costpercapita_ae145; assert_equal("ok", worksheet.costpercapita_ae145); end
  def test_costpercapita_af145; assert_equal("ok", worksheet.costpercapita_af145); end
  def test_costpercapita_ag145; assert_equal("ok", worksheet.costpercapita_ag145); end
  def test_costpercapita_ai145; assert_equal("ok", worksheet.costpercapita_ai145); end
  def test_costpercapita_aj145; assert_equal("ok", worksheet.costpercapita_aj145); end
  def test_costpercapita_ak145; assert_equal("ok", worksheet.costpercapita_ak145); end
  def test_costpercapita_al145; assert_equal("ok", worksheet.costpercapita_al145); end
  def test_costpercapita_am145; assert_equal("ok", worksheet.costpercapita_am145); end
  def test_costpercapita_an145; assert_equal("ok", worksheet.costpercapita_an145); end
  def test_costpercapita_ao145; assert_equal("ok", worksheet.costpercapita_ao145); end
  def test_costpercapita_ap145; assert_equal("ok", worksheet.costpercapita_ap145); end
  def test_costpercapita_aq145; assert_equal("ok", worksheet.costpercapita_aq145); end
  def test_costpercapita_as145; assert_equal("ok", worksheet.costpercapita_as145); end
  def test_costpercapita_at145; assert_equal("ok", worksheet.costpercapita_at145); end
  def test_costpercapita_ay145; assert_equal("ok", worksheet.costpercapita_ay145); end
  def test_costpercapita_az145; assert_equal("ok", worksheet.costpercapita_az145); end
  def test_costpercapita_ba145; assert_equal("ok", worksheet.costpercapita_ba145); end
  def test_costpercapita_bb145; assert_equal("ok", worksheet.costpercapita_bb145); end
  def test_costpercapita_bc145; assert_equal("ok", worksheet.costpercapita_bc145); end
  def test_costpercapita_bd145; assert_equal("ok", worksheet.costpercapita_bd145); end
  def test_costpercapita_be145; assert_equal("ok", worksheet.costpercapita_be145); end
  def test_costpercapita_bf145; assert_equal("ok", worksheet.costpercapita_bf145); end
  def test_costpercapita_bg145; assert_equal("ok", worksheet.costpercapita_bg145); end
  def test_costpercapita_bi145; assert_equal("ok", worksheet.costpercapita_bi145); end
  def test_costpercapita_bj145; assert_equal("ok", worksheet.costpercapita_bj145); end
  def test_costpercapita_bk145; assert_equal("ok", worksheet.costpercapita_bk145); end
  def test_costpercapita_bl145; assert_equal("ok", worksheet.costpercapita_bl145); end
  def test_costpercapita_bm145; assert_equal("ok", worksheet.costpercapita_bm145); end
  def test_costpercapita_bn145; assert_equal("ok", worksheet.costpercapita_bn145); end
  def test_costpercapita_bo145; assert_equal("ok", worksheet.costpercapita_bo145); end
  def test_costpercapita_bp145; assert_equal("ok", worksheet.costpercapita_bp145); end
  def test_costpercapita_bq145; assert_equal("ok", worksheet.costpercapita_bq145); end
  def test_costpercapita_bs145; assert_equal("ok", worksheet.costpercapita_bs145); end
  def test_costpercapita_bt145; assert_equal("ok", worksheet.costpercapita_bt145); end
  def test_costpercapita_bu145; assert_equal("ok", worksheet.costpercapita_bu145); end
  def test_costpercapita_bv145; assert_equal("ok", worksheet.costpercapita_bv145); end
  def test_costpercapita_bw145; assert_equal("ok", worksheet.costpercapita_bw145); end
  def test_costpercapita_bx145; assert_equal("ok", worksheet.costpercapita_bx145); end
  def test_costpercapita_by145; assert_equal("ok", worksheet.costpercapita_by145); end
  def test_costpercapita_bz145; assert_equal("ok", worksheet.costpercapita_bz145); end
  def test_costpercapita_ca145; assert_equal("ok", worksheet.costpercapita_ca145); end
  def test_costpercapita_cc145; assert_equal("ok", worksheet.costpercapita_cc145); end
  def test_costpercapita_cd145; assert_equal("ok", worksheet.costpercapita_cd145); end
  def test_costpercapita_cf145; assert_equal("ok", worksheet.costpercapita_cf145); end
  def test_costpercapita_cg145; assert_equal("ok", worksheet.costpercapita_cg145); end
  def test_costpercapita_ch145; assert_equal("ok", worksheet.costpercapita_ch145); end
  def test_costpercapita_ci145; assert_equal("ok", worksheet.costpercapita_ci145); end
  def test_costpercapita_cj145; assert_equal("ok", worksheet.costpercapita_cj145); end
  def test_costpercapita_ck145; assert_equal("ok", worksheet.costpercapita_ck145); end
  def test_costpercapita_cl145; assert_equal("ok", worksheet.costpercapita_cl145); end
  def test_costpercapita_cm145; assert_equal("ok", worksheet.costpercapita_cm145); end
  def test_costpercapita_cn145; assert_equal("ok", worksheet.costpercapita_cn145); end
  def test_costpercapita_cp145; assert_equal("ok", worksheet.costpercapita_cp145); end
  def test_costpercapita_cq145; assert_equal("ok", worksheet.costpercapita_cq145); end
  def test_costpercapita_c147; assert_equal("ZARm", worksheet.costpercapita_c147); end
  def test_costpercapita_e147; assert_equal("C1.High", worksheet.costpercapita_e147); end
  def test_costpercapita_f147; assert_equal("High estimate of capital costs", worksheet.costpercapita_f147); end
  def test_costpercapita_o147; assert_equal("C2.High", worksheet.costpercapita_o147); end
  def test_costpercapita_p147; assert_equal("High estimate of operating costs", worksheet.costpercapita_p147); end
  def test_costpercapita_y147; assert_equal("C3.High", worksheet.costpercapita_y147); end
  def test_costpercapita_z147; assert_equal("High estimate of fuel costs", worksheet.costpercapita_z147); end
  def test_costpercapita_ai147; assert_equal("High estimate of total cost", worksheet.costpercapita_ai147); end
  def test_costpercapita_as147; assert_equal("Cashflow capital basis", worksheet.costpercapita_as147); end
  def test_costpercapita_av147; assert_equal("Loan", worksheet.costpercapita_av147); end
  def test_costpercapita_ay147; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay147); end
  def test_costpercapita_bi147; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi147); end
  def test_costpercapita_br147; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br147); end
  def test_costpercapita_ca147; assert_in_epsilon(6384882961.963667, worksheet.costpercapita_ca147, 0.002); end
  def test_costpercapita_cc147; assert_equal("Amortised Capital", worksheet.costpercapita_cc147); end
  def test_costpercapita_cf147; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf147); end
  def test_costpercapita_cp147; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp147); end
  def test_costpercapita_c148; assert_equal("Category", worksheet.costpercapita_c148); end
  def test_costpercapita_e148; assert_equal("2010", worksheet.costpercapita_e148); end
  def test_costpercapita_f148; assert_equal("2015", worksheet.costpercapita_f148); end
  def test_costpercapita_g148; assert_equal("2020", worksheet.costpercapita_g148); end
  def test_costpercapita_h148; assert_equal("2025", worksheet.costpercapita_h148); end
  def test_costpercapita_i148; assert_equal("2030", worksheet.costpercapita_i148); end
  def test_costpercapita_j148; assert_equal("2035", worksheet.costpercapita_j148); end
  def test_costpercapita_k148; assert_equal("2040", worksheet.costpercapita_k148); end
  def test_costpercapita_l148; assert_equal("2045", worksheet.costpercapita_l148); end
  def test_costpercapita_m148; assert_equal("2050", worksheet.costpercapita_m148); end
  def test_costpercapita_o148; assert_equal("2010", worksheet.costpercapita_o148); end
  def test_costpercapita_p148; assert_equal("2015", worksheet.costpercapita_p148); end
  def test_costpercapita_q148; assert_equal("2020", worksheet.costpercapita_q148); end
  def test_costpercapita_r148; assert_equal("2025", worksheet.costpercapita_r148); end
  def test_costpercapita_s148; assert_equal("2030", worksheet.costpercapita_s148); end
  def test_costpercapita_t148; assert_equal("2035", worksheet.costpercapita_t148); end
  def test_costpercapita_u148; assert_equal("2040", worksheet.costpercapita_u148); end
  def test_costpercapita_v148; assert_equal("2045", worksheet.costpercapita_v148); end
  def test_costpercapita_w148; assert_equal("2050", worksheet.costpercapita_w148); end
  def test_costpercapita_y148; assert_equal("2010", worksheet.costpercapita_y148); end
  def test_costpercapita_z148; assert_equal("2015", worksheet.costpercapita_z148); end
  def test_costpercapita_aa148; assert_equal("2020", worksheet.costpercapita_aa148); end
  def test_costpercapita_ab148; assert_equal("2025", worksheet.costpercapita_ab148); end
  def test_costpercapita_ac148; assert_equal("2030", worksheet.costpercapita_ac148); end
  def test_costpercapita_ad148; assert_equal("2035", worksheet.costpercapita_ad148); end
  def test_costpercapita_ae148; assert_equal("2040", worksheet.costpercapita_ae148); end
  def test_costpercapita_af148; assert_equal("2045", worksheet.costpercapita_af148); end
  def test_costpercapita_ag148; assert_equal("2050", worksheet.costpercapita_ag148); end
  def test_costpercapita_ai148; assert_equal("2010", worksheet.costpercapita_ai148); end
  def test_costpercapita_aj148; assert_equal("2015", worksheet.costpercapita_aj148); end
  def test_costpercapita_ak148; assert_equal("2020", worksheet.costpercapita_ak148); end
  def test_costpercapita_al148; assert_equal("2025", worksheet.costpercapita_al148); end
  def test_costpercapita_am148; assert_equal("2030", worksheet.costpercapita_am148); end
  def test_costpercapita_an148; assert_equal("2035", worksheet.costpercapita_an148); end
  def test_costpercapita_ao148; assert_equal("2040", worksheet.costpercapita_ao148); end
  def test_costpercapita_ap148; assert_equal("2045", worksheet.costpercapita_ap148); end
  def test_costpercapita_aq148; assert_equal("2050", worksheet.costpercapita_aq148); end
  def test_costpercapita_as148; assert_equal("Mean", worksheet.costpercapita_as148); end
  def test_costpercapita_at148; assert_equal("NPV", worksheet.costpercapita_at148); end
  def test_costpercapita_av148; assert_equal("Rate", worksheet.costpercapita_av148); end
  def test_costpercapita_aw148; assert_equal("Years", worksheet.costpercapita_aw148); end
  def test_costpercapita_ay148; assert_in_epsilon(2010.0, worksheet.costpercapita_ay148, 0.002); end
  def test_costpercapita_az148; assert_in_epsilon(2015.0, worksheet.costpercapita_az148, 0.002); end
  def test_costpercapita_ba148; assert_in_epsilon(2020.0, worksheet.costpercapita_ba148, 0.002); end
  def test_costpercapita_bb148; assert_in_epsilon(2025.0, worksheet.costpercapita_bb148, 0.002); end
  def test_costpercapita_bc148; assert_in_epsilon(2030.0, worksheet.costpercapita_bc148, 0.002); end
  def test_costpercapita_bd148; assert_in_epsilon(2035.0, worksheet.costpercapita_bd148, 0.002); end
  def test_costpercapita_be148; assert_in_epsilon(2040.0, worksheet.costpercapita_be148, 0.002); end
  def test_costpercapita_bf148; assert_in_epsilon(2045.0, worksheet.costpercapita_bf148, 0.002); end
  def test_costpercapita_bg148; assert_in_epsilon(2050.0, worksheet.costpercapita_bg148, 0.002); end
  def test_costpercapita_bi148; assert_in_epsilon(2010.0, worksheet.costpercapita_bi148, 0.002); end
  def test_costpercapita_bj148; assert_in_epsilon(2015.0, worksheet.costpercapita_bj148, 0.002); end
  def test_costpercapita_bk148; assert_in_epsilon(2020.0, worksheet.costpercapita_bk148, 0.002); end
  def test_costpercapita_bl148; assert_in_epsilon(2025.0, worksheet.costpercapita_bl148, 0.002); end
  def test_costpercapita_bm148; assert_in_epsilon(2030.0, worksheet.costpercapita_bm148, 0.002); end
  def test_costpercapita_bn148; assert_in_epsilon(2035.0, worksheet.costpercapita_bn148, 0.002); end
  def test_costpercapita_bo148; assert_in_epsilon(2040.0, worksheet.costpercapita_bo148, 0.002); end
  def test_costpercapita_bp148; assert_in_epsilon(2045.0, worksheet.costpercapita_bp148, 0.002); end
  def test_costpercapita_bq148; assert_in_epsilon(2050.0, worksheet.costpercapita_bq148, 0.002); end
  def test_costpercapita_bs148; assert_equal("2010", worksheet.costpercapita_bs148); end
  def test_costpercapita_bt148; assert_equal("2015", worksheet.costpercapita_bt148); end
  def test_costpercapita_bu148; assert_equal("2020", worksheet.costpercapita_bu148); end
  def test_costpercapita_bv148; assert_equal("2025", worksheet.costpercapita_bv148); end
  def test_costpercapita_bw148; assert_equal("2030", worksheet.costpercapita_bw148); end
  def test_costpercapita_bx148; assert_equal("2035", worksheet.costpercapita_bx148); end
  def test_costpercapita_by148; assert_equal("2040", worksheet.costpercapita_by148); end
  def test_costpercapita_bz148; assert_equal("2045", worksheet.costpercapita_bz148); end
  def test_costpercapita_ca148; assert_equal("2050", worksheet.costpercapita_ca148); end
  def test_costpercapita_cc148; assert_equal("Mean", worksheet.costpercapita_cc148); end
  def test_costpercapita_cd148; assert_equal("NPV", worksheet.costpercapita_cd148); end
  def test_costpercapita_cf148; assert_equal("2010", worksheet.costpercapita_cf148); end
  def test_costpercapita_cg148; assert_equal("2015", worksheet.costpercapita_cg148); end
  def test_costpercapita_ch148; assert_equal("2020", worksheet.costpercapita_ch148); end
  def test_costpercapita_ci148; assert_equal("2025", worksheet.costpercapita_ci148); end
  def test_costpercapita_cj148; assert_equal("2030", worksheet.costpercapita_cj148); end
  def test_costpercapita_ck148; assert_equal("2035", worksheet.costpercapita_ck148); end
  def test_costpercapita_cl148; assert_equal("2040", worksheet.costpercapita_cl148); end
  def test_costpercapita_cm148; assert_equal("2045", worksheet.costpercapita_cm148); end
  def test_costpercapita_cn148; assert_equal("2050", worksheet.costpercapita_cn148); end
  def test_costpercapita_cp148; assert_equal("Mean", worksheet.costpercapita_cp148); end
  def test_costpercapita_cq148; assert_equal("NPV", worksheet.costpercapita_cq148); end
  def test_costpercapita_c149; assert_equal("Fossil Fuels", worksheet.costpercapita_c149); end
  def test_costpercapita_e149; assert_in_epsilon(6.933771846269147, worksheet.costpercapita_e149, 0.002); end
  def test_costpercapita_f149; assert_in_epsilon(8.179792974040513, worksheet.costpercapita_f149, 0.002); end
  def test_costpercapita_g149; assert_in_delta(0.0, (worksheet.costpercapita_g149||0), 0.002); end
  def test_costpercapita_h149; assert_in_delta(0.0, (worksheet.costpercapita_h149||0), 0.002); end
  def test_costpercapita_i149; assert_in_delta(0.0, (worksheet.costpercapita_i149||0), 0.002); end
  def test_costpercapita_j149; assert_in_epsilon(4.349746149489423, worksheet.costpercapita_j149, 0.002); end
  def test_costpercapita_k149; assert_in_epsilon(-3.7302262689726877, worksheet.costpercapita_k149, 0.002); end
  def test_costpercapita_l149; assert_in_epsilon(-4.084217466575971, worksheet.costpercapita_l149, 0.002); end
  def test_costpercapita_m149; assert_in_epsilon(-14.082216603479386, worksheet.costpercapita_m149, 0.002); end
  def test_costpercapita_o149; assert_in_epsilon(318.5031561718261, worksheet.costpercapita_o149, 0.002); end
  def test_costpercapita_p149; assert_in_epsilon(310.5287550727909, worksheet.costpercapita_p149, 0.002); end
  def test_costpercapita_q149; assert_in_epsilon(305.8626926101356, worksheet.costpercapita_q149, 0.002); end
  def test_costpercapita_r149; assert_in_epsilon(298.8223263525156, worksheet.costpercapita_r149, 0.002); end
  def test_costpercapita_s149; assert_in_epsilon(290.6036670292033, worksheet.costpercapita_s149, 0.002); end
  def test_costpercapita_t149; assert_in_epsilon(250.13678398612785, worksheet.costpercapita_t149, 0.002); end
  def test_costpercapita_u149; assert_in_epsilon(206.57645858164187, worksheet.costpercapita_u149, 0.002); end
  def test_costpercapita_v149; assert_in_epsilon(111.68612839941245, worksheet.costpercapita_v149, 0.002); end
  def test_costpercapita_w149; assert_in_epsilon(80.82970183705996, worksheet.costpercapita_w149, 0.002); end
  def test_costpercapita_y149; assert_in_epsilon(151.49952838097238, worksheet.costpercapita_y149, 0.002); end
  def test_costpercapita_z149; assert_in_epsilon(-269.0855057208273, worksheet.costpercapita_z149, 0.002); end
  def test_costpercapita_aa149; assert_in_epsilon(-312.98834845384636, worksheet.costpercapita_aa149, 0.002); end
  def test_costpercapita_ab149; assert_in_epsilon(-315.58558008199026, worksheet.costpercapita_ab149, 0.002); end
  def test_costpercapita_ac149; assert_in_epsilon(-1203.2200251303252, worksheet.costpercapita_ac149, 0.002); end
  def test_costpercapita_ad149; assert_in_epsilon(-1544.3395787546542, worksheet.costpercapita_ad149, 0.002); end
  def test_costpercapita_ae149; assert_in_epsilon(-2197.8308832817697, worksheet.costpercapita_ae149, 0.002); end
  def test_costpercapita_af149; assert_in_epsilon(-2550.6872151554912, worksheet.costpercapita_af149, 0.002); end
  def test_costpercapita_ag149; assert_in_epsilon(-3200.9387745307977, worksheet.costpercapita_ag149, 0.002); end
  def test_costpercapita_ai149; assert_in_epsilon(476.93645639906754, worksheet.costpercapita_ai149, 0.002); end
  def test_costpercapita_aj149; assert_in_epsilon(49.62304232600377, worksheet.costpercapita_aj149, 0.002); end
  def test_costpercapita_ak149; assert_in_epsilon(-7.125655843710774, worksheet.costpercapita_ak149, 0.002); end
  def test_costpercapita_al149; assert_in_epsilon(-16.763253729474684, worksheet.costpercapita_al149, 0.002); end
  def test_costpercapita_am149; assert_in_epsilon(-912.6163581011219, worksheet.costpercapita_am149, 0.002); end
  def test_costpercapita_an149; assert_in_epsilon(-1289.8530486190368, worksheet.costpercapita_an149, 0.002); end
  def test_costpercapita_ao149; assert_in_epsilon(-1994.9846509691008, worksheet.costpercapita_ao149, 0.002); end
  def test_costpercapita_ap149; assert_in_epsilon(-2443.0853042226554, worksheet.costpercapita_ap149, 0.002); end
  def test_costpercapita_aq149; assert_in_epsilon(-3134.191289297217, worksheet.costpercapita_aq149, 0.002); end
  def test_costpercapita_as149; assert_in_epsilon(-1030.228895784139, worksheet.costpercapita_as149, 0.002); end
  def test_costpercapita_at149; assert_in_epsilon(-15874.126136124036, worksheet.costpercapita_at149, 0.002); end
  def test_costpercapita_ay149; assert_in_epsilon(13.674137590564996, worksheet.costpercapita_ay149, 0.002); end
  def test_costpercapita_az149; assert_in_epsilon(16.13142414680846, worksheet.costpercapita_az149, 0.002); end
  def test_costpercapita_ba149; assert_in_delta(0.0, (worksheet.costpercapita_ba149||0), 0.002); end
  def test_costpercapita_bb149; assert_in_delta(0.0, (worksheet.costpercapita_bb149||0), 0.002); end
  def test_costpercapita_bc149; assert_in_delta(0.0, (worksheet.costpercapita_bc149||0), 0.002); end
  def test_costpercapita_bd149; assert_in_epsilon(8.578163321620185, worksheet.costpercapita_bd149, 0.002); end
  def test_costpercapita_be149; assert_in_epsilon(-67.56597157341923, worksheet.costpercapita_be149, 0.002); end
  def test_costpercapita_bf149; assert_in_epsilon(-68.26407996942605, worksheet.costpercapita_bf149, 0.002); end
  def test_costpercapita_bg149; assert_in_epsilon(-130.63129747205494, worksheet.costpercapita_bg149, 0.002); end
  def test_costpercapita_bi149; assert_in_delta(0.0, (worksheet.costpercapita_bi149||0), 0.002); end
  def test_costpercapita_bj149; assert_in_delta(0.0, (worksheet.costpercapita_bj149||0), 0.002); end
  def test_costpercapita_bk149; assert_in_delta(0.0, (worksheet.costpercapita_bk149||0), 0.002); end
  def test_costpercapita_bl149; assert_in_delta(0.0, (worksheet.costpercapita_bl149||0), 0.002); end
  def test_costpercapita_bm149; assert_in_delta(0.0, (worksheet.costpercapita_bm149||0), 0.002); end
  def test_costpercapita_bn149; assert_in_delta(0.0, (worksheet.costpercapita_bn149||0), 0.002); end
  def test_costpercapita_bo149; assert_in_delta(0.0, (worksheet.costpercapita_bo149||0), 0.002); end
  def test_costpercapita_bp149; assert_in_delta(0.0, (worksheet.costpercapita_bp149||0), 0.002); end
  def test_costpercapita_bq149; assert_in_delta(0.0, (worksheet.costpercapita_bq149||0), 0.002); end
  def test_costpercapita_bs149; assert_in_epsilon(1998.1898812854736, worksheet.costpercapita_bs149, 0.002); end
  def test_costpercapita_bt149; assert_in_epsilon(2130.3127722421777, worksheet.costpercapita_bt149, 0.002); end
  def test_costpercapita_bu149; assert_in_epsilon(1374.159905636298, worksheet.costpercapita_bu149, 0.002); end
  def test_costpercapita_bv149; assert_in_epsilon(1489.6934150813918, worksheet.costpercapita_bv149, 0.002); end
  def test_costpercapita_bw149; assert_in_epsilon(1649.739761205822, worksheet.costpercapita_bw149, 0.002); end
  def test_costpercapita_bx149; assert_in_epsilon(1797.0551796295547, worksheet.costpercapita_bx149, 0.002); end
  def test_costpercapita_by149; assert_in_epsilon(1828.2921965871012, worksheet.costpercapita_by149, 0.002); end
  def test_costpercapita_bz149; assert_in_epsilon(2129.295496532758, worksheet.costpercapita_bz149, 0.002); end
  def test_costpercapita_ca149; assert_in_epsilon(2324.033573581189, worksheet.costpercapita_ca149, 0.002); end
  def test_costpercapita_cc149; assert_in_epsilon(1857.8635757535296, worksheet.costpercapita_cc149, 0.002); end
  def test_costpercapita_cd149; assert_in_epsilon(37840.32224856377, worksheet.costpercapita_cd149, 0.002); end
  def test_costpercapita_cf149; assert_in_epsilon(6.74036574429585, worksheet.costpercapita_cf149, 0.002); end
  def test_costpercapita_cg149; assert_in_epsilon(7.9516311727679465, worksheet.costpercapita_cg149, 0.002); end
  def test_costpercapita_ch149; assert_in_delta(0.0, (worksheet.costpercapita_ch149||0), 0.002); end
  def test_costpercapita_ci149; assert_in_delta(0.0, (worksheet.costpercapita_ci149||0), 0.002); end
  def test_costpercapita_cj149; assert_in_delta(0.0, (worksheet.costpercapita_cj149||0), 0.002); end
  def test_costpercapita_ck149; assert_in_epsilon(4.228417172130761, worksheet.costpercapita_ck149, 0.002); end
  def test_costpercapita_cl149; assert_in_epsilon(-63.83574530444655, worksheet.costpercapita_cl149, 0.002); end
  def test_costpercapita_cm149; assert_in_epsilon(-64.17986250285007, worksheet.costpercapita_cm149, 0.002); end
  def test_costpercapita_cn149; assert_in_epsilon(-116.54908086857557, worksheet.costpercapita_cn149, 0.002); end
  def test_costpercapita_cp149; assert_in_epsilon(-25.071586065186402, worksheet.costpercapita_cp149, 0.002); end
  def test_costpercapita_cq149; assert_in_epsilon(-317.6647274769978, worksheet.costpercapita_cq149, 0.002); end
  def test_costpercapita_cr149; assert_equal("err", worksheet.costpercapita_cr149); end
  def test_costpercapita_c150; assert_equal("Bioenergy", worksheet.costpercapita_c150); end
  def test_costpercapita_e150; assert_in_delta(0.0, (worksheet.costpercapita_e150||0), 0.002); end
  def test_costpercapita_f150; assert_in_delta(0.0, (worksheet.costpercapita_f150||0), 0.002); end
  def test_costpercapita_g150; assert_in_delta(0.0, (worksheet.costpercapita_g150||0), 0.002); end
  def test_costpercapita_h150; assert_in_delta(0.0, (worksheet.costpercapita_h150||0), 0.002); end
  def test_costpercapita_i150; assert_in_delta(0.0, (worksheet.costpercapita_i150||0), 0.002); end
  def test_costpercapita_j150; assert_in_delta(0.0, (worksheet.costpercapita_j150||0), 0.002); end
  def test_costpercapita_k150; assert_in_delta(0.0, (worksheet.costpercapita_k150||0), 0.002); end
  def test_costpercapita_l150; assert_in_delta(0.0, (worksheet.costpercapita_l150||0), 0.002); end
  def test_costpercapita_m150; assert_in_delta(0.0, (worksheet.costpercapita_m150||0), 0.002); end
  def test_costpercapita_o150; assert_in_delta(0.0, (worksheet.costpercapita_o150||0), 0.002); end
  def test_costpercapita_p150; assert_in_delta(0.0, (worksheet.costpercapita_p150||0), 0.002); end
  def test_costpercapita_q150; assert_in_delta(0.0, (worksheet.costpercapita_q150||0), 0.002); end
  def test_costpercapita_r150; assert_in_delta(0.0, (worksheet.costpercapita_r150||0), 0.002); end
  def test_costpercapita_s150; assert_in_delta(0.0, (worksheet.costpercapita_s150||0), 0.002); end
  def test_costpercapita_t150; assert_in_delta(0.0, (worksheet.costpercapita_t150||0), 0.002); end
  def test_costpercapita_u150; assert_in_delta(0.0, (worksheet.costpercapita_u150||0), 0.002); end
  def test_costpercapita_v150; assert_in_delta(0.0, (worksheet.costpercapita_v150||0), 0.002); end
  def test_costpercapita_w150; assert_in_delta(0.0, (worksheet.costpercapita_w150||0), 0.002); end
  def test_costpercapita_y150; assert_in_delta(0.0, (worksheet.costpercapita_y150||0), 0.002); end
  def test_costpercapita_z150; assert_in_delta(0.0385697013093565, worksheet.costpercapita_z150, 0.002); end
  def test_costpercapita_aa150; assert_in_delta(0.08228553517656419, worksheet.costpercapita_aa150, 0.002); end
  def test_costpercapita_ab150; assert_in_delta(0.19749369850207865, worksheet.costpercapita_ab150, 0.002); end
  def test_costpercapita_ac150; assert_in_delta(0.2808918939575386, worksheet.costpercapita_ac150, 0.002); end
  def test_costpercapita_ad150; assert_in_delta(0.3745384822219214, worksheet.costpercapita_ad150, 0.002); end
  def test_costpercapita_ae150; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ae150, 0.002); end
  def test_costpercapita_af150; assert_in_delta(0.5966490253229234, worksheet.costpercapita_af150, 0.002); end
  def test_costpercapita_ag150; assert_in_delta(0.727374563002047, worksheet.costpercapita_ag150, 0.002); end
  def test_costpercapita_ai150; assert_in_delta(0.0, (worksheet.costpercapita_ai150||0), 0.002); end
  def test_costpercapita_aj150; assert_in_delta(0.0385697013093565, worksheet.costpercapita_aj150, 0.002); end
  def test_costpercapita_ak150; assert_in_delta(0.08228553517656419, worksheet.costpercapita_ak150, 0.002); end
  def test_costpercapita_al150; assert_in_delta(0.19749369850207865, worksheet.costpercapita_al150, 0.002); end
  def test_costpercapita_am150; assert_in_delta(0.2808918939575386, worksheet.costpercapita_am150, 0.002); end
  def test_costpercapita_an150; assert_in_delta(0.3745384822219214, worksheet.costpercapita_an150, 0.002); end
  def test_costpercapita_ao150; assert_in_delta(0.4794296830041448, worksheet.costpercapita_ao150, 0.002); end
  def test_costpercapita_ap150; assert_in_delta(0.5966490253229234, worksheet.costpercapita_ap150, 0.002); end
  def test_costpercapita_aq150; assert_in_delta(0.727374563002047, worksheet.costpercapita_aq150, 0.002); end
  def test_costpercapita_as150; assert_in_delta(0.308581398055175, worksheet.costpercapita_as150, 0.002); end
  def test_costpercapita_at150; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_at150, 0.002); end
  def test_costpercapita_ay150; assert_in_delta(0.0, (worksheet.costpercapita_ay150||0), 0.002); end
  def test_costpercapita_az150; assert_in_delta(0.0, (worksheet.costpercapita_az150||0), 0.002); end
  def test_costpercapita_ba150; assert_in_delta(0.0, (worksheet.costpercapita_ba150||0), 0.002); end
  def test_costpercapita_bb150; assert_in_delta(0.0, (worksheet.costpercapita_bb150||0), 0.002); end
  def test_costpercapita_bc150; assert_in_delta(0.0, (worksheet.costpercapita_bc150||0), 0.002); end
  def test_costpercapita_bd150; assert_in_delta(0.0, (worksheet.costpercapita_bd150||0), 0.002); end
  def test_costpercapita_be150; assert_in_delta(0.0, (worksheet.costpercapita_be150||0), 0.002); end
  def test_costpercapita_bf150; assert_in_delta(0.0, (worksheet.costpercapita_bf150||0), 0.002); end
  def test_costpercapita_bg150; assert_in_delta(0.0, (worksheet.costpercapita_bg150||0), 0.002); end
  def test_costpercapita_bi150; assert_in_delta(0.0, (worksheet.costpercapita_bi150||0), 0.002); end
  def test_costpercapita_bj150; assert_in_delta(0.0, (worksheet.costpercapita_bj150||0), 0.002); end
  def test_costpercapita_bk150; assert_in_delta(0.0, (worksheet.costpercapita_bk150||0), 0.002); end
  def test_costpercapita_bl150; assert_in_delta(0.0, (worksheet.costpercapita_bl150||0), 0.002); end
  def test_costpercapita_bm150; assert_in_delta(0.0, (worksheet.costpercapita_bm150||0), 0.002); end
  def test_costpercapita_bn150; assert_in_delta(0.0, (worksheet.costpercapita_bn150||0), 0.002); end
  def test_costpercapita_bo150; assert_in_delta(0.0, (worksheet.costpercapita_bo150||0), 0.002); end
  def test_costpercapita_bp150; assert_in_delta(0.0, (worksheet.costpercapita_bp150||0), 0.002); end
  def test_costpercapita_bq150; assert_in_delta(0.0, (worksheet.costpercapita_bq150||0), 0.002); end
  def test_costpercapita_bs150; assert_in_delta(0.0, (worksheet.costpercapita_bs150||0), 0.002); end
  def test_costpercapita_bt150; assert_in_delta(0.0385697013093565, worksheet.costpercapita_bt150, 0.002); end
  def test_costpercapita_bu150; assert_in_delta(0.08228553517656419, worksheet.costpercapita_bu150, 0.002); end
  def test_costpercapita_bv150; assert_in_delta(0.19749369850207865, worksheet.costpercapita_bv150, 0.002); end
  def test_costpercapita_bw150; assert_in_delta(0.2808918939575386, worksheet.costpercapita_bw150, 0.002); end
  def test_costpercapita_bx150; assert_in_delta(0.3745384822219214, worksheet.costpercapita_bx150, 0.002); end
  def test_costpercapita_by150; assert_in_delta(0.4794296830041448, worksheet.costpercapita_by150, 0.002); end
  def test_costpercapita_bz150; assert_in_delta(0.5966490253229234, worksheet.costpercapita_bz150, 0.002); end
  def test_costpercapita_ca150; assert_in_delta(0.727374563002047, worksheet.costpercapita_ca150, 0.002); end
  def test_costpercapita_cc150; assert_in_delta(0.308581398055175, worksheet.costpercapita_cc150, 0.002); end
  def test_costpercapita_cd150; assert_in_epsilon(5.276751672141646, worksheet.costpercapita_cd150, 0.002); end
  def test_costpercapita_cf150; assert_in_delta(0.0, (worksheet.costpercapita_cf150||0), 0.002); end
  def test_costpercapita_cg150; assert_in_delta(0.0, (worksheet.costpercapita_cg150||0), 0.002); end
  def test_costpercapita_ch150; assert_in_delta(0.0, (worksheet.costpercapita_ch150||0), 0.002); end
  def test_costpercapita_ci150; assert_in_delta(0.0, (worksheet.costpercapita_ci150||0), 0.002); end
  def test_costpercapita_cj150; assert_in_delta(0.0, (worksheet.costpercapita_cj150||0), 0.002); end
  def test_costpercapita_ck150; assert_in_delta(0.0, (worksheet.costpercapita_ck150||0), 0.002); end
  def test_costpercapita_cl150; assert_in_delta(0.0, (worksheet.costpercapita_cl150||0), 0.002); end
  def test_costpercapita_cm150; assert_in_delta(0.0, (worksheet.costpercapita_cm150||0), 0.002); end
  def test_costpercapita_cn150; assert_in_delta(0.0, (worksheet.costpercapita_cn150||0), 0.002); end
  def test_costpercapita_cp150; assert_in_delta(0.0, (worksheet.costpercapita_cp150||0), 0.002); end
  def test_costpercapita_cq150; assert_in_delta(0.0, (worksheet.costpercapita_cq150||0), 0.002); end
  def test_costpercapita_cr150; assert_equal("ok", worksheet.costpercapita_cr150); end
  def test_costpercapita_c151; assert_equal("Electricity", worksheet.costpercapita_c151); end
  def test_costpercapita_e151; assert_in_epsilon(186.43723370808348, worksheet.costpercapita_e151, 0.002); end
  def test_costpercapita_f151; assert_in_epsilon(224.45689580211584, worksheet.costpercapita_f151, 0.002); end
  def test_costpercapita_g151; assert_in_epsilon(792.4520771642209, worksheet.costpercapita_g151, 0.002); end
  def test_costpercapita_h151; assert_in_epsilon(1338.0695754790715, worksheet.costpercapita_h151, 0.002); end
  def test_costpercapita_i151; assert_in_epsilon(1815.134107144224, worksheet.costpercapita_i151, 0.002); end
  def test_costpercapita_j151; assert_in_epsilon(2216.720702348515, worksheet.costpercapita_j151, 0.002); end
  def test_costpercapita_k151; assert_in_epsilon(2628.2616173437855, worksheet.costpercapita_k151, 0.002); end
  def test_costpercapita_l151; assert_in_epsilon(3035.816381534876, worksheet.costpercapita_l151, 0.002); end
  def test_costpercapita_m151; assert_in_epsilon(3434.888621684573, worksheet.costpercapita_m151, 0.002); end
  def test_costpercapita_o151; assert_in_epsilon(4.801225063287725, worksheet.costpercapita_o151, 0.002); end
  def test_costpercapita_p151; assert_in_epsilon(13.569751095643362, worksheet.costpercapita_p151, 0.002); end
  def test_costpercapita_q151; assert_in_epsilon(276.7396917555599, worksheet.costpercapita_q151, 0.002); end
  def test_costpercapita_r151; assert_in_epsilon(561.526971618108, worksheet.costpercapita_r151, 0.002); end
  def test_costpercapita_s151; assert_in_epsilon(848.3495257810746, worksheet.costpercapita_s151, 0.002); end
  def test_costpercapita_t151; assert_in_epsilon(1062.5246937917589, worksheet.costpercapita_t151, 0.002); end
  def test_costpercapita_u151; assert_in_epsilon(1281.901952057521, worksheet.costpercapita_u151, 0.002); end
  def test_costpercapita_v151; assert_in_epsilon(1498.823381657701, worksheet.costpercapita_v151, 0.002); end
  def test_costpercapita_w151; assert_in_epsilon(1713.6382988776095, worksheet.costpercapita_w151, 0.002); end
  def test_costpercapita_y151; assert_in_delta(0.0, (worksheet.costpercapita_y151||0), 0.002); end
  def test_costpercapita_z151; assert_in_delta(0.0, (worksheet.costpercapita_z151||0), 0.002); end
  def test_costpercapita_aa151; assert_in_delta(0.0, (worksheet.costpercapita_aa151||0), 0.002); end
  def test_costpercapita_ab151; assert_in_delta(0.0, (worksheet.costpercapita_ab151||0), 0.002); end
  def test_costpercapita_ac151; assert_in_delta(0.0, (worksheet.costpercapita_ac151||0), 0.002); end
  def test_costpercapita_ad151; assert_in_delta(0.0, (worksheet.costpercapita_ad151||0), 0.002); end
  def test_costpercapita_ae151; assert_in_delta(0.0, (worksheet.costpercapita_ae151||0), 0.002); end
  def test_costpercapita_af151; assert_in_delta(0.0, (worksheet.costpercapita_af151||0), 0.002); end
  def test_costpercapita_ag151; assert_in_delta(0.0, (worksheet.costpercapita_ag151||0), 0.002); end
  def test_costpercapita_ai151; assert_in_epsilon(191.2384587713712, worksheet.costpercapita_ai151, 0.002); end
  def test_costpercapita_aj151; assert_in_epsilon(238.02664689775918, worksheet.costpercapita_aj151, 0.002); end
  def test_costpercapita_ak151; assert_in_epsilon(1069.1917689197808, worksheet.costpercapita_ak151, 0.002); end
  def test_costpercapita_al151; assert_in_epsilon(1899.5965470971796, worksheet.costpercapita_al151, 0.002); end
  def test_costpercapita_am151; assert_in_epsilon(2663.4836329252985, worksheet.costpercapita_am151, 0.002); end
  def test_costpercapita_an151; assert_in_epsilon(3279.2453961402734, worksheet.costpercapita_an151, 0.002); end
  def test_costpercapita_ao151; assert_in_epsilon(3910.1635694013066, worksheet.costpercapita_ao151, 0.002); end
  def test_costpercapita_ap151; assert_in_epsilon(4534.6397631925765, worksheet.costpercapita_ap151, 0.002); end
  def test_costpercapita_aq151; assert_in_epsilon(5148.526920562183, worksheet.costpercapita_aq151, 0.002); end
  def test_costpercapita_as151; assert_in_epsilon(2548.2347448786363, worksheet.costpercapita_as151, 0.002); end
  def test_costpercapita_at151; assert_in_epsilon(45041.45445935945, worksheet.costpercapita_at151, 0.002); end
  def test_costpercapita_ay151; assert_in_epsilon(1121.0894464334285, worksheet.costpercapita_ay151, 0.002); end
  def test_costpercapita_az151; assert_in_epsilon(1304.8046737943532, worksheet.costpercapita_az151, 0.002); end
  def test_costpercapita_ba151; assert_in_epsilon(3289.537846526774, worksheet.costpercapita_ba151, 0.002); end
  def test_costpercapita_bb151; assert_in_epsilon(5268.148343948452, worksheet.costpercapita_bb151, 0.002); end
  def test_costpercapita_bc151; assert_in_epsilon(6874.77781705835, worksheet.costpercapita_bc151, 0.002); end
  def test_costpercapita_bd151; assert_in_epsilon(8319.203619810169, worksheet.costpercapita_bd151, 0.002); end
  def test_costpercapita_be151; assert_in_epsilon(9778.337453460206, worksheet.costpercapita_be151, 0.002); end
  def test_costpercapita_bf151; assert_in_epsilon(11235.827848919806, worksheet.costpercapita_bf151, 0.002); end
  def test_costpercapita_bg151; assert_in_epsilon(12661.428290512371, worksheet.costpercapita_bg151, 0.002); end
  def test_costpercapita_bi151; assert_in_delta(0.0, (worksheet.costpercapita_bi151||0), 0.002); end
  def test_costpercapita_bj151; assert_in_delta(0.0, (worksheet.costpercapita_bj151||0), 0.002); end
  def test_costpercapita_bk151; assert_in_delta(0.0, (worksheet.costpercapita_bk151||0), 0.002); end
  def test_costpercapita_bl151; assert_in_delta(0.0, (worksheet.costpercapita_bl151||0), 0.002); end
  def test_costpercapita_bm151; assert_in_delta(0.0, (worksheet.costpercapita_bm151||0), 0.002); end
  def test_costpercapita_bn151; assert_in_delta(0.0, (worksheet.costpercapita_bn151||0), 0.002); end
  def test_costpercapita_bo151; assert_in_delta(0.0, (worksheet.costpercapita_bo151||0), 0.002); end
  def test_costpercapita_bp151; assert_in_delta(0.0, (worksheet.costpercapita_bp151||0), 0.002); end
  def test_costpercapita_bq151; assert_in_delta(0.0, (worksheet.costpercapita_bq151||0), 0.002); end
  def test_costpercapita_bs151; assert_in_epsilon(1125.8906714967163, worksheet.costpercapita_bs151, 0.002); end
  def test_costpercapita_bt151; assert_in_epsilon(1318.3744248899966, worksheet.costpercapita_bt151, 0.002); end
  def test_costpercapita_bu151; assert_in_epsilon(3566.2775382823347, worksheet.costpercapita_bu151, 0.002); end
  def test_costpercapita_bv151; assert_in_epsilon(5829.675315566559, worksheet.costpercapita_bv151, 0.002); end
  def test_costpercapita_bw151; assert_in_epsilon(7723.127342839423, worksheet.costpercapita_bw151, 0.002); end
  def test_costpercapita_bx151; assert_in_epsilon(9381.728313601929, worksheet.costpercapita_bx151, 0.002); end
  def test_costpercapita_by151; assert_in_epsilon(11060.239405517726, worksheet.costpercapita_by151, 0.002); end
  def test_costpercapita_bz151; assert_in_epsilon(12734.651230577507, worksheet.costpercapita_bz151, 0.002); end
  def test_costpercapita_ca151; assert_in_epsilon(14375.06658938998, worksheet.costpercapita_ca151, 0.002); end
  def test_costpercapita_cc151; assert_in_epsilon(7457.225648018019, worksheet.costpercapita_cc151, 0.002); end
  def test_costpercapita_cd151; assert_in_epsilon(134297.35562959738, worksheet.costpercapita_cd151, 0.002); end
  def test_costpercapita_cf151; assert_in_epsilon(934.6522127253452, worksheet.costpercapita_cf151, 0.002); end
  def test_costpercapita_cg151; assert_in_epsilon(1080.347777992237, worksheet.costpercapita_cg151, 0.002); end
  def test_costpercapita_ch151; assert_in_epsilon(2497.085769362554, worksheet.costpercapita_ch151, 0.002); end
  def test_costpercapita_ci151; assert_in_epsilon(3930.0787684693796, worksheet.costpercapita_ci151, 0.002); end
  def test_costpercapita_cj151; assert_in_epsilon(5059.643709914124, worksheet.costpercapita_cj151, 0.002); end
  def test_costpercapita_ck151; assert_in_epsilon(6102.4829174616525, worksheet.costpercapita_ck151, 0.002); end
  def test_costpercapita_cl151; assert_in_epsilon(7150.075836116421, worksheet.costpercapita_cl151, 0.002); end
  def test_costpercapita_cm151; assert_in_epsilon(8200.011467384931, worksheet.costpercapita_cm151, 0.002); end
  def test_costpercapita_cn151; assert_in_epsilon(9226.539668827798, worksheet.costpercapita_cn151, 0.002); end
  def test_costpercapita_cp151; assert_in_epsilon(4908.990903139383, worksheet.costpercapita_cp151, 0.002); end
  def test_costpercapita_cq151; assert_in_epsilon(89255.90117023792, worksheet.costpercapita_cq151, 0.002); end
  def test_costpercapita_cr151; assert_equal("ok", worksheet.costpercapita_cr151); end
  def test_costpercapita_c152; assert_equal("Buildings", worksheet.costpercapita_c152); end
  def test_costpercapita_e152; assert_in_epsilon(1770.192220211022, worksheet.costpercapita_e152, 0.002); end
  def test_costpercapita_f152; assert_in_epsilon(1890.606033106149, worksheet.costpercapita_f152, 0.002); end
  def test_costpercapita_g152; assert_in_epsilon(2047.1091257849334, worksheet.costpercapita_g152, 0.002); end
  def test_costpercapita_h152; assert_in_epsilon(2164.211337936802, worksheet.costpercapita_h152, 0.002); end
  def test_costpercapita_i152; assert_in_epsilon(2264.332593660085, worksheet.costpercapita_i152, 0.002); end
  def test_costpercapita_j152; assert_in_epsilon(2448.1573679651706, worksheet.costpercapita_j152, 0.002); end
  def test_costpercapita_k152; assert_in_epsilon(2636.8012151020775, worksheet.costpercapita_k152, 0.002); end
  def test_costpercapita_l152; assert_in_epsilon(2831.0403817364822, worksheet.costpercapita_l152, 0.002); end
  def test_costpercapita_m152; assert_in_epsilon(3033.2432394621896, worksheet.costpercapita_m152, 0.002); end
  def test_costpercapita_o152; assert_in_epsilon(103.62902935477307, worksheet.costpercapita_o152, 0.002); end
  def test_costpercapita_p152; assert_in_epsilon(108.58948925451836, worksheet.costpercapita_p152, 0.002); end
  def test_costpercapita_q152; assert_in_epsilon(115.55153739581496, worksheet.costpercapita_q152, 0.002); end
  def test_costpercapita_r152; assert_in_epsilon(120.51478513672399, worksheet.costpercapita_r152, 0.002); end
  def test_costpercapita_s152; assert_in_epsilon(124.45818657451991, worksheet.costpercapita_s152, 0.002); end
  def test_costpercapita_t152; assert_in_epsilon(135.53216649954754, worksheet.costpercapita_t152, 0.002); end
  def test_costpercapita_u152; assert_in_epsilon(147.11399101305847, worksheet.costpercapita_u152, 0.002); end
  def test_costpercapita_v152; assert_in_epsilon(159.2786239933892, worksheet.costpercapita_v152, 0.002); end
  def test_costpercapita_w152; assert_in_epsilon(172.18012128403927, worksheet.costpercapita_w152, 0.002); end
  def test_costpercapita_y152; assert_in_delta(0.0, (worksheet.costpercapita_y152||0), 0.002); end
  def test_costpercapita_z152; assert_in_delta(0.0, (worksheet.costpercapita_z152||0), 0.002); end
  def test_costpercapita_aa152; assert_in_delta(0.0, (worksheet.costpercapita_aa152||0), 0.002); end
  def test_costpercapita_ab152; assert_in_delta(0.0, (worksheet.costpercapita_ab152||0), 0.002); end
  def test_costpercapita_ac152; assert_in_delta(0.0, (worksheet.costpercapita_ac152||0), 0.002); end
  def test_costpercapita_ad152; assert_in_delta(0.0, (worksheet.costpercapita_ad152||0), 0.002); end
  def test_costpercapita_ae152; assert_in_delta(0.0, (worksheet.costpercapita_ae152||0), 0.002); end
  def test_costpercapita_af152; assert_in_delta(0.0, (worksheet.costpercapita_af152||0), 0.002); end
  def test_costpercapita_ag152; assert_in_delta(0.0, (worksheet.costpercapita_ag152||0), 0.002); end
  def test_costpercapita_ai152; assert_in_epsilon(1873.8212495657951, worksheet.costpercapita_ai152, 0.002); end
  def test_costpercapita_aj152; assert_in_epsilon(1999.1955223606674, worksheet.costpercapita_aj152, 0.002); end
  def test_costpercapita_ak152; assert_in_epsilon(2162.6606631807485, worksheet.costpercapita_ak152, 0.002); end
  def test_costpercapita_al152; assert_in_epsilon(2284.726123073526, worksheet.costpercapita_al152, 0.002); end
  def test_costpercapita_am152; assert_in_epsilon(2388.790780234605, worksheet.costpercapita_am152, 0.002); end
  def test_costpercapita_an152; assert_in_epsilon(2583.6895344647187, worksheet.costpercapita_an152, 0.002); end
  def test_costpercapita_ao152; assert_in_epsilon(2783.915206115136, worksheet.costpercapita_ao152, 0.002); end
  def test_costpercapita_ap152; assert_in_epsilon(2990.3190057298707, worksheet.costpercapita_ap152, 0.002); end
  def test_costpercapita_aq152; assert_in_epsilon(3205.4233607462293, worksheet.costpercapita_aq152, 0.002); end
  def test_costpercapita_as152; assert_in_epsilon(2474.7268272745887, worksheet.costpercapita_as152, 0.002); end
  def test_costpercapita_at152; assert_in_epsilon(50046.76809900767, worksheet.costpercapita_at152, 0.002); end
  def test_costpercapita_ay152; assert_in_epsilon(3242.189080949308, worksheet.costpercapita_ay152, 0.002); end
  def test_costpercapita_az152; assert_in_epsilon(3438.0880255711445, worksheet.costpercapita_az152, 0.002); end
  def test_costpercapita_ba152; assert_in_epsilon(3698.3675312843598, worksheet.costpercapita_ba152, 0.002); end
  def test_costpercapita_bb152; assert_in_epsilon(3894.9564189903244, worksheet.costpercapita_bb152, 0.002); end
  def test_costpercapita_bc152; assert_in_epsilon(4061.5702653158996, worksheet.costpercapita_bc152, 0.002); end
  def test_costpercapita_bd152; assert_in_epsilon(4398.167433787422, worksheet.costpercapita_bd152, 0.002); end
  def test_costpercapita_be152; assert_in_epsilon(4747.482915588894, worksheet.costpercapita_be152, 0.002); end
  def test_costpercapita_bf152; assert_in_epsilon(5111.331929141294, worksheet.costpercapita_bf152, 0.002); end
  def test_costpercapita_bg152; assert_in_epsilon(5494.184945047043, worksheet.costpercapita_bg152, 0.002); end
  def test_costpercapita_bi152; assert_in_delta(0.0, (worksheet.costpercapita_bi152||0), 0.002); end
  def test_costpercapita_bj152; assert_in_delta(0.0, (worksheet.costpercapita_bj152||0), 0.002); end
  def test_costpercapita_bk152; assert_in_delta(0.0, (worksheet.costpercapita_bk152||0), 0.002); end
  def test_costpercapita_bl152; assert_in_delta(0.0, (worksheet.costpercapita_bl152||0), 0.002); end
  def test_costpercapita_bm152; assert_in_delta(0.0, (worksheet.costpercapita_bm152||0), 0.002); end
  def test_costpercapita_bn152; assert_in_delta(0.0, (worksheet.costpercapita_bn152||0), 0.002); end
  def test_costpercapita_bo152; assert_in_delta(0.0, (worksheet.costpercapita_bo152||0), 0.002); end
  def test_costpercapita_bp152; assert_in_delta(0.0, (worksheet.costpercapita_bp152||0), 0.002); end
  def test_costpercapita_bq152; assert_in_delta(0.0, (worksheet.costpercapita_bq152||0), 0.002); end
  def test_costpercapita_bs152; assert_in_epsilon(3345.818110304081, worksheet.costpercapita_bs152, 0.002); end
  def test_costpercapita_bt152; assert_in_epsilon(3546.677514825663, worksheet.costpercapita_bt152, 0.002); end
  def test_costpercapita_bu152; assert_in_epsilon(3813.9190686801753, worksheet.costpercapita_bu152, 0.002); end
  def test_costpercapita_bv152; assert_in_epsilon(4015.471204127048, worksheet.costpercapita_bv152, 0.002); end
  def test_costpercapita_bw152; assert_in_epsilon(4186.028451890421, worksheet.costpercapita_bw152, 0.002); end
  def test_costpercapita_bx152; assert_in_epsilon(4533.699600286969, worksheet.costpercapita_bx152, 0.002); end
  def test_costpercapita_by152; assert_in_epsilon(4894.596906601952, worksheet.costpercapita_by152, 0.002); end
  def test_costpercapita_bz152; assert_in_epsilon(5270.610553134684, worksheet.costpercapita_bz152, 0.002); end
  def test_costpercapita_ca152; assert_in_epsilon(5666.365066331082, worksheet.costpercapita_ca152, 0.002); end
  def test_costpercapita_cc152; assert_in_epsilon(4363.687386242454, worksheet.costpercapita_cc152, 0.002); end
  def test_costpercapita_cd152; assert_in_epsilon(88219.66465138498, worksheet.costpercapita_cd152, 0.002); end
  def test_costpercapita_cf152; assert_in_epsilon(1471.9968607382862, worksheet.costpercapita_cf152, 0.002); end
  def test_costpercapita_cg152; assert_in_epsilon(1547.4819924649958, worksheet.costpercapita_cg152, 0.002); end
  def test_costpercapita_ch152; assert_in_epsilon(1651.2584054994265, worksheet.costpercapita_ch152, 0.002); end
  def test_costpercapita_ci152; assert_in_epsilon(1730.7450810535224, worksheet.costpercapita_ci152, 0.002); end
  def test_costpercapita_cj152; assert_in_epsilon(1797.2376716558144, worksheet.costpercapita_cj152, 0.002); end
  def test_costpercapita_ck152; assert_in_epsilon(1950.010065822251, worksheet.costpercapita_ck152, 0.002); end
  def test_costpercapita_cl152; assert_in_epsilon(2110.681700486816, worksheet.costpercapita_cl152, 0.002); end
  def test_costpercapita_cm152; assert_in_epsilon(2280.2915474048127, worksheet.costpercapita_cm152, 0.002); end
  def test_costpercapita_cn152; assert_in_epsilon(2460.9417055848526, worksheet.costpercapita_cn152, 0.002); end
  def test_costpercapita_cp152; assert_in_epsilon(1888.9605589678638, worksheet.costpercapita_cp152, 0.002); end
  def test_costpercapita_cq152; assert_in_epsilon(38172.89655237733, worksheet.costpercapita_cq152, 0.002); end
  def test_costpercapita_cr152; assert_equal("ok", worksheet.costpercapita_cr152); end
  def test_costpercapita_c153; assert_equal("Transport", worksheet.costpercapita_c153); end
  def test_costpercapita_e153; assert_in_epsilon(3049.6589775980588, worksheet.costpercapita_e153, 0.002); end
  def test_costpercapita_f153; assert_in_epsilon(3765.723645905041, worksheet.costpercapita_f153, 0.002); end
  def test_costpercapita_g153; assert_in_epsilon(4710.766493380897, worksheet.costpercapita_g153, 0.002); end
  def test_costpercapita_h153; assert_in_epsilon(5748.060098837992, worksheet.costpercapita_h153, 0.002); end
  def test_costpercapita_i153; assert_in_epsilon(6877.824897773225, worksheet.costpercapita_i153, 0.002); end
  def test_costpercapita_j153; assert_in_epsilon(8044.980110129594, worksheet.costpercapita_j153, 0.002); end
  def test_costpercapita_k153; assert_in_epsilon(9197.732161860455, worksheet.costpercapita_k153, 0.002); end
  def test_costpercapita_l153; assert_in_epsilon(10335.626244481504, worksheet.costpercapita_l153, 0.002); end
  def test_costpercapita_m153; assert_in_epsilon(11581.886135823686, worksheet.costpercapita_m153, 0.002); end
  def test_costpercapita_o153; assert_in_epsilon(3734.945820494827, worksheet.costpercapita_o153, 0.002); end
  def test_costpercapita_p153; assert_in_epsilon(4740.2184343382205, worksheet.costpercapita_p153, 0.002); end
  def test_costpercapita_q153; assert_in_epsilon(5666.258414434695, worksheet.costpercapita_q153, 0.002); end
  def test_costpercapita_r153; assert_in_epsilon(6540.777093901478, worksheet.costpercapita_r153, 0.002); end
  def test_costpercapita_s153; assert_in_epsilon(7363.62722616522, worksheet.costpercapita_s153, 0.002); end
  def test_costpercapita_t153; assert_in_epsilon(8222.49077848361, worksheet.costpercapita_t153, 0.002); end
  def test_costpercapita_u153; assert_in_epsilon(8620.64970139824, worksheet.costpercapita_u153, 0.002); end
  def test_costpercapita_v153; assert_in_epsilon(8987.789351478334, worksheet.costpercapita_v153, 0.002); end
  def test_costpercapita_w153; assert_in_epsilon(9572.38748001435, worksheet.costpercapita_w153, 0.002); end
  def test_costpercapita_y153; assert_in_delta(0.0, (worksheet.costpercapita_y153||0), 0.002); end
  def test_costpercapita_z153; assert_in_delta(0.0, (worksheet.costpercapita_z153||0), 0.002); end
  def test_costpercapita_aa153; assert_in_delta(0.0, (worksheet.costpercapita_aa153||0), 0.002); end
  def test_costpercapita_ab153; assert_in_delta(0.0, (worksheet.costpercapita_ab153||0), 0.002); end
  def test_costpercapita_ac153; assert_in_delta(0.0, (worksheet.costpercapita_ac153||0), 0.002); end
  def test_costpercapita_ad153; assert_in_delta(0.0, (worksheet.costpercapita_ad153||0), 0.002); end
  def test_costpercapita_ae153; assert_in_delta(0.0, (worksheet.costpercapita_ae153||0), 0.002); end
  def test_costpercapita_af153; assert_in_delta(0.0, (worksheet.costpercapita_af153||0), 0.002); end
  def test_costpercapita_ag153; assert_in_delta(0.0, (worksheet.costpercapita_ag153||0), 0.002); end
  def test_costpercapita_ai153; assert_in_epsilon(6784.604798092886, worksheet.costpercapita_ai153, 0.002); end
  def test_costpercapita_aj153; assert_in_epsilon(8505.942080243261, worksheet.costpercapita_aj153, 0.002); end
  def test_costpercapita_ak153; assert_in_epsilon(10377.024907815592, worksheet.costpercapita_ak153, 0.002); end
  def test_costpercapita_al153; assert_in_epsilon(12288.837192739471, worksheet.costpercapita_al153, 0.002); end
  def test_costpercapita_am153; assert_in_epsilon(14241.452123938445, worksheet.costpercapita_am153, 0.002); end
  def test_costpercapita_an153; assert_in_epsilon(16267.470888613205, worksheet.costpercapita_an153, 0.002); end
  def test_costpercapita_ao153; assert_in_epsilon(17818.3818632587, worksheet.costpercapita_ao153, 0.002); end
  def test_costpercapita_ap153; assert_in_epsilon(19323.415595959836, worksheet.costpercapita_ap153, 0.002); end
  def test_costpercapita_aq153; assert_in_epsilon(21154.273615838036, worksheet.costpercapita_aq153, 0.002); end
  def test_costpercapita_as153; assert_in_epsilon(14084.60034072216, worksheet.costpercapita_as153, 0.002); end
  def test_costpercapita_at153; assert_in_epsilon(275730.4942197522, worksheet.costpercapita_at153, 0.002); end
  def test_costpercapita_ay153; assert_in_epsilon(9752.560397135225, worksheet.costpercapita_ay153, 0.002); end
  def test_costpercapita_az153; assert_in_epsilon(11841.606587467468, worksheet.costpercapita_az153, 0.002); end
  def test_costpercapita_ba153; assert_in_epsilon(14608.931870790824, worksheet.costpercapita_ba153, 0.002); end
  def test_costpercapita_bb153; assert_in_epsilon(17675.340935735472, worksheet.costpercapita_bb153, 0.002); end
  def test_costpercapita_bc153; assert_in_epsilon(21052.55059870593, worksheet.costpercapita_bc153, 0.002); end
  def test_costpercapita_bd153; assert_in_epsilon(24624.04586281783, worksheet.costpercapita_bd153, 0.002); end
  def test_costpercapita_be153; assert_in_epsilon(28282.296675096586, worksheet.costpercapita_be153, 0.002); end
  def test_costpercapita_bf153; assert_in_epsilon(32042.343842392143, worksheet.costpercapita_bf153, 0.002); end
  def test_costpercapita_bg153; assert_in_epsilon(36211.765560013235, worksheet.costpercapita_bg153, 0.002); end
  def test_costpercapita_bi153; assert_in_delta(0.0, (worksheet.costpercapita_bi153||0), 0.002); end
  def test_costpercapita_bj153; assert_in_delta(0.0, (worksheet.costpercapita_bj153||0), 0.002); end
  def test_costpercapita_bk153; assert_in_delta(0.0, (worksheet.costpercapita_bk153||0), 0.002); end
  def test_costpercapita_bl153; assert_in_delta(0.0, (worksheet.costpercapita_bl153||0), 0.002); end
  def test_costpercapita_bm153; assert_in_delta(0.0, (worksheet.costpercapita_bm153||0), 0.002); end
  def test_costpercapita_bn153; assert_in_delta(0.0, (worksheet.costpercapita_bn153||0), 0.002); end
  def test_costpercapita_bo153; assert_in_delta(0.0, (worksheet.costpercapita_bo153||0), 0.002); end
  def test_costpercapita_bp153; assert_in_delta(0.0, (worksheet.costpercapita_bp153||0), 0.002); end
  def test_costpercapita_bq153; assert_in_delta(0.0, (worksheet.costpercapita_bq153||0), 0.002); end
  def test_costpercapita_bs153; assert_in_epsilon(13487.50621763005, worksheet.costpercapita_bs153, 0.002); end
  def test_costpercapita_bt153; assert_in_epsilon(16581.82502180569, worksheet.costpercapita_bt153, 0.002); end
  def test_costpercapita_bu153; assert_in_epsilon(20275.19028522552, worksheet.costpercapita_bu153, 0.002); end
  def test_costpercapita_bv153; assert_in_epsilon(24216.11802963695, worksheet.costpercapita_bv153, 0.002); end
  def test_costpercapita_bw153; assert_in_epsilon(28416.17782487115, worksheet.costpercapita_bw153, 0.002); end
  def test_costpercapita_bx153; assert_in_epsilon(32846.53664130144, worksheet.costpercapita_bx153, 0.002); end
  def test_costpercapita_by153; assert_in_epsilon(36902.94637649483, worksheet.costpercapita_by153, 0.002); end
  def test_costpercapita_bz153; assert_in_epsilon(41030.133193870475, worksheet.costpercapita_bz153, 0.002); end
  def test_costpercapita_ca153; assert_in_epsilon(45784.15304002758, worksheet.costpercapita_ca153, 0.002); end
  def test_costpercapita_cc153; assert_in_epsilon(28837.842958984853, worksheet.costpercapita_cc153, 0.002); end
  def test_costpercapita_cd153; assert_in_epsilon(557808.8140309696, worksheet.costpercapita_cd153, 0.002); end
  def test_costpercapita_cf153; assert_in_epsilon(6702.901419537166, worksheet.costpercapita_cf153, 0.002); end
  def test_costpercapita_cg153; assert_in_epsilon(8075.882941562428, worksheet.costpercapita_cg153, 0.002); end
  def test_costpercapita_ch153; assert_in_epsilon(9898.165377409929, worksheet.costpercapita_ch153, 0.002); end
  def test_costpercapita_ci153; assert_in_epsilon(11927.280836897477, worksheet.costpercapita_ci153, 0.002); end
  def test_costpercapita_cj153; assert_in_epsilon(14174.725700932704, worksheet.costpercapita_cj153, 0.002); end
  def test_costpercapita_ck153; assert_in_epsilon(16579.06575268824, worksheet.costpercapita_ck153, 0.002); end
  def test_costpercapita_cl153; assert_in_epsilon(19084.56451323613, worksheet.costpercapita_cl153, 0.002); end
  def test_costpercapita_cm153; assert_in_epsilon(21706.71759791064, worksheet.costpercapita_cm153, 0.002); end
  def test_costpercapita_cn153; assert_in_epsilon(24629.87942418955, worksheet.costpercapita_cn153, 0.002); end
  def test_costpercapita_cp153; assert_in_epsilon(14753.242618262695, worksheet.costpercapita_cp153, 0.002); end
  def test_costpercapita_cq153; assert_in_epsilon(282078.3198112175, worksheet.costpercapita_cq153, 0.002); end
  def test_costpercapita_cr153; assert_equal("ok", worksheet.costpercapita_cr153); end
  def test_costpercapita_c154; assert_equal("Other", worksheet.costpercapita_c154); end
  def test_costpercapita_e154; assert_in_delta(0.0, (worksheet.costpercapita_e154||0), 0.002); end
  def test_costpercapita_f154; assert_in_delta(0.0, (worksheet.costpercapita_f154||0), 0.002); end
  def test_costpercapita_g154; assert_in_delta(0.0, (worksheet.costpercapita_g154||0), 0.002); end
  def test_costpercapita_h154; assert_in_delta(0.0, (worksheet.costpercapita_h154||0), 0.002); end
  def test_costpercapita_i154; assert_in_delta(0.0, (worksheet.costpercapita_i154||0), 0.002); end
  def test_costpercapita_j154; assert_in_delta(0.0, (worksheet.costpercapita_j154||0), 0.002); end
  def test_costpercapita_k154; assert_in_delta(0.0, (worksheet.costpercapita_k154||0), 0.002); end
  def test_costpercapita_l154; assert_in_delta(0.0, (worksheet.costpercapita_l154||0), 0.002); end
  def test_costpercapita_m154; assert_in_delta(0.0, (worksheet.costpercapita_m154||0), 0.002); end
  def test_costpercapita_o154; assert_in_delta(0.0, (worksheet.costpercapita_o154||0), 0.002); end
  def test_costpercapita_p154; assert_in_delta(0.0, (worksheet.costpercapita_p154||0), 0.002); end
  def test_costpercapita_q154; assert_in_delta(0.0, (worksheet.costpercapita_q154||0), 0.002); end
  def test_costpercapita_r154; assert_in_delta(0.0, (worksheet.costpercapita_r154||0), 0.002); end
  def test_costpercapita_s154; assert_in_delta(0.0, (worksheet.costpercapita_s154||0), 0.002); end
  def test_costpercapita_t154; assert_in_delta(0.0, (worksheet.costpercapita_t154||0), 0.002); end
  def test_costpercapita_u154; assert_in_delta(0.0, (worksheet.costpercapita_u154||0), 0.002); end
  def test_costpercapita_v154; assert_in_delta(0.0, (worksheet.costpercapita_v154||0), 0.002); end
  def test_costpercapita_w154; assert_in_delta(0.0, (worksheet.costpercapita_w154||0), 0.002); end
  def test_costpercapita_y154; assert_in_delta(0.0, (worksheet.costpercapita_y154||0), 0.002); end
  def test_costpercapita_z154; assert_in_delta(0.0, (worksheet.costpercapita_z154||0), 0.002); end
  def test_costpercapita_aa154; assert_in_delta(0.0, (worksheet.costpercapita_aa154||0), 0.002); end
  def test_costpercapita_ab154; assert_in_delta(0.0, (worksheet.costpercapita_ab154||0), 0.002); end
  def test_costpercapita_ac154; assert_in_delta(0.0, (worksheet.costpercapita_ac154||0), 0.002); end
  def test_costpercapita_ad154; assert_in_delta(0.0, (worksheet.costpercapita_ad154||0), 0.002); end
  def test_costpercapita_ae154; assert_in_delta(0.0, (worksheet.costpercapita_ae154||0), 0.002); end
  def test_costpercapita_af154; assert_in_delta(0.0, (worksheet.costpercapita_af154||0), 0.002); end
  def test_costpercapita_ag154; assert_in_delta(0.0, (worksheet.costpercapita_ag154||0), 0.002); end
  def test_costpercapita_ai154; assert_in_delta(0.0, (worksheet.costpercapita_ai154||0), 0.002); end
  def test_costpercapita_aj154; assert_in_delta(0.0, (worksheet.costpercapita_aj154||0), 0.002); end
  def test_costpercapita_ak154; assert_in_delta(0.0, (worksheet.costpercapita_ak154||0), 0.002); end
  def test_costpercapita_al154; assert_in_delta(0.0, (worksheet.costpercapita_al154||0), 0.002); end
  def test_costpercapita_am154; assert_in_delta(0.0, (worksheet.costpercapita_am154||0), 0.002); end
  def test_costpercapita_an154; assert_in_delta(0.0, (worksheet.costpercapita_an154||0), 0.002); end
  def test_costpercapita_ao154; assert_in_delta(0.0, (worksheet.costpercapita_ao154||0), 0.002); end
  def test_costpercapita_ap154; assert_in_delta(0.0, (worksheet.costpercapita_ap154||0), 0.002); end
  def test_costpercapita_aq154; assert_in_delta(0.0, (worksheet.costpercapita_aq154||0), 0.002); end
  def test_costpercapita_as154; assert_in_delta(0.0, (worksheet.costpercapita_as154||0), 0.002); end
  def test_costpercapita_at154; assert_in_delta(0.0, (worksheet.costpercapita_at154||0), 0.002); end
  def test_costpercapita_ay154; assert_in_delta(0.0, (worksheet.costpercapita_ay154||0), 0.002); end
  def test_costpercapita_az154; assert_in_delta(0.0, (worksheet.costpercapita_az154||0), 0.002); end
  def test_costpercapita_ba154; assert_in_delta(0.0, (worksheet.costpercapita_ba154||0), 0.002); end
  def test_costpercapita_bb154; assert_in_delta(0.0, (worksheet.costpercapita_bb154||0), 0.002); end
  def test_costpercapita_bc154; assert_in_delta(0.0, (worksheet.costpercapita_bc154||0), 0.002); end
  def test_costpercapita_bd154; assert_in_delta(0.0, (worksheet.costpercapita_bd154||0), 0.002); end
  def test_costpercapita_be154; assert_in_delta(0.0, (worksheet.costpercapita_be154||0), 0.002); end
  def test_costpercapita_bf154; assert_in_delta(0.0, (worksheet.costpercapita_bf154||0), 0.002); end
  def test_costpercapita_bg154; assert_in_delta(0.0, (worksheet.costpercapita_bg154||0), 0.002); end
  def test_costpercapita_bi154; assert_in_delta(0.0, (worksheet.costpercapita_bi154||0), 0.002); end
  def test_costpercapita_bj154; assert_in_delta(0.0, (worksheet.costpercapita_bj154||0), 0.002); end
  def test_costpercapita_bk154; assert_in_delta(0.0, (worksheet.costpercapita_bk154||0), 0.002); end
  def test_costpercapita_bl154; assert_in_delta(0.0, (worksheet.costpercapita_bl154||0), 0.002); end
  def test_costpercapita_bm154; assert_in_delta(0.0, (worksheet.costpercapita_bm154||0), 0.002); end
  def test_costpercapita_bn154; assert_in_delta(0.0, (worksheet.costpercapita_bn154||0), 0.002); end
  def test_costpercapita_bo154; assert_in_delta(0.0, (worksheet.costpercapita_bo154||0), 0.002); end
  def test_costpercapita_bp154; assert_in_delta(0.0, (worksheet.costpercapita_bp154||0), 0.002); end
  def test_costpercapita_bq154; assert_in_delta(0.0, (worksheet.costpercapita_bq154||0), 0.002); end
  def test_costpercapita_bs154; assert_in_delta(0.0, (worksheet.costpercapita_bs154||0), 0.002); end
  def test_costpercapita_bt154; assert_in_delta(0.0, (worksheet.costpercapita_bt154||0), 0.002); end
  def test_costpercapita_bu154; assert_in_delta(0.0, (worksheet.costpercapita_bu154||0), 0.002); end
  def test_costpercapita_bv154; assert_in_delta(0.0, (worksheet.costpercapita_bv154||0), 0.002); end
  def test_costpercapita_bw154; assert_in_delta(0.0, (worksheet.costpercapita_bw154||0), 0.002); end
  def test_costpercapita_bx154; assert_in_delta(0.0, (worksheet.costpercapita_bx154||0), 0.002); end
  def test_costpercapita_by154; assert_in_delta(0.0, (worksheet.costpercapita_by154||0), 0.002); end
  def test_costpercapita_bz154; assert_in_delta(0.0, (worksheet.costpercapita_bz154||0), 0.002); end
  def test_costpercapita_ca154; assert_in_delta(0.0, (worksheet.costpercapita_ca154||0), 0.002); end
  def test_costpercapita_cc154; assert_in_delta(0.0, (worksheet.costpercapita_cc154||0), 0.002); end
  def test_costpercapita_cd154; assert_in_delta(0.0, (worksheet.costpercapita_cd154||0), 0.002); end
  def test_costpercapita_cf154; assert_in_delta(0.0, (worksheet.costpercapita_cf154||0), 0.002); end
  def test_costpercapita_cg154; assert_in_delta(0.0, (worksheet.costpercapita_cg154||0), 0.002); end
  def test_costpercapita_ch154; assert_in_delta(0.0, (worksheet.costpercapita_ch154||0), 0.002); end
  def test_costpercapita_ci154; assert_in_delta(0.0, (worksheet.costpercapita_ci154||0), 0.002); end
  def test_costpercapita_cj154; assert_in_delta(0.0, (worksheet.costpercapita_cj154||0), 0.002); end
  def test_costpercapita_ck154; assert_in_delta(0.0, (worksheet.costpercapita_ck154||0), 0.002); end
  def test_costpercapita_cl154; assert_in_delta(0.0, (worksheet.costpercapita_cl154||0), 0.002); end
  def test_costpercapita_cm154; assert_in_delta(0.0, (worksheet.costpercapita_cm154||0), 0.002); end
  def test_costpercapita_cn154; assert_in_delta(0.0, (worksheet.costpercapita_cn154||0), 0.002); end
  def test_costpercapita_cp154; assert_in_delta(0.0, (worksheet.costpercapita_cp154||0), 0.002); end
  def test_costpercapita_cq154; assert_in_delta(0.0, (worksheet.costpercapita_cq154||0), 0.002); end
  def test_costpercapita_cr154; assert_equal("ok", worksheet.costpercapita_cr154); end
  def test_costpercapita_c155; assert_equal("Total", worksheet.costpercapita_c155); end
  def test_costpercapita_e155; assert_in_epsilon(5013.222203363433, worksheet.costpercapita_e155, 0.002); end
  def test_costpercapita_f155; assert_in_epsilon(5888.966367787347, worksheet.costpercapita_f155, 0.002); end
  def test_costpercapita_g155; assert_in_epsilon(7550.327696330052, worksheet.costpercapita_g155, 0.002); end
  def test_costpercapita_h155; assert_in_epsilon(9250.341012253866, worksheet.costpercapita_h155, 0.002); end
  def test_costpercapita_i155; assert_in_epsilon(10957.291598577533, worksheet.costpercapita_i155, 0.002); end
  def test_costpercapita_j155; assert_in_epsilon(12714.20792659277, worksheet.costpercapita_j155, 0.002); end
  def test_costpercapita_k155; assert_in_epsilon(14459.064768037344, worksheet.costpercapita_k155, 0.002); end
  def test_costpercapita_l155; assert_in_epsilon(16198.398790286286, worksheet.costpercapita_l155, 0.002); end
  def test_costpercapita_m155; assert_in_epsilon(18035.93578036697, worksheet.costpercapita_m155, 0.002); end
  def test_costpercapita_o155; assert_in_epsilon(4161.879231084714, worksheet.costpercapita_o155, 0.002); end
  def test_costpercapita_p155; assert_in_epsilon(5172.906429761173, worksheet.costpercapita_p155, 0.002); end
  def test_costpercapita_q155; assert_in_epsilon(6364.412336196205, worksheet.costpercapita_q155, 0.002); end
  def test_costpercapita_r155; assert_in_epsilon(7521.641177008825, worksheet.costpercapita_r155, 0.002); end
  def test_costpercapita_s155; assert_in_epsilon(8627.038605550018, worksheet.costpercapita_s155, 0.002); end
  def test_costpercapita_t155; assert_in_epsilon(9670.684422761045, worksheet.costpercapita_t155, 0.002); end
  def test_costpercapita_u155; assert_in_epsilon(10256.242103050463, worksheet.costpercapita_u155, 0.002); end
  def test_costpercapita_v155; assert_in_epsilon(10757.577485528836, worksheet.costpercapita_v155, 0.002); end
  def test_costpercapita_w155; assert_in_epsilon(11539.035602013058, worksheet.costpercapita_w155, 0.002); end
  def test_costpercapita_y155; assert_in_epsilon(151.49952838097238, worksheet.costpercapita_y155, 0.002); end
  def test_costpercapita_z155; assert_in_epsilon(-269.04693601951794, worksheet.costpercapita_z155, 0.002); end
  def test_costpercapita_aa155; assert_in_epsilon(-312.9060629186698, worksheet.costpercapita_aa155, 0.002); end
  def test_costpercapita_ab155; assert_in_epsilon(-315.3880863834882, worksheet.costpercapita_ab155, 0.002); end
  def test_costpercapita_ac155; assert_in_epsilon(-1202.9391332363678, worksheet.costpercapita_ac155, 0.002); end
  def test_costpercapita_ad155; assert_in_epsilon(-1543.9650402724324, worksheet.costpercapita_ad155, 0.002); end
  def test_costpercapita_ae155; assert_in_epsilon(-2197.3514535987656, worksheet.costpercapita_ae155, 0.002); end
  def test_costpercapita_af155; assert_in_epsilon(-2550.090566130168, worksheet.costpercapita_af155, 0.002); end
  def test_costpercapita_ag155; assert_in_epsilon(-3200.211399967796, worksheet.costpercapita_ag155, 0.002); end
  def test_costpercapita_ai155; assert_in_epsilon(9326.60096282912, worksheet.costpercapita_ai155, 0.002); end
  def test_costpercapita_aj155; assert_in_epsilon(10792.825861529001, worksheet.costpercapita_aj155, 0.002); end
  def test_costpercapita_ak155; assert_in_epsilon(13601.833969607587, worksheet.costpercapita_ak155, 0.002); end
  def test_costpercapita_al155; assert_in_epsilon(16456.594102879204, worksheet.costpercapita_al155, 0.002); end
  def test_costpercapita_am155; assert_in_epsilon(18381.391070891186, worksheet.costpercapita_am155, 0.002); end
  def test_costpercapita_an155; assert_in_epsilon(20840.92730908138, worksheet.costpercapita_an155, 0.002); end
  def test_costpercapita_ao155; assert_in_epsilon(22517.955417489044, worksheet.costpercapita_ao155, 0.002); end
  def test_costpercapita_ap155; assert_in_epsilon(24405.88570968495, worksheet.costpercapita_ap155, 0.002); end
  def test_costpercapita_aq155; assert_in_epsilon(26374.759982412234, worksheet.costpercapita_aq155, 0.002); end
  def test_costpercapita_as155; assert_in_epsilon(18077.641598489303, worksheet.costpercapita_as155, 0.002); end
  def test_costpercapita_at155; assert_in_epsilon(354949.86739366746, worksheet.costpercapita_at155, 0.002); end
  def test_costpercapita_ay155; assert_in_epsilon(14129.513062108526, worksheet.costpercapita_ay155, 0.002); end
  def test_costpercapita_az155; assert_in_epsilon(16600.630710979774, worksheet.costpercapita_az155, 0.002); end
  def test_costpercapita_ba155; assert_in_epsilon(21596.837248601958, worksheet.costpercapita_ba155, 0.002); end
  def test_costpercapita_bb155; assert_in_epsilon(26838.445698674248, worksheet.costpercapita_bb155, 0.002); end
  def test_costpercapita_bc155; assert_in_epsilon(31988.89868108018, worksheet.costpercapita_bc155, 0.002); end
  def test_costpercapita_bd155; assert_in_epsilon(37349.99507973704, worksheet.costpercapita_bd155, 0.002); end
  def test_costpercapita_be155; assert_in_epsilon(42740.55107257227, worksheet.costpercapita_be155, 0.002); end
  def test_costpercapita_bf155; assert_in_epsilon(48321.23954048382, worksheet.costpercapita_bf155, 0.002); end
  def test_costpercapita_bg155; assert_in_epsilon(54236.747498100594, worksheet.costpercapita_bg155, 0.002); end
  def test_costpercapita_bi155; assert_in_delta(0.0, (worksheet.costpercapita_bi155||0), 0.002); end
  def test_costpercapita_bj155; assert_in_delta(0.0, (worksheet.costpercapita_bj155||0), 0.002); end
  def test_costpercapita_bk155; assert_in_delta(0.0, (worksheet.costpercapita_bk155||0), 0.002); end
  def test_costpercapita_bl155; assert_in_delta(0.0, (worksheet.costpercapita_bl155||0), 0.002); end
  def test_costpercapita_bm155; assert_in_delta(0.0, (worksheet.costpercapita_bm155||0), 0.002); end
  def test_costpercapita_bn155; assert_in_delta(0.0, (worksheet.costpercapita_bn155||0), 0.002); end
  def test_costpercapita_bo155; assert_in_delta(0.0, (worksheet.costpercapita_bo155||0), 0.002); end
  def test_costpercapita_bp155; assert_in_delta(0.0, (worksheet.costpercapita_bp155||0), 0.002); end
  def test_costpercapita_bq155; assert_in_delta(0.0, (worksheet.costpercapita_bq155||0), 0.002); end
  def test_costpercapita_bs155; assert_in_epsilon(19957.40488071632, worksheet.costpercapita_bs155, 0.002); end
  def test_costpercapita_bt155; assert_in_epsilon(23577.228303464835, worksheet.costpercapita_bt155, 0.002); end
  def test_costpercapita_bu155; assert_in_epsilon(29029.629083359505, worksheet.costpercapita_bu155, 0.002); end
  def test_costpercapita_bv155; assert_in_epsilon(35551.15545811045, worksheet.costpercapita_bv155, 0.002); end
  def test_costpercapita_bw155; assert_in_epsilon(41975.35427270077, worksheet.costpercapita_bw155, 0.002); end
  def test_costpercapita_bx155; assert_in_epsilon(48559.39427330212, worksheet.costpercapita_bx155, 0.002); end
  def test_costpercapita_by155; assert_in_epsilon(54686.55431488461, worksheet.costpercapita_by155, 0.002); end
  def test_costpercapita_bz155; assert_in_epsilon(61165.28712314075, worksheet.costpercapita_bz155, 0.002); end
  def test_costpercapita_ca155; assert_in_epsilon(68150.34564389283, worksheet.costpercapita_ca155, 0.002); end
  def test_costpercapita_cc155; assert_in_epsilon(42516.92815039691, worksheet.costpercapita_cc155, 0.002); end
  def test_costpercapita_cd155; assert_in_epsilon(818171.4333121879, worksheet.costpercapita_cd155, 0.002); end
  def test_costpercapita_cf155; assert_in_epsilon(9116.290858745093, worksheet.costpercapita_cf155, 0.002); end
  def test_costpercapita_cg155; assert_in_epsilon(10711.664343192428, worksheet.costpercapita_cg155, 0.002); end
  def test_costpercapita_ch155; assert_in_epsilon(14046.50955227191, worksheet.costpercapita_ch155, 0.002); end
  def test_costpercapita_ci155; assert_in_epsilon(17588.104686420378, worksheet.costpercapita_ci155, 0.002); end
  def test_costpercapita_cj155; assert_in_epsilon(21031.607082502644, worksheet.costpercapita_cj155, 0.002); end
  def test_costpercapita_ck155; assert_in_epsilon(24635.787153144272, worksheet.costpercapita_ck155, 0.002); end
  def test_costpercapita_cl155; assert_in_epsilon(28281.486304534923, worksheet.costpercapita_cl155, 0.002); end
  def test_costpercapita_cm155; assert_in_epsilon(32122.84075019753, worksheet.costpercapita_cm155, 0.002); end
  def test_costpercapita_cn155; assert_in_epsilon(36200.811717733624, worksheet.costpercapita_cn155, 0.002); end
  def test_costpercapita_cp155; assert_in_epsilon(21526.122494304756, worksheet.costpercapita_cp155, 0.002); end
  def test_costpercapita_cq155; assert_in_epsilon(409189.4528063558, worksheet.costpercapita_cq155, 0.002); end
  def test_costpercapita_cr155; assert_equal("err", worksheet.costpercapita_cr155); end
  def test_costpercapita_e156; assert_equal("ok", worksheet.costpercapita_e156); end
  def test_costpercapita_f156; assert_equal("ok", worksheet.costpercapita_f156); end
  def test_costpercapita_g156; assert_equal("ok", worksheet.costpercapita_g156); end
  def test_costpercapita_h156; assert_equal("ok", worksheet.costpercapita_h156); end
  def test_costpercapita_i156; assert_equal("ok", worksheet.costpercapita_i156); end
  def test_costpercapita_j156; assert_equal("ok", worksheet.costpercapita_j156); end
  def test_costpercapita_k156; assert_equal("ok", worksheet.costpercapita_k156); end
  def test_costpercapita_l156; assert_equal("ok", worksheet.costpercapita_l156); end
  def test_costpercapita_m156; assert_equal("ok", worksheet.costpercapita_m156); end
  def test_costpercapita_o156; assert_equal("ok", worksheet.costpercapita_o156); end
  def test_costpercapita_p156; assert_equal("ok", worksheet.costpercapita_p156); end
  def test_costpercapita_q156; assert_equal("ok", worksheet.costpercapita_q156); end
  def test_costpercapita_r156; assert_equal("ok", worksheet.costpercapita_r156); end
  def test_costpercapita_s156; assert_equal("ok", worksheet.costpercapita_s156); end
  def test_costpercapita_t156; assert_equal("ok", worksheet.costpercapita_t156); end
  def test_costpercapita_u156; assert_equal("ok", worksheet.costpercapita_u156); end
  def test_costpercapita_v156; assert_equal("ok", worksheet.costpercapita_v156); end
  def test_costpercapita_w156; assert_equal("ok", worksheet.costpercapita_w156); end
  def test_costpercapita_y156; assert_equal("ok", worksheet.costpercapita_y156); end
  def test_costpercapita_z156; assert_equal("ok", worksheet.costpercapita_z156); end
  def test_costpercapita_aa156; assert_equal("ok", worksheet.costpercapita_aa156); end
  def test_costpercapita_ab156; assert_equal("ok", worksheet.costpercapita_ab156); end
  def test_costpercapita_ac156; assert_equal("ok", worksheet.costpercapita_ac156); end
  def test_costpercapita_ad156; assert_equal("ok", worksheet.costpercapita_ad156); end
  def test_costpercapita_ae156; assert_equal("ok", worksheet.costpercapita_ae156); end
  def test_costpercapita_af156; assert_equal("ok", worksheet.costpercapita_af156); end
  def test_costpercapita_ag156; assert_equal("ok", worksheet.costpercapita_ag156); end
  def test_costpercapita_ai156; assert_equal("ok", worksheet.costpercapita_ai156); end
  def test_costpercapita_aj156; assert_equal("ok", worksheet.costpercapita_aj156); end
  def test_costpercapita_ak156; assert_equal("ok", worksheet.costpercapita_ak156); end
  def test_costpercapita_al156; assert_equal("ok", worksheet.costpercapita_al156); end
  def test_costpercapita_am156; assert_equal("ok", worksheet.costpercapita_am156); end
  def test_costpercapita_an156; assert_equal("ok", worksheet.costpercapita_an156); end
  def test_costpercapita_ao156; assert_equal("ok", worksheet.costpercapita_ao156); end
  def test_costpercapita_ap156; assert_equal("ok", worksheet.costpercapita_ap156); end
  def test_costpercapita_aq156; assert_equal("ok", worksheet.costpercapita_aq156); end
  def test_costpercapita_as156; assert_equal("ok", worksheet.costpercapita_as156); end
  def test_costpercapita_at156; assert_equal("ok", worksheet.costpercapita_at156); end
  def test_costpercapita_ay156; assert_equal("ok", worksheet.costpercapita_ay156); end
  def test_costpercapita_az156; assert_equal("ok", worksheet.costpercapita_az156); end
  def test_costpercapita_ba156; assert_equal("ok", worksheet.costpercapita_ba156); end
  def test_costpercapita_bb156; assert_equal("ok", worksheet.costpercapita_bb156); end
  def test_costpercapita_bc156; assert_equal("ok", worksheet.costpercapita_bc156); end
  def test_costpercapita_bd156; assert_equal("ok", worksheet.costpercapita_bd156); end
  def test_costpercapita_be156; assert_equal("ok", worksheet.costpercapita_be156); end
  def test_costpercapita_bf156; assert_equal("ok", worksheet.costpercapita_bf156); end
  def test_costpercapita_bg156; assert_equal("ok", worksheet.costpercapita_bg156); end
  def test_costpercapita_bi156; assert_equal("ok", worksheet.costpercapita_bi156); end
  def test_costpercapita_bj156; assert_equal("ok", worksheet.costpercapita_bj156); end
  def test_costpercapita_bk156; assert_equal("ok", worksheet.costpercapita_bk156); end
  def test_costpercapita_bl156; assert_equal("ok", worksheet.costpercapita_bl156); end
  def test_costpercapita_bm156; assert_equal("ok", worksheet.costpercapita_bm156); end
  def test_costpercapita_bn156; assert_equal("ok", worksheet.costpercapita_bn156); end
  def test_costpercapita_bo156; assert_equal("ok", worksheet.costpercapita_bo156); end
  def test_costpercapita_bp156; assert_equal("ok", worksheet.costpercapita_bp156); end
  def test_costpercapita_bq156; assert_equal("ok", worksheet.costpercapita_bq156); end
  def test_costpercapita_bs156; assert_equal("ok", worksheet.costpercapita_bs156); end
  def test_costpercapita_bt156; assert_equal("ok", worksheet.costpercapita_bt156); end
  def test_costpercapita_bu156; assert_equal("ok", worksheet.costpercapita_bu156); end
  def test_costpercapita_bv156; assert_equal("ok", worksheet.costpercapita_bv156); end
  def test_costpercapita_bw156; assert_equal("ok", worksheet.costpercapita_bw156); end
  def test_costpercapita_bx156; assert_equal("ok", worksheet.costpercapita_bx156); end
  def test_costpercapita_by156; assert_equal("ok", worksheet.costpercapita_by156); end
  def test_costpercapita_bz156; assert_equal("ok", worksheet.costpercapita_bz156); end
  def test_costpercapita_ca156; assert_equal("ok", worksheet.costpercapita_ca156); end
  def test_costpercapita_cc156; assert_equal("ok", worksheet.costpercapita_cc156); end
  def test_costpercapita_cd156; assert_equal("ok", worksheet.costpercapita_cd156); end
  def test_costpercapita_cf156; assert_equal("ok", worksheet.costpercapita_cf156); end
  def test_costpercapita_cg156; assert_equal("ok", worksheet.costpercapita_cg156); end
  def test_costpercapita_ch156; assert_equal("ok", worksheet.costpercapita_ch156); end
  def test_costpercapita_ci156; assert_equal("ok", worksheet.costpercapita_ci156); end
  def test_costpercapita_cj156; assert_equal("ok", worksheet.costpercapita_cj156); end
  def test_costpercapita_ck156; assert_equal("ok", worksheet.costpercapita_ck156); end
  def test_costpercapita_cl156; assert_equal("ok", worksheet.costpercapita_cl156); end
  def test_costpercapita_cm156; assert_equal("ok", worksheet.costpercapita_cm156); end
  def test_costpercapita_cn156; assert_equal("ok", worksheet.costpercapita_cn156); end
  def test_costpercapita_cp156; assert_equal("ok", worksheet.costpercapita_cp156); end
  def test_costpercapita_cq156; assert_equal("ok", worksheet.costpercapita_cq156); end
end
